%@ %@
requestUUIDString
assertionType
pending
-[NPKProtoAssertionRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoAssertionRequest.m
nil != self->_requestUUIDString
T@"NSString",&,N,V_requestUUIDString
hasAssertionType
TB,N
Ti,N,V_assertionType
hasPending
TB,N,V_pending
Unknown
Provisioning
ProvisioningRequiringUpgradedPasscode
(unknown: %i)
uniqueID
hasUniqueID
TB,R,N
T@"NSString",&,N,V_uniqueID
passRelevancyTuples
T@"NSMutableArray",&,N,V_passRelevancyTuples
termsURL
allowNonSecureHTTP
product
hasTermsURL
T@"NSString",&,N,V_termsURL
hasAllowNonSecureHTTP
TB,N,V_allowNonSecureHTTP
hasProduct
T@"NPKProtoStandalonePaymentSetupProduct",&,N,V_product
transactionsBytes
transactionPassIDs
T@"NSMutableArray",&,N,V_transactionsBytes
T@"NSMutableArray",&,N,V_transactionPassIDs
com.apple.nanopasskit.shared
NPKExpressGymKitConflictPassUniqueID
com.apple.nanopasskit.expressGymKitAvailable.didChange
NPKExpressGymKitAvailabilityManagerErrorDomain
v12@?0i8
v16@?0@"PKPaymentPass"8
/System/Library/NanoPreferenceBundles/Applications/NanoPassbookBridgeSettings.bundle
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v20@?0B8@"NSError"12
isExpressGymKitAllowed
conflictingPass
T@"PKPaymentPass",R,N
delegate
T@"<NPKExpressGymKitAvailabilityManagerDelegate>",W,N,V_delegate
catalogData
-[NPKProtoCatalog writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoCatalog.m
nil != self->_catalogData
T@"NSData",&,N,V_catalogData
passesData
errorsData
passesDatas
T@"NSMutableArray",&,N,V_passesDatas
errorsDatas
T@"NSMutableArray",&,N,V_errorsDatas
localizedProgressDescription
hasLocalizedProgressDescription
T@"NSString",&,N,V_localizedProgressDescription
requestHeader
manualEntryFields
-[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest.m
self->_requestHeader != nil
T@"NPKProtoStandaloneRequestHeader",&,N,V_requestHeader
T@"NSMutableArray",&,N,V_manualEntryFields
lastKnownOutgoingChange
T@"NPKPassSyncChange",&,N,V_lastKnownOutgoingChange
outgoingChangeDate
T@"NSDate",&,N,V_outgoingChangeDate
lastKnownIncomingChange
T@"NPKPassSyncChange",&,N,V_lastKnownIncomingChange
incomingChangeDate
T@"NSDate",&,N,V_incomingChangeDate
com.apple.nanopassd.passsync
com.apple.private.alloy.passbook.general
v8@?0
passSettings-%@
v16@?0@"NSError"8
passCatalog
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/NPKPassSyncService.m
sync state changed
sync state changed, catalog
sync state change processed
proposed reconciled state
reconciled state accepted
pass settings changed
Catalog changed
v24@?0@"NPKProtoPassSyncStateChange"8@"NSString"16
passSyncStateChange-%u
v32@?0@"NSData"8Q16^B24
passSyncStateChange
passSyncStateChangeProcessed
passSyncReconciledStateUnrecognized
provide updated libray state
Archive timer
Sync now
passSyncEngine
T@"NPKPassSyncEngine",&,N,V_passSyncEngine
passSyncService
T@"IDSService",&,N,V_passSyncService
passSyncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_passSyncQueue
passSyncEngineArchiveTimer
T@"NSObject<OS_dispatch_source>",&,N,V_passSyncEngineArchiveTimer
passSyncEngineSyncTimer
T@"NSObject<OS_dispatch_source>",&,N,V_passSyncEngineSyncTimer
passSyncStatus
T@"NPKPassSyncServiceSyncStatus",&,N,V_passSyncStatus
dropAllMessages
TB,N,V_dropAllMessages
requestDSIDs
T@"NSMutableArray",&,N,V_requestDSIDs
needsRelevancyInformation
TB,N,V_needsRelevancyInformation
com.apple.NanoPassbook.NPKLibrary.NPKLibraryDisplayedRelevantPassesDidChangeNotification
T@"<NPKPaymentWebServiceStandaloneTargetDeviceDelegate>",W,N,V_delegate
numericEntryPending
hasNumericEntryPending
TB,N,V_numericEntryPending
success
actualExpressPassInformation
currentExpressPassesInformation
hasSuccess
TB,N,V_success
hasActualExpressPassInformation
T@"NSData",&,N,V_actualExpressPassInformation
currentExpressPassesInformations
T@"NSMutableArray",&,N,V_currentExpressPassesInformations
v16@?0@"<NPKPassesDataSourceObserver>"8
v32@?0@"PKPass"8Q16^B24
v32@?0@"PKGroup"8Q16^B24
v16@?0@"NSArray"8
observers
T@"NSHashTable",&,N,V_observers
groupsController
T@"PKGroupsController",&,N,V_groupsController
currentPasses
T@"NSArray",&,N,V_currentPasses
currentPaymentPasses
T@"NSArray",&,N,V_currentPaymentPasses
firstUnlockCoordinator
T@"NPKStandaloneFirstUnlockCoordinator",&,N,V_firstUnlockCoordinator
shouldMemoryMapImages
TB,N,V_shouldMemoryMapImages
shouldWaitForContentAndImageSets
TB,N,V_shouldWaitForContentAndImageSets
notifyToken
Ti,N,V_notifyToken
configurationDataBytes
hasConfigurationDataBytes
T@"NSData",&,N,V_configurationDataBytes
invitationData
hasInvitationData
T@"NSData",&,N,V_invitationData
seid
command
infoDictionary
-[NPKProtoRemoteAdminPerformRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoRemoteAdminPerformRequest.m
nil != self->_url
nil != self->_seid
nil != self->_command
T@"NSData",&,N,V_url
T@"NSString",&,N,V_seid
T@"NSString",&,N,V_command
hasInfoDictionary
T@"NSData",&,N,V_infoDictionary
chosenFlowPickerItemIdentifier
-[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest.m
hasChosenFlowPickerItemIdentifier
T@"NSString",&,N,V_chosenFlowPickerItemIdentifier
commutePlanBytes
hasCommutePlanBytes
T@"NSData",&,N,V_commutePlanBytes
availableProductsData
errorData
hasAvailableProductsData
T@"NSData",&,N,V_availableProductsData
hasErrorData
T@"NSData",&,N,V_errorData
<%@: %p - barcodeIdentifier: %@>
barcodeIdentifier
T@"NSString",&,N,V_barcodeIdentifier
decryptedBarcodeCredential
T@"NSData",&,N,V_decryptedBarcodeCredential
barcodes
T@"NSArray",&,N,V_barcodes
state
TQ,N,V_state
type
metadata
hasType
T@"NSString",&,N,V_type
hasMetadata
T@"NPKProtoStandalonePaymentProvisioningMethodMetadata",&,N,V_metadata
TransitValuePending
date
amount
balance
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/PKPass+NanoPassKit.m
npkSupportsHidingAccessory
TB,R
npkWatchBarcode
T@"PKBarcode",R
npkExpired
npkCompleteHash
T@"NSData",R
hasLogoImageSet
npkHasValidNFCPayload
v24@?0@"PKPaymentApplication"8^B16
stepIdentifier
backStepIdentifier
allowsAddLater
welcomeStepContext
chooseFlowStepContext
chooseProductStepContext
chooseCredentialsStepContext
digitalIssuanceAmountStepContext
digitalIssuancePaymentStepContext
moreInformationStepContext
readerModeEntryStepContext
readerModeIngestionStepContext
manualEntryStepContext
secondaryManualEntryStepContext
localDeviceManualEntryStepContext
localDeviceManualEntryProgressStepContext
productDisambiguationStepContext
passcodeUpgradeStepContext
termsAndConditionsStepContext
provisioningProgressStepContext
provisioningResultStepContext
issuerVerificationChannelsStepContext
issuerVerificationFieldsStepContext
issuerVerificationCodeStepContext
-[NPKProtoStandalonePaymentProvisioningFlowStepContext writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowStepContext.m
nil != self->_stepIdentifier
T@"NSString",&,N,V_stepIdentifier
hasBackStepIdentifier
T@"NSString",&,N,V_backStepIdentifier
hasAllowsAddLater
TB,N,V_allowsAddLater
hasWelcomeStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext",&,N,V_welcomeStepContext
hasChooseFlowStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext",&,N,V_chooseFlowStepContext
hasChooseProductStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext",&,N,V_chooseProductStepContext
hasChooseCredentialsStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext",&,N,V_chooseCredentialsStepContext
hasDigitalIssuanceAmountStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext",&,N,V_digitalIssuanceAmountStepContext
hasDigitalIssuancePaymentStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext",&,N,V_digitalIssuancePaymentStepContext
hasMoreInformationStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext",&,N,V_moreInformationStepContext
hasReaderModeEntryStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext",&,N,V_readerModeEntryStepContext
hasReaderModeIngestionStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext",&,N,V_readerModeIngestionStepContext
hasManualEntryStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext",&,N,V_manualEntryStepContext
hasSecondaryManualEntryStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext",&,N,V_secondaryManualEntryStepContext
hasLocalDeviceManualEntryStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext",&,N,V_localDeviceManualEntryStepContext
hasLocalDeviceManualEntryProgressStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext",&,N,V_localDeviceManualEntryProgressStepContext
hasProductDisambiguationStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext",&,N,V_productDisambiguationStepContext
hasPasscodeUpgradeStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext",&,N,V_passcodeUpgradeStepContext
hasTermsAndConditionsStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext",&,N,V_termsAndConditionsStepContext
hasProvisioningProgressStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext",&,N,V_provisioningProgressStepContext
hasProvisioningResultStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext",&,N,V_provisioningResultStepContext
hasIssuerVerificationChannelsStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext",&,N,V_issuerVerificationChannelsStepContext
hasIssuerVerificationFieldsStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext",&,N,V_issuerVerificationFieldsStepContext
hasIssuerVerificationCodeStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext",&,N,V_issuerVerificationCodeStepContext
{length = %lu, bytes = 0x
... 
-[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest.m
peerPaymentWebServiceContextData
peerPaymentAccountData
hasPeerPaymentWebServiceContextData
T@"NSData",&,N,V_peerPaymentWebServiceContextData
hasPeerPaymentAccountData
T@"NSData",&,N,V_peerPaymentAccountData
reminderInterval
hasReminderInterval
Td,N,V_reminderInterval
hasState
Ti,N,V_state
PaymentApplicationStateUnknown
Personalized
Personalizing
RequiresVerification
PersonalizedRequiresVerification
VerificationTerminated
SuspendedByIssuer
SuspendedLostMode
SuspendedPasscodeDisabled
SuspendedCustom
RemovedByIssuer
InTermination
pass
primaryAccountIdentifier
primaryAccountNumberSuffix
deviceAccountIdentifier
deviceAccountNumberSuffix
activationState
devicePrimaryPaymentApplication
-[NPKProtoStandalonePaymentPass writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentPass.m
self->_pass != nil
T@"NPKProtoStandalonePass",&,N,V_pass
hasPrimaryAccountIdentifier
T@"NSString",&,N,V_primaryAccountIdentifier
hasPrimaryAccountNumberSuffix
T@"NSString",&,N,V_primaryAccountNumberSuffix
hasDeviceAccountIdentifier
T@"NSString",&,N,V_deviceAccountIdentifier
hasDeviceAccountNumberSuffix
T@"NSString",&,N,V_deviceAccountNumberSuffix
hasActivationState
Ti,N,V_activationState
hasDevicePrimaryPaymentApplication
T@"NPKProtoStandalonePaymentApplication",&,N,V_devicePrimaryPaymentApplication
Activated
RequiresActivation
Activating
Suspended
Deactivated
UniqueID
RelevantText
NPKRelevantPassesRequestDistributedNotification
fakedUniqueIDs
NPKRelevantTransitNotificationsCheckDistributedNotification
NPKRelevantPassesDistributedNotification
tuples
npkRelevancyUniqueID
T@"NSString",R
npkRelevancyRelevantText
v32@?0@"NSDictionary"8Q16^B24
v24@?0@"PKBarcodeEventMetadataResponse"8@"NSError"16
v24@?0@"PKPaymentPass"8@"NSError"16
v16@?0Q8
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/NPKNanoPassDaemonConnection.m
remoteService
T@"PKXPCService",&,N,V_remoteService
familyMembers
T@"NSMutableArray",&,N,V_familyMembers
subcredentialInvitationsData
subcredentialInvitationsDatas
T@"NSMutableArray",&,N,V_subcredentialInvitationsDatas
domain
code
userInfos
hasDomain
T@"NSString",&,N,V_domain
Tq,N,V_code
T@"NSMutableArray",&,N,V_userInfos
NPKPeerPaymentStatusUnknown
NPKPeerPaymentStatusExpired
NPKPeerPaymentStatusRejected
NPKPeerPaymentStatusComplete
NPKPeerPaymentStatusPending
NPKPeerPaymentStatusFailed
NPKPeerPaymentStatusAccepting
NPKPeerPaymentStatusRejecting
NPKPeerPaymentStatusCancelled
NPKPeerPaymentStatusCanceling
NPKPeerPaymentStatusNeedAccept
NPKPeerPaymentStatusDisabled
NPKUserPreferenceTransactionsStatus
kNPKIgnoreUserPreferenceTransactionsStatus
serviceURL
forceReRegistration
hasServiceURL
T@"NSString",&,N,V_serviceURL
hasForceReRegistration
TB,N,V_forceReRegistration
webServiceContextBytes
hasWebServiceContextBytes
T@"NSData",&,N,V_webServiceContextBytes
-[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest.m
hasAmount
T@"NSString",&,N,V_amount
<%@: %p title "%@" products %@>
title
T@"NSString",C,N,V_title
products
T@"NSArray",&,N,V_products
identifier
T@"NSString",R,N,V_identifier
<%@: %p title "%@" footer "%@" items %@>
footer
T@"NSString",C,N,V_footer
items
T@"NSMutableArray",R,C,N,V_items
pushToken
hasPushToken
T@"NSString",&,N,V_pushToken
com.apple.NPKSubcredentialInvitationCoordinatorErrorDomain
com.apple.NPKSubcredentialInvitationCoordinator
v16@?0@"NSSet"8
v24@?0@"PKSubcredentialProvisioningAcceptInvitationConfiguration"8@"NSError"16
v16@?0@"PKAppletSubcredentialSharingInvitation"8
v24@?0@"PKAppletSubcredentialSharingInvitation"8@"NSError"16
Unable to start provisioning - insufficient information
v24@?0@"NSString"8@"NSError"16
v24@?0@"NSSet"8@"NSSet"16
v12@?0B8
Unable to start provisioning on local device without an anonymization salt
An unknown error occurred!
COMPANION_UNREACHABLE_ALERT_TITLE
NanoPassKit
COMPANION_UNREACHABLE_ALERT_MESSAGE
v24@?0@"PKAppletSubcredentialSharingInvitation"8^B16
Unable to make invitation configuration - cannot accept invitation
Unable to make invitation configuration - insufficient information
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
paymentService
T@"PKPaymentService",&,N,V_paymentService
subcredentialProvisioningController
T@"PKSubcredentialProvisioningController",&,N,V_subcredentialProvisioningController
sharingSession
T@"PKAppletSubcredentialSharingSession",&,N,V_sharingSession
completion
T@?,C,N,V_completion
subcredentialProvisioningService
T@"NPKWatchSubcredentialProvisioningService",&,N,V_subcredentialProvisioningService
proposedReconciledState
hasProposedReconciledState
T@"NPKProtoPassSyncState",&,N,V_proposedReconciledState
passTypeIdentifier
serialNumber
credentialType
localizedName
cardType
hasPassTypeIdentifier
T@"NSString",&,N,V_passTypeIdentifier
hasSerialNumber
T@"NSString",&,N,V_serialNumber
hasCredentialType
TQ,N,V_credentialType
hasLocalizedName
T@"NSString",&,N,V_localizedName
hasCardType
Ti,N,V_cardType
Payment
Transit
Access
Currency
CurrencyType
CurrencyValue
supportedCurrencyCodes
T@"NSSet",R,N,V_supportedCurrencyCodes
allowedPayloadIDs
T@"NSSet",R,N,V_allowedPayloadIDs
identifiers
T@"NSMutableArray",&,N,V_identifiers
actualExpressPassInformations
T@"NSMutableArray",&,N,V_actualExpressPassInformations
responseHeader
fromStep
toStep
context
-[NPKProtoStandalonePaymentProvisioningFlowResponse writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowResponse.m
self->_responseHeader != nil
T@"NPKProtoStandaloneResponseHeader",&,N,V_responseHeader
Ti,N,V_fromStep
Ti,N,V_toStep
hasContext
T@"NPKProtoStandalonePaymentProvisioningFlowStepContext",&,N,V_context
Initialized
Preconditions
Welcome
ChooseFlow
ChooseProduct
ChooseCredentials
DigitalIssuanceAmount
DigitalIssuancePayment
MoreInformation
ReaderModeEntry
ReaderModeIngestion
ManualEntry
SecondaryManualEntry
LocalDeviceManualEntry
LocalDeviceManualEntryProgress
ProductDisambiguation
PasscodeUpgrade
TermsAndConditions
ProvisioningProgress
ProvisioningResult
IssuerVerificationChannels
IssuerVerificationFields
IssuerVerificationCode
GetIssuerApplicationAddRequest
dataToSign
digestToSign
entanglementMode
hasDataToSign
T@"NSData",&,N,V_dataToSign
hasDigestToSign
T@"NSData",&,N,V_digestToSign
hasEntanglementMode
Ti,N,V_entanglementMode
hasAid
T@"NSString",&,N,V_aid
PlatformIdentifier
JCOPInfo
_internal
didDeclineInvitations
hasDidDeclineInvitations
TB,N,V_didDeclineInvitations
timeoutInSeconds
hasTimeoutInSeconds
TQ,N,V_timeoutInSeconds
-[NPKProtoUpdatePaymentPassRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoUpdatePaymentPassRequest.m
nil != self->_passTypeIdentifier
isAvailable
hasIsAvailable
TB,N,V_isAvailable
com.apple.NanoPassbookDataUsageREsolver
cellular-data
green-tea
currentlyResolving
TB,N,V_currentlyResolving
passData
-[NPKProtoGizmoInitiatedAddPassRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoGizmoInitiatedAddPassRequest.m
nil != self->_passData
T@"NSData",&,N,V_passData
NPKQuickPaymentSessionSource
com.apple.simulator-payment-activation
mailto:%@
mailto:
tel:
productsActionData
hasProductsActionData
T@"NSData",&,N,V_productsActionData
passSyncStateItems
T@"NSMutableArray",&,N,V_passSyncStateItems
sections
T@"NSMutableArray",&,N,V_sections
buttonHandler
T@?,C,N,V_buttonHandler
handlerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_handlerQueue
expectedHash
uniqueIDs
manifestHashes
fullResyncNeeded
resyncID
hasExpectedHash
T@"NPKProtoHash",&,N,V_expectedHash
T@"NSMutableArray",&,N,V_uniqueIDs
T@"NSMutableArray",&,N,V_manifestHashes
hasFullResyncNeeded
TB,N,V_fullResyncNeeded
hasResyncID
TI,N,V_resyncID
cryptogram
challengeResponse
hasCryptogram
T@"NSData",&,N,V_cryptogram
hasChallengeResponse
T@"NSData",&,N,V_challengeResponse
transactionData
appLaunchToken
hasPassData
hasTransactionData
T@"NSData",&,N,V_transactionData
hasAppLaunchToken
T@"NSString",&,N,V_appLaunchToken
(%@ outgoingResponseIdentifier %@ incomingResponseIdentifier %@ expectsPeerResponse %d)
%@, <%p> type %d isResponse %d context %@ length %lu
-[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.3.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest.m
T@"<NPKValueAddedServiceAutomaticSelectionCoordinatorDelegate>",W,N,V_delegate
dataSource
T@"<NPKPassesDataSource>",W,N,V_dataSource
v16@?0@"NSNotification"8
v16@?0@"NSData"8
v24@?0@"PKPaymentIssuerProvisioningCertificatesResponse"8@"NSError"16
v24@?0Q8@"NSError"16
v24@?0@"NSError"8@"NSData"16
v28@?0B8@"NSError"12@"NSArray"20
v24@?0@"PKAccountWebServicePassDetailsResponse"8@"NSError"16
v24@?0@"PKPaymentRequirementsResponse"8@"NSError"16
v24@?0@"PKPaymentEligibilityResponse"8@"NSError"16
v24@?0B8B12@"NSError"16
User-requested Wallet pass provisioning
v32@?0Q8@"PKVerificationRequestRecord"16@"NSError"24
v32@?0Q8@"PKPaymentPass"16@"NSError"24
v24@?0B8f12@"NSError"16
B24@?0@"PKPaymentCredential"8@"NSDictionary"16
<none>
B32@?0@"PKPaymentSetupField"8Q16^B24
T@"<NPKPaymentProvisioningFlowControllerDelegate>",W,N
inAppProvisioningRequestConfiguration
T@"PKAddPaymentPassRequestConfiguration",&,N,V_inAppProvisioningRequestConfiguration
inAppProvisioningRequest
T@"PKAddPaymentPassRequest",&,N,V_inAppProvisioningRequest
inAppProvisioningPublicKeyHash
T@"NSData",&,N,V_inAppProvisioningPublicKeyHash
inAppProvisioningNonce
T@"NSData",&,N,V_inAppProvisioningNonce
inAppProvisioningGetRequestTimer
T@"NSObject<OS_dispatch_source>",&,N,V_inAppProvisioningGetRequestTimer
webService
T@"PKPaymentWebService",&,N,V_webService
currentStep
Ti,N,V_currentStep
chooseCredentialsStepIdentifier
T@"NSString",&,N,V_chooseCredentialsStepIdentifier
immediatelyBeforeTermsStepIdentifier
T@"NSString",&,N,V_immediatelyBeforeTermsStepIdentifier
fieldsModel
T@"PKPaymentSetupFieldsModel",&,N,V_fieldsModel
progressNotificationToken
T@"<NSObject>",&,N,V_progressNotificationToken
provisioningProgressRequestContext
T@"NPKPaymentProvisioningFlowControllerRequestContext",&,N,V_provisioningProgressRequestContext
issuerVerificationPass
T@"PKPaymentPass",&,N,V_issuerVerificationPass
currentCredential
T@"PKPaymentCredential",&,N,V_currentCredential
currentProduct
T@"PKPaymentSetupProduct",&,N,V_currentProduct
termsReason
TQ,N,V_termsReason
termsAcceptedOutOfBand
TB,N,V_termsAcceptedOutOfBand
digitalIssuancePaymentRequest
T@"PKPaymentRequest",&,N,V_digitalIssuancePaymentRequest
digitalIssuanceAmount
T@"NSDecimalNumber",&,N,V_digitalIssuanceAmount
digitalIssuancePurchase
T@"PKServiceProviderPurchase",&,N,V_digitalIssuancePurchase
digitalIssuanceAmountRequestContext
T@"NPKPaymentProvisioningFlowControllerRequestContext",&,N,V_digitalIssuanceAmountRequestContext
digitalIssuancePaymentRequestContext
T@"NPKPaymentProvisioningFlowControllerRequestContext",&,N,V_digitalIssuancePaymentRequestContext
authorizationController
T@"PKPaymentAuthorizationController",&,N,V_authorizationController
cardIngester
T@"PKContactlessCardIngester",&,N,V_cardIngester
internalIngestionState
TQ,N,V_internalIngestionState
flowIngestionState
TQ,N,V_flowIngestionState
ingestionProgress
Td,N,V_ingestionProgress
ingestionStateOnRetry
TQ,N,V_ingestionStateOnRetry
ingestionCardSessionToken
T@"NSString",&,N,V_ingestionCardSessionToken
ingestionCardNotFoundTimer
T@"NSObject<OS_dispatch_source>",&,N,V_ingestionCardNotFoundTimer
ingestionMethodMetadata
T@"PKPaymentProvisioningMethodMetadata",&,N,V_ingestionMethodMetadata
readerModeRequestContext
T@"NPKPaymentProvisioningFlowControllerRequestContext",&,N,V_readerModeRequestContext
T@"<NPKPaymentProvisioningFlowControllerDelegate>",W,N,V_delegate
provisioningController
T@"PKPaymentProvisioningController",R,N,V_provisioningController
setupContext
Tq,R,N,V_setupContext
readerModeProvisioningSupported
TB,N,GisReaderModeProvisioningSupported,V_readerModeProvisioningSupported
digitalIssuanceSupported
TB,N,GisDigitalIssuanceSupported,V_digitalIssuanceSupported
separateLocalDeviceEntryRequired
TB,N,GisSeparateLocalDeviceEntryRequired,V_separateLocalDeviceEntryRequired
unitTestingAuthorizationController
T@"PKPaymentAuthorizationController",&,N,V_unitTestingAuthorizationController
unitTestingCardIngester
T@"PKContactlessCardIngester",&,N,V_unitTestingCardIngester
service
T@"IDSService",&,N,V_service
pendingStatusProtobuf
T@"IDSProtobuf",&,N,V_pendingStatusProtobuf
messagePriority
Tq,N,V_messagePriority
responseIdentifier
T@"NSString",C,N,V_responseIdentifier
statusTimer
T@"NSObject<OS_dispatch_source>",&,N,V_statusTimer
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
sendOptions
T@"NSDictionary",&,N,V_sendOptions
updatesSent
TQ,N,V_updatesSent
maxUpdates
TQ,N,V_maxUpdates
balanceReminderBytes
hasBalanceReminderBytes
T@"NSData",&,N,V_balanceReminderBytes
authToken
hasAuthToken
T@"NSString",&,N,V_authToken
passID
preferredApplicationAID
hasPassID
T@"NSString",&,N,V_passID
hasPreferredApplicationAID
T@"NSString",&,N,V_preferredApplicationAID
useSimulatedFlowController
userLanguageCode
passImageSize
passThumbnailImageSize
-[NPKProtoStandaloneInitializationRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandaloneInitializationRequest.m
hasUseSimulatedFlowController
TB,N,V_useSimulatedFlowController
hasUserLanguageCode
T@"NSString",&,N,V_userLanguageCode
hasPassImageSize
T@"NPKProtoStandaloneImageSize",&,N,V_passImageSize
hasPassThumbnailImageSize
T@"NPKProtoStandaloneImageSize",&,N,V_passThumbnailImageSize
npkLogoImage
registrationDataBytes
hasRegistrationDataBytes
T@"NSData",&,N,V_registrationDataBytes
groupID
manifestHash
style
relevantDate
ingestionDate
logoText
backgroundColor
foregroundColor
labelColor
devicePaymentApplications
devicePrimaryContactlessPaymentApplication
devicePrimaryInAppPaymentApplication
preferredPaymentApplication
effectivePaymentApplicationState
privateLabel
cobranded
deletePending
hasUserSelectablePaymentApplications
logoImageEncoded
backgroundImageEncoded
localizedDescription
nfcPayload
completeHash
hasStoredValue
settings
issuerCountryCode
availableActions
organizationName
felicaTransitAppletState
frontFieldBuckets
backFieldBuckets
lastAddValueAmount
pendingAddValueDate
expressPassTypesMask
hasAssociatedPeerPaymentAccount
subcredentials
<%@> (uniqueID %@ groupID %@ passTypeIdentifier %@ manifestHash %@ style %d relevantDate %@ ingestionDate %@ logoText %@ logoImage %@ logoImageEncoded %p backgroundColor %@ foregroundColor %@ labelColor %@ backgroundImage %@ backgroundImageEncoded %p, localizedDescription %@, devicePaymentApplications (%@) devicePrimaryPaymentApplication (%@) devicePrimaryContactlessPaymentApplication (%@) devicePrimaryInAppPaymentApplication (%@) preferredPaymentApplication (%@) effectivePaymentApplicationState %d privateLabel %d cobranded %d deletePending %d hasUserSelectableContactlessPaymentApplications %d nfcPayload %@ completeHash %@ hasStoredValue %d settings %d issuerCountryCode %@ expressPassTypesMask %lu)
 (availableActions %@ organizationName %@ transitAppletState %@ frontFieldBuckets %@ backFieldBuckets %@ lastAddValueAmount %@ pendingAddValueDate %@  hasAssociatedPeerPaymentAccount %d)
 ( subcredentials %@)
B24@?0@"PKPaymentApplication"8@"NSDictionary"16
supportsSecureCoding
T@"NSData",&,N,V_logoImageEncoded
T@"NSData",&,N,V_backgroundImageEncoded
lazyLoadEncodedImages
TB,N,V_lazyLoadEncodedImages
T@"NSNumber",&,N,V_groupID
T@"NSData",&,N,V_manifestHash
Tq,N,V_style
T@"NSDate",&,N,V_relevantDate
T@"NSDate",&,N,V_ingestionDate
T@"PKNFCPayload",&,N,V_nfcPayload
TB,N,V_hasStoredValue
T@"NSData",&,N,V_completeHash
TQ,N,V_settings
T@"NSString",&,N,V_logoText
logoImage
T@"PKImage",&,N,V_logoImage
T@"PKColor",&,N,V_backgroundColor
T@"PKColor",&,N,V_foregroundColor
T@"PKColor",&,N,V_labelColor
backgroundImage
T@"PKImage",&,N,V_backgroundImage
T@"NSString",&,N,V_localizedDescription
T@"NSSet",&,N,V_devicePaymentApplications
T@"PKPaymentApplication",&,N,V_devicePrimaryPaymentApplication
T@"PKPaymentApplication",&,N,V_devicePrimaryContactlessPaymentApplication
T@"PKPaymentApplication",&,N,V_devicePrimaryInAppPaymentApplication
T@"PKPaymentApplication",&,N,V_preferredPaymentApplication
Tq,N,V_effectivePaymentApplicationState
TB,N,GisPrivateLabel,V_privateLabel
TB,N,GisCobranded,V_cobranded
TB,N,V_deletePending
hasUserSelectableContactlessPaymentApplications
TB,N,V_hasUserSelectableContactlessPaymentApplications
T@"NSString",&,N,V_issuerCountryCode
effectiveContactlessPaymentApplicationState
Tq,R,N
T@"NSArray",&,N,V_availableActions
T@"NSString",&,N,V_organizationName
transitAppletState
T@"PKTransitAppletState",&,N,V_transitAppletState
T@"NSArray",&,N,V_frontFieldBuckets
T@"NSArray",&,N,V_backFieldBuckets
T@"NSDecimalNumber",&,N,V_lastAddValueAmount
T@"NSDate",&,N,V_pendingAddValueDate
TB,N,V_hasAssociatedPeerPaymentAccount
T@"NSSet",&,N,V_subcredentials
TQ,N,V_expressPassTypesMask
configuration
T@"PKAddPaymentPassRequestConfiguration",&,N,V_configuration
didFinishCallbackSent
TB,N,V_didFinishCallbackSent
digitalCardImageUrl
thumbnailImageUrl
logoImageUrl
hasDigitalCardImageUrl
T@"NSString",&,N,V_digitalCardImageUrl
hasThumbnailImageUrl
T@"NSString",&,N,V_thumbnailImageUrl
hasLogoImageUrl
T@"NSString",&,N,V_logoImageUrl
remoteCredentials
credentials
allowsManualEntry
T@"NSMutableArray",&,N,V_remoteCredentials
T@"NSMutableArray",&,N,V_credentials
hasAllowsManualEntry
TB,N,V_allowsManualEntry
libraryHash
previousManifestHash
catalog
lastKnownResyncID
syncID
-[NPKProtoUpdatePassRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoUpdatePassRequest.m
T@"NPKProtoPass",&,N,V_pass
hasLibraryHash
T@"NPKProtoHash",&,N,V_libraryHash
hasPreviousManifestHash
T@"NSData",&,N,V_previousManifestHash
hasCatalog
T@"NPKProtoCatalog",&,N,V_catalog
hasLastKnownResyncID
TI,N,V_lastKnownResyncID
hasSyncID
TI,N,V_syncID
NPKTapToRadarManagerErrorDomain
(internal Only)
 We appreciate if you file a radar to help us improve the product. Issue detected:%@
Wallet detect an issue
Tap-To-Radar
Cancel
v24@?0^{__CFUserNotification=}8Q16
requestURL
v24@?0@"NSDictionary"8@"NSError"16
com.apple.springboard.ringerstate
com.apple.NPKProvisioningFlowService
protocolVersion
sessionIdentifier
Ti,N,V_protocolVersion
hasSessionIdentifier
T@"NSString",&,N,V_sessionIdentifier
Version1
com.apple.NPKAssertionErrorDomain
Assertion already taken. Cannot acquire an assertion more than once
Cannot invalidate an unaquired or invalid assertion
reason
T@"NSString",R,C,N,V_reason
acquired
TB,R,N,GisAcquired
TQ,R,N,V_type
TQ,R,V_state
-[NPKProtoStandalonePaymentPassListRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentPassListRequest.m
NPKCompanionAgentDeferredActionHandler
v24@?0@"PKPaymentPass"8^B16
v32@?0@"NSUUID"8@"PKPaymentWebServiceContext"16^B24
v32@?0@"NSUUID"8@"NSArray"16^B24
v32@?0@?<v@?@"NPKCompanionAgentConnection">8Q16^B24
v32@?0@"NRDevice"8Q16^B24
v24@?0@"NSUUID"8^B16
deferredActions
T@"NSMutableDictionary",&,N,V_deferredActions
deferredSharedPaymentWebServiceContexts
T@"NSMutableDictionary",&,N,V_deferredSharedPaymentWebServiceContexts
deferredAddedPaymentPasses
T@"NSMutableDictionary",&,N,V_deferredAddedPaymentPasses
chosenPaymentCredentialIdentifiers
-[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest.m
T@"NSMutableArray",&,N,V_chosenPaymentCredentialIdentifiers
width
height
bitsPerComponent
bitsPerPixel
bytesPerRow
bitmapInfo
bitmapData
-[NPKProtoBitmap writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoBitmap.m
nil != self->_bitmapData
TQ,N,V_width
TQ,N,V_height
TQ,N,V_bitsPerComponent
TQ,N,V_bitsPerPixel
TQ,N,V_bytesPerRow
TI,N,V_bitmapInfo
T@"NSData",&,N,V_bitmapData
imageHash
imageData
imageURL
-[NPKProtoStandalonePaymentHeroImage writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentHeroImage.m
nil != self->_identifier
T@"NSString",&,N,V_identifier
hasImageHash
T@"NSString",&,N,V_imageHash
hasImageData
T@"NSData",&,N,V_imageData
hasImageURL
T@"NSString",&,N,V_imageURL
en_US_POSIX
yyyy-MM-dd' 'HH:mm:ss.SSSSZZZZZ
<%@: %p
Timestamp: %@
Pass unique ID: %@
Has session: %d
Session started: %d
Session waiting to start: %d
Double-press received: %d
Double-press timestamp: %@
Session authorized: %d
Pass activating: %d
Contactless interface ready: %d
Can change pass: %d
Service mode requested pass: %@
In service mode: %d
Express status: %@
Transient failure type: %d
Completion reason: %d
Transaction context: %@
timestamp
T@"NSDate",&,N,V_timestamp
currentPass
T@"PKPass",&,N,V_currentPass
hasSession
TB,N,V_hasSession
sessionStarted
TB,N,V_sessionStarted
sessionWaitingToStart
TB,N,V_sessionWaitingToStart
doublePressReceived
TB,N,V_doublePressReceived
doublePressTimestamp
T@"NSDate",&,N,V_doublePressTimestamp
sessionAuthorized
TB,N,V_sessionAuthorized
passActivating
TB,N,V_passActivating
contactlessInterfaceReady
TB,N,V_contactlessInterfaceReady
canChangePass
TB,N,V_canChangePass
serviceModeRequestedPass
T@"PKPass",&,N,V_serviceModeRequestedPass
inServiceMode
TB,N,V_inServiceMode
expressTransactionStatus
TQ,N,V_expressTransactionStatus
failureType
TQ,N,V_failureType
completionReason
TQ,N,V_completionReason
transactionContext
T@"NPKContactlessPaymentSessionManagerTransactionContext",&,N,V_transactionContext
B24@?0@"<NPKPassItemField>"8@"NSDictionary"16
label
T@"NSString",R,N
detailLabel
formattedValue
action
T@"PKPaymentPassAction",R,N
hasPendingUpdate
isPrimaryBalance
T@"PKPaymentBalance",R,N
usageDateRange
T@"<NPKDateRange>",R,N
isCountBasedCommutePlan
details
T@"NSArray",R,N
com.apple.NanoPassKitUI
TRANSIT_TRANSACTION_TITLE_SHINKANSEN
NanoPassKitUI-Transit
TRANSIT_TRANSACTION_TITLE_GREEN_CAR
v16@?0@"PKPaymentTransaction"8
v32@?0@"PKPaymentTransaction"8Q16^B24
 (transactionPass %@ valueAddedServicePass %@ paymentMethodDescription %@ transactionType %d transactionDescription %@ displayablePassItems %@ transactionStatus: %lu)
 (Barcode payment related: paymentBarcode %@ authentication requested %d)
transactionPass
T@"PKPass",&,N,V_transactionPass
valueAddedServicePass
T@"PKPass",&,N,V_valueAddedServicePass
paymentMethodDescription
T@"NSString",&,N,V_paymentMethodDescription
paymentTransaction
T@"PKPaymentTransaction",&,N,V_paymentTransaction
transactionStatus
TQ,N,V_transactionStatus
transactionType
TQ,N,V_transactionType
redeemedTicket
TB,N,V_redeemedTicket
enRoute
TB,N,V_enRoute
transactionDescription
T@"NSString",&,N,V_transactionDescription
displayablePassItems
T@"NSArray",&,N,V_displayablePassItems
paymentBarcode
T@"NPKPaymentBarcode",&,N,V_paymentBarcode
authenticationRequested
TB,N,V_authenticationRequested
@16@?0@"PKPass"8
B32@?0@"PKPass"8Q16^B24
v32@?0@"PKValueAddedServiceTransaction"8Q16^B24
v16@?0@"PKTransitAppletState"8
B24@?0@"PKPass"8@"NSDictionary"16
v32@?0@"PKTransitAppletBalance"8Q16^B24
credential
T@"NSData",&,N,V_credential
quickPaymentSession
T@"NPKQuickPaymentSession",&,N,V_quickPaymentSession
cleanupDelegate
T@"NPKQuickPaymentSessionCleanupDelegate",&,N,V_cleanupDelegate
lastSessionState
T@"NPKContactlessPaymentSessionState",&,N,V_lastSessionState
userSelectedPass
T@"PKPass",&,N,V_userSelectedPass
contactlessPaymentInterfaceVisible
TB,N,V_contactlessPaymentInterfaceVisible
contactlessInterfaceVisibilityTimeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_contactlessInterfaceVisibilityTimeoutTimer
serviceModeRequestNotifyToken
Ti,N,V_serviceModeRequestNotifyToken
barcodePaymentSession
T@"NPKBarcodePaymentSession",&,N,V_barcodePaymentSession
v32@?0@"PKPaymentPass"8Q16^B24
B24@?0@"PKPaymentPass"8@"NSDictionary"16
com.apple.private.alloy.passbook.maintenance
com.apple.private.alloy.passbook.provisioning
DEVICE_PROVISIONING_EXCEEDED_MESSAGE
DEVICE_PROVISIONING_EXCEEDED_TITLE
v28@?0B8B12B16@"NSError"20
com.apple.Carousel
DisableWristDetection
WRIST_DETECT_REQUIRED_ALERT_TITLE
WRIST_DETECT_REQUIRED_ALERT_MESSAGE
WRIST_DETECT_REQUIRED_ALERT_BUTTON
bridge:root=PASSCODE_ID
GIZMO_ACCOUNT_REQUIRED_ALERT_TITLE
GIZMO_ACCOUNT_REQUIRED_ALERT_MESSAGE
GIZMO_ACCOUNT_REQUIRED_ALERT_BUTTON
bridge:root=GENERAL_LINK&path=LINK_WITH_ICLOUD_LINK
PASSCODE_REQUIRED_ALERT_TITLE
PASSCODE_REQUIRED_ALERT_MESSAGE
PASSCODE_REQUIRED_ALERT_BUTTON
UNLOCK_REQUIRED_ALERT_TITLE
UNLOCK_REQUIRED_ALERT_MESSAGE
GIZMO_UNREACHABLE_ALERT_TITLE
GIZMO_UNREACHABLE_ALERT_MESSAGE
passcodeConnection
T@"PUConnection",&,N,V_passcodeConnection
systemSettingsManager
T@"NSSManager",&,N,V_systemSettingsManager
checkedWatchPasscodeAndUnlockedStatus
TB,N,V_checkedWatchPasscodeAndUnlockedStatus
checkedCompanioniCloudStatus
TB,N,V_checkedCompanioniCloudStatus
checkedWatchiCloudStatus
TB,N,V_checkedWatchiCloudStatus
checkedWristDetectionStatus
TB,N,V_checkedWristDetectionStatus
authRandomSetIfNecessary
TB,N,V_authRandomSetIfNecessary
watchConnected
TB,N,V_watchConnected
spaceAvailableOnSecureElement
TB,N,V_spaceAvailableOnSecureElement
needsPasscode
TB,N,V_needsPasscode
needsUnlock
TB,N,V_needsUnlock
needsCompanioniCloudAccount
TB,N,V_needsCompanioniCloudAccount
needsWatchiCloudAccount
TB,N,V_needsWatchiCloudAccount
needsWristDetection
TB,N,V_needsWristDetection
preflightCompletionHandler
T@?,C,N,V_preflightCompletionHandler
companionAgentConnection
T@"NPKCompanionAgentConnection",&,N,V_companionAgentConnection
preflighting
TB,N,GisPreflighting,V_preflighting
watchPasscodeAndUnlockedQueryDate
T@"NSDate",&,N,V_watchPasscodeAndUnlockedQueryDate
PUConnection
Unable to find class %s
/System/Library/PrivateFrameworks/PairedUnlock.framework/PairedUnlock
/System/Library/PrivateFrameworks/PairedUnlock.framework/Contents/MacOS/PairedUnlock
CARD_TYPE_TRANSIT
CARD_TYPE_EMONEY
CARD_TYPE_TRANSIT_SECTION_HEADER
CARD_TYPE_PAYMENT_SECTION_HEADER
@"NPKPaymentProvisioningFlowPickerSection"8@?0
displayName
CARD_TYPE_TRANSIT_SECTION_BETA_FOOTER
v32@?0@"NSNumber"8@"NSString"16^B24
CARD_TYPE_CREDIT_DEBIT
CARD_TYPE_CREDIT_PREPAID
regularPaymentCardProvisioning
B16@?0@"PKPaymentCredential"8
hashData
hasHashData
T@"NSData",&,N,V_hashData
%@-%@
SubcredentialProvisioning
-[NPKProtoNewLibraryHashRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoNewLibraryHashRequest.m
self->_libraryHash != nil
passType
remotePass
deviceName
hasPassType
Ti,N,V_passType
hasLocalizedDescription
hasOrganizationName
hasRemotePass
TB,N,V_remotePass
hasDeviceName
T@"NSString",&,N,V_deviceName
Barcode
NPKTransitAppletHistoryFetcher
aidToFetch
T@"NSString",&,N,V_aidToFetch
T@"<NPKTransitAppletHistoryFetcherDelegate>",W,N,V_delegate
requestData
associatedApplicationIdentifiers
hasRequestData
T@"NSData",&,N,V_requestData
T@"NSMutableArray",&,N,V_associatedApplicationIdentifiers
urlString
hasUrlString
T@"NSString",&,N,V_urlString
<%@:%p> {transitProperties:%@, appletState:%@, balanceFields:%@ commutePlanFields:%@
transitProperties
T@"PKTransitPassProperties",R,N,V_transitProperties
T@"PKTransitAppletState",R,N,V_transitAppletState
balanceFields
T@"NSArray",R,N,V_balanceFields
commutePlanFields
T@"NSArray",R,N,V_commutePlanFields
balanceBytes
T@"NSMutableArray",&,N,V_balanceBytes
resultCode
responseDictionary
httpStatus
TI,N,V_resultCode
hasResponseDictionary
T@"NSData",&,N,V_responseDictionary
hasHttpStatus
Ti,N,V_httpStatus
com.apple.NanoPassKit.NPKSubcredentialProvisioningService
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/NPKSubcredentialProvisioningService.m
subcredentialService
T@"IDSService",&,N,V_subcredentialService
subcredentialProvisioningQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_subcredentialProvisioningQueue
outstandingRequests
T@"NSMutableDictionary",&,N,V_outstandingRequests
com.apple.NPKTransientPassServer
NPKTransientAssertionQueue
-[NPKTransientAssertion handleDelegatedDoublePressEvent]
-[NPKTransientAssertion _resyncState]
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
requestServiceMode
TB,N,V_requestServiceMode
disableCardSelection
TB,N,V_disableCardSelection
T@"<NPKDoublePressDelegationAssertionDelegate>",W,N,V_delegate
updateRequestData
cancelUpdate
requestAuthorization
shouldNotifyUser
-[NPKProtoRemotePassUpdateRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoRemotePassUpdateRequest.m
nil != self->_passID
hasUpdateRequestData
T@"NSData",&,N,V_updateRequestData
hasCancelUpdate
TB,N,V_cancelUpdate
hasPass
hasRequestAuthorization
TB,N,V_requestAuthorization
hasShouldNotifyUser
TB,N,V_shouldNotifyUser
companionCatalog
watchCatalog
-[NPKProtoCatalogChangedRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoCatalogChangedRequest.m
self->_companionCatalog != nil
T@"NPKProtoCatalog",&,N,V_companionCatalog
hasWatchCatalog
T@"NPKProtoCatalog",&,N,V_watchCatalog
passAppletStates
T@"NSMutableArray",&,N,V_passAppletStates
expressPassInformation
referenceExpressPassesInformation
hasExpressPassInformation
T@"NSData",&,N,V_expressPassInformation
referenceExpressPassesInformations
T@"NSMutableArray",&,N,V_referenceExpressPassesInformations
authRandomSet
hasAuthRandomSet
TB,N,V_authRandomSet
verificationCode
-[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest.m
hasVerificationCode
T@"NSString",&,N,V_verificationCode
value
-[NPKProtoStandaloneUserInfo writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandaloneUserInfo.m
nil != self->_key
T@"NSString",&,N,V_key
hasValue
T@"NSString",&,N,V_value
default
cardNotFound
transferValue
transferring
cardAdded
commuteCardAdded
unknown
requestContext
%@: %p identifier %@ back step identifier %@
T@"NPKPaymentProvisioningFlowControllerRequestContext",R,V_requestContext
currentStepIdentifier
T@"NPKProtoStandaloneRequestHeader",R,V_requestHeader
T@"NSString",R,N,V_currentStepIdentifier
<%@ images %@>
heroImages
defaultImagesUsed
T@"NSArray",&,N,V_heroImages
TB,N,V_defaultImagesUsed
<%@ sections %@>
T@"NSArray",&,N,V_sections
<%@ products %@>
<%@ ordered flow identifiers %@ credentials %@ allows manual entry %d product %@>
flowIdentifierToCredential
flowIdentifiers
T@"NSDictionary",&,N,V_flowIdentifierToCredential
T@"NSArray",&,N,V_flowIdentifiers
T@"NSArray",C,N,V_credentials
T@"PKPaymentSetupProduct",&,N,V_product
<%@ allows reader mode entry %d product %@>
allowsReaderModeEntry
TB,N,V_allowsReaderModeEntry
<%@ title %@ subtitle %@ setup fields %@ product %@>
subtitle
setupFields
T@"NSString",&,N,V_title
T@"NSString",&,N,V_subtitle
T@"NSArray",&,N,V_setupFields
<%@ title %@ subtitle %@ ingestion state %ld ingestion progress %f>
ingestionState
physicalCardImageURL
T@"NSURL",&,N,V_physicalCardImageURL
TQ,N,V_ingestionState
<%@ camera first provisioning enabled %d setup fields %@>
cameraFirstProvisioningEnabled
TB,N,V_cameraFirstProvisioningEnabled
<%@ camera first provisioning enabled %d setup fields %@ credential %@>
T@"PKPaymentCredential",&,N,V_credential
allowsAddingDifferentCard
TB,N,V_allowsAddingDifferentCard
<%@ terms URL %@ allow non-secure HTTP %d>
T@"NSURL",&,N,V_termsURL
<%@ pass unique ID %@ more info items %@>
moreInfoItems
T@"NSArray",&,N,V_moreInfoItems
paymentPass
T@"PKPaymentPass",&,N,V_paymentPass
<%@ card added %d error %@>
TB,N,V_cardAdded
provisionedPass
T@"PKPaymentPass",&,N,V_provisionedPass
error
T@"NSError",&,N,V_error
<%@ pass unique ID %@ channels %@>
verificationChannels
T@"NSArray",&,N,V_verificationChannels
<%@ pass unique ID %@ fields %@>
verificationFields
T@"NSArray",&,N,V_verificationFields
<%@ pass unique ID %@ channel %@>
verificationChannel
T@"PKVerificationChannel",&,N,V_verificationChannel
<%@ certificates %@ nonce %@ nonce signature %@>
certificates
T@"NSArray",&,N,V_certificates
nonce
T@"NSData",&,N,V_nonce
nonceSignature
T@"NSData",&,N,V_nonceSignature
incompatible
TB,N,GisIncompatible,V_incompatible
T@"NSDate",&,N,V_date
paymentApplication
T@"PKPaymentApplication",&,N,V_paymentApplication
transaction
T@"PKPaymentTransaction",&,N,V_transaction
valueAddedServicePasses
T@"NSArray",&,N,V_valueAddedServicePasses
valueAddedServiceTransactions
T@"NSArray",&,N,V_valueAddedServiceTransactions
transitHistory
T@"PKTransitAppletHistory",&,N,V_transitHistory
felicaHistory
T@"PKFelicaAppletHistory",R,N,V_felicaHistory
expressState
T@"PKExpressTransactionState",&,N,V_expressState
FakePaymentSessionInternal
com.apple.NPKFakePaymentSession.TransactionComplete
ourCurrentPass
T@"PKPass",&,N,V_ourCurrentPass
ourVasPasses
T@"NSDictionary",&,N,V_ourVasPasses
ourCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_ourCallbackQueue
ourInternalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_ourInternalQueue
ourConfirmed
TB,N,V_ourConfirmed
ourInServiceMode
TB,N,V_ourInServiceMode
ourPerformedFirstActivation
TB,N,V_ourPerformedFirstActivation
timeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimer
fieldDetector
T@"PKFieldDetector",&,N,V_fieldDetector
invalidated
TB,N,V_invalidated
changeCardToken
TQ,N,V_changeCardToken
-[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest.m
T@"NSMutableArray",&,N,V_verificationFields
Ti,N,V_width
Ti,N,V_height
paymentWebServiceContextData
hasPaymentWebServiceContextData
T@"NSData",&,N,V_paymentWebServiceContextData
currencyCode
T@"NSString",C,N,V_currencyCode
messageIdentifier
T@"NSString",C,N,V_messageIdentifier
completionHandler
T@,C,N,V_completionHandler
errorHandler
T@?,C,N,V_errorHandler
timeoutHandler
T@?,C,N,V_timeoutHandler
timeoutQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_timeoutQueue
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/NPKContinuityCoordinator.m
com.apple.NanoPassKit.NPKContinuityCoordinator
-[NPKContinuityCoordinator userViewingPassWithUniqueID:isPaymentPass:]
-[NPKContinuityCoordinator userNeedsToProvisionPassWithUniqueID:]
passUniqueID
com.apple.nano.passbook.provisioning
provisionPassUserActivity
T@"NSUserActivity",&,N,V_provisionPassUserActivity
getPaymentPassesUserActivity
T@"NSUserActivity",&,N,V_getPaymentPassesUserActivity
passListUserActivity
T@"NSUserActivity",&,N,V_passListUserActivity
individualPassUserActivity
T@"NSUserActivity",&,N,V_individualPassUserActivity
setUpPeerPaymentUserActivity
T@"NSUserActivity",&,N,V_setUpPeerPaymentUserActivity
viewPeerPaymentUserActivity
T@"NSUserActivity",&,N,V_viewPeerPaymentUserActivity
currentUserActivity
T@"NSUserActivity",W,N,V_currentUserActivity
IMChatRegistryContinuityActivityType
/System/Library/PrivateFrameworks/IMCore.framework/IMCore
/System/Library/PrivateFrameworks/IMCore.framework/Contents/MacOS/IMCore
com.apple.NPKAssertionManagerErrorDomain
com.apple.NanoPassKit.NPKAssertion
Assertion already taken
Assertion could not be created
Cannot invalidate an invalid assertion.
acquiredAssertions
T@"NSHashTable",&,V_acquiredAssertions
includeDeviceMetadata
hasIncludeDeviceMetadata
TB,N,V_includeDeviceMetadata
assertionUUID
T@"NSUUID",&,N,V_assertionUUID
assertType
Ti,N,V_assertType
com.apple.NanoPassKit.TargetDevice.AssertionManager
AssertRequest
outstandingAssertionStatusUpdaters
T@"NSMutableDictionary",&,N,V_outstandingAssertionStatusUpdaters
assertTypesUUIDsMap
T@"NSMutableDictionary",&,N,V_assertTypesUUIDsMap
transportationService
T@"IDSService",R,N,V_transportationService
v32@?0q8@"NSString"16@"NSError"24
SETUP_PURCHASE_TRANSFER_ITEM_LABEL
SETUP_PURCHASE_DEPOSIT_ITEM_LABEL
SETUP_PURCHASE_ADD_PAYMENT_METHOD_ALERT_TITLE
SETUP_PURCHASE_ADD_SPECIFIC_DEBIT_CARD_OR_TRANSFER_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_SPECIFIC_CARD_OR_TRANSFER_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_SPECIFIC_DEBIT_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_SPECIFIC_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_PAYMENT_METHOD_OR_TRANSFER_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_PAYMENT_METHOD_ALERT_MESSAGE
PKPaymentAuthorizationController
/System/Library/Frameworks/PassKit.framework/PassKit
/System/Library/Frameworks/PassKit.framework/Contents/MacOS/PassKit
v24@?0Q8@"PKPaymentPass"16
.GlobalPreferences
v36@?0B8@"NSError"12@"PKPeerPaymentWebServiceContext"20@"PKPeerPaymentAccount"28
Watch
47B09AC1-3757-485D-9FB4-F124AC8FE430
v24@?0@"PKPeerPaymentPreferences"8@"NSError"16
v24@?0@"PKPeerPaymentUpdatePreferencesResponse"8@"NSError"16
peerPaymentWebService
T@"PKPeerPaymentWebService",W,N,V_peerPaymentWebService
chosenProductIdentifier
-[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest.m
hasChosenProductIdentifier
T@"NSString",&,N,V_chosenProductIdentifier
appDisplayName
hasAppDisplayName
T@"NSString",&,N,V_appDisplayName
cancelOutstandingRequests
hasCancelOutstandingRequests
TB,N,V_cancelOutstandingRequests
NPKQuickPaymentSessionInternalQueue
NPKQuickPaymentSessionQueue
 (first activation)
v24@?0Q8Q16
%@: %@
v24@?0@"PKContactlessInterfaceSession"8@"NSError"16
v32@?0@?<v@?>8Q16^B24
paymentSessionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_paymentSessionQueue
contactlessSessionHandle
T@"PKPaymentSessionHandle",&,N,V_contactlessSessionHandle
contactlessSession
T@"PKContactlessInterfaceSession",&,N,V_contactlessSession
contactlessValidity
TQ,N,V_contactlessValidity
authorizationValidity
TQ,N,V_authorizationValidity
confirmed
TB,N,GisConfirmed,V_confirmed
performedFirstActivation
TB,N,GhasPerformedFirstActivation,V_performedFirstActivation
deactivating
TB,N,GisDeactivating,V_deactivating
deactivated
TB,N,GisDeactivated,V_deactivated
deactivationCompletionBlocks
T@"NSMutableArray",&,N,V_deactivationCompletionBlocks
T@"<NPKQuickPaymentSessionDelegate>",W,N,V_delegate
vasPasses
T@"NSDictionary",&,N,V_vasPasses
deferAuthorization
TB,N,V_deferAuthorization
requireFirstInQueue
TB,N,V_requireFirstInQueue
endSessionWhenAuthorizationIsConsumed
TB,N,V_endSessionWhenAuthorizationIsConsumed
deviceMetadata
hasDeviceMetadata
T@"NSData",&,N,V_deviceMetadata
accountData
hasAccountData
T@"NSData",&,N,V_accountData
Free Shipping
free
FedEx Ground
fedexg
Arrives in 5-7 days
8.95
UPS Next Day
upsnda
Arrives tomorrow
23.95
37.50
0.0875
Items
Sales Tax
Shipping
Washington Metropolitan Area Transit Authority
merchant.com.apple.syndrome
John
Appleseed
john@apple.com
(408) 577-1010
1 Infinite Loop
Cupertino
95014
United States
com.apple.nanopassbook.locationfetch
NanoPassKit one-shot fetcher requested location
T@?,C,N,V_completionHandler
locationFixTimeout
T@"NSObject<OS_dispatch_source>",&,N,V_locationFixTimeout
locationManager
T@"CLLocationManager",&,N,V_locationManager
inUseAssertion
T@"CLInUseAssertion",&,N,V_inUseAssertion
locationManagerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_locationManagerQueue
Companion
libraryState
reconciledState
backupState
candidateState
candidateChange
engineRole
v16@?0B8B12
v16@?0@?<v@?BB>8
requireAppleAccountForPaymentPasses
TB,N,V_requireAppleAccountForPaymentPasses
T@"NPKPassSyncState",&,N,V_backupState
T@"<NPKPassSyncEngineDelegate>",W,N,V_delegate
T@"<NPKPassSyncEngineDataSource>",W,N,V_dataSource
T@"NPKPassSyncState",&,N,V_libraryState
T@"NPKPassSyncState",&,N,V_reconciledState
T@"NPKPassSyncState",&,N,V_candidateState
T@"NPKPassSyncChange",&,N,V_candidateChange
processingChange
T@"NPKPassSyncChange",&,N,V_processingChange
engineName
TQ,R,N,V_engineRole
accountInfoData
cloudStoreIsSetup
hasAccountInfoData
T@"NSData",&,N,V_accountInfoData
hasCloudStoreIsSetup
TB,N,V_cloudStoreIsSetup
json
SimulatorCard_%@
/System/Library/PrivateFrameworks/NanoPassKitUI.framework
manualEntryProvisioning
Manual Entry Provisioning
easyProvisioning
Easy Provisioning
https://nc-pod1-smp-device-asset.apple.com:443/broker/v1/assets/en_e1604103d8354ea3a69d9d9af961b042_v8
UIImage
/System/Library/Frameworks/UIKit.framework/UIKit
/System/Library/Frameworks/UIKit.framework/Contents/MacOS/UIKit
passAppletState
hasPassAppletState
T@"NSData",&,N,V_passAppletState
ResponseHeader
-[NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse.m
tsmRegionPushTopics
tsmRegionURLs
brokerRegionPushTopics
primaryRegionTopic
T@"NSMutableArray",&,N,V_tsmRegionPushTopics
T@"NSMutableArray",&,N,V_tsmRegionURLs
T@"NSMutableArray",&,N,V_brokerRegionPushTopics
hasPrimaryRegionTopic
T@"NSString",&,N,V_primaryRegionTopic
npkPassSync-%@-segment%u
npkPassSync-%@-fullPass
RequestHeader
-[NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest.m
T@"NPKProtoStandaloneResponseHeader",&,N,V_requestHeader
PKPaymentCardEligibilityErrorDomain
ELIGIBILITY_UNKNOWN_REQUIREMENTS_ERROR_TITLE
ELIGIBILITY_UNKNOWN_REQUIREMENTS_ERROR_MESSAGE
ELIGIBILITY_UNKNOWN_REQUIREMENTS_ERROR_MESSAGE_NO_URL
ELIGIBILITY_INELIGIBLE_ERROR_TITLE
ELIGIBILITY_INELIGIBLE_ERROR_MESSAGE
ELIGIBILITY_INELIGIBLE_ERROR_MESSAGE_NO_URL
ELIGIBILITY_UNAVAILABLE_ERROR_TITLE
ELIGIBILITY_UNAVAILABLE_ERROR_MESSAGE
ELIGIBILITY_ALREADY_PROVISIONED_ERROR_TITLE
ELIGIBILITY_NEWER_OS_VERSION_REQUIRED_ERROR_TITLE
ELIGIBILITY_NEWER_OS_VERSION_REQUIRED_ERROR_MESSAGE_WATCH
COULD_NOT_ADD_CARD_TITLE
COULD_NOT_ADD_CARD_MESSAGE
ELIGIBILITY_SOFTWARE_UPDATE_BUTTON_TITLE
bridge:root=GENERAL_LINK&path=SOFTWARE_UPDATE_LINK
ELIGIBILITY_LEARN_MORE_BUTTON_TITLE
ACTIVATION_NOT_AVAILABLE_TITLE
ACTIVATION_NOT_AVAILABLE_MESSAGE
COULD_NOT_CONNECT_TITLE
COULD_NOT_CONNECT_MESSAGE
-[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest.m
kNPKPeerPaymentMessagesTransactionsManagerTransactionStatus
kNPKPeerPaymentMessagesTransactionsManagerAvailableActions
 (service identifier %@ payment status %@ available actions %@ transaction %@ actionFetchDate:%@)
serviceIdentifier
T@"NSString",&,N,V_serviceIdentifier
paymentStatus
TQ,N,V_paymentStatus
availableActionsFetchDate
T@"NSDate",&,N,V_availableActionsFetchDate
com.apple.nanopasskit.peerPaymentmessagesTransactionManager.transactions
com.apple.nanopasskit.peerPaymentmessagesTransactionManager.peerPaymentPass
v24@?0@"PKPeerPaymentStatusResponse"8@"NSError"16
v32@?0@"NSString"8@"NPKPeerPaymentTransactionDetails"16^B24
v32@?0@"NSString"8Q16^B24
v24@?0@"PKPaymentTransaction"8^B16
T@"PKPaymentService",R,N,V_paymentService
transactionDetails
T@"NSMutableDictionary",R,N,V_transactionDetails
currentLookupIdentifiers
T@"NSMutableSet",R,N,V_currentLookupIdentifiers
peerPaymentPassUniqueID
T@"NSString",C,V_peerPaymentPassUniqueID
defaultShippingAddress
defaultBillingAddresses
defaultContactEmail
defaultContactPhone
defaultContactName
hasDefaultShippingAddress
T@"NSData",&,N,V_defaultShippingAddress
hasDefaultBillingAddresses
T@"NSData",&,N,V_defaultBillingAddresses
hasDefaultContactEmail
T@"NSData",&,N,V_defaultContactEmail
hasDefaultContactPhone
T@"NSData",&,N,V_defaultContactPhone
hasDefaultContactName
T@"NSData",&,N,V_defaultContactName
familyPhotosIDs
familyPhotos
T@"NSMutableArray",&,N,V_familyPhotosIDs
T@"NSMutableArray",&,N,V_familyPhotos
pushTopic
hasPushTopic
T@"NSString",&,N,V_pushTopic
sanitizedPrimaryAccountNumber
expiration
longDescription
hasSanitizedPrimaryAccountNumber
T@"NSString",&,N,V_sanitizedPrimaryAccountNumber
hasExpiration
T@"NSString",&,N,V_expiration
hasLongDescription
T@"NSString",&,N,V_longDescription
hasTitle
hasFooter
T@"NSString",&,N,V_footer
T@"NSMutableArray",&,N,V_items
providedFields
T@"NSArray",&,N,V_providedFields
completedFields
T@"NSMutableArray",&,N,V_completedFields
currentIndex
TQ,N,V_currentIndex
com.apple.NPKInAppPaymentServer
NPKRemoteInterfacePresenterQueue
T@"<NPKRemoteInterfacePresenterDelegate>",W,N,V_delegate
Update
Remove
<%@: %p change UUID %@ reconciled state hash %@ change type %@ unique ID %@ sync state item %@ pass data %@ base manifest hash for partial update %@>
changeUUID
reconciledStateHash
changeType
syncStateItem
baseManifestHashForPartialUpdate
remoteAssetsForPartialUpdate
T@"NSUUID",&,N,V_changeUUID
T@"NSData",&,N,V_reconciledStateHash
TQ,N,V_changeType
T@"NPKPassSyncStateItem",&,N,V_syncStateItem
T@"NSData",&,N,V_baseManifestHashForPartialUpdate
T@"NSDictionary",&,N,V_remoteAssetsForPartialUpdate
body
linkText
linkURL
hasBody
T@"NSString",&,N,V_body
hasLinkText
T@"NSString",&,N,V_linkText
hasLinkURL
T@"NSString",&,N,V_linkURL
NPKPeerPaymentAccountManagerAccountDidChangeNotification
v16@?0@"PKPeerPaymentAccount"8
account
T@"PKPeerPaymentAccount",&,V_account
peerPaymentService
T@"PKPeerPaymentService",R,N,V_peerPaymentService
enforcedPolicy
hasEnforcedPolicy
Ti,N,V_enforcedPolicy
China
-[NPKProtoGizmoInitiatedDeletePassRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoGizmoInitiatedDeletePassRequest.m
hasReconciledStateHash
invitationIdentifier
metadataData
hasInvitationIdentifier
T@"NSString",&,N,V_invitationIdentifier
hasMetadataData
T@"NSData",&,N,V_metadataData
remoteCredential
-[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext.m
self->_manualEntryStepContext != nil
hasRemoteCredential
T@"NPKProtoStandalonePaymentRemoteCredential",&,N,V_remoteCredential
hasCredential
T@"NPKProtoStandalonePaymentCredentialUnion",&,N,V_credential
hasAllowsAddingDifferentCard
typeDescriptionUnlocalized
typeDescription
requiresUserInteraction
contactPoint
sourceAddress
hasIdentifier
Ti,N,V_type
hasTypeDescriptionUnlocalized
T@"NSString",&,N,V_typeDescriptionUnlocalized
hasTypeDescription
T@"NSString",&,N,V_typeDescription
hasRequiresUserInteraction
TB,N,V_requiresUserInteraction
hasContactPoint
T@"NSString",&,N,V_contactPoint
hasSourceAddress
T@"NSString",&,N,V_sourceAddress
Email
InboundPhoneCall
OutboundPhoneCall
BankApp
Statement
Other
CREATE TABLE IF NOT EXISTS pass (unique_id TEXT NOT NULL, type_id TEXT NOT NULL, style INTEGER, hash BLOB NOT NULL, encoded_pass BLOB NOT NULL, encoded_diff BLOB, logo_text TEXT, logo_image BLOB, background_color BLOB, label_color BLOB, foreground_color BLOB, delete_pending INTEGER DEFAULT 0, background_image BLOB);
CREATE UNIQUE INDEX IF NOT EXISTS pass_unique_id_idx ON pass(unique_id)
CREATE TABLE IF NOT EXISTS key_value_store (key TEXT NOT NULL, value TEXT);
CREATE UNIQUE INDEX IF NOT EXISTS key_value_store_idx1 ON key_value_store(key)
ALTER TABLE pass ADD preferred_aid TEXT;
ALTER TABLE pass ADD nfc_payload BLOB;
ALTER TABLE pass ADD private_label INTEGER DEFAULT 0;
ALTER TABLE pass ADD cobranded INTEGER DEFAULT 0;
ALTER TABLE pass ADD device_primary_payment_application BLOB;
ALTER TABLE pass ADD preferred_payment_application BLOB;
ALTER TABLE pass ADD ingested_date INTEGER;
ALTER TABLE pass ADD complete_hash BLOB
ALTER TABLE pass ADD effective_payment_application_state INTEGER DEFAULT 0
ALTER TABLE pass ADD has_user_selectable_payment_applications INTEGER DEFAULT 0
ALTER TABLE pass ADD has_stored_value INTEGER DEFAULT 0
ALTER TABLE pass ADD settings INTEGER DEFAULT 0
ALTER TABLE pass ADD complete_hashes BLOB
ALTER TABLE pass ADD available_actions BLOB
CREATE TABLE IF NOT EXISTS transactions (pass_unique_id TEXT NOT NULL, transaction_id TEXT NOT NULL UNIQUE ON CONFLICT REPLACE, transaction_date INTEGER, transaction_sources INTEGER, encoded_transaction BLOB NOT NULL);
CREATE INDEX IF NOT EXISTS transactions_pass_unique_id_index ON transactions(pass_unique_id)
ALTER TABLE pass ADD organization_name TEXT
ALTER TABLE transactions ADD transaction_source INTEGER
ALTER TABLE transactions ADD has_notification_service_data INTEGER
ALTER TABLE pass ADD device_payment_applications BLOB
ALTER TABLE pass ADD felica_transit_applet_state BLOB
ALTER TABLE pass ADD front_field_buckets BLOB
ALTER TABLE pass ADD back_field_buckets BLOB
ALTER TABLE transactions ADD transaction_type INTEGER
ALTER TABLE pass ADD device_primary_contactless_payment_application BLOB;
ALTER TABLE pass ADD device_primary_in_app_payment_application BLOB;
CREATE TABLE IF NOT EXISTS ephemeral_transactions (pass_unique_id TEXT NOT NULL UNIQUE ON CONFLICT REPLACE, transaction_id TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS ephemeral_transactions_pass_index ON ephemeral_transactions(pass_unique_id)
ALTER TABLE pass ADD last_add_value_amount TEXT
ALTER TABLE pass ADD localized_description TEXT
ALTER TABLE pass ADD pending_add_value_date INTEGER
ALTER TABLE pass ADD encoded_image_sets BLOB
ALTER TABLE pass ADD issuer_country_code BLOB
ALTER TABLE pass ADD express_pass_types_mask INTEGER DEFAULT 0
ALTER TABLE pass ADD complete_remote_hashes BLOB
ALTER TABLE transactions ADD cloudkit_archived INTEGER
ALTER TABLE pass ADD supports_pp INTEGER
ALTER TABLE transactions ADD service_identifier TEXT
ALTER TABLE pass ADD balances BLOB
ALTER TABLE pass ADD subcredentials BLOB
ALTER TABLE transactions ADD transaction_source_identifier TEXT
ALTER TABLE ephemeral_transactions ADD transaction_source_identifier TEXT
CREATE TABLE IF NOT EXISTS transaction_source (transaction_source_identifier TEXT NOT NULL UNIQUE ON CONFLICT REPLACE, type INTEGER DEFAULT 0, pass_unique_id TEXT);
CREATE INDEX IF NOT EXISTS transaction_source_index ON transactions(transaction_source_identifier)
nanopasses.sqlite3
(uniqueID %@ localHashes %@ remoteHashes %@)
localManifestHashes
T@"NSArray",&,N,V_localManifestHashes
remoteManifestHashes
T@"NSArray",&,N,V_remoteManifestHashes
NPKGizmoDatabaseMigrationDataSourceSetNotification
NPKGizmoDatabaseMigrationDelegateQueue
com.apple.NanoPassbook.NPKGizmoDatabase
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/NPKGizmoDatabase.m
PRAGMA journal_mode = WAL;
issuer_country_code
transactions
transaction_source_identifier
encodedPass
ingestedDate
completeLocalHashes
encodedImageSets
encodedPassWithoutImageSets
encodedLogoImageData
encodedBackgroundImageData
migrateCompleteHashes
transactionSourceIdentifier
v24@?0@"PKPass"8@"NSString"16
B24@?0q8q16
%@-shm
%@-wal
DELETE FROM pass WHERE unique_id = ?
INSERT INTO pass (unique_id, type_id, style, hash, encoded_pass, encoded_image_sets, encoded_diff, logo_text, logo_image, background_color, label_color, foreground_color, background_image, nfc_payload, private_label, cobranded, device_payment_applications, device_primary_payment_application, device_primary_contactless_payment_application, device_primary_in_app_payment_application, preferred_aid, preferred_payment_application, ingested_date, complete_hash, delete_pending, effective_payment_application_state, has_user_selectable_payment_applications, has_stored_value, settings, complete_hashes, issuer_country_code, available_actions, organization_name, felica_transit_applet_state, front_field_buckets, back_field_buckets, last_add_value_amount, localized_description, pending_add_value_date, express_pass_types_mask, complete_remote_hashes, supports_pp, balances, subcredentials) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
UPDATE pass SET encoded_diff = ? WHERE unique_id = ?
UPDATE pass SET delete_pending = ? WHERE unique_id = ?
SELECT delete_pending FROM pass WHERE unique_id = ?
UPDATE pass SET preferred_aid = ?, preferred_payment_application = ? WHERE unique_id = ?
SELECT preferred_aid FROM pass WHERE unique_id = ?
SELECT encoded_pass FROM pass WHERE unique_id = ?
SELECT encoded_pass, encoded_image_sets FROM pass WHERE unique_id = ?
SELECT encoded_diff FROM pass WHERE unique_id = ?
INSERT INTO transactions (transaction_source_identifier, pass_unique_id, transaction_id, transaction_date, transaction_source, transaction_type, has_notification_service_data, encoded_transaction, cloudkit_archived, service_identifier) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
DELETE FROM transactions WHERE transaction_id = ?
DELETE FROM transactions WHERE transaction_source_identifier = ? AND service_identifier = ?
SELECT encoded_transaction FROM transactions WHERE transaction_source_identifier = ? AND ((? OR has_notification_service_data == ?) OR ((? OR transaction_type == ?) AND (? OR transaction_type != ?))) AND transaction_date >= ? AND transaction_date <= ?
ORDER BY transaction_date ASC LIMIT ?
ORDER BY transaction_date DESC LIMIT ?
%@ AND transaction_source != 0 %@
%@ AND transaction_source == 0 %@
SELECT encoded_transaction FROM transactions WHERE transaction_id = ?
SELECT encoded_transaction FROM transactions WHERE service_identifier = ?
INSERT INTO transaction_source (transaction_source_identifier, type, pass_unique_id) VALUES (?, ?, ?)
SELECT transaction_source_identifier FROM transactions WHERE transaction_id = ?
SELECT transaction_source_identifier FROM transactions WHERE service_identifier = ?
SELECT transaction_source_identifier FROM transaction_source WHERE pass_unique_id = ?
SELECT pass_unique_id FROM transaction_source WHERE transaction_source_identifier = ?
DELETE FROM transaction_source WHERE pass_unique_id = ?
DELETE FROM transactions WHERE transaction_source_identifier = ?
DELETE FROM transactions WHERE transaction_source_identifier = ? AND transaction_id NOT IN (SELECT transaction_id FROM transactions WHERE transaction_source_identifier = ? ORDER BY transaction_date DESC LIMIT ?)
SELECT felica_transit_applet_state FROM pass WHERE unique_id = ?
UPDATE pass SET felica_transit_applet_state = ? WHERE unique_id = ?
INSERT INTO ephemeral_transactions (transaction_source_identifier, transaction_id) VALUES (?, ?)
DELETE FROM ephemeral_transactions WHERE transaction_source_identifier = ?
SELECT transaction_id FROM ephemeral_transactions WHERE transaction_source_identifier = ? LIMIT 1
SELECT last_add_value_amount FROM pass WHERE unique_id = ?
UPDATE pass SET last_add_value_amount = ? WHERE unique_id = ?
SELECT pending_add_value_date FROM pass WHERE unique_id = ?
UPDATE pass SET pending_add_value_date = ? WHERE unique_id = ?
SELECT encoded_transaction FROM transactions WHERE cloudkit_archived = ?
SELECT balances FROM pass WHERE unique_id = ?
UPDATE pass SET balances = ? WHERE unique_id = ?
SELECT subcredentials FROM pass WHERE unique_id = ?
UPDATE pass SET subcredentials = ? WHERE unique_id = ?
SELECT unique_id, type_id, style, hash, logo_text, logo_image, background_color, label_color, foreground_color, delete_pending, background_image, nfc_payload, private_label, cobranded, device_payment_applications, device_primary_payment_application, device_primary_contactless_payment_application, device_primary_in_app_payment_application, preferred_payment_application, ingested_date, complete_hash, effective_payment_application_state, has_user_selectable_payment_applications, has_stored_value, settings, complete_hashes, issuer_country_code, available_actions, organization_name, felica_transit_applet_state, front_field_buckets, back_field_buckets, last_add_value_amount, localized_description, pending_add_value_date, express_pass_types_mask, complete_remote_hashes, supports_pp, subcredentials FROM pass
BEGIN IMMEDIATE TRANSACTION;
COMMIT;
ROLLBACK;
B8@?0
v32@?0@"NPKPassDescription"8Q16^B24
v16@?0@"NPKGizmoDatabase"8
-[NPKGizmoDatabase _setTransitAppletStateLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setCurrentEphemeralTransactionIdentifier:forTransactionSourceIdentifier:]
-[NPKGizmoDatabase _currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:]
-[NPKGizmoDatabase _setLastAddValueAmountLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setPendingAddValueDateLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setPaymentBalancesLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setSubcredentialsLocked:forPassWithUniqueID:]
SELECT encoded_pass, encoded_image_sets, preferred_aid FROM pass
v20@?0B8^{sqlite3_stmt=}12
UPDATE pass SET nfc_payload=? WHERE unique_id=?
UPDATE pass SET private_label=?, cobranded=? WHERE unique_id=?
UPDATE pass SET device_primary_payment_application=?, preferred_payment_application=? WHERE unique_id=?
UPDATE pass SET device_primary_contactless_payment_application=?, device_primary_in_app_payment_application=? WHERE unique_id=?
UPDATE pass SET encoded_pass=?, encoded_image_sets=? WHERE unique_id=?
UPDATE pass SET logo_image=? WHERE unique_id=?
UPDATE pass SET background_image=? WHERE unique_id=?
UPDATE pass SET issuer_country_code=? WHERE unique_id=?
UPDATE pass SET express_pass_types_mask=? WHERE unique_id=?
UPDATE pass SET device_payment_applications=? WHERE unique_id=?
UPDATE pass SET ingested_date=? WHERE unique_id=?
UPDATE pass SET complete_hash=?, complete_hashes=? WHERE unique_id=?
UPDATE pass SET front_field_buckets=?, back_field_buckets=? WHERE unique_id=?
UPDATE pass SET available_actions=? WHERE unique_id=?
UPDATE pass SET organization_name=? WHERE unique_id=?
UPDATE pass SET localized_description=? WHERE unique_id=?
UPDATE pass SET effective_payment_application_state=? WHERE unique_id=?
UPDATE pass SET has_user_selectable_payment_applications=? WHERE unique_id=?
UPDATE pass SET encoded_pass=? WHERE unique_id=?
UPDATE pass SET has_stored_value=? WHERE unique_id=?
UPDATE pass SET settings=? WHERE unique_id=?
UPDATE pass SET complete_remote_hashes=complete_hashes
UPDATE transactions SET transaction_source_identifier=? WHERE pass_unique_id=?
UPDATE ephemeral_transactions SET transaction_source_identifier=? WHERE pass_unique_id=?
-[NPKGizmoDatabase setPreferredPaymentApplication:forPaymentPass:]
-[NPKGizmoDatabase preferredPaymentApplicationForPaymentPass:]
@16@?0@"NSArray"8
v32@?0@"NSString"8@"NPKGizmoDatabaseManifestEntry"16^B24
v48@?0@"PKPass"8@"NPKPassDescription"16Q24Q32^B40
SELECT value FROM key_value_store WHERE KEY="version"
INSERT INTO key_value_store (key, value) VALUES ("version", "%ld")
UPDATE key_value_store SET value="%ld" WHERE key="version"
PRAGMA table_info('%@')
passDBIsAvailable
TB,N,V_passDBIsAvailable
T@"NSData",R,D
T@"NSDictionary",R,D
database
T^{sqlite3=},R,D
deleteStatement
T^{sqlite3_stmt=},R,D
insertStatement
selectPassDataStatement
selectPassAndImageSetsDataStatement
selectPassDiffStatement
insertDiffStatement
T^{sqlite3_stmt=},R
updateDeletePendingStatement
updatePreferredAIDStatement
selectPreferredAIDStatement
selectTransactionWithIdentifierStatement
selectTransactionWithServiceIdentifierStatement
insertTransactionSourceIdentifierForPassStatement
deleteTransactionSourceIdentifierForPassStatement
deleteTransactionsForTransactionSourceStatement
trimTransactionsForTransactionSourceStatement
selectTransitAppletStateForPassStatement
updateTransitAppletStateForPassStatement
insertEphemeralTransactionStatement
deleteEphemeralTransactionByTransactionSourceIdentifierStatement
currentEphemeralTransactionIdentifierStatement
selectLastAddValueAmountForPassStatement
updateLastAddValueAmountForPassStatement
selectPendingAddValueDateForPassStatement
updatePendingAddValueDateForPassStatement
selectCloudKitArchivedTransactionsStatement
passDescriptions
T@"NSArray",R
numberOfPasses
TQ,R,N
NPKGizmoDatabaseChangedNotification
_NPKGizmoDatabaseExternallyChanged
WasNo-Op
WasFirstUnlock
NPKGizmoDatabasePassAddedNotification
NPKGizmoDatabasePassUpdatedNotification
NPKGizmoDatabasePassRemovedNotification
NPKGizmoDatabaseTransactionAddedOrUpdatedNotificationName
NPKGizmoDatabaseTransactionExplicitlyRemovedNotificationName
Pass
NPSButtonListener
PrimaryUsagePage
PrimaryUsage
v40@?0^v8^v16^v24^{__IOHIDEvent=}32
hidSystemClient
T^{__IOHIDEventSystemClient=},N,V_hidSystemClient
peerPaymentPreferencesData
hasPeerPaymentPreferencesData
T@"NSData",&,N,V_peerPaymentPreferencesData
responseData
hasResponseData
T@"NSData",&,N,V_responseData
-[NPKProtoRemovePassRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoRemovePassRequest.m
unrecognizedReconciledStateHash
libraryPassSyncState
hasUnrecognizedReconciledStateHash
T@"NSData",&,N,V_unrecognizedReconciledStateHash
hasLibraryPassSyncState
T@"NPKProtoPassSyncState",&,N,V_libraryPassSyncState
paymentCredential
passURL
summaryMetadataDescription
statusDescription
rank
productIdentifier
-[NPKProtoStandalonePaymentRemoteCredential writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentRemoteCredential.m
self->_paymentCredential != nil
T@"NPKProtoStandalonePaymentCredential",&,N,V_paymentCredential
hasPassURL
T@"NSString",&,N,V_passURL
hasSummaryMetadataDescription
T@"NSString",&,N,V_summaryMetadataDescription
hasStatusDescription
T@"NSString",&,N,V_statusDescription
hasPaymentPass
T@"NPKProtoStandalonePaymentPass",&,N,V_paymentPass
hasRank
TI,N,V_rank
hasProductIdentifier
T@"NSString",&,N,V_productIdentifier
T@"NSMutableArray",&,N,V_products
acadia
orbit
pioneer
cardPNO
T@"NSString",&,N,V_cardPNO
cardFlow
T@"NSString",&,N,V_cardFlow
cardID
T@"NSString",&,N,V_cardID
T@"NSString",&,N,V_cardType
cardIssuer
T@"NSString",&,N,V_cardIssuer
cardProduct
T@"NSString",&,N,V_cardProduct
cardEncryptionScheme
T@"NSString",&,N,V_cardEncryptionScheme
HalfpipeA
HalfpipeD
HalfpipeF
SUICA_COMMUTER_AD
SUICA_COMMUTER_BC
SUICA_COMMUTER_AC
SUICA_PERSONALIZED
SUICA_ANONYMOUS
Green
Slalom
%@_%@
Your Name Here (This isn't a bug)
0000
%@-flow %@ Card
card id %@
%@ : %@ Suica Card
Krypton
Krypton w/ %@
Pioneer card
BMAC
Orbit card
SPTCC
Neon
Argon
Helium
Xenon
Card
Flow
received certificates..fetching request
cardID=%@&nonce=%@&nonceSignature=%@&leaf=%@
flow=%@&pnoName=%@&type=%@&productName=%@&issuer=%@&nonce=%@&nonceSignature=%@&leaf=%@
flow=%@&pnoName=%@&issuer=%@&cardType=transit&nonce=%@&nonceSignature=%@&leaf=%@
flow=%@&pnoName=%@&nonce=%@&nonceSignature=%@&leaf=%@&issuer=Acadia
flow=%@&pnoName=%@&type=%@&nonce=%@&nonceSignature=%@&leaf=%@
flow=%@&pnoName=%@&nonce=%@&nonceSignature=%@&leaf=%@
String sent to passman: %@
https://passman.apple.com:81/index.php/getCardData/index
POST
application/x-www-form-urlencoded
Content-type
Error: %@
Kista response: %@
Error in Kista response dict: %@
Kista response:: %@
Called completion with nil
responseDict: %@
encryptedData: %@
encryptedData
activationData: %@
activationData
ephemeralKey
wrappedKey
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
blocksToPerformAfterFirstDeviceUnlock
T@"NSMutableArray",&,N,V_blocksToPerformAfterFirstDeviceUnlock
firstDeviceUnlockRegistrationToken
Ti,N,V_firstDeviceUnlockRegistrationToken
provisioningDataBytes
hasProvisioningDataBytes
T@"NSData",&,N,V_provisioningDataBytes
paymentPasses
-[NPKProtoStandalonePaymentPassListResponse writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentPassListResponse.m
T@"NSMutableArray",&,N,V_paymentPasses
setAuthRandomIfNotPaired
hasSetAuthRandomIfNotPaired
TB,N,V_setAuthRandomIfNotPaired
currentBalance
creditLimit
-[NPKProtoStandaloneCreditAccountCredential writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandaloneCreditAccountCredential.m
hasCurrencyCode
T@"NSString",&,N,V_currencyCode
hasCurrentBalance
Td,N,V_currentBalance
hasCreditLimit
Td,N,V_creditLimit
v32@?0@"NPKWorkQueueItem"8Q16^B24
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/NPKWorkQueue.m
Work queue: %@ Item transaction
remainingWork
T@"NSMutableArray",&,N,V_remainingWork
performingWork
TB,N,V_performingWork
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
takeOutTransactions
TB,N,V_takeOutTransactions
workQueueName
T@"NSString",&,N,V_workQueueName
T@"NPKOSTransaction",R,N,V_transaction
workBlock
T@?,R,N,V_workBlock
hasSubtitle
T@"NSMutableArray",&,N,V_setupFields
anonymizationSalt
hasAnonymizationSalt
T@"NSString",&,N,V_anonymizationSalt
npkFrontFaceImage-faceImage
npkFrontFaceImage-faceShadowImage
-[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest.m
cardAIDs
T@"NSMutableArray",&,N,V_cardAIDs
com.apple.expressPassController
v32@?0@"NSString"8@"NSSet"16^B24
v24@?0@"PKExpressPassInformation"8^B16
currentTransactionPass
T@"PKPass",&,N,V_currentTransactionPass
passLibrary
T@"PKPassLibrary",R,W,N,V_passLibrary
expressPassesInformation
T@"NSSet",&,V_expressPassesInformation
expressPasses
T@"NSDictionary",&,V_expressPasses
distributedNotificationCenter
T@"NSDistributedNotificationCenter",R,W,N,V_distributedNotificationCenter
currentTransactionExpressPassInformation
T@"PKExpressPassInformation",&,N,V_currentTransactionExpressPassInformation
T@"<NPKExpressPassControllerDelegate>",W,V_delegate
NPKExpressPassControllerStatusWaitingForField
NPKExpressPassControllerStatusFieldDetected
NPKExpressPassControllerStatusTransactionStarted
NPKExpressPassControllerStatusTransactionCompleted
NPKExpressPassControllerStatusTransactionFailed
Unknown NPKExpressPassControllerStatus %lu
missing
hasMissing
TB,N,V_missing
applyRestrictions
hasApplyRestrictions
TB,N,V_applyRestrictions
hasBalanceBytes
T@"NSData",&,N,V_balanceBytes
-[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext.m
self->_secondaryManualEntryStepContext != nil
com.apple.nanopassbook.lacoordinator
activated
received
v20@?0B8@"NSString"12
Availability
Passcode
Push-button
localAuthenticationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_localAuthenticationQueue
completedContext
T@"LAContext",&,N,V_completedContext
completedCredential
T@"NSData",&,N,V_completedCredential
completedError
T@"NSError",&,N,V_completedError
inProgressContext
T@"LAContext",&,N,V_inProgressContext
pendingLocalAuthenticationEvents
T@"NSMutableArray",&,N,V_pendingLocalAuthenticationEvents
activeLocalAuthenticationEvent
T@"NSNumber",&,N,V_activeLocalAuthenticationEvent
credentialDelegate
T@"<NPKQuickPaymentSessionLocalAuthenticationCoordinatorCredentialDelegate>",W,N,V_credentialDelegate
-[NPKProtoPass writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoPass.m
fieldType
currentValue
-[NPKProtoStandalonePaymentSetupField writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentSetupField.m
Ti,N,V_fieldType
hasCurrentValue
T@"NSString",&,N,V_currentValue
Text
Date
Label
Footer
Picker
NPKRemoteButtonListener
delegationAssertion
T@"NPKDoublePressDelegationAssertion",&,N,V_delegationAssertion
-[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest.m
unlockRequired
hasUnlockRequired
TB,N,V_unlockRequired
com.apple.NPKStandaloneErrorDomain
v32@?0@"NSString"8@16^B24
v32@?0@"NPKPaymentProvisioningFlowPickerSection"8Q16^B24
v32@?0@"PKPaymentSetupProduct"8Q16^B24
v32@?0@"PKVerificationChannel"8Q16^B24
v32@?0@"PKPaymentSetupMoreInfoItem"8Q16^B24
v32@?0@8@16^B24
%02x
v32@?0@"NPKPaymentProvisioningFlowPickerItem"8Q16^B24
v24@?0@"NSString"8^B16
v32@?0@"PKPaymentSetupField"8Q16^B24
v32@?0@"PKPaymentSetupProductPaymentOption"8Q16^B24
v32@?0@"NSDecimalNumber"8Q16^B24
com.apple.NanoPassKit.AddPaymentPass
paymentApplicationAIDs
-[NPKProtoMarkPaymentPassForDeleteRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoMarkPaymentPassForDeleteRequest.m
T@"NSMutableArray",&,N,V_paymentApplicationAIDs
relevantText
-[NPKProtoRelevantPassTuple writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoRelevantPassTuple.m
hasRelevantText
T@"NSString",&,N,V_relevantText
NPKEnforcedPasscodePolicyChina
Unexpected Enforced Passcode Policy:%lu
content
-[NPKProtoStandalonePingRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePingRequest.m
nil != self->_content
T@"NSString",&,N,V_content
NPKDoubleClickClientSuppressionChangedNotification
com.apple.nanopasskit.NPKDoubleClickClientSuppressor
Double click client suppression
suppressionAssertion
T@"NPKAssertion",&,N,V_suppressionAssertion
suppressionRequestTokens
T@"NSMutableIndexSet",&,V_suppressionRequestTokens
nextSuppressionRequestToken
TQ,N,V_nextSuppressionRequestToken
suppressorQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_suppressorQueue
readerModeFields
-[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest.m
T@"NSMutableArray",&,N,V_readerModeFields
signedData
certsBytes
signatureInfoBytes
hasSignedData
T@"NSData",&,N,V_signedData
hasCertsBytes
T@"NSData",&,N,V_certsBytes
hasSignatureInfoBytes
T@"NSData",&,N,V_signatureInfoBytes
hasAllowsReaderModeEntry
T@"NSMutableArray",&,N,V_heroImages
v32@?0@"<NPKBalanceField>"8Q16^B24
PASS_DETAILS_HEADER_TRANSIT_BALANCE
v24@?0@"PKPaymentBalance"8^B16
-%lu
v32@?0@"PKTransitCommutePlan"8Q16^B24
v32@?0@"PKPassField"8Q16^B24
v40@?0@"NSString"8@"NSString"16@"NSDate"24@"NSDate"32
PASS_DETAILS_STATUS_VALUE_INACTIVE
PASS_DETAILS_VALUE_DEPARTURE_TIME
PASS_DETAILS_VALUE_ARRIVAL_TIME
PASS_DETAILS_VALUE_CAR_ASSIGNMENT
PASS_DETAILS_VALUE_SEAT_ASSIGNMENT
PASS_DETAILS_HEADER_SHINKANSEN
v84@?0@"NSDate"8@"NSString"16@"NSString"24@"NSDateComponents"32@"NSDateComponents"40@"NSString"48@"NSNumber"56@"NSString"64@"NSDate"72B80
PASS_DETAILS_HEADER_GREEN_CAR_UPGRADE
v32@?0@"PKPaymentPassAction"8Q16^B24
<%@:%p> {passUniqueID:%@, balanceFields:%@
 transitPassProperties:%@
 balances:%@
T@"PKPaymentPass",R,N,V_pass
allPassItemsFields
transitPassProperties
T@"PKTransitPassProperties",&,N,V_transitPassProperties
balances
T@"NSSet",C,N,V_balances
commutePlanValueRequired
TB,N,GisCommutePlanValueRequired,V_commutePlanValueRequired
startDate
T@"NSDate",R,N
expiryDate
startDateString
expiryDateString
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_expiryDate
T@"NSString",R,N,V_startDateString
T@"NSString",R,N,V_expiryDateString
PASS_DETAILS_VALUE_ROUTE
PASS_DETAILS_VALUE_ROUTE_ORIGIN_ONLY
PASS_DETAILS_VALUE_ROUTE_DESTINATION_ONLY
passcodeChanged
hasPasscodeChanged
TB,N,V_passcodeChanged
NPKSharedWebServiceActiveDeviceDidChangeNotification
NPKSharedWebServiceDidChangeNotification
NPKSharedPeerPaymentWebServiceDidChangeNotification
NPKSharedPeerPaymentAccountDidChangeNotification
T@"PKPeerPaymentWebService",&,N,V_peerPaymentWebService
peerPaymentAccount
T@"PKPeerPaymentAccount",&,N,V_peerPaymentAccount
targetDevice
T@"NPKPaymentWebServiceCompanionTargetDevice",&,N,V_targetDevice
peerPaymentTargetDevice
T@"NPKPeerPaymentWebServiceCompanionTargetDevice",&,N,V_peerPaymentTargetDevice
connection
T@"NPKCompanionAgentConnection",&,N,V_connection
applicationIdentifier
hasApplicationIdentifier
T@"NSString",&,N,V_applicationIdentifier
conflictingExpressPassIdentifiers
conflictingReferenceExpressPassIdentifiers
T@"NSMutableArray",&,N,V_conflictingExpressPassIdentifiers
T@"NSMutableArray",&,N,V_conflictingReferenceExpressPassIdentifiers
hasCameraFirstProvisioningEnabled
v32@?0@"NSString"8@"NSString"16^B24
com.apple.nanopasskit.ostransaction
com.apple.nanopasskit.
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.3.1/NanoPassKit/NPKOSTransaction.m
name
T@"NSString",R,C,N,V_name
NPKPeerPaymentConversationManagerRecipientUpdatedNotification
kNPKPeerPaymentConversationManagerRecipientPhoneOrEmail
kNPKPeerPaymentConversationManagerRecipient
kNPKPeerPaymentConversationManagerError
NPKPeerPaymentConversationManagerErrorDomain
com.apple.passkit.peerpayment.conversationmanager
v36@?0B8@"MSConversation"12@"PKPeerPaymentPerformResponse"20@"NSError"28
v28@?0B8@"PKPeerPaymentQuote"12@"NSError"20
v28@?0B8@"PKPeerPaymentPerformResponse"12@"NSError"20
v32@?0Q8@"PKPeerPaymentRecipient"16@"NSError"24
v36@?0B8@"MSConversation"12@"PKPeerPaymentRequestToken"20@"NSError"28
v28@?0B8@"PKPeerPaymentRequestToken"12@"NSError"20
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_BODY
PeerPayment
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_BODY_NO_VALUE
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_TITLE
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_COMPACT_BODY
PEER_PAYMENT_UNAVAILABLE_ERROR_TITLE
PEER_PAYMENT_SEND_ERROR_MESSAGE_AMBIGUOUS_SENDER_ADDRESS
PEER_PAYMENT_SEND_ERROR_TITLE_CLOSED_OR_LOCKED
PEER_PAYMENT_SEND_ERROR_MESSAGE_CLOSED_OR_LOCKED
PEER_PAYMENT_SEND_MONEY_GENERIC_ERROR_TITLE
PEER_PAYMENT_SEND_MONEY_GENERIC_ERROR_MESSAGE
currentBalanceCurrency
quoteItems
totalFees
totalReceiveAmount
totalReceiveAmountCurrency
countryCode
fees
feesCurrency
sendAmount
sendAmountCurrency
receiveAmount
receiveAmountCurrency
totalAmount
totalAmountCurrency
supportedNetworks
merchantIdentifier
merchantCapabilities
currentRecipientAddressLookup
T@"NSString",&,N,V_currentRecipientAddressLookup
currentPeerPaymentController
T@"PKPeerPaymentController",W,N,V_currentPeerPaymentController
T@"PKPeerPaymentService",&,N,V_peerPaymentService
activeConversation
T@"MSConversation",&,V_activeConversation
senderPhoneOrEmail
recipientPhoneOrEmail
recipientDisplayName
T@"NSString",R,C,N
recipientFoundInContacts
recipient
T@"PKPeerPaymentRecipient",R,V_recipient
conversationContext
T@"NPKPeerPaymentConversationContext",&,N,V_conversationContext
welcome
-[NPKPaymentProvisioningFlowController(ReaderMode) contactlessCardIngester:didFailToIngestCardWithError:resetProvisioning:isRecoverable:]_block_invoke
v16@?0@"NSString"8
localizedTitle
notFound
plasticCardImages
READER_MODE_PROVISIONING_TRANSFER_VALUE_TITLE
READER_MODE_PROVISIONING_CARD_NOT_FOUND_TITLE
READER_MODE_PROVISIONING_TRANSFERRING_TITLE
READER_MODE_PROVISIONING_CARD_ADDED_TITLE
READER_MODE_PROVISIONING_TRANSFER_VALUE_SUBTITLE_FORMAT
READER_MODE_PROVISIONING_CARD_NOT_FOUND_SUBTITLE
READER_MODE_PROVISIONING_TRANSFERRING_SUBTITLE
READER_MODE_PROVISIONING_CARD_ADDED_DEFAULT_SUBTITLE_FORMAT
READER_MODE_PROVISIONING_CARD_ADDED_COMMUTE_SUBTITLE_FORMAT
credentialData
hasCredentialData
T@"NSData",&,N,V_credentialData
provisioning
underlyingErrorDomain
underlyingErrorCode
webServiceErrorDomain
webServiceErrorCode
clientInputType
credentialCount
flowItems
flowItem
productIdentifiers
moreInformationItemsCount
fieldIdentifiers
channelTypes
channelType
stepTransition
clientInput
nonFatalError
reset
startProvisioningFlow
startIssuerVerificationFlow
startInAppProvisioningFlow
acknowledgeWelcome
chooseFlow
chooseProduct
chooseReaderMode
chooseCredentials
chooseManualEntry
productSelection
passcodeUpgradeComplete
acceptTerms
skipProvisioning
acknowledgeMoreInformation
chooseIssuerVerificationChannel
issuerVerificationFields
issuerVerificationCode
skipIssuerVerification
issuerApplicationAddRequest
-[NPKProtoAddPassRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoAddPassRequest.m
accountIdentifier
hasAccountIdentifier
T@"NSString",&,N,V_accountIdentifier
<%@: %p unique ID %@ manifest hash %@ manifest %@ (pass type identifier %@, serial number %@, sequence counter %@)>
%@ %@ %@ (hash %@ seq %@)
sequenceCounter
manifest
T@"NSNumber",&,N,V_sequenceCounter
T@"NSDictionary",&,N,V_manifest
v32@?0@"NSString"8@"NPKPassSyncStateItem"16^B24
<%@: %p sync state hash: %@, items: %@>
syncStateItems
T@"NSMutableDictionary",&,N,V_syncStateItems
syncStateHash
T@"NSData",R,N
com.apple.NPKNanoPassDaemonConnection.XPC
passSettings
hasPassSettings
TQ,N,V_passSettings
hasPhysicalCardImageURL
T@"NSString",&,N,V_physicalCardImageURL
hasIngestionState
Ti,N,V_ingestionState
hasIngestionProgress
Tf,N,V_ingestionProgress
ReaderModeIngestionStateDefault
ReaderModeIngestionStateCardNotFound
ReaderModeIngestionStateTransferValue
ReaderModeIngestionStateTransferring
ReaderModeIngestionStateCardAdded
ReaderModeIngestionStateCommuteCardAdded
acceptedChangeUUID
changeAccepted
fullPassRequired
-[NPKProtoPassSyncStateChangeProcessed writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoPassSyncStateChangeProcessed.m
nil != self->_acceptedChangeUUID
T@"NSData",&,N,V_acceptedChangeUUID
hasChangeAccepted
TB,N,V_changeAccepted
hasFullPassRequired
TB,N,V_fullPassRequired
603609
IMPORTANT:
The attached logging may contain the time and location of recent transactions you've made with Apple Pay. These logs greatly assist diagnosing and resolving issues.
tap-to-radar
Title
Description
Attachments
v32@?0@"NSURLQueryItem"8Q16^B24
tap-to-radar://new
ComponentID
AutoDiagnostics
phone,watch
Classification
Serious Bug
Reproducibility
I Didn't Try
<%@:%p> title:%@ body:%@
T@"NSString",R,N,V_title
T@"NSString",R,N,V_body
attachmentsPaths
T@"NSSet",R,N,V_attachmentsPaths
tapToRadarURL
T@"NSURL",R,N
hasCardAdded
hasError
T@"NPKProtoStandaloneError",&,N,V_error
com.apple.nanopasskit.transitpassinformationmanager.pendingaddvalueupdated
com.apple.NanoPasskit.TransitPassesInfoManager
@16@?0@"PKPaymentPass"8
v32@?0@"NSString"8@"NPKPassAssociatedInfoModel"16^B24
B16@?0@"NPKPassAssociatedInfoModel"8
v16@?0@"<NPKPassAssociatedInfoManagerObserver>"8
paymentServiceWasInterrupted
TB,N,V_paymentServiceWasInterrupted
passes
T@"NSSet",C
objectUniqueID
T@"NSString",&,N,V_objectUniqueID
passForInvitation
hasPassForInvitation
T@"NPKProtoPass",&,N,V_passForInvitation
accountsRequiringProvisioningData
accountsOnDeviceData
hasAccountsRequiringProvisioningData
T@"NSData",&,N,V_accountsRequiringProvisioningData
hasAccountsOnDeviceData
T@"NSData",&,N,V_accountsOnDeviceData
-[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest.m
-[NPKProtoStandalonePingResponse writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePingResponse.m
lastKnownReconciledPassSyncStateHash
passSegmentIndex
passSegmentTotal
-[NPKProtoPassSyncStateChange writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoPassSyncStateChange.m
nil != self->_changeUUID
nil != self->_uniqueID
T@"NSData",&,N,V_changeUUID
hasLastKnownReconciledPassSyncStateHash
T@"NSData",&,N,V_lastKnownReconciledPassSyncStateHash
Ti,N,V_changeType
hasSyncStateItem
T@"NPKProtoPassSyncStateItem",&,N,V_syncStateItem
hasPassSegmentIndex
TI,N,V_passSegmentIndex
hasPassSegmentTotal
TI,N,V_passSegmentTotal
hasCompanionCatalog
hasBaseManifestHashForPartialUpdate
remoteAssetsForPartialUpdates
T@"NSMutableArray",&,N,V_remoteAssetsForPartialUpdates
serviceProviderIdentifier
serviceProviderCountryCode
serviceProviderAcceptedNetworks
serviceProviderCapabilities
serviceProviderDictJson
merchantID
defaultSuggestions
hasServiceProviderIdentifier
T@"NSString",&,N,V_serviceProviderIdentifier
hasServiceProviderCountryCode
T@"NSString",&,N,V_serviceProviderCountryCode
T@"NSMutableArray",&,N,V_serviceProviderAcceptedNetworks
T@"NSMutableArray",&,N,V_serviceProviderCapabilities
hasServiceProviderDictJson
T@"NSString",&,N,V_serviceProviderDictJson
hasAction
T@"NSString",&,N,V_action
hasMerchantID
T@"NSString",&,N,V_merchantID
T@"NSMutableArray",&,N,V_defaultSuggestions
idx (%tu) is out of range (%tu)
lifecycleStates
activationStates
appletsBytes
lifecycleStatesCount
T^I,R,N
activationStatesCount
T@"NSMutableArray",&,N,V_appletsBytes
cachedHeroImages
hasStepIdentifier
T@"NSMutableArray",&,N,V_cachedHeroImages
<%@: %p> {label:%@ formattedValue:%@ isPrimaryBalance:%@ ID:%@
 PendingUpdateExpireDate:%@ hasPendingUpdate:%d
 balanceValue:%@
 action:%@
T@"NSString",R,N,V_formattedValue
TB,R,N,V_isPrimaryBalance
T@"PKPaymentBalance",R,N,V_balance
T@"NSString",R,N,V_label
T@"NSString",R,N,VdetailLabel
T@"PKPaymentPassAction",R,N,V_action
<%@: %p> {label:%@ detailLabel:%@ ID:%@
 formattedValue:%@
 details:
 (%@: %@)
 startDate:%@
 expiryDate:%@
T@"NSString",R,N,V_detailLabel
T@"<NPKDateRange>",R,N,V_usageDateRange
T@"NSArray",R,N,V_details
true
false
v32@?0B8B12@"LAContext"16@"NSError"24
v24@?0@"NSString"8Q16
expressPassController
T@"PKExpressPassController",&,N,V_expressPassController
currentOperation
TQ,N,V_currentOperation
currentContext
T@"LAContext",&,N,V_currentContext
expressStateUpdatePending
TB,N,V_expressStateUpdatePending
previousPassStates
T@"NSMutableDictionary",&,N,V_previousPassStates
T@"<NPKExpressModeSettingsCoordinatorDelegate>",W,N,V_delegate
currency
depositAmount
minLoadedBalance
maxLoadedBalance
requiredFields
readerModeMetadataJson
digitalIssuanceMetadata
readerModeResourcesJson
minimumReaderModeBalance
hasCurrency
T@"NSString",&,N,V_currency
hasDepositAmount
T@"NSString",&,N,V_depositAmount
hasMinLoadedBalance
T@"NSString",&,N,V_minLoadedBalance
hasMaxLoadedBalance
T@"NSString",&,N,V_maxLoadedBalance
T@"NSMutableArray",&,N,V_requiredFields
hasReaderModeMetadataJson
T@"NSString",&,N,V_readerModeMetadataJson
hasDigitalIssuanceMetadata
T@"NPKProtoStandalonePaymentDigitalIssuanceMetadata",&,N,V_digitalIssuanceMetadata
hasReaderModeResourcesJson
T@"NSString",&,N,V_readerModeResourcesJson
hasMinimumReaderModeBalance
T@"NSString",&,N,V_minimumReaderModeBalance
credentialsBytes
T@"NSMutableArray",&,N,V_credentialsBytes
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
com.apple.NPKPaymentWebServiceCompanionTargetDevice
v24@?0@"NSError"8@"NRActiveDeviceAssertion"16
v36@?0B8@"NSData"12@"NSData"20@"NSError"28
v28@?0B8@"NSData"12@"NSData"20
v32@?0@"PKPaymentDeviceRegistrationData"8@"NSString"16@"NSError"24
v16@?0@"CLLocation"8
v24@?0@"PKPaymentDeviceProvisioningData"8@"NSError"16
not present
present
6BD289D4-EFF7-4E48-A3AD-776E924C8723
com.apple.seld
Configuration
passcode
wrist detection
retrieveTransactions-%@
SetExpressPassIdentifier-%@
v32@?0Q8@"NSString"16@"NSSet"24
RemoveExpressPasses-%@
RemoveExpressPass-%@
ConflictingPassIdentifiers-%@
SetBalanceReminder-%@
BalanceReminder-%@
SetCommutePlanReminder-%@
CommutePlanReminder-%@
EnableServiceModeIdentifier
remotePassUpdate
v24@?0@"PKAccountWebServiceAccountsResponse"8@"NSError"16
v32@?0@"PKAsyncOperationState"8@"NSNull"16@?<v@?@"NSNull"B>24
v28@?0B8@"NSNull"12@"<PKCancelable>"20
DC264F98-B0E2-4D96-9248-663A801E4FB1
v32@?0Q8@"PKPaymentAvailableProductsResponse"16@"NSError"24
B16@?0q8
v40@?0@"NSError"8@"PKPaymentPass"16@"NSSet"24q32
v24@?0Q8@"NSSet"16
B24@?0@"PKExpressPassInformation"8@"NSDictionary"16
NPKTransactionDefaultsQueueOne
NPKWebServiceContextQueueOne
NPKCompanionPeerPaymentRegistrationQueueOne
NPKCompanioniCloudSignoutQueueOne
B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E
Target device does not support subcredential provisioning.
v32@?0@"NSNumber"8Q16^B24
familyMembersPhotos
AB2653AC-2D55-4D7D-9BFB-7D99AA89708B
66A5B423-7CBE-423C-A13B-6389E27D63B9
NPKPasscodeChangeCoordinator
TQ,N,V_context
provisioningService
T@"IDSService",&,N,V_provisioningService
responseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
provisioningActiveDeviceAssertion
T@"NRActiveDeviceAssertion",&,N,V_provisioningActiveDeviceAssertion
remoteDeviceAssertionManager
T@"NPKTargetDeviceAssertionManager",&,N,V_remoteDeviceAssertionManager
manager
T@"NPKTapToRadarManager",&,N,V_manager
passcodeChangeCoordinator
T@"<NPKPasscodeChangeCoordinatorProtocol>",&,N,V_passcodeChangeCoordinator
passcodeUpgradeFlowController
T@,W,N,V_passcodeUpgradeFlowController
subcredentialInvitationCoordinator
T@"NPKSubcredentialInvitationCoordinator",&,N,V_subcredentialInvitationCoordinator
T@"<NPKPaymentWebServiceCompanionTargetDeviceDelegate>",W,N,V_delegate
flowIdentifier
creditAccountCredential
hasFlowIdentifier
T@"NSString",&,N,V_flowIdentifier
hasCreditAccountCredential
T@"NPKProtoStandaloneCreditAccountCredential",&,N,V_creditAccountCredential
regions
partnerIdentifier
partnerName
supportedProtocols
supportedProvisioningMethods
flags
hsa2Requirement
imageAssetURLs
suppressPendingPurchases
paymentOptions
requestedProvisioningMethods
hasDisplayName
T@"NSString",&,N,V_displayName
T@"NSMutableArray",&,N,V_regions
hasPartnerIdentifier
T@"NSString",&,N,V_partnerIdentifier
hasPartnerName
T@"NSString",&,N,V_partnerName
T@"NSMutableArray",&,N,V_supportedProtocols
hasSupportedProvisioningMethods
Tq,N,V_supportedProvisioningMethods
hasFlags
Tq,N,V_flags
hasHsa2Requirement
Tq,N,V_hsa2Requirement
hasImageAssetURLs
T@"NPKProtoStandalonePaymentSetupProductImageAssetURLs",&,N,V_imageAssetURLs
hasSuppressPendingPurchases
TB,N,V_suppressPendingPurchases
T@"NSMutableArray",&,N,V_paymentOptions
T@"NSMutableArray",&,N,V_requestedProvisioningMethods
-[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest.m
T@"NSMutableArray",&,N,V_verificationChannels
upgradeStatus
hasUpgradeStatus
Ti,N,V_upgradeStatus
expressPassInformations
T@"NSMutableArray",&,N,V_expressPassInformations
KeepAlive
UpgradeStarted
UpgradeCompleted
ExpressModeSetupCompleted
supportedServerVersions
clientInfoHTTPHeader
-[NPKProtoStandaloneInitializationResponse writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandaloneInitializationResponse.m
supportedServerVersionsCount
T^i,R,N
hasClientInfoHTTPHeader
T@"NSString",&,N,V_clientInfoHTTPHeader
com.apple.NPKCompanionServer.PaymentPassesChanged
com.apple.NPKCompanionServer.DefaultCardChanged
com.apple.NPKCompanionAgent.Server
priority
hasPriority
TQ,N,V_priority
Tq,N,V_cardType
hasSupportedProtocols
Tq,N,V_supportedProtocols
bridge:root=com.apple.NanoPassbookBridgeSettings&path=ADD_CARD
bridge:root=com.apple.NanoPassbookBridgeSettings&path=ADD_CARD&passTypeIdentifier=%@&passSerialNumber=%@
6C4614A2-1ECC-4405-9FEE-B5F0A5666961
v32@?0Q8Q16@"NSError"24
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/NPKCompanionAgentConnection.m
v16@?0@"PKPaymentApplication"8
v16@?0@"PKPaymentWebServiceContext"8
v16@?0@"NPKCompanionAgentConnection"8
v16@?0@"PKPeerPaymentWebServiceContext"8
v16@?0@"PKPaymentBalanceReminder"8
v16@?0@"PKPaymentCommutePlanReminder"8
Error connecting to target device.
v40@?0@"NSString"8Q16@"NSData"24@"NSError"32
v16@?0@"FAFamilyMember"8
v24@?0@"FAFamilyMember"8@"NSError"16
should
should NOT
v24@?0q8@"NSError"16
v32@?0@"PKPaymentPass"8@"PKPaymentTransaction"16@"NSString"24
cachedUniqueIDs
T@"NSMutableSet",&,V_cachedUniqueIDs
cachedPasses
T@"NSMutableDictionary",&,V_cachedPasses
connectionAvailableActions
T@"NSMutableDictionary",&,N,V_connectionAvailableActions
connectionUnavailableWebServiceContext
T@"PKPaymentWebServiceContext",&,N,V_connectionUnavailableWebServiceContext
queueAppropriateFailedActions
TB,N,V_queueAppropriateFailedActions
hasQueuedPaymentPasses
TB,N,V_hasQueuedPaymentPasses
T@"<NPKCompanionAgentConnectionDelegate>",W,N,V_delegate
com.apple.NanoPassKit.NPKCompanionAgentConnection.PassesChanged
com.apple.NanoPassKit.NPKCompanionAgentConnection.DefaultCardChanged
com.apple.NanoPassKit.NPKCompanionAgentConnection.ActiveWatchWebServiceChanged
BPSTinkerSupport
/System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences
/System/Library/PrivateFrameworks/BridgePreferences.framework/Contents/MacOS/BridgePreferences
selectedVerificationChannelIdentifier
-[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest.m
hasSelectedVerificationChannelIdentifier
T@"NSString",&,N,V_selectedVerificationChannelIdentifier
metadataFields
TI,N,V_metadataFields
passcodeMeetsPolicy
hasPasscodeMeetsPolicy
TB,N,V_passcodeMeetsPolicy
generic_immediate.type_a
manifestEntry
-[NPKProtoPassSyncStateItem writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoPassSyncStateItem.m
nil != self->_serialNumber
nil != self->_manifestHash
hasSequenceCounter
TI,N,V_sequenceCounter
manifestEntrys
T@"NSMutableArray",&,N,V_manifestEntrys
-[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest.m
failedPrecondition
passIDs
Ti,N,V_failedPrecondition
T@"NSMutableArray",&,N,V_passIDs
WristDetection
AppleAccount
-[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse.m
T@"NSMutableArray",&,N,V_moreInfoItems
relativePath
fileHash
-[NPKProtoPassSyncStateManifestEntry writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-1002.1.1/NanoPassKit/Generated/NPKProtoPassSyncStateManifestEntry.m
nil != self->_relativePath
nil != self->_fileHash
T@"NSString",&,N,V_relativePath
T@"NSString",&,N,V_fileHash
com.apple.passkit
General
Relevance
Sync
cancelled
actualUniqueID
currentUniqueIDs
hasCancelled
TB,N,V_cancelled
hasNeedsUnlock
hasActualUniqueID
T@"NSString",&,N,V_actualUniqueID
T@"NSMutableArray",&,N,V_currentUniqueIDs
com.apple.NanoPassKit.BarcodePaymentSession
v24@?0@"PKPaymentTransaction"8@"NSError"16
v32@?0@"NSString"8@"NSData"16@"NSError"24
Submit Barcode Payment Event
v16@?0@"PKBarcodeEventMetadataResponse"8
Barcode Event Metadata
v24@?0@"NSExtensionContext"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
Barcode Payment
v24@?0@"PKAssertion"8@"NSError"16
currentPaymentBarcode
T@"NPKPaymentBarcode",&,N,V_currentPaymentBarcode
currentTransactionStatus
TQ,N,V_currentTransactionStatus
currentTransaction
T@"PKPaymentTransaction",&,N,V_currentTransaction
submittingAuthenticationResult
TB,N,V_submittingAuthenticationResult
authorizationCredential
T@"NSData",&,N,V_authorizationCredential
sessionTimeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_sessionTimeoutTimer
notificationSuppressionAssertion
T@"PKAssertion",&,N,V_notificationSuppressionAssertion
expressTransactionSuppressionAssertion
T@"PKAssertion",&,N,V_expressTransactionSuppressionAssertion
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"<NPKBarcodePaymentSessionDelegate>",W,N,V_delegate
T@"PKPaymentPass",R,N,V_paymentPass
com.apple.mockPeerPaymentAccountManager
minimumTransferAmounts
maximumTransferAmounts
2000.0
active
com.apple.NanoPassbook.Relevancy
com.apple.Passbook.mirrored
com.apple.nanopassbook
DefaultPaymentPass
KnownPaymentPushTopics
IEFTPPUniqueID
IEFTPPApplicationIdentifier
NeedsPaymentOptions
DisplayRedesignedUI
PeerPaymentPreferences
com.apple.nanopassbook.transitreminders
com.apple.NPKErrorDomain
com.apple.NanoPassKit.NPKAppleAccountChanged
com.apple.NanoPassKit.NPKAppleAccountDeleted
com.apple.NanoPassKit.NPKSharedPaymentWebServiceChanged
com.apple.NanoPassKit.NPKSharedPeerPaymentWebServiceChanged
com.apple.NanoPassKit.NPKPeerPaymentAccountChangedDarwinNotification
com.apple.managedconfiguration.passcodechanged
NPKEndedServiceModeRequestDarwinNotification
NPKCancelledServiceModeRequestDarwinNotification
NPKPeerPaymentTermsAndConditionsAcceptanceNeededDarwinNotification
NPKProvisionAccountPassOnUnlock
NPKDeviceUnlockedForPendingProvisioningDarwinNotification
com.apple.NanoPassKit.PresentApplePaySetupAlert
AppName
contact_name
NPKSandboxPresentationRequestNotification
NPKSandboxPassesUniqueIDsKey
NPKSandboxSelectedPassUniqueID
NPKTestApprovalConfirmationAlertDistributedNotification
com.apple.nanoPassKit.presentTapToRadarDistributedNotification
NPKTapToRadarTitleUserNotificationKey
NPKTapToRadarBodyUserNotificationKey
NPKTapToRadarAttachmentsPathsNotificationKey
v32@?0@8Q16^B24
npkHasContent
isAllCaps
com.apple.NanoPassKit.LastReturnedDevice
B16@?0@"NRDevice"8
NPKActiveDeviceChangedNotification
NanoPasses
CPSharedResourcesDirectory
AppSupport
/Library/NanoPasses/
PaymentCards
NanoCatalogOfRecord.plist
NanoPaymentWebServiceContext.archive
NanoPaymentWebServiceBackgroundContext.archive
NanoPeerPaymentWebServiceContext.archive
NanoPeerPaymentAccount.archive
RasterizedPasses
PassSyncEngine.archive
AutomaticProvisioning.archive
PendingTransactionsCache.archive
BalanceReminder-%@-%@
NPKInternalSyncedSettingsChangedRemotely
NPKInternalExpressPassesInformationChangedRemotely
NPKSyncedSettings
com.apple.nanopassbook.syncedsettingschanged
NPKExpressPassesInformation
com.apple.nanopassbook.expresspassesinformationchanged
~watch
did not set
WatchOS
@"NSString"16@?0@"<NSObject>"8
self <> ''
NPKRemotePassUpgradeStatusUpgradeStarted
NPKRemotePassUpgradeStatusUpgradeCompleted
NPKRemotePassUpgradeStatusExpressModeSetupCompleted
unkown Pass Upgrade status:%ld
IDS_COMMUNICATION_ERROR
file
%@.%@
NPKRelevantTransitNotificationsCheckInterval
B16@?0@"NSDictionary"8
com.apple.nanopassbook.payment.field-detect-warning.outside-quick-pay
com.apple.nanopassbook.payment.field-detect-warning.in-quick-pay
com.apple.nanopassbook.payment.requested
com.apple.nanopassbook.payment.requested.no-passes
com.apple.nanopassbook.payment.requested.no-passcode
com.apple.nanopassbook.payment.requested.while-locked
com.apple.nanopassbook.payment.requested.while-busy
com.apple.nanopassbook.payment.requested.while-restricted
com.apple.NPKCompanionAgent.bulletins
com.apple.NPKCompanionAgent.started
com.apple.NPKCompanionAgent.WillSetExpressTransit
NPKDefaultExpressPassUniqueID
NPKDefaultApplicationIdentifier
ECFC47E2-4B1A-404F-ADA3-D23DF4B06A29
C9D5B8D6-68B4-4C31-9CB7-4CA5309D4C83
14EA79AF-4D88-460A-8900-04EA1EB9503C
77EA0BCD-6C9F-44F2-B623-FD7662848CB6
FCC9847B-9EBD-4ADA-9267-D77292895F8D
DefaultExpressPasses
passIdentifier
appletIdentifier
expressPassMode
4CAAF5A2-6DD3-43EE-B2D8-C3D8C4997856
en_US
DisablePassSync
MigrationReregisterNeeded
82AA137D-7207-4997-8F6E-9DB738D759F1
81603B90-6702-446B-A559-CBA22E92C0B8
50BDC6C0-0803-11EA-AAEF-0800200C9A66
A5E3D6BA-0998-4787-BE2A-0BBF2B359CC0
%@:%ld
. %@
AppleLocale
TRANSACTION_USER_NOTIFICATION_TITLE_FORMAT
NPKCompanionAgent
HardwarePlatform
t8002
com.apple.nanolifestyle.connectedgym
ConnectedGymNFCAlwaysOn
UserConsentGranted
ConnectedGymDefaultNFCAlwaysOn
InRestrictedMode
InFailForward
NanoPassbook
Unknown reason
AssertType
PreventUserIdleSystemSleep
AssertLevel
AssertName
TimeoutSeconds
HumanReadableReason
Pending
Accepted
Expired
Revoked
Canceled
Unknown (%lu)
StoreDemoMode
com.apple.demo-settings
ENABLED
disabled
PKBarcodeFormat
PKBarcodeFormatUnknown, PKBarcodeFormatQR, PKBarcodeFormatPDF417, PKBarcodeFormatAztec, PKBarcodeFormatCode128
com.apple.passd
PDExpressPasses
v32@?0@"NSString"8@"NSDictionary"16^B24
PartialPassCache
NPKExpressTransactionStatusUnknown
NPKExpressTransactionStatusInProgress
NPKExpressTransactionStatusFailed
NPKExpressTransactionStatusPendingDetails
NPKExpressTransactionStatusCompleted
NPKExpressTransactionStatusCompletedWithDetails
Unexpected Express Transaction Status: %lu
Notice: %@ handling com.apple.nanopasskit.expressGymKitAvailable.didChange notification isAllowed:%d delegate:<%@:%p>
Notice: NPKExpressGymKitAvailabilityManager: requested allow enable express GymKit with view controller:%@
Notice: NPKExpressGymKitAvailabilityManager: Found settings bundle:%@ loaded:%d
Notice: NPKExpressGymKitAvailabilityManager: did allowed enable express GymKit:%d error:%@
Notice: Pass sync service: Evaluating whether to sync now
Current incoming change: %@
Previous incoming change: %@
Previous incoming change date: %@
Current outgoing change: %@
Previous outgoing change: %@
Previous outgoing change date: %@
Notice: Pass sync service: Evaluated whether to sync now
Incoming change allows sync: %d
Outgoing change allows sync: %d
Notice: Pass sync service: starting
Notice: Pass sync service: pass library changed
Notice: Pass sync service: pass settings changed for pass with unique ID %@
Error: Failed to send pass settings: %@
Notice: Pass sync service: sent pass settings
Message ID: %@
Protobuf: %@
Notice: Pass sync service: handling catalog changed (companion %p watch %p)
Error: Failed to send catalog: %@
Notice: Pass sync service: sent catalog
Message ID: %@
Protobuf: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Subclasses must override)
Notice: Pass sync service: storing large pass data segment
change UUID: %@
segment index: %u
total pass segments: %u
Notice: Pass sync service: this is the last segment of pass data
retrieved combined pass data: %@
Notice: Pass sync service: not providing state change to sync engine
change UUID: %@
Notice: Pass sync service: pass settings changed with protobuf %@
Warning: Pass sync service: No unique ID or no pass settings in protobuf
Notice: Pass sync service: catalog changed with protobuf %@
Warning: Dropping state change message
Error: Failed to send pass sync state change: %@
Notice: Pass sync service: sent state change IDS message
Message ID: %@
Protobuf: %@
Notice: Pass sync service: splitting state change into %u pieces
Notice: Pass sync service: sending state change IDS message for segment index %u (%u total segments)
Change UUID: %@
Warning: Dropping state change processed message
Error: Failed to send pass sync change accepted: %@
Notice: Pass sync service: sent state change processed IDS message
Message ID: %@
Protobuf: %@
Warning: Dropping reconciled state unrecognized message
Error: Failed to send pass sync reconciled state unrecognized: %@
Notice: Pass sync service: sent reconciled state unrecognized IDS message
Message ID: %@
Protobuf: %@
Warning: Dropping proposed reconciled state message
Error: Failed to send pass sync proposed reconciled state message: %@
Notice: Pass sync service: sent proposed reconciled state IDS message
Message ID: %@
Protobuf: %@
Warning: Dropping reconciled state accepted message
Error: Failed to send pass sync reconciled state accepted: %@
Notice: Pass sync service: sent reconciled state accepted IDS message
Message ID: %@
Protobuf: %@
Notice: Pass sync service: got pass sync engine state changed
Notice: Pass sync service: received state change processed delegate method invoked
Change: %@
Accepted: %d
Notice: Pass sync service: finished processing change delegate method invoked
Change: %@
Notice: Companion pass sync service: syncing when appropriate following change processed
Notice: Pass sync service: Providing updated library state
Sync state: %@
Will sync if necessary: %s
Notice: Pass sync service: Not syncing after providing updated library state, since change is already accounted for in reconciled state
Notice: Pass sync service: Not syncing after providing updated library state, since change is already accounted for in processing change on top of reconciled state
Notice: Pass sync service: requesting sync when appropriate following update to library state
Notice: Pass sync service: Archive timer fired; writing pass sync engine archive to disk
Error: Pass sync service: unable to write pass sync engine archive to disk
Error: %@
Notice: Pass sync service: Syncing immediately while appropriate
Notice: Pass sync service: Setting sync timer because syncing now is not appropriate
Notice: Pass sync service: Sync timer is already set
Notice: Pass sync service: Setting timer for %.2f seconds before syncing
Warning: Pass sync service: Unable to read pass sync engine archive. This is expected in the case of a fresh device install.
Error: %@
Warning: Target device: No delegate to enforce upgraded passcode policy!
Warning: Target device: No delegate to start requiring upgraded passcode!
Warning: Target device: No delegate to end requiring upgraded passcode!
Notice: Passes manager: Loading passes following first unlock
Notice: Passes manager: Reloading passes because default payment pass is changed
Notice: Groups controller inserted group %@ at index %lu
Notice: Groups controller moved group %@ from index %lu to index %lu
Notice: Groups controller removed group %@ at index %lu
Notice: Group %@ inserted pass %@ (%@) at index %lu
Notice: Group %@ moved pass from index %lu to index %lu
Notice: Group %@ removed pass %@ (%@) at index %lu
Notice: Group %@ updated pass %@ (%@) at index %lu
Warning: Moving pass %@ at index %lu to %lu (from group index %lu, to group index %lu)
Warning: Could not move pass %@ at index %lu to %lu (from group index %lu, to group index %lu)
Notice: Passes manager: All passes loaded.
Notice: Loading image set type %ld for pass with unique ID %@
Notice: Finished loading image set %ld for pass with unique ID %@
Notice: Memory-mapping logo image set for pass with unique ID %@
Notice: Memory-mapping front face image set for pass with unique ID %@
Warning: Attempt to load image set %ld for pass with unique ID %@ was unsuccessful!
Notice: Loading preview image set for pass with unique ID %@
Notice: Finished loading preview image set for pass with unique ID %@
Notice: Loading content for pass with unique ID %@
Notice: Finished loading content for pass with unique ID %@
Notice: Loaded color profile %@ for pass with unique ID %@
Notice: Got object settings changed to %u for pass (%@) with unique ID %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot calculate npk complete hash for version %llu)
Notice: PendingAddValueStateExpireDate: %@ for pass %@ field:%@ balanceUpdated:%d
Notice: addValuePending: npkHandleTransitValuePendingAmount %@ withField:%@ forPassWithID %@
Notice: addValuePending: npkClearTransitValuePendingStateIfNecessaryForPassWithID %@ fields %@
Notice: addValuePending: Balance is greater than before pending top up, clearing value pending state
Notice: missing required value: passUniqueID:%@ fieldIdentifier:%@
Notice: [NanoPassdXPC] New connection created: %@
Notice: [NanoPassdXPC] Connection handleMetadataRequestOnPairedDevice %@
Notice: [NanoPassdXPC] Connection got response (%@, %@) for request %@
Notice: [NanoPassdXPC] Connection applicationRedirectRequestOnPairDevice %@-%@
Error: [NanoPassdXPC] Failed to create remoteObjectProxy
Notice: [NanoPassdXPC] Connection startSubcredentialProvisioningOnRemoteDeviceForInvitation: %@
Notice: [NanoPassdXPC] Connection startSubcredentialProvisioningOnLocalDeviceMatchingInvitation: %@ shouldFetchAnonymizationSaltFromRemoteDevice: %@ completion: %@
Notice: [NanoPassdXPC] Connection got response (%@, %@) for invitation %@
Notice: [NanoPassdXPC] Connection statusForSentInvitation: %@ completion: %@
Notice: [NanoPassdXPC] Connection got response (%lu) for invitation: %@
Notice: [NanoPassdXPC] Connection statusForReceivedInvitation: %@ completion: %@
Notice: [NanoPassdXPC] Connection stated noteWillDeleteAccountsSynchronous: %d
Notice: [NanoPassdXPC] Connection finished noteWillDeleteAccountsSynchronous: %d
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: -[NPKNanoPassDaemonConnection _remoteObjectProxySynchronous:withFailureHandler:] (synchronous:%d) would have returned nil)
Notice: [NanoPassdXPC] Error on NPKNanoPassDaemonConnection connection: %@
Notice: [NanoPassdXPC] Service %@ didEstablishConnection: %@
Notice: [NanoPassdXPC] Service %@ didInterruptConnection: %@
Notice: [NanoPassdXPC] Service didResume: %@
Notice: [NanoPassdXPC] Service didSuspend: %@
Notice: Error no pass to process applet history
Notice: added Manually mutated transit Applet Balance:%@
Error: Request create NPKPeerPaymentStatus with unexpected number:%@
Notice: %{public}@: Checking whether pass library can accept invitation: %@ completion: %@
Notice: %{public}@: Invoking completion with error: %@
Notice: %{public}@: Listing subcredential invitations
Notice: %{public}@: Invoking completion with invitations: %@
Notice: %{public}@: Begin provisioning with invitation identifier: %@ metadata: %@ completion: %@
Notice: %{public}@: Begin provisioning with invitation: %@ metadata: %@ completion: %@
Notice: %{public}@: Checking whether device contains invitation matching invitation: %@ timeout: %lu completion: %@
Notice: %{public}@: Invoking completion with invitation: %@ error: %@
Notice: %{public}@: Fetching account attestation anonymization salt
Notice: %{public}@: Invoking completion with anonymizationSalt: %@ error: %@
Notice: %{public}@: Setting account attestation anonymization salt: %@
Notice: %{public}@: Requesting subcredential invitation: %@
Notice: %{public}@: Invoking completion with invitation: %@
Notice: %{public}@: Updating metadata on pass: %@ with credential: %@ completion: %@
Notice: %{public}@: Invoking completion with pass: %@
Notice: %{public}@: Registering credentials with identifiers: %@ completion: %@
Notice: %{public}@: Invoking completion with passes: %@ errors: %@
Notice: %{public}@: Revoking credentials with identifiers: %@ completion: %@
Notice: %{public}@: Invoking completion with success: %@
Notice: %{public}@: Removing sharing invitation: %@ completion: %@
Notice: %{public}@: Declining related invitations if necessary for invitation: %@ completion: %@
Notice: %{public}@: Invoking completion with didDeclineInvitations: %@
Notice: %{public}@: Initializing account attestation anonymization salt if necessary with completion: %@
Notice: %{public}@: Invoking completion with anonymization salt: %@ error: %@
Warning: %{public}@: Expected to initiate subcredential provisioning on the remote device, but failed to obtain the anonymizationSalt: %@ error: %@
Warning: %{public}@: Expected to initiate subcredential provisioning on the remote device, but encountered an error: %@
Notice: %{public}@: Start local device provisioning with invitation: %@
Notice: %{public}@: Remote device is connected.
Notice: %{public}@: Remote device is not connected; failing immediately...
Notice: %{public}@: Fetching status for sent invitation: %@ completion: %@
Notice: %{public}@: Invoking completion with status: %@
Notice: %{public}@: Fetching status for received invitation: %@ completion: %@
Warning: %{public}@: Subcredential provisioning controller %@ did finish with error: %@
Notice: %{public}@: Subcredential provisioning controller %@ did finish with pass: %@
Warning: %{public}@: Target device does not respond to -[paymentWebService:canAcceptInvitation:withCompletionV2:]
Warning: %{public}@: Target device does not respond to -[paymentWebService:subcredentialInvitationsWithCompletion:]
Warning: %{public}@: Target device does not respond to -[paymentWebService:matchingInvitationOnDevice:withTimeout:completion:]
Warning: %{public}@: Target device does not respond to -[paymentWebService:accountAttestationAnonymizationSaltWithCompletion:]
Warning: %{public}@: Target device does not respond to -[paymentWebService:setAccountAttestationAnonymizationSalt:withCompletion:]
Warning: %{public}@: Target device does not respond to -[paymentWebService:requestSubcredentialInvitation:completion:]
Warning: %{public}@: Target device does not respond to -[paymentWebService:updateMetadataOnPass:withCredential:completion:]
Notice: %{public}@: Found previously established anonymization salt: %@
Warning: %{public}@: Failed to get anonymization salt: %@. Proceeding anyway...
Notice: %{public}@: No salt found, setting default salt
Notice: %{public}@: Set default salt with salt: %@ error: %@
Warning: %{public}@: Expected to find a subcredential provisioning controller, but instead found nil!: %@
Warning: %{public}@: Expected to return an invitation, but no completion block was provided: %@
Warning: %{public}@: Unable to make accept invitation configuration for this invitation! error: %@
Warning: %{public}@: Expected to make accept invitation configuration with a non-nil sharing session, invitation, and paymentWebService! sharingSession: %@ invitation: %@ metadata: %@ paymentWebService: %@
Warning: %{public}@: Expected to return a configuration, but no completion block was provided: %@
Notice: %{public}@: Starting provisioning for provisioning controller: %@ with configuration: %@
Warning: %{public}@: Expected to start provisioning with a non-nil subcredential provisioning controller and configuration! subcredentialProvisioningController: %@ configuration: %@
Notice: %{public}@: End provisioning with pass: %@ error: %@
Warning: %{public}@: Attempted to invoke completion handler, but no block was found!
Notice: Starting Parse payload for PayloadID:%@ payload:%@
Notice: found valid amount:%@
Warning: Not supported value from info:%@
Warning: Not supported currency code from info:%@
Warning: PayloadID:%@ Not allowed
Notice: Device may need data usage resolution
Notice: Currently resolving data usage
Notice: Session source received PMU button event
Notice: Session source is delegating button event
Notice: Outstanding payment sessions; ignoring
Notice: Session source initial precondition state is %d
Notice: No initial pass; session source reporting no cards
Notice: Session source providing session to delegate
Notice: Payment session failed to start; session source reporting busy
Notice: altAccount %@
Notice: no active device found, using IDSDefaultPairedDevice
Notice: Service %@ sent protobuf (%@) destinations %@ priority %ld options %@: identifier %@ success %d error %@
Notice: VAS automatic selection coordinator got reloaded passes
Notice: VAS automatic selection coordinator got added passes
Notice: VAS automatic selection coordinator got updated passes
Notice: VAS automatic selection coordinator got removed passes
Notice: VAS automatic selection coordinator got reordered passes
Notice: VAS automatic selection coordinator got updated settings for pass %@
Notice: Wallet preferences changed
Notice: Found %d VAS passes for automatic selection
Notice: Standalone: checking webService %s: 
Notice: Standalone: checking controller initialization %s: 
Notice: Standalone: starting provisioning flow
Error: Past initialization step; cannot start provisioning flow!
Notice: Provided credential %@ does not match current credential %@; going back to requirements
Notice: Manual entry fields %@ do not match required fields %@; going back to requirements
Notice: Standalone: Handling manual entry fields: %@ with fields model fields: %@
Notice: Standalone: Updating %@
Warning: Standalone: no model field with identifier %@ to update!
Notice: Standalone: Handling product selection: %@ (%@)
Notice: Standalone: id %@ state %lu response status %lu
Notice: Standalone: Start secondary manual entry with %lu fields following product disambiguation.
Error: Not on product disambiguation step; cannot choose product!
Notice: Standalone: Handling passcode upgrade complete with success: %d error: %@
Error: Not on terms step; cannot accept terms!
Notice: Standalone: More information acknowledged
Notice: Standalone: starting issuer verification flow for pass %@
Error: Past initialization step; cannot start issuer verification flow!
Notice: Standalone: Handling issuer verification fields: %@ with fields model fields: %@
Notice: Standalone: Handling issuer verification code of length %lu
Error: Not on an issuer verification step; cannot skip issuer verification!
Notice: Standalone: starting in-app provisioning flow with configuration %@
Notice: Standalone: Handling issuer add request %@
Error: Not on get issuer add request step; cannot handle request!
Notice: Standalone: No response from issuer provisioning certificates endpoint: %@
Notice: In-app provisioning timed out waiting for response from client
Notice: Standalone: images %@
Notice: Standalone: 
downloading cached image %@
Notice: Standalone: 
downloaded cached image %@ error %@
Warning: Unable to download hero images. Using defaults.
Notice: Product chosen: %@
Notice: Standalone: Error occurred when setting up product for provisioning: %@
Notice: Credentials chosen: %@
Error: >1 credentials when not chosen by user!
Notice: Standalone: current State is %ld
Warning: Error: %{public}@ does not know how to handle provisioning state : %{public}@.
Notice: Forming payment requirements request from current credential %@
Notice: Forming payment requirements request from fields model
Notice: Forming payment eligibility request from in-app provisioning request %@
Notice: Forming payment eligibility request from current credential %@
Notice: Forming payment eligibility request from fields model
Notice: Standalone: performing requirements
Notice: Standalone: PKPaymentRequirementsStatusRequirementsAmbiguous is responded by server
Notice: Standalone: Start secondary manual entry with %lu fields.
Notice: Standalone: Moving directly to next provisioning step since all fields are complete (%@).
Notice: Standalone: PKPaymentRequirementsStatusUnknownRequirements or PKPaymentRequirementsStatusCardNotSupported is responded by server
Notice: Standalone: Error occurred when sending requirements request: %@
Notice: Standalone: No response or error from requirements!
Notice: Standalone: performing eligibility
Notice: Standalone: Error occurred when sending eligibility request: %@
Notice: Standalone: Preflighted passcode upgrade with success %d, meets policy %d, error %@
Notice: Standalone: Not showing terms (termsURL %@, accepted out of band %d)
Notice: Standalone: Error occurred when sending provision request: %@
Notice: Standalone: No response or error from provision!
Notice: Standalone: Provisioning is complete, but waiting for reader mode second tap
Notice: Standalone: Verification is necessary
Warning: Standalone verification status: unknown, showing error.
Warning: Standalone: requesting verification options failed (result %lu). Showing error: %@
Warning: Standalone: requesting verification fields failed (result %lu). Showing error: %@
Warning: Standalone: submitting verification code failed (result %lu). Showing error: %@
Notice: Standalone: TransitionToRemoteCredentials Step
Notice: Standalone: Single remote credential
Notice: Standalone: Have product with identifier %@ provisioning method types %@
Error: Error: No valid provisioning methods exist for product; transitioning to manual entry
Notice: Standalone: Enter Manual Entry, no credentials found
Notice: Standalone: There are %lu fields required in the Manual Entry
Notice: Standalone: Entered Local Device Manual Entry for credential %@. There are %lu incomplete fields.
Notice: Standalone: Entered Secondary Manual Entry for credential %@. There are %lu incomplete fields.
Notice: Standalone: Entered more information step. There are %lu more info items
Notice: Standalone: Entered verification options step. There are %lu channels
Notice: Standalone: Entered verification fields step. There are %lu fields required
Notice: Standalone: Entered verification code step with channel %s
Notice: Standalone: End of provisioning flow for current card
Notice: %d credentials remaining; moving to credential: %@
Notice: Flow controller change step from %@ to %@ with context: %@
Notice: Flow controller encountered error: %@
Notice: Filtered required fields based on local device entry requirement
Notice: Field %@ is incomplete requires local entry %d
Notice: Complete except for local fields %d local %d non local %d
Notice: Determining required fields for response status %ld and product identifier %@
Notice: Started providing periodic updates:
service: %@
message type: %u
response identifier: %@
Notice: Provisioning service agent status updater invalidating: %@
Notice: Provisioning service agent status updater sending status update: %@
Error: Not able to send status update:
service: %@
message type: %u
response identifier: %@
Warning: Reached limit of %lu updates for response identifier %@; will not send further updates.
Notice: Get PDF image from bundle: %@ prefix: %@ taragetSize:{%f,%f} scale:%f
Notice: Get PDF image from path: %@ taragetSize:{%f,%f}
Notice: unable to find resource at path %@
Notice: Could not find PDF document at path: %@
Notice: PDF document is empty
Notice: No target size provided we will not scale down the given PDF resource
Notice: target size to create PDF:{%fx%f}
Notice: returning PDF image %@
Notice: Load PDF art from bundle: %@
Notice: decoding logo image from data on demand
Notice: decoding background image from data on demand
Error: Remote object proxy error handler for set configuration invoked: %@
Error: Remote object proxy error handler for present add payment pass invoked: %@
Error: Remote object proxy error handler for dismiss add payment pass invoked: %@
Notice: Forwarding generate request to delegate
Notice: Forwarding did finish to delegate
Notice: User accpeted to Open Tap-To-Radar
Notice: User rejected to Open Tap-To-Radar
Notice: Requested to Open Tap-To-Radar
Notice: Audio player playing sound %u
Notice: Attempt to acquire assertion that has already been acquired: %@
Notice: Perform action when companion agent is available: %@
Error: Not performing action when companion agent is available because pairing ID is nil! Device: %@, action: %@
Notice: Fetched deferred shared web service context %@ for device %@
Notice: Setting deferred shared web service context: %@
Error: Not setting deferred shared web service context because pairing ID is nil! Device: %@, context: %@
Notice: Setting deferred added payment pass: %@ for device: %@
Notice: Returning deferred added payment passes: %@ for device: %@
Notice: Performing deferred actions
Notice: Pairing ID %@: shared web service context %@
Notice: Pairing ID %@: %u actions
Notice: Removing deferred data for pairing ID %@ (deferred action count %u deferred shared context %@)
Notice: Deferred action handler: companion agent started
Notice: Deferred action handler: device became active
Notice: Deferred action handler: device paired
Notice: Deferred action handler: device unpaired (pairing ID %@)
Notice: Deferred action handler: device pairing failure
Notice: NPKPaymentView: updateWithConcreteTransactions:%@ ephemeralTransaction:%@ updatedPassTransitItems:%@ paymentApplication:%@
Notice: NPKPaymentView: Evaluate transaction %@ with type:%ld transitSubtype:%ld amount:%@ amounts: %@ 
Notice: Transaction complete context: got transaction type %d displayable pass Items %@ redeemed ticket %d transactionDescription:"%@" transactions:%@
Notice: Requested forceToTransitTypeTransactionWithTransactionStatus:%lu
Notice: [PaymentSessionManager] Handling new contactless payment session: %@
Notice: [PaymentSessionManager] Handling contactless payment interface did appear
Notice: [PaymentSessionManager] Handling contactless payment interface did disappear with session: %@
Notice: [PaymentSessionManager] Handling user selected pass: %@
Notice: [PaymentSessionManager] Updating payment session with user selected pass
Notice: [PaymentSessionManager] Clearing service mode requested pass %@
Notice: [PaymentSessionManager] Handling end quick payment session requested with session: %@
Notice: [PaymentSessionManager] Handling end barcode payment session requested with session: %@
Notice: [PaymentSessionManager] Got express transaction status %@ for pass %@ concrete transactions %@ ephemeral transactions %@ mutatedBalances:%@ applet state %@
Notice: [PaymentSessionManager] Handling local authentication error %@
Notice: [PaymentSessionManager] Handling ending quick payment session requested by UI.
Notice: [PaymentSessionManager] Transitioning from quickPaymentSession into barcodePaymentSession.
Notice: [PaymentSessionManager] Skip creating new barcodePaymentSession - isPersonalized: %d, hasQuickPaymentSession: %d, hasNoExistingBarcodePaymentSession: %d
Notice: [PaymentSessionManager] Handling retry loading paymentBarcode
Notice: [PaymentSessionManager] Handling ending barcode payment session requested by UI.
Notice: [PaymentSessionManager] Got removed unique IDs: %@
Notice: [PaymentSessionManager] Quick payment session pass unique ID is %@
Notice: [PaymentSessionManager] Clearing quick payment session current pass because it has been removed
Notice: [PaymentSessionManager] Barcode payment session pass unique ID is %@
Notice: [PaymentSessionManager] Tearing down barcode payment session because pass has been removed
Notice: [PaymentSessionManager] Got updated unique IDs: %@
Notice: [PaymentSessionManager] Setting updated payment session pass with unique ID %@
Notice: [PaymentSessionManager] User selected pass unique ID is %@
Notice: [PaymentSessionManager] Setting updated user selected pass with unique ID %@
Notice: [PaymentSessionManager] Tearing down barcode payment session because updated pass is not activated (state %lu)
Notice: [PaymentSessionManager] Got passes reloaded
Notice: [PaymentSessionManager] Setting reloaded pass for unique ID %@
Notice: [PaymentSessionManager] Reloaded barcode payment pass is %@ (state %lu)
Notice: [PaymentSessionManager] Tearing down barcode payment session because updated pass no longer exists or is not activated
Notice: [PaymentSessionManager] New current pass from payment session: %@
Notice: [PaymentSessionManager] Payment session will activate pass: %@
Notice: [PaymentSessionManager] Payment session did activate pass: %@
Notice: [PaymentSessionManager] Payment session %@ (current %@) failed (VAS) transaction for pass %@
Error: [PaymentSessionManager] Got user intervention required passes %@
Notice: [PaymentSessionManager] current pass unique ID is %@ style %d
Notice: [PaymentSessionManager] Payment session %@ (current %@) completed for reason %d
Notice: [PaymentSessionManager] Payment session detected field entry
Notice: [PaymentSessionManager] Payment session detected field exit
Notice: [PaymentSessionManager] Payment session did select payment for unique ID: %@
Notice: [PaymentSessionManager] Payment session selected value added service
Notice: [PaymentSessionManager] Payment session received start transaction
Notice: [PaymentSessionManager] Payment session received activity timeout isTransit %i
Notice: [PaymentSessionManager] Handling activity timeout in transit pass as completion
Notice: [PaymentSessionManager] unexpected activity timeout event for cEMV pass with uniqueID:%@
Notice: [PaymentSessionManager] Payment session received credential
Notice: [PaymentSessionManager] Payment session completed transaction with context %@
Notice: [PaymentSessionManager] Payment session received authorization timeout
Notice: [PaymentSessionManager] Payment session received activation error
Notice: [PaymentSessionManager] Payment session received transaction error
Notice: [PaymentSessionManager] Payment session waiting to start
Notice: [PaymentSessionManager] Payment session did start
Notice: [PaymentSessionManager] Handling VAS transactions: %@
Notice: [PaymentSessionManager] Getting session state for transaction completion
Notice: Setting contactless interface visibility timer
Notice: Stopping contactless interface visibility timer
Notice: Contactless interface visibility timer fired with visibility %d
Notice: Got cancel service mode requests notification
Notice: Transfer to companion preflight: watch is connected
Notice: Transfer to companion preflight: watch is not connected
Notice: Checking watch connected state
Notice: gizmo connected
Notice: gizmo not connected
Notice: Checking companion iCloud account state
Notice: has companion account
Notice: does not have companion account
Notice: Checking watch iCloud account state
Notice: Device is pairing
Notice: Got iCloud info: %@ %@
Notice: Person ID: %@ Local account: %@
Notice: Checking passcode enabled and unlocked state with query date: %@
Notice: passcode enabled %d device passcode locked %d error %@
Notice: Setting auth random if necessary
Notice: query date %@ now %@
Notice: Watch has SEP: %d; has required software version: %d
Notice: Setting auth random if necessary at the beginning of the provisioning flow
Notice: Auth random set if necessary (success %d)
Notice: Preflight complete!
success: %d
error: %@
preflighting: %d
checked passcode/unlocked: %d
checked companion iCloud account: %d
checked watch iCloud account: %d
checked wrist detect: %d
needsPasscode: %d
needsUnlock: %d
needsGizmoiCloudAccount: %d
needsWristDetection: %d
gizmo connected: %d
space available on SE: %d
auth random set if necessary: %d
Only one available product but no name for display. Using default for product type instead.
Product: %@ is not supported due to device OS version
Product: %@ is supported due to matching card on file, but manual entry is disabled (device/cellular region check)
Product: %@ is not supported in this device region
Product: %@ is supported only due to matching card on file; disallowing manual entry (local supported methods %lu, product supported methods %lu)
Product: %@ is not supported due to no matching provisioning methods and no card on file (local supported methods %lu, product supported methods %lu)
Product: %@ is supported due to matching card on file (type f support check)
Product: %@ is not supported due to lack of card on file and Type F support
Product: %@ is not supported on device
Product: %@ is not supported in setup context due to HSA requirement
Product: %@ (%@) is supported with provisioning types %@
Product: %@ is supported due to matching card but cannot be manually provisioned
Product: %@ is unsupported and will not be shown in the flow picker
Error: Expected to instantiate NPKWatchSubcredentialProvisioningService on watch.
Notice: %{public}@: Sending subcredential provisioning request for invitation: %@
Error: %{public}@: No message identifier for protobuf %@
Notice: %{public}@: Sending fetch account attestation anonymization salt request with completion: %@
Warning: %{public}@: No response expected for message with identifier %@
Notice: %{public}@: Received accountAttestationAnonymizationSaltResponse: incoming protobuf %@
Warning: %{public}@: Got response with no associated message handler
Error: %{public}@: No associated message ID in response
Notice: History fetcher set AID to %@
Notice: History fetcher received fetch request
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Expected service to be non-nil!)
Warning: %{public}@: Expected subcredentialProvisioningService and subcredentialProvisioningQueue to be non-nil! subcredentialProvisioningService: %@ subcredentialProvisioningQueue: %@
Notice: %{public}@: Sending protobuf: %@ with response expected: %@ extra options: %@
Error: IDS failed to send protobuf %@
Notice: Timed out waiting for response; invoking error handler for message %@
Notice: %{public}@: IDS service accounts changed: %@
Notice: %{public}@: IDS service devices changed: %@
Notice: %{public}@: IDS service did send with success: %@ %@ %@ %d %@
Notice: %{public}@: identifier: %@ request: %@ error handler: %@
Notice: Transient assertion connection interrupted
Notice: Transient assertion connection invalidated
Error: Couldn't get remote object proxy
Error: Subclasses to implement %s
Notice: Transient pass assertion: resyncing state
Notice: Double-press delegation assertion: received delegated event
Notice: Double-press delegation assertion: resyncing state
Notice: Fake payment session: setting current pass %@
Notice: Fake payment session: setting VAS passes %@
Notice: Fake payment session: detected field
Notice: Fake payment session: confirming session for pass %@
Notice: Fake payment session: deactivating session
Notice: Fake payment session: setting timer
Notice: Fake payment session: handling timeout
Notice: Fake payment session: Got transaction complete Darwin notification
Notice: Setting or resetting cleanup timer for message with identifier %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Don't call -[NPKContinuityController init] but instead use singleton!)
Notice: Continuity: user is viewing pass list
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil uniqueID)
Notice: User viewing pass with unique ID %@ (payment pass: %d)
Notice: User needs to provision pass with unique ID %@
Notice: Continuity: user needs payment passes
Notice: Continuity: user needs to set up peer payment
Notice: Continuity: user needs to view peer payment
Notice: Continuity: invalidateAllActivities
Notice: Saving user activity %@
Notice: Invalidating old activity %@
Notice: New activity was already current, calling -becomeCurrent again: %@
Notice: %@: Adding assertion:%@
Notice: %@: Removing assertion: %@
Notice: %@: Attempting to acquire assertion of type %lu for reason:%@ with completion:%@
Notice: %@: Attempting to invalidate assertion of type %lu with completion:%@
Notice: %@: Unable to acquire assertion due to error: %@
Notice: %@: Successfully acquired assertion
Notice: %@: Unable to invalidate assertion due to error: %@
Notice: %@: Successfully invalidated assertion
Notice: Remote Assertion - Request acquire assertion of type:%lu with UUID:%@
Error: Remote Assertion - Failed to send Assertion request type:%@
Error: Remote Assertion - Unknown assertion request type:%@
Notice: Remote Assertion - Request to invalidate assertion with UUID:%@
Notice: Remote Assertion - Sending assertion request of type:%@ UUID:%@
Error: Remote Assertion - Failed to sendAssertionrequest of type:%@ UUID:%@
Notice: Digital issuance terms accepted
Warning: Provided digital issuance amount %@ which is less than the minimum %@
Warning: Provided digital issuance amount %@ which is more than the maximum %@
Notice: No digital issuance purchase; going back
Notice: Attempting to download peer payment pass following provisioning
Notice: Added payment pass following provisioning
Notice: Calling peerPaymentReRegisterWithURL:pushToken: completion with success %i error %@
Notice: Missing peer payment preferences for paring paired device
Notice: Requested to set peer payment preferences:%@
Notice: Calling setPreferences:completion: completion with preferences %@ error %@
Notice: Falling back to setting preferences via peer payment web service
Warning: No peer payment web service; not setting preferences
Notice: session: %@ deactivated %d
Notice: Handling new contactless session: %@
Notice: Payment session: setting current pass to %@
Notice: Setting defer authorization on quick payment session: %@
Warning: Failed to enable service mode!
Warning: Cannot disable persistent card emulation on a session!
Notice: Quick payment session: updating session%@
Notice: Confirm or renew quick payment session: session state is %u
Notice: Quick payment session: deactivating session
Notice: Deactivate quick payment session: deactivating %d deactivated %d
Notice: Deactivate quick payment session: underlying session deactivated
Notice: Internal queue: updating contactless session for pass %@ auto-select VAS passes %@
Notice: Internal queue update contactless session: success %d now activated %d session confirmed %d
Notice: Session queue update contactless session: pass %@ auto-select VAS passes %@ (session %@)
Notice: Using VAS passes when updating contactless session: %@
Notice: Session queue update contactless session: VAS success %d payment success %d session confirmed %d
Notice: Invoking callback for activation: success %d invokeOnSuccess %d contactlessValidity %u pass %@
Notice: Quick payment session: Starting contactless session on session queue
Notice: Was not first in queue; tearing down and invalidating session
Notice: No contactless session; marking as deactivated (error: %@)
Notice: Enabling persistent card emulation
Notice: No contactless session; not yet enabling persistent card emulation
Notice: Authorizing deferred authorization: %d use credential: %d credential: %@
Notice: Quick payment session: updating with current pass and loyalty state
Notice: Quick payment session: did enter field
Notice: Quick payment session: did exit field
Notice: Quick payment session: did fail transaction for AID %@ and pass with unique ID %@
Notice: Quick payment session: Session timed out for AID %@ and pass with unique ID %@
Notice: Ignoring timeout for service mode (should get persistent card emulation event instead)
Notice: Quick payment session: Session failed for AID %@ and pass with unique ID %@
Notice: Quick payment session: Received Start Transaction
Notice: In service mode; ignoring Start Transaction
Notice: Quick payment session: Received activity timeout
Notice: In service mode; ignoring activity timeout
Notice: Quick payment session: Received Finish Transaction
Notice: Handling truth-on-card transit transaction
Notice: Handling transit transaction
Notice: Handling conventional transaction
Notice: Quick payment session: ended persistent card emulation
Notice: Quick payment session: selected payment
Notice: Quick payment session: selected VAS
Notice: Quick payment session: failed deferred authorization
Notice: Quick payment session: has pending server request, sending timeout event
Notice: Transaction: %@ AID: %@ UniqueID: %@ valueAddedServiceTransactions: %@ valueAddedServicePasses: %@ success: %u
Notice: Quick payment session: Loyalty engine configuration changed
Notice: Can determine device location.
Notice: Start updating location
Notice: Event handler fired
Notice: Immediately retrieved location
Notice: Returning provisioning device data without location
Notice: Location did update
Notice: Found candidate location
Notice: Location did fail
Notice: Sync state engine (%@): Sync is necessary.
Notice: Sync engine (%@): No sync necessary.
Notice: Sync state engine (%@): Received state change
Change UUID: %@
Reconciled state hash: %@
Change type: %@
unique ID: %@
sync state item: %@
pass data: %@
base manifest hash for partial update: %@
 remote assets for partial update: %@
Warning: Sync state engine (%@): State change based on backup hash (%@), not reconciled hash (%@); moving backup to reconciled
Notice: Sync state engine (%@): State change processed
Change accepted: %d
Full pass required: %d
Change UUID: %@
New reconciled state: %@
Notice: Sync state engine (%@): Setting new backup and reconciled state
Backup state hash: %@
Reconciled state hash: %@
Notice: Sync state engine (%@): Applying change to pass library
Change UUID: %@
Warning: Sync state engine (%@): Not applying change to reconciled state because we failed to apply it to the pass library
Sync state item: %@
Notice: Sync state engine (%@): Applying change to reconciled state and accepting
Change UUID: %@
Notice: Sync state engine (%@): Not applying change to reconciled state and accepting
Change UUID: %@
Notice: Sync state engine (%@): Not applying change to pass library, but applying to reconciled state and accepting
Change UUID: %@
Notice: Sync state engine (%@): Rejecting change
Change UUID: %@
Warning: Sync state engine (%@): Unrecognized reconciled state hash %@
Notice: Sync state engine (%@): Received state change processed
Change UUID: %@
Accepted: %d
Full pass required: %@
Our candidate change: %@
Notice: Sync state engine (%@): Reconciled state after state change processed: %@
Notice: Sync state engine (%@): Resending change with full pass
Full pass change: %@
Notice: Sync state engine (%@): got request for full pass, but we sent the full pass last time
Notice: Sync state engine (%@): change not being accepted is expected because current library sync state item (%@) no longer matches change sync state item (%@)
Notice: Sync state engine (%@): change not being accepted is unexpected
Current library sync state item: %@
Change sync state item: %@
Error: Candidate change has no unique ID!
Warning: Sync state engine (%@): Did not recognize change UUID (%@) in change state accepted message; candidate change UUID is %@
Notice: Sync state engine (%@): Received reconciled state unrecognized
Reconciled state hash: %@
Pass sync state: %@
Notice: Sync state engine (%@): Received proposed reconciled state
Proposed pass sync state: %@
Notice: Sync state engine (%@): Received proposed reconciled state accepted
Reconciled state hash: %@
Warning: Sync state engine (%@): Did not recognize hash (%@) in reconciled state accepted message; reconciled state hash is %@
Notice: Sync state engine (%@): No state changes to send; settling on reconciled state hash %@.
Notice: Sync state engine (%@): Outgoing change is identical to candidate change except for UUID; changing UUID to match candidate change
Candidate change: %@
Outgoing change: %@
Notice: Sync state engine (%@): Ignoring request to apply pass update with unique ID %@ to local library since the pass is not in our library state: %@
Notice: Sync state engine (%@): Pass has been added/updated in local library also.
Reconciled sync state item: %@
Local library sync state item: %@
Change sync state item: %@
Notice: Sync state engine (%@): local pass has higher sequence counter (%@) than change (%@); not applying change to local library
Notice: Sync state engine (%@): Applying change in the absence of sync state counters
Notice: Sync state engine (%@): Not applying change in the absence of sync state counters
Notice: Sync state engine (%@): Applying change to reconciled state because it matches our library state
Local library sync state item: %@
Change sync state item: %@
Candidate change: %@
Notice: Sync state engine (%@): Not applying change to reconciled state since we are not applying it to the local library and have an outstanding candidate change for pass with unique ID %@: %@
Notice: Sync state engine (%@): Applying change to reconciled state even though we have an outstanding candidate change for pass with unique ID %@: %@
Notice: Sync state engine (%@): Sending state change
Change: %@
Notice: Sync state engine (%@): Sending state change processed
Change UUID: %@
Change accepted: %@
Full pass required: %@
Notice: Sync state engine (%@): Sending reconciled state unrecognized
Reconciled state hash: %@
Pass sync state: %@
Notice: Sync state engine (%@): Sending reconciled state accepted
Reconciled state hash: %@
Notice: Sync state engine (%@): Sending proposed reconciled state
Proposed pass sync state: %@
Notice: Sync state engine (%@): Requesting that delegate add pass to local pass library
Data: %@
Sync state item: %@
Notice: Sync state engine (%@): Delegate invoked add completion
sync state item: %@
added: %d
Notice: Sync state engine (%@): Requesting that delegate update pass in local pass library
Data: %@
Sync state item: %@
Base manifest hash for partial update: %@
Remote assets for partial update: %@
Notice: Sync state engine (%@): Delegate invoked update completion
sync state item: %@
updated: %d
Notice: Sync state engine (%@): Requesting that delegate remove pass in local pass library
unique ID: %@
Notice: Sync state engine (%@): Delegate invoked remove completion
unique ID: %@
removed: %d
Notice: Sync state engine (%@): encountered unexpected event
Notice: Sync state engine (%@): Engine state changed
Notice: Got background image %@ for %@
Notice: Wrote pass data segment
File path: %@
Change UUID: %@
segment index: %u
data: %@
Warning: Missing segment for large pass; unable to return full data
Change UUID: %@
segment index: %u
Warning: Unable to get file handle for large pass; unable to return full data
Change UUID: %@
path: %@
Warning: Returning data for large pass
Change UUID: %@
Number of segments: %u
data: %@
Notice: Splitting pass data into segments
Maximum segment length: %u
data: %@
Notice: Adding pass data segment
data: %@
Warning: No need to split pass data into segments
Maximum segment length: %u
data: %@
Warning: Unable to split nil pass data into segments!
Notice: Got pass data segment segment
File path: %@
Change UUID: %@
segment index: %u
data: %@
Notice: Returning status %@ (service identifier %@). We don't have a peer payment pass setup.
Notice: Using mock SURF server; will return status %@ for transaction with identifier %@
Notice: Returning status %@ for transaction details %@ (service identifier %@)
Notice: Setting new peer payment transaction status %@ for transaction with identifier: %@
Notice: Ignoring new peer payment transaction status %@ for transaction with identifier: %@ transaction: %@
Notice: We are currently looking up actions for transaction with service identifier: %@
Notice: Starting looking up actions for transaction with service identifier: %@
Notice: Finished looking up actions for transaction with service identifier %@: actions %@, status %@
Warning: Error when looking up actions for transaction with service identifier %@: %@
Notice: TransactionManager: transactionSourceIdentifier:%@ didReceiveTransaction:%@
Notice: TransactionManager: did update transaction detail with service Identifier:%@
Notice: Start fetching all peer payment transactions With peer payment pass ID: %@
Notice: New peer payment pass identifier is nil. Removing existing transactions.
Notice: Received %ld transactions for peer payment pass with unique ID %@
Notice: Numeric entry complete; invoking completion handler
Notice: Remote interface presenter connection interrupted
Notice: Remote interface presenter connection invalidated
Notice: Request to present in-app payment interface for host application: %@ payment request: %@
Error: Remote object proxy error handler for present in-app payment interface invoked: %@
Notice: Request to present continuity payment interface for remote payment request: %@
Error: Remote object proxy error handler for present continuity payment interface invoked: %@
Notice: Request to present in-app interface for skeleton peer payment quote: %@
Error: Remote object proxy error handler for present in-app interface for skeleton peer payment quote invoked: %@
Notice: Request to clear skeleton peer payment quote: %@ error: %@
Error: Remote object proxy error handler for clear peer payment quote invoked: %@
Notice: Request to present set up Apple
Pay alert for %@
Error: Remote object proxy error handler for present passcode upgrade request invoked: %@
Error: Remote object proxy error handler for tear down passcode upgrade request invoked: %@
Error: Remote object proxy error handler for present contactless interface upgrade request invoked: %@
Error: %@: Could not execute SQL: %@: [%d, %s]
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "%@" statement)
Notice: Not opening database because we don't have what we need to migrate it
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Couldn't open %@ because of auth failure)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Couldn't open %@ (result %d))
Error: Couldn't set journal mode on database (result %d)
Notice: Solving DB corruption cause by DB v48
Notice: NPKGizmoDatabase: schema applied successfully: %d
Notice: Generating potentially-missing description fields
Error: Database is in a bad state; deleting and recreating
Notice: Gizmo database opened! Broadcasting database changed notification
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare deletion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare pass insertion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare diff insertion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update delete pending" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass diff" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass data" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "insert transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "remove transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "remove transaction with service identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions with source for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions without source for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transaction with service identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "insert transaction source identifier for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transaction source identifier for transaction identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transaction source identifier for transaction service identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "delete transaction source identifier for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "delete transactions for transaction source" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "trim transactions for transaction source" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transit applet state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update transit applet state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "insert ephemeral transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "delete ephemeral transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "current ephemeral transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select last add value amount" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update last add value amount" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pending add value date" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update pending add value date" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select balances state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update balances state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select subcredentials state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update subcredentials state" statement)
Notice: Lazily loading initial manifest
Error: *** CORRUPTED / INVALID PASS DATABASE: Unable to prepare "select pass descriptions" statement; this most likely means you need to delete the database at "%@" and kill %@
Notice: Initial manifest encountered key %@ local %@ remote %@
Notice: Loaded initial manifest: %@
Warning: failed to unarchive: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot save nil pass)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Pass %@ has nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Pass %@ has nil complete hash)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Nil database handle; did you check passDBIsAvailable before calling?)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unique ID %@ is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot remove pass with nil unique ID)
Error: Transaction is not allowed in UI; not inserting transaction %@ for pass: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Transaction is nil)
Error: No transaction source identifier; not inserting transaction %@
Error: Transaction does not have identifier; not inserting %@
Error: Transaction should be suppressed from UI; not inserting %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Transaction Unique ID is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: transaction source cannot not be nil)
Notice: Fetching Volatile Pass Data from DB
Notice: Restoring Volatile Pass Data on DB
Notice: NPKGizmoDatabase already sending DB change, so coalescing
Notice: NPKGizmoDatabase alerting of DB change
Notice: Finished alerting of DB change, but a coalesced change was detected...rebroadcasting
Notice: Alerting external clients of DB change...
Notice: Saving diff %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete failed: %s; %s)
Notice: (PKPaymentBalance restore) restoring old balances for pass %@ %@
Notice: (PKPaymentBalance restore) archiving old balances for pass %@ %@ returned nil
Notice: (PKAppletSubcredential restore) restoring old subcredentials for pass %@ %@
Notice: (PKAppletSubcredential restore) archiving old subcredentials for pass %@ %@ returned nil
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Insert failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Insert transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Trim transactions failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Insert transaction source identifier failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete transaction source identifier failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Updating transit applet state failed: %s; %s)
Notice: Updating description %@ with new transit applet state %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil transaction source identifier)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete ephemeral transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Setting last add value amount failed: %s; %s)
Notice: Updating description %@ with new last add value amount %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Setting pending add value date failed: %s; %s)
Notice: Updating description %@ with new pending add value date %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Updating balances failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Updating subcredentials failed: %s; %s)
Notice: Updating description %@ with new subcredentials %@
Notice: Update transactions table failed for unique ID %@ transaction source identifier %@ result %d
Notice: Update ephemeral transactions table failed for unique ID %@ transaction source identifier %@ result %d
Notice: Insert into transaction source table failed for unique ID %@ transaction source identifier %@ result %d
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Save diff failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: setDeletePending:forUniqueID: can't accept nil uniqueID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Update delete pending failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil payment pass)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ did not contain payment application %@ (has applications = %@))
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Update preferred AID failed: %s; %s)
Notice: Updating description %@ with new preferred payment application %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Received invalid watch OS version %lu)
Notice: Skipping pass with unique ID %@ because it has no remote manifest hashes
Warning: Skipping pass with unique ID %@ from manifest calculation because it is missing manifest hash for this version
Notice: Skipping pass with unique ID %@ from manifest calculation because it has no remote manifest hash
Notice: NPKGizmoDatabase: on-disk version %ld out of date, migrating to current version %ld
Notice: NPKGizmoDatabase: migration success = %d
Notice: NPKGizmoDatabase: on-disk version %ld matches current version
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Invalid pass DB version string: %@)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot save unsupported database version %ld)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to save version number to DB: %ld)
Notice: We were expecting a DB change, so suppressing DB reload
Notice: NPKGizmoDatabase DB changed externally, reloading
Notice: First unlock detected
Notice: Retrying opening database
Notice: Start search column:%@ in table:%@
Notice: found column:%@ in table:%@
Notice: Could not find column:%@ in table:%@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare statement to find column:%@ in table:%@)
Notice: initializing HID client
Error: ButtonController:IOHIDEventSystemClientCreate create failed
Notice: Deferring work until first device unlock
Notice: Sending default shipping address
Notice: Sending default contact email
Notice: Sending default contact phone
Notice: Sending default contact name
Notice: Sending %d default billing addresses
Notice: Decoded default shipping address
Notice: Decoded default contact email
Notice: Decoded default contact phone
Notice: Decoded default contact name
Notice: Decoded %d default billing addresses
Error: Unable to decode billing address: %@
Notice: deallocating NPKWorkQueueItem:%p, %@ has %lu remaining work items.
Notice: Work queue %@: ended work block
Notice: ending XPC transaction for work
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: NPKWorkQueue was performing work, but somehow self.performingWork was NO)
Notice: Work queue %@: starting next work block
Notice: taking out XPC transaction for work
Notice: Got express passes changed notification in express pass controller
Warning: Accepting new express status because express transit pass changed from %@ to %@.
Notice: Accepting new express status because it is greater than the previous express status.
Notice: Accepting reset of express status.
Notice: %@ transition from status %@ to %@
Notice: %@ Start listening for express notifications
Notice: %@ Stop listening for express notifications
Notice: Received Enter Near Field Notification for automatic selection technology type %d
Notice: More than one express pass for this technology type: %@
Error: Received Enter Near Field Notification, but no express pass information: %@
Notice: Technology type: %ld detected. Express passes information: %@
Warning: More than one express payment application identifier for a transit pass! This isn't supported.
Notice: Received Express Transaction Start Notification for application identifier: %@, application key identifier: %@
Notice: Received Express Transaction Time Out Notification for application identifier %@
Notice: Received Express Transaction End Notification for application identifier %@
Notice: Received Express Transaction Failed Notification for application identifier %@
Error: Received Express Transaction Started Notification for application identifier %@, but no pass.
Error: Received Express Transaction Ended Notification for application identifier %@, but no pass.
Error: Received Express Transaction Failed Notification for application identifier %@, but no pass.
Notice: Received Exit Near Field Notification for automatic selection technology type %d
Notice: Received Library Passes Changed Notification %@
Notice: Transaction application identifier: %@, express pass information %@, express pass unique ID %@
Notice: Updating current express passes with new information: %@ (previous: %@)
Notice: fetch pass %@ Unique Identifier %@ for express pass information %@
Error: Express pass controller could not find pass for express pass information: %@
Notice: Found technology type %@ sibling express pass %@
Warning: Expected to be provided a notification object, but instead found nil!
Notice: Starting field detector for terminal-requested auth
Warning: Multiple express passes match TCIs for transient authentication required field detect event
Warning: Got on-device authentication required for unique ID %@, but no express pass!
Warning: No express passes match TCIs for transient authentication required field detect event
Notice: Using overridden peer payment service url '%@' for registration.
Notice: Local authentication coordinator: begin local authentication
Notice: Local authentication coordinator: existing completion handler
Notice: Local authentication coordinator: already-completed context
Notice: Local authentication coordinator: in-progress context
Notice: Local authentication coordinator: created new context
Notice: Local authentication coordinator: evaluating asynchronously
Notice: Local authentication coordinator: evaluating synchronously
Notice: LocalAuthentication UI ***** %@ %@ ***** - event: %@ params: %@
Notice: Local authentication coordinator: have completion handler for evaluate policy
Notice: Local authentication coordinator: no completion handler for evaluate policy
Notice: Activating local authentication event %ld
Notice: Deactivating local authentication event %ld
Notice: setCredential for %@ returned %@
Notice: Cancelling local authentication
Warning: Ignoring invalid pass image size %@
Warning: Ignoring invalid pass thumbnail image size %@
Notice: Cleanup delegate got session complete for reason %d with transaction %@ and transit history %@ for unique ID %@
Notice: Cleanup delegate got transaction completed with transaction %@ and transit history %@ for unique ID %@
Notice: NPKPassAssociatedInfoModel: Missing data from balance:%@ localizedTitle:%@ formattedValue:%@
Notice: NPKPassAssociatedInfoModel: detected duplicated commute plan identifier:%@. making it unique:%@
Notice: NPKPassAssociatedInfoModel: Using default balance value 0 for field:%@ balance:%@
Notice: NPKPassAssociatedInfoModel: fail to create formatted value for field:%@ balance:%@
Notice: NPKTransitBalanceModel: has Shinkansen ticket:%d
Notice: NPKTransitBalanceModel: has Green Car ticket ticket:%d
Notice: NPKPassAssociatedInfoModel: fetching action type:%@ with identifier:%@
Notice: NPKPassAssociatedInfoModel: fail to find action type:%@ with identifier:%@
Notice: NPKPassAssociatedInfoModel: action type:%@ relevant:%@ select:%@ enter:%@
Notice: Loading web service context
Notice: Loading peer payment web service context
Notice: Loading peer payment account
Notice: Device unpaired
Notice: Active watch changed
Notice: Shared web service provider loading web service
Notice: Shared web service provider instantiated web service
Notice: Shared web service provider updated web service context
Error: No web service context from daemon; starting fresh!
Error: No peer payment web service context from daemon; starting fresh!
Error: No peer payment web service account from daemon
Notice: Device failed to pair: %@
Error: Should not be receiving precondition not met messages from Bridge (%@)
Error: Should not be receiving payment transactions from Bridge (%@ %@ %@)
Error: Should not be receiving applet state from Bridge (%@ %@)
Error: Should not be receiving remove transactions from Bridge (%@)
Error: Should not be receiving balance update from Bridge (%@ %@)
Error: Should not be receiving balance reminder update from Bridge (%@ %@ %@)
Error: Should not be receiving credentials update from Bridge (%@ %@)
Error: Should not be receiving update payment pass requests from Bridge (%@)
Error: Should not be receiving preferred AID updates from Bridge (%@)
Notice: Archive web service context: %@
Error: Should not be archiving web service background context from Bridge
Error: Should not be receiving web service context from watch from Bridge
Notice: Shared web service provider: Sending web service context to watch
Error: Should not be receiving show payment setup requests from Bridge
Error: Should not be receiving send payment options defaults requests from Bridge
Error: Should not be receiving updated peer payment web service context from Bridge
Error: Should not be receiving download all payment passes from Bridge
Error: Should not be receiving check companion peer payment registration state from Bridge
Notice: Telling daemon to archive peer payment web service context
Notice: %@: %@ begin
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %@: %@ was not invalidated prior to deallocation)
Notice: %@: %@ invalidated
Warning: %@: %@ was already invalidated
Notice: Set new conversation:%@ sender address:%@ recipient addresses:%@
Notice: Requested Lookup recipient Information if necessary
Notice: We already have a current peer payment controller. Resetting.
Notice: perform Payment with amount:%@ requestToken:%@, recipient:%@, sender:%@
Notice: Send and receive currencies match. Showing skeleton peer payment quote
Notice: Send and receive currencies differ (%@ vs %@). Not using skeleton peer payment quote.
Notice: Finish perform Payment with amount:%@ requestToken:%@, conversation:%@ response:%@, error:%@ success:%d
Notice: Not performing payment because we are no longer the current peer payment controller (current %@ vs ours %@)
Error: Error fetching quote: %@
Error: Could not identify recipient %@ with error %@
Notice: Currently performing a look up for given recipient address:%@
Notice: We already lookup for recipient with address:%@ recipient:%@
Notice: Start lookup recipient information with with recipientAddress:%@ senderAddress:%@
Notice: Finish lookup information with recipient:%@ status:%@
Notice: Will not lookup recipient information with nil recipient Address
Notice: Forcing recipient lookup (conversation %@ current recipient %@)
Notice: perform Request with amount:%@, recipient:%@, sender:%@
Notice: Finish perform request with amount:%@ requestToken:%@, conversation:%@ requestToken:%@, error:%@ success:%d
Error: Could not identify request recipient %@ with error %@
Notice: %@: post Recipient Updated Notification notification
Notice: Reader mode entry is disabled because transit product lacks reader mode provisioning method
Notice: Reader mode entry is disabled for typeF product as a local Felica secure element is not available
Notice: Reader mode terms accepted
Notice: Card ingestion status: %lu
Notice: %s:%@ (resetProvisioning: %d, isRecoverable: %d)
Warning: Warning! Attempted to ingestCard: while currently ingesting
Warning: Warning! attempting to ingestCardWithCardSessionToken: while currently ingesting
Notice: Malformed reader mode resources - missing card image urls
Notice: TransitPassInfoManager: received pending add value updated notification
Notice: TransitPassInfoManager: setting Passes:%@ to:%@
Notice: TransitPassInfoManager: Ignore non-transit pass with uniqueID:%@ to:%@
Notice: TransitPassInfoManager: Adding pass with uniqueID:%@ to:%@
Notice: TransitPassInfoManager: setPendingAmount:%@ forBalanceField:%@ passWithUniqueID:%@
Notice: TransitPassInfoManager: Requested refresh all pass Balance
Notice: TransitPassInfoManager: Updating refresh balance for with uniqueID:%@
Notice: TransitPassInfoManager: didReceiveBalanceUpdate %@ for pass uniqueID %@
Notice: TransitPassInfoManager: pass with uniqueID:%@ has add value pending
Notice: TransitPassInfoManager: didUpdateWithTransitPassProperties:%@ for pass uniqueID:%@
Notice: Refreshing all associated pass info following re-establishment of connection
Notice: TransitPassInfoManager: transit pass model did change from:%@ to:%@
Notice: TransitPassInfoManager: Requested fetch most recent balances for pass with unique ID %@
Notice: TransitPassInfoManager: received most recent balances %@ for pass with unique ID %@
Notice: TransitPassInfoManager: Requested fetch most recent transit pass properties for pass with unique ID %@ payment application %@
Notice: TransitPassInfoManager: Received most recent transit pass properties: %@ for pass with unique ID %@ payment application %@
Notice: TransitPassInfoManager: Requested to update transit balance model for pass unique ID %@
Notice: TransitPassInfoManager: did not update transit balance model for pass uniqueID:%@.
Notice: Express mode settings coordinator: Received request to enable express for %@
Notice: Express mode settings coordinator: Received request to disable express for %@
Notice: Express mode settings coordinator: Checking for conflicts when enabling express for %@
Notice: Express mode settings coordinator: Requesting user authentication for %@
Notice: Express mode settings coordinator: Handling successful user authentication for %@
Notice: Express mode settings coordinator: Upgrading express for %@
Notice: Express mode settings coordinator: Enabling express for %@
Notice: Express mode settings coordinator: Operation completed successfully for %@
Notice: Express mode operation completed with success: %d
Notice: Active accounts changed: %@
Notice: Devices changed: %@
Error: Incoming unhandled protobuf: %@ %@ %@ %@ %@
Notice: Service sent with success: %@ %@ %@ %d %@
Notice: identifier %@ request %@ error handler %@
Notice: Noting that provisioning began
Notice: Noting that provisioning ended
Notice: Starting background verification observer for %@ with verification method %@
Notice: Noting foreground verification observer active: %d
Notice: Noting that the provisioning UI appeared
Notice: error %@ assertion %@
Notice: Noting that the provisioning UI disappeared
Notice: Archiving web service context: %@
Notice: Archiving web service background context: %@
Notice: Payment web service has passes of type %lu? %d
Notice: Can provision payment pass with primary account identifier %@
Warning: Web service configuration failed (%@). Continuing preflight anyway.
Notice: incoming protobuf %@
Warning: got response with no associated message handler
Error: No associated message ID in response
Warning: No response identifier for message with identifier %@
Error: No message identifier for protobuf %@
Notice: Pairing info response: set auth random %d
Notice: Device is pre-Daytona; not sending pairing info request
Warning: Device is not Fortune or later; falling back to previous auth random setting logic.
Notice: Setting auth random
Notice: Not necessary to set auth random; returning pairing state
Notice: currentlyPairing %d
Notice: Do not need to set auth random from PassKit request; returning pairing info
Notice: Got balance update for unique ID %@ with %u balances
Notice: Handling balance update %@ for unique ID %@
Notice: Push token from gizmo is %@
Error: Received nil SE registration data!
Notice: Fetcher %@ fetched location %@
Notice: Fetched provisioning data %@
Notice: Got provisioning error %@
Notice: Device provisioning data:
device name is %s
phone number is %s
location is %s
Notice: Requested Trusted Device Enrollment Info for WebService: %@
Notice: Request to sign data of length %lu with signature entanglement mode %d
Notice: Falling back to pre-Daytona signing method
Notice: Request to sign data of length %lu
Notice: did register with region map %@ (primary topic %@)
Notice: completed %d %@
Notice: error %@
Notice: Payment web service updated configuration: %@
Notice: region %@ support %d
Notice: Unsupported OS version for feature with type %ld
Notice: No feature of type %ld found
Notice: No feature of type %ld found - device not registered
Notice: Delete application with AID %@
Notice: Delete AID %@ completed %d %@
Notice: Add payment pass: %@
Notice: finished %d progress %f error %@
Notice: Redownloading all payment passes as requested by web service %@
Notice: Redownload of all payment passes complete as requested by web service %@
Error: Returned card protobuf does not have matching array lengths (%u %u %u)!
Notice: Handle pending removal of pass %@ with unique ID %@
Notice: Requesting deletion of AID %@
Warning: No response expected for message with identifier %@
Notice: unique ID %@ AID %@
Notice: Handle preferred AID %@ for unique ID %@
Notice: Incoming update payment pass protobuf: %@
Notice: Incoming update push token protobuf: %@
Notice: Precondition not met: %d unique IDs %@ should unregister %d
Notice: %u transactions
Error: VAS transaction protobuf does not have matching array lengths (%u %u)!
Notice: pass %@ has valid payload %d
Notice: Scheduling automatic presentation notification for unique ID %@
Notice: Automatic presentation notification scheduled for unique ID %@: %d
Error: Payment transaction protobuf does not have matching array lengths (%u %u)!
Notice: Transaction: %@ for unique ID %@
Error: Applet state protobuf does not have matching array lengths (%u %u)!
Notice: Will handle Transactions: %@ appletStates: %@ for uniqueIDs:%@
Notice: Request to remove transactions with identfiers: %@
Notice: Retrieving transactions for unique ID %@
Notice: Received updated applet state for pass with unique ID %@
Notice: Decoded applet state: %@
Notice: Target device: set express mode: %@ unique ID %@, AID %@, request authorization %d
Notice: remove express passes with card type: incoming protobuf %@
Notice: Target device: remove express passes with card type: %@
Notice: remove express pass with unique identifier: incoming protobuf %@
Notice: Target device: remove express pass with unique ID: %@
Notice: Target device: conflicting express pass identifiers with passInfo %@, referenceExpressPassesInformation:%@
Notice: conflicting express pass identifiers incoming protobuf %@
Notice: Target device: Received conflictingPassesUniqueIDs:%@ conflictingReferencePassIdentifier:%@
Notice: Handling balance reminder update %@ for balance %@ unique ID %@
Notice: set balance reminder incoming protobuf %@
Notice: Target device: setting balance reminder %@ for balance %@ with passInfo %@
Notice: balance reminder incoming protobuf %@
Notice: Target device: getting balance reminder for balance %@ with passInfo %@
Notice: set commute plan reminder incoming protobuf %@
Notice: Target device: setting commute plan reminder %@ for pass %@
Notice: commute plan reminder incoming protobuf %@
Notice: Target device: getting commute plan reminder for commute plan:%@ pass %@
Notice: Sending message to cancel outstanding set default express pass requests with mode: %@
Notice: Target device: enable service mode for unique ID %@
Notice: Ignoring set enable express transit request to pre-Daytona watch
Notice: Sending message to cancel outstanding service mode requests
Notice: Remote update pass. Received response:%@
Error: Remote update pass. No associated message ID in response
Warning: Remote update pass. Got response with no associated message handler
Notice: Remote update pass with uniqueID:%@. Sending message
Error: Remote update pass with uniqueID:%@. No message identifier for protobuf %@
Notice: Sending message to cancel outstanding remote pass Update Reques for pass UniqueID:%@
Notice: Peer payment register: incoming protobuf %@
Notice: Peer payment register with URL %@ forceReRegistration %i
Notice: Target device peer payment unregister: incoming protobuf %@
Notice: Target device peer payment unregister
Notice: Target device provision peer payment pass: incoming protobuf %@
Notice: Target device provision peer payment pass
Notice: Target device update peer payment account: incoming protobuf %@
Notice: Target device update peer payment account with completion
Notice: Target device update peer payment preferences: incoming protobuf %@
Notice: got pending response for update peer payment preferences.
Notice: Target device set peer payment preferences with completion
Notice: Requested to Open URL
Notice: Filed radar with request:%@  error:%@
Warning: Failed to open URL:%@
Notice: Companion received handlePeerPaymentTermsAndConditionsAcceptanceRequest: message
Notice: (account-pass-provisioning) Companion received handleDeviceUnlockedForPendingProvisioningRequest: message
Notice: Payment web service supports accounts = %d, hasAccount: %d, regionEnabled: %d, hasURL: %d
Notice: Payment web service supports accounts = %d, webService needs registration
Notice: (account-pass-provisioning) Target device updatedAccountsForProvisioningWithCompletion
Notice: (account-pass-provisioning) performing accountsWithRequest
Notice: (account-pass-provisioning) error executing accountsWithRequest %@
Notice: (account-pass-provisioning) context %@ primaryRegion %@ accountServiceURL %@
(account-pass-provisioning) Account: %@ with state: %@ does not allow provisioning and will not be offered
(account-pass-provisioning) Account: %@ with state: %@ is on device
(account-pass-provisioning) Account: %@ with state: %@ is valid for provisioning
(account-pass-provisioning) Account: %@ with state: %@ is not valid for provisioning
Notice: (account-pass-provisioning)updatedAccountsForProvisioningWithCompletion found %lu accounts requiring provision and %lu on device 
Notice: Target deviceMetadataWithFields (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: deviceMetadataWithFields
Notice: Target device deviceMetadataWithFields: %lu
Notice: Target device supportedFeatureIdentifiersWithPaymentWebService
Notice: Payment web service supports apply service: %d, hasApplications: %d, hasAccounts: %d, regionEnabled: %d, hasURL: %d
Notice: Device supported feature identifiers: %@
Notice: NRDevicePropertySupportedFeatureIdentifiers returned a nil set
Notice: Config supported feature identifiers: %@
Notice: Final supported feature identifiers: %@
Notice: primary region: %@
Notice: (account-pass-provisioning) Target device supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService
Notice: (account-pass-provisioning) Payment web service supports account service: %@ accountServiceURL %@
Notice: (account-pass-provisioning) Device supported feature identifiers: %@
Notice: (account-pass-provisioning) NRDevicePropertySupportedFeatureIdentifiers returned a nil set
Notice: (account-pass-provisioning) Target updateAccountWithIdentifier (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: updateAccountWithIdentifier
Notice: (account-pass-provisioning) Target device updateAccountWithIdentifier: %@
(account-pass-feature-check) watchOSVersion %@ does not support Apple card capability. Removing from features %@
(account-pass-feature-check) watchOSVersion %@ does support Apple card capability.
Notice: (account-pass-provisioning) Target performDeviceCheckInResponse (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: performDeviceCheckInResponse
Notice: (account-pass-provisioning) Target device performDeviceCheckInWithCompletion, Apple Card support %@
(account-pass-feature-check) watchOSVersion %@ does not support Apple card capability.
Notice: (account-pass-provisioning) Target availableProductsResponse (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: availableProductsResponse
Notice: (account-pass-provisioning) calling completion for availableProductsWithCompletion %@ (%@) %@
Notice: (account-pass-provisioning) Target device availableProductsWithCompletion, Apple Card support %@
(account-pass-feature-check) watchOSVersion %@ does not implement availableProductsWithCompletion, getting products from web service
Notice: (account-pass-provisioning) availableProductsWithRequest returned %@ %@
Notice: (account-pass-provisioning) Target performProductActionResponse (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: performProductActionResponse
Notice: (account-pass-provisioning) calling completion for performProductActionRequest %@ (%@) %@
Notice: (account-pass-provisioning) Target device performProductActionRequest %@
Notice: (account-pass-provisioning) Target device setDefaultPaymentPassUniqueIdentifier: %@
Notice: (account-pass-provisioning) completion of setDefaultCardUniqueID %@ resulted in success = %@
Notice: Target device initialize cloud store if necessary: incoming protobuf %@
Notice: Target device initialize cloud store if necessary
Notice: Target device initialize cloud store if necessary with handler: incoming protobuf %@
Notice: Target device initialize cloud store if necessary with handler
Notice: Target device check TLKs missing: incoming protobuf %@
Notice: Target device check TLK missing
Notice: Target device reset Apple Pay manetee view: incoming protobuf %@
Notice: Target device reset Apple Pay manatee view
Notice: Target device cloud store status: incoming protobuf %@
Notice: Target device cloud store status
Notice: Target device download all payment passes: incoming protobuf %@
Notice: Target device check companion peer payment registration state: incoming protobuf %@
Notice: Target device: missing complition block will not handling potential express pass %@
Notice: Target device: handling potential express pass %@
Notice: Target device: found at updated pass with primary payment application:%@ express pass information:%@
Notice: Target device: found at given pass with primary payment application:%@ express pass information:%@
Notice: passupgrade request:%@ express pass information:%@ for uniqueID:%@
Notice: Not setting pass as express because of nil express pass information
Notice: Express passes information to use as reference:%@ from local DB
Notice: Cheking Conflicting reference passes
Notice: Found conflicting category:%@ for pass with unique ID:%@
Notice: Found peer payment pass with uniqueID:%@ conflicting with new pass. Will ignore it
Notice: Conflicting reference passes doesn't belong to the same express category:%@. Will handle potential express pass with unique ID %@
Notice: express pases setup in express mode:%@ conflict with givent pass. Will not set in express mode pass with uniqueID:%@
Notice: Not conflicting express passes found. Will handle potential express pass with unique ID %@
Notice: Target Device: handle potential express pass received Remote pass upgrade updated for  pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@
Notice: Expected to be able to get express pass from updated pass but fail. Using current express pass information:%@
Notice: did finish handle potential express pass with result %lu, current express passes information: %@
Notice: Target device: legacy handling potential express pass %@
Notice: Current existing express pass information count:%lu
Notice: Inconsistency found. express pass information with Pass uniqueID: %@ match potential express pass uniqueID, we will ignore it from the current express pass information
Notice: Inconsistency found. Pass with uniqueID: %@ not found in the DB, we will ignore it from the current express pass information
Notice: filtered existing express pass information count:%lu
Notice: Not setting pass as express due to existing express pass with unique ID %@
Notice: Will handle potential express pass with unique ID %@
Notice: Could not handle protential express pass with unique ID %@.
Notice: Target device: can handle potential express pass %@
Notice: Target device: missing completion block will not check if can handle potential express pass %@
Notice: Target device doesn't support Multiple express passes, we will not handle this call.
Notice: SPI not available. Can't create dummy express pass information for pass with uniqueID:%@
Notice: Sending updated payment options defaults to watch
Error: Failed to send updated payment options defaults to watch %@!
Notice: Sent updated payment options defaults to watch with message ID %@
Warning: Not sending unregistered web service context to watch (%@) while companion migration is needed
Warning: Not sending invalid web service context to watch (%@)
Notice: (account-pass-context) Sending web service context to watch: %@ applyServiceURL %@ primaryRegion %@
Error: Failed to send web service context to watch %@!
Notice: Sent web service context to watch with message ID %@
Notice: Telling watch to handle companion migration
Notice: Sent companion migration event to watch with message ID %@
Notice: Sending companion peer payment registration event to watch
Error: Failed to send companion peer payment registration event to watch %@!
Notice: Sent companion peer payment registration event to watch with message ID %@
Notice: Sending companion iCloud signout event to watch
Error: Failed to send iCloud signout event to watch %@!
Notice: Sent companion iCloud signout event to watch with message ID %@
Notice: Got updated web service context from watch: %@
Notice: (account-pass-context) received updated web service context applyServiceURL %@ primaryRegion %@
Notice: Watch requested web service context
Notice: Watch requested that we show payment setup for app %@
Notice: Watch requested transaction defaults
Notice: Watch provided updated peer payment context and account
Warning: Got updated peer payment web service message, but could not decode context
Notice: Target Device: Received Remote pass upgrade updated for  pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@
Notice: Target device enforceUpgradedPasscodePolicyWithCompletion
Notice: Supports inline passcode policy enforcement: %@
Notice: Cannot enforce passcode policy on an unsupported OS. Advancing the flow by indicating that the device meets the policy.
Notice: Target enforceUpgradedPasscodePolicyWithCompletion: incoming protobuf %@
Notice: Target device applyPasscodeRestrictionsRequest
Warning: Failed to apply passcode restrictions.
Notice: Cannot apply passcode restrictions on an unsupported OS. Advancing the flow by indicating that all is well.
Notice: Target applyPasscodeRestrictionsResponse: incoming protobuf %@
Notice: Calling completion with success: %@ error: %@
Notice: Target handlePasscodeUpgradeFlowShouldExitRequest: incoming protobuf %@
Notice: Request to exit passcode change flow with passcode changed: %ld error: %@
Notice: Noting that provisioning did start requiring upgraded passcode
Notice: Noting that provisioning did end requiring upgraded passcode
Notice: Target device - can accept invitation request with invitation: %@ completion: %@
Notice: Gizmo is not connected!
Notice: Target device does not support subcredential provisioning.
Notice: Target canAcceptInvitationResponse: incoming protobuf %@
Notice: Target device - subcredential invitations request
Notice: Target subcredentialInvitationsResponse: incoming protobuf %@
Notice: Target device - accept subcredential invitation request
Notice: Target acceptSubcredentialInvitationResponse: incoming protobuf %@
Notice: Target device - matching invitation on device request
Notice: Target matchingCredentialOnDeviceResponse: incoming protobuf %@
Notice: Target handleSubcredentialProvisioningRequest: incoming protobuf %@
Notice: %{public}@: Received handle provisioning request with invitation: %@ metadata: %@
Notice: %{public}@: Subcredential provisioning for invitation: %@ completed with pass: %@ error %@
Notice: Target device - account attestation anonymization salt request with completion: %@
Error: %@
Notice: Target accountAttestationAnonymizationSaltResponse: incoming protobuf %@
Notice: Target device - received account attestation anonymization salt request: %@
Notice: Target device - set account attestation anonymization salt request with completion: %@
Notice: Target setAccountAttestationAnonymizationSaltResponse: incoming protobuf %@
Notice: Target device - request subcredential invitation %@ with completion %@
Notice: Target requestSubcredentialInvitationResponse: incoming protobuf %@
Notice: Target device - update metadata on pass %@ with credential %@ completion %@
Notice: Target updateSubcredentialMetadataResponse: incoming protobuf %@
Notice: Target device - register credentials with identifiers %@
Notice: Target registerCredentialsResponse: incoming protobuf %@
Notice: Target device - revoke credentials with identifiers %@ completion %@
Notice: Target revokeCredentialsResponse: incoming protobuf %@
Notice: Target device - remove sharing invitation %@ with completion %@
Notice: Target removeSharingInvitationResponse: incoming protobuf %@
Notice: Target handleCredentialsChange: incoming protobuf %@
Notice: Got credentials update for unique ID %@ with %u credentials
Notice: Handling credentials update %@ for unique ID %@
Notice: Target device - decline related invitations if necessary for invitation %@ with completion %@
Notice: Target device - received decline related sharing invitations if necessary request: %@
Notice: Target declineRelatedSharingInvitationsIfNecessaryResponse: incoming protobuf %@
Notice: Requesting automatic provisioning for companion payment pass with unique ID: %@
Notice: Target Device willPassWithUniqueIdentifierAutomaticallyBecomeDefault for %@ returns %@
Notice: Target familyMembersResponse: incoming protobuf %@
Notice: Family members. Sending message
Notice: Target photosForFamilyMembersWithDSIDsResponse: incoming protobuf %@
Notice: Photos for family members with IDs %@. Sending message
Notice: Acquiring assertion of type:%lu
Notice: Invalidating assertion of type:%lu UUID:%@
Warning: We don't have any assertion to invalidate
Notice: Successfully wrote CPBitmap to %@
Notice: Successfully read CPBitmap from %@
Warning: Array of bitmaps read from %@ is not of size 1
Warning: Unable to read CPBitmap from %@: %@
Warning: Unable to write CPBitmap to %@: %@
Notice: Resizing image %@ from %f x %f to %f x %f to fit/cover %f x %f
Notice: Resizing image %@ from %f x %f to fit/cover %f x %f would upscale, ignoring
Notice: New NPKCompanionAgentConnection created: %@
Notice: NPKCompanionAgentConnection deallocating: %@
Notice: NPKCompanionAgentConnection (%@): Server payment passes changed
Notice: NPKCompanionAgentConnection (%@): default card changed
Notice: Card on Felica secure element cannot be transferred to non-Felica watch
Notice: NPKCompanionAgentConnection (%@): Request to determine if we should show the watch offer for %@ (have paired watch %d can be transferred %d)
Notice: Should show watch offer: supported in region %d hasPassOnWatchMatchingUniqueID %d hasMaximumPassesOnWatch %d hasPassOnWatchMatchingPairedTerminalIdentifier %d
Notice: NPKCompanionAgentConnection (%@): Note watch offer shown for %@
Notice: NPKCompanionAgentConnection (%@): Requesting that provisioning begin from watch offer for %@
Notice: NPKCompanionAgentConnection (%@): (account-pass-provisioning) handleDeviceUnlockedForPendingProvisioningRequestFromGizmo
Notice: NPKCompanionAgentConnection (account-pass-provisioning) (%@): provisionPassForAccountIdentifier %@ makeDefault %@
Notice: NPKCompanionAgentConnection (%@): Requesting registration of paired device
Notice: NPKCompanionAgentConnection (%@): Note provisioning preflight complete with success %d error %@
Notice: NPKCompanionAgentConnection (%@): Client requested payment pass unique IDs synchronous:%d
Notice: NPKCompanionAgentConnection (%@): Reply with unique IDs: %@
Notice: NPKCompanionAgentConnection (%@): found cached unique IDs
Notice: NPKCompanionAgentConnection (%@): No cached unique IDs available; requesting from daemon
Notice: NPKCompanionAgentConnection (%@): Requesting payment pass with unique ID %@ from daemon
Notice: NPKCompanionAgentConnection (%@): Reply with payment pass: %@
Notice: NPKCompanionAgentConnection (%@): found cached payment pass: %@
Notice: NPKCompanionAgentConnection (%@): Reply with newly-fetched payment pass: %@
Notice: NPKCompanionAgentConnection (%@): Requesting payment passes with FPANID %@
Notice: NPKCompanionAgentConnection (%@): Requesting payment pass with DPANID %@
Notice: NPKCompanionAgentConnection (%@): Requesting payment pass with paired terminal identifier %@
Notice: NPKCompanionAgentConnection (%@): Requesting credentialed pass unique identifiers. synchronous: %@
Notice: NPKCompanionAgentConnection (%@): Requesting save of payment pass with unique ID %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ has data accessor %@)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ had nil file URL)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ had nil uniqueID)
Error: Unable to copy file from %@ to %@
Notice: Success, deleting temporary pass file %@
Notice: For current device; posting notification
Notice: Request to remove payment pass with unique ID %@
Notice: NPKCompanionAgentConnection (%@): Request to set default card with unique ID %@
Notice: NPKCompanionAgentConnection (%@): Fetching default card unique ID
Notice: NPKCompanionAgentConnection (%@): Checking if pass will automatically become default %@
Notice: NPKCompanionAgentConnection (%@): Fetching default payment application for pass with unique ID %@
Notice: NPKCompanionAgentConnection (%@): Setting default payment application for unique ID %@: %@
Notice: NPKCompanionAgentConnection (%@): Requesting consistency check
Notice: NPKCompanionAgentConnection (%@): Requesting redownload all payment passes
Notice: NPKCompanionAgentConnection (%@): Sending pending unpairing request
Notice: NPKCompanionAgentConnection (%@): Sending pending iCloud signout request
Notice: NPKCompanionAgentConnection (%@): handlePeerPaymentTermsAndConditionsRequestFromGizmo
Notice: NPKCompanionAgentConnection (%@): Request to delete from device with pairing ID: %@ Transaction with Identifier: %@
Notice: Error while creating connection to delete transaction with Identifier: %@. Error: %@
Error: Error while creating connection to get balance reminder for Pass Unique Identifier: %@. Error: %@
Error: Error while creating connection to set balance reminder for Pass Unique Identifier: %@. Error: %@
Error: Error while creating connection to get commute plan reminder for Pass Unique Identifier: %@. Error: %@
Error: Error while creating connection to set commute plan reminder for Pass Unique Identifier: %@. Error: %@
Error: Error while creating connection to start background verification for pass unique identifier: %@. Error: %@
Error: Error while creating connection to note foreground verification observation active: %d. Error: %@
Error: Error while creating connection to check if we can add secure element pass with configuration: %@. Error: %@
Warning: TrustedDeviceEnrollmentInfo ignore request. handler not provided
Notice: Requested gizmo trusted device enrollment signature
Error: TrustedDeviceEnrollmentInfo: Error connecting to gizmo target device.
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: -[NPKCompanionAgentConnection _remoteObjectProxySynchronise:withFailureHandler:] (synchronous:%d) would have returned nil)
Error: Error on NPKCompanionAgentConnection connection: %@
Notice: Setting screen scale for pass with unique ID %@ to %.2f
Notice: Should show Apple Pay settings: %s (supported in region %d hasPaymentPasses %d)
Notice: NPKCompanionAgentConnection (%@): Failed to fetch active tinker family member due to: %@
Notice: Should show Apple Pay settings for Tinker: %s (hasPeerPaymentAccount: %d, hasPaymentPasses %d, isPeerPaymentSupportedInRegion: %d, isTinkerMemberAdult: %d)
Notice: NPKCompanionAgentConnection (%@): Payment pass did enable transaction service: %@
Notice: NPKCompanionAgentConnection (%@): Transaction source identifier did receive transaction: %@ transaction %@
Notice: NPKCompanionAgentConnection (%@): Transaction source identifier did remove transaction: %@, transaction %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did update transit pass properties: %@, properties %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did update balances: %@, balances %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did update balance reminder: %@, reminder %@, balance %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did update credentials: %@, credentials %@
Notice: NPKCompanionAgentConnection (%@): Payment pass with uniqueID:%@ did enable message service:%d
Notice: NPKCompanionAgentConnection app %@ is on gizmo %@
Notice: NPKCompanionAgentConnection %@ show watch extension installation prompt for %@ - hasCompanionApplication: %d, hasWatchApplication: %d.
Notice: NPKCompanionAgentConnection should NOT show watch extension installation prompt for %@ because it doens't support barcodePayment.
Notice: NPKCompanionAgentConnection beginning fetching watch app bundleID for %@
Notice: NPKCompanionAgentConnection beginning install of %@
Notice: NPKCompanionAgentConnection ended install of %@ %li %@
Notice: NPKCompanionAgentConnection failed to find watch app bundleID for %@
Notice: NPKCompanionAgentConnection (%@): Fetching pending app redirect url for pass %@
Notice: NPKCompanionAgentConnection (%@): Marking pending transaction as processed for pass %@
Notice: NPKCompanionAgentConnection (%@): XPC connection to daemon was interrupted
Notice: [BarcodePayment] New barcode session created for pass: %@
Notice: [BarcodePayment] %@ session started!
Notice: [BarcodePayment] %@ session retried!
Notice: [BarcodePayment] %@ session invalidated!
Notice: [BarcodePayment] PKPaymentTransaction %@ user intention confirmation step up result: %@, error: %@
Notice: [BarcodePayment] Failed to encrypt PIN for pass %@ with error %@
Notice: [BarcodePayment] PKPaymentTransaction %@ pin step up result: %@, error: %@
Notice: [BarcodePayment] Ignoring transaction update while submitting authentication result. %@
Notice: [BarcodePayment] Start fetching decrypted barcode with credential: %@
Notice: [BarcodePayment] Fetched barcode with identifier: %@
Error: [BarcodePayment] Failed to fetch barcode due to: %@
Notice: [BarcodePayment] Starting to collect payment information for pass %@
Notice: [BarcodePayment] Acquired process assertion for barcode payment event for %d.
Error: [BarcodePayment] Failed to acquire process assertion for barcode payment event: %d.
Notice: [BarcodePayment] Invalidated process assertion for barcode payment event.
Notice: [BarcodePayment] Submitting barcodePaymentEvent %@ for %@
Notice: [BarcodePayment] BarcodePaymentEvent already submitted for %@. Skipping.
Notice: [BarcodePayment] Local extension %@ is now collecting payment information for pass %@
Error: [BarcodePayment] Local extension %@ for pass %@ failed to collect payment information with error %@
Notice: [BarcodePayment] Local extension timed out for pass %@
Notice: [BarcodePayment] Extension doesn't exist locally. Invoking remote extension on paired device.
Error: [BarcodePayment] Remote extension failed with error: %@
Error: [BarcodePayment] Remote extension timed out.
Error: [BarcodePayment] Failed to begin payment information event extension for pass %@ with error %@
Notice: [BarcodePayment] Updating barcode state from %@ to %@
Notice: [BarcodePayment] Barcode state didn't change.
Notice: [BarcodePayment] PKPaymentTransaction %@ status is pending with authentication request %@.
Notice: [BarcodePayment] PKPaymentTransaction %@ status is pending without valid authentication context. Skipping.
Notice: [BarcodePayment] PKPaymentTransaction %@ status %@ is not relevant. Skipping.
Notice: [BarcodePayment] Session status is updated to %lu with transaction %@.
Notice: [BarcodePayment] Session timeout timer is extended because transaction authentication is requested.
Notice: [BarcodePayment] Inserting transaction %@ for current barcode: %@
Notice: [BarcodePayment] Marking processed %@ for transaction %@.
Notice: [BarcodePayment] Marking completed authentication for transaction %@.
Notice: [BarcodePayment] Session is invalid, releasing assertion %@
Notice: [BarcodePayment] Acquired notification suppression assertion: %@
Error: [BarcodePayment] Error acquiring notification suppression assertion: %@
Notice: [BarcodePayment] Released notification suppression assertion: %@
Notice: [BarcodePayment] Acquired express transaction suppression assertion: %@
Error: [BarcodePayment] Error acquiring express transaction suppression assertion: %@
Notice: [BarcodePayment] Released express transaction suppression assertion: %@
Error: Tried to access invalid object at index %lu in array %@ with %lu elements
Notice: Paired or pairing device has advertised name %@
Notice: Got connected to paired or pairing device %d from IDS device %@ and service %@
Notice: Updated Home directory is %@
Error: Couldn't get home directory path; defaulting to %@
Notice: Synced settings changed remotely
Notice: Express passes information changed remotely
Notice: Adding handler to runloop...
Notice: setting defaults for %@
Notice: 
%@ %@: old %@ new %@ (%@)
Notice: synchronizing and sending '%@' notification for domain %@
Debug: countryCode %@ support %d
Debug: this device class 
 OS version 
 platform 
 supported regions %@
Debug: paired device class 
 OS version 
 platform 
 supported regions %@
Debug: Final supported regions: %@
Debug: this device region 
 device version 
 class 
 supports regions %@
Debug: paired device region 
 device version 
 class 
 supports regions %@
Debug: Final supports features: %@
Error: NPKCopyFileAtURL: one of the source URL (%@) or destination URL (%@) were invalid
Notice: Max payment cards is zero. Returning companion value of %u.
Notice: Applet state is %@
Notice: Transit properties are %@ (%@)
Notice: NPKRelevantTransitNotificationsCheckInterval: using interval from user defaults:%@
Notice: NPKRelevantTransitNotificationsCheckInterval: using default interval %f
Notice: LaunchServices yielded localized app name '%@' for pid %d
Notice: proc_name yielded process name '%@' for pid %d
Notice: Supports express for technology type %d: %d
Notice: Paired device does not support peer payment; not allowing peer payment registration
Notice: Secure element is not available on local device; not allowing peer payment registration
Notice: Peer payment web service has account: %d region enabled: %d has URL: %d
Notice: Web service does not support peer payment; not allowing peer payment registration
Notice: Should allow peer payment registration? %d
Warning: failed to archive: %@
Notice: Marking companion migration needed: %d
Notice: Device:%@ supports %u credential type:%lu (%@)
Notice: could not get device class from pairing/paired device:%@
Warning: Unexpected instance class:%@ for pairing/paired device DeviceClass property. Will drop it
Warning: could not create device version with deviceClass:%@ OSVersion:%@
Notice: Missing completion block. Could not acquire assertion with description:%@
Notice: Requesting provisioning assertion with reason:%@
Notice: Received provisioning assertion with reason:%@ assertion:%@ error:%@
Warning: No unique ID for pass %@ %@ %@!
Warning: Current manifest is %@
Warning: Base manifest is %@
Warning: Looking at URL %@
Notice: Illegal symlink: %@
Warning: Unable to get directory contents for URL %@
Notice: Removing empty directory at URL %@
Warning: Unable to find pass-relative path for absolute path %@
Warning: Current Manifest SHA1 %@
Warning: Base Manifest SHA1 %@
Notice: Unable to find pass-relative path for absolute path %@
Notice: Removing existing non-directory file at %@
Notice: Directory already exists at %@
Notice: Creating empty directory at %@
Notice: Copying file from %@ to %@
Notice: base pass manifest: %@ partial pass manifest: %@
Notice: keys only in base pass manifest: %@
Notice: Deleting file at URL %@ because it isn't in the new manifest
Warning: Base pass manifest (%@) or partial pass manifest (%@) is nil!
Warning: Hash for file at URL %@ does not match (expected %@ vs actual %@)
Warning: No remote asset at URL %@; rejecting partial pass update
Warning: Not able to determine watch device region; falling back to companion region
Warning: Cannot validate web service context (%@) without paired device SEIDs
Warning: Web service context (%@) is invalid because the device ID (%@) does not match the watch's SEIDs (%@)
Notice: flush bundle at URL:%@
Notice: posting NPKPeerPaymentTermsAndConditionsAcceptanceNeededDarwinNotification from NPKInitiateTermsAndConditionsAcceptanceFlow()
Notice: running platform %@
Notice: NPKGymKitDetection: User did enabled:%@ GymKit detection
Notice: NPKGymKitDetection: user Accepted:%@ Gym default value:%@
Notice: Setting restricted mode=%d via NanoPreferencesSync
Notice: Setting fail forward=%d via NanoPreferencesSync
Notice: Created power assertion %lu with name %@ and reason %@
Notice: Released power assertion %d
Notice: Got device paired notification;
Notice: Got device active notification;
Notice: Demo mode values updated:
Store demo mode is %s
Hands-on demo mode is %s
UI-only demo mode is %s
Notice: All nanopassd watch express info: %@
Notice: Retrieved nanopassd watch express pass information %@
Warning: manifest.json for unique ID %@ should map filenames to SHA1 hash strings. Found key of class %@
Warning: manifest.json for unique ID %@ should map filenames to SHA1 hash strings. Found object of class %@
Warning: manifest.json for unique ID %@ must be a dictionary -- instead found an object of class %@
Warning: Manifest JSON for unique ID %@ didn't parse: %@
Warning: Manifest for unique ID %@ is missing; expected at URL %@
Could not create download cache at %@: %@
Warning: Could not get relative path or hash for %@
Warning: Deleting remote asset at URL %@
Warning: Deleting file at URL %@
0Eq=
softlink:r:path:/System/Library/PrivateFrameworks/PairedUnlock.framework/PairedUnlock
softlink:r:path:/System/Library/PrivateFrameworks/IMCore.framework/IMCore
softlink:r:path:/System/Library/Frameworks/PassKit.framework/PassKit
softlink:r:path:/System/Library/Frameworks/UIKit.framework/UIKit
softlink:r:path:/System/Library/PrivateFrameworks/BridgePreferences.framework/BridgePreferences
NPKProtoCheckTLKsMissingRequest
NSCopying
NPKProtoAssertionRequest
NPKProtoRemoveExpressPassWithUniqueIdentifierRequest
NPKProtoRelevantPassesRequest
NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext
NPKProtoRetrievePaymentTransactionsResponse
NPKExpressGymKitConflictResolver
NSObject
NPKExpressGymKitAvailabilityManager
NPKProtoCatalog
NPKProtoRegisterSubcredentialsResponse
NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext
NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest
NPKPassSyncServiceSyncStatus
NPKPassSyncService
IDSServiceDelegate
NPKPassSyncEngineDelegate
NPKPassSyncEngineDataSource
NPKProtoPerformDeviceCheckInRequest
NPKProtoPhotosForFamilyMembersWithDSIDsRequest
NPKLibrary
NPKPaymentWebServiceStandaloneTargetDevice
NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest
NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext
NPKProtoRemoveExpressPassWithUniqueIdentifierResponse
NPKPassesManager
PKGroupsControllerDelegate
PKGroupDelegate
NPKPassesDataSource
NPKProtoConfigurationDataResponse
NPKProtoDeclineRelatedInvitationsIfNecessaryRequest
NPKProtoRemoteAdminPerformRequest
NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest
NPKProtoCommutePlanReminderForCommutePlanAndPassRequest
NPKProtoCanAcceptInvitationRequest
NPKProtoAvailableProductsResponse
NPKProtoPerformDeviceCheckInResponse
NPKPaymentBarcode
NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry
NanoPassKit
NPKProtoStandalonePaymentProvisioningFlowStepContext
NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest
NPKProtoPeerPaymentWebServiceContextDidChangeRequest
NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest
NPKProtoStandalonePaymentApplication
NPKProtoStandalonePaymentPass
NPKRelevancy
NPKNanoPassDaemonConnection
PKXPCServiceDelegate
NPKProtoConfigurationDataRequest
NPKProtoFamilyMembersResponse
NPKProtoListSubcredentialInvitationsResponse
NPKProtoStandaloneError
NPKCatalogUtilities
NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest
NPKProtoPeerPaymentRegistrationRequest
NPKProtoWebServiceContextDidChangeRequest
NPKProtoHandleCompanionPeerPaymentRegistrationRequest
NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest
NPKPaymentProvisioningFlowPickerItem
NPKPaymentProvisioningFlowPickerSection
NPKProtoQueueTSMConnectionResponse
NPKProtoUpdatePushTokenRequest
NPKSubcredentialInvitationCoordinator
PKSubcredentialProvisioningControllerDelegate
NPKProtoPeerPaymentRegistrationResponse
NPKProtoPassSyncProposedReconciledState
NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse
NPKProtoAutomaticProvisioningRequest
NPKPeerPaymentQuickTypeParser
NPKProtoListSubcredentialInvitationsRequest
NPKProtoSetAccountAttestationAnonymizationSaltResponse
NPKProtoRegisterSubcredentialsRequest
NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext
NPKProtoRemoveExpressPassesWithCardTypeResponse
NPKProtoStandalonePaymentProvisioningFlowResponse
NPKProtoCommutePlanReminderForCommutePlanAndPassResponse
NPKProtoSignDataRequest
WeakObservers
NPKProtoMarkAllAppletsForDeletionResponse
NPKProtoDeviceUnlockedForPendingProvisioningRequest
NPKProtoRequestSubcredentialInvitationRequest
NPKProtoDeclineRelatedInvitationsIfNecessaryResponse
NPKProtoMatchingInvitationOnDeviceRequest
NPKProtoUpdatePaymentPassRequest
NPKProtoMarkPaymentPassForDeleteResponse
NPKProtoRemoteAdminAvailabilityChangeRequest
NPKGreenTeaDataUsageResolver
NPKProtoDumpLogsRequest
NPKProtoGizmoInitiatedAddPassRequest
NPKQuickPaymentSessionSource
NPKProtoPerformProductActionRequest
NPKProtoRelevantPassesPendingRequest
NPKProtoAccountAttestationAnonymizationSaltRequest
NPKProtoPassSyncState
NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext
NPKButtonListener
NPKProtoResyncNeededRequest
NPKProtoSecureElementSetNewAuthRandomResponse
NPKProtoBarcodeApplicationRedirectRequest
NPKProtoAdditions
NPKProtoCanAcceptInvitationResponse
NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest
NPKValueAddedServiceAutomaticSelectionCoordinator
NPKPassesDataSourceObserver
NPKPaymentProvisioningFlowController
NPKPaymentProvisioningFlowControllerProtocol
NPKProvisioningServiceAgentStatusUpdater
NPKProtoBalanceReminderForBalanceAndPassResponse
NPKProtoRegistrationDataRequest
NPKProtoSetPreferredPaymentApplicationResponse
NPKProtoStandaloneInitializationRequest
NPKProtoPeerPaymentUnregistrationResponse
NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext
NPKProtoRegistrationDataResponse
NPKProtoResetApplePayManateeViewRequest
NPKProtoMatchingInvitationOnDeviceResponse
NPKPassDescription
NSSecureCoding
NSCoding
NPKAddPaymentPassController
NPKAddPaymentPassControllerClientProtocol
NPKProtoStandalonePaymentSetupProductImageAssetURLs
NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext
NPKProtoUpdatePassRequest
NPKTapToRadarManager
NPKAudioPlayer
NPKStandaloneProvisioningServiceServerProtocol
NPKStandaloneProvisioningServiceClientProtocol
NPKProtoStandaloneResponseHeader
NPKAssertion
NPKProtoStandalonePaymentPassListRequest
NPKCompanionAgentConnectionDeferredActionHandler
NPKProtoRemoteAdminAvailabilityRequest
NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest
NPKProtoBitmap
NPKProtoStandalonePaymentHeroImage
NPKContactlessPaymentSessionState
NPKBalanceField
NPKPassItemField
NPKCommutePlanField
NPKContactlessPaymentSessionManagerTransactionContext
NPKContactlessPaymentSessionManager
NPKBarcodePaymentSessionDelegate
NPKQuickPaymentSessionDelegate
NPKPaymentPreflighter
NPKProtoRetrievePaymentTransactionsRequest
NPKProtoSecureElementGetAppletsRequest
FlowSelection
NPKProtoHash
NPKProtoNewLibraryHashReceivedRequest
NPKWatchSubcredentialProvisioningService
NPKProtoPerformProductActionResponse
NPKProtoNewLibraryHashRequest
NPKProtoStandalonePass
NPKTransitAppletHistoryFetcher
NPKProtoBarcodeEventRequest
NPKProtoOpenURLRequest
NPKPassAssociatedInfo
NPKProtoHandleBalanceChangeRequest
NPKProtoRemoteAdminPerformResponse
NPKSubcredentialProvisioningService
NPKProtoAvailableProductsRequest
NPKTransientPassAssertionServerProtocol
NPKTransientPassAssertionServerClientProtocol
NPKTransientAssertion
NPKTransientPassAssertion
NPKDoublePressDelegationAssertion
NPKProtoRemotePassUpdateRequest
NPKProtoCatalogChangedRequest
NPKProtoHandlePaymentTransactionsRequest
NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest
NPKProtoSecureElementGetPairingInfoResponse
NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest
NPKProtoStandaloneUserInfo
NPKProtoDownloadAllPaymentPassesRequest
NPKPaymentProvisioningFlowStepContext
NPKPaymentProvisioningFlowControllerRequestContext
NPKPaymentProvisioningFlowControllerWelcomeStepContext
NPKPaymentProvisioningFlowControllerChooseFlowStepContext
NPKPaymentProvisioningFlowControllerChooseProductStepContext
NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext
NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext
NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext
NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext
NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext
NPKPaymentProvisioningFlowControllerManualEntryStepContext
NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext
NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryStepContext
NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryProgressStepContext
NPKPaymentProvisioningFlowControllerProductDisambiguationStepContext
NPKPaymentProvisioningFlowControllerPasscodeUpgradeStepContext
NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext
NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext
NPKPaymentProvisioningFlowControllerMoreInformationStepContext
NPKPaymentProvisioningFlowControllerProvisioningResultStepContext
NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext
NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext
NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext
NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext
NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse
PKContactlessInterfaceTransactionContext
NPKFakePaymentSession
PKFieldDetectorObserver
NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest
NPKProtoStandaloneImageSize
NPKProtoCompanionMigratedResponse
NPKPeerPaymentNumberFormatter
NPKProvisioningServiceOutstandingRequest
NPKContinuityCoordinator
NPKAssertionManager
NPKProtoProvisioningDataRequest
NPKOutstandingAssertionStatusUpdater
NPKTargetDeviceAssertionManager
NPKProtoRelevantPassesNeededRequest
DigitalIssuance
PKPaymentAuthorizationControllerDelegate
PKPaymentAuthorizationControllerPrivateDelegate
NPKPeerPaymentWebServiceCompanionTargetDevice
PKPeerPaymentWebServiceTargetDeviceProtocol
NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest
NPKProtoRequestSubcredentialInvitationResponse
NPKProtoShowPaymentSetupRequest
NPKProtoEnableServiceModeRequest
NPKQuickPaymentSession
PKContactlessInterfaceSessionDelegate
NPKProtoDeviceMetadataWithFieldsReponse
NPKProtoUpdateAccountWithIdentifierResponse
NPKOneShotLocationFetcher
CLLocationManagerDelegate
NPKPassSyncEngine
NPKProtoCloudStoreStatusResponse
NPKSimulatedPaymentProvisioningFlowController
NPKProtoRemoteAdminAvailabilityResponse
NPKProtoHandleAppletStateChangeRequest
NPKProtoStandalonePaymentProvisioningFlowSessionEndedResponse
NPKProtoDeviceDidRegisterRequest
NPKProtoStandalonePaymentProvisioningFlowSessionCheckInRequest
Errors
NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext
NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest
NPKPeerPaymentTransactionDetails
NPKPeerPaymentMessagesTransactionsManager
PKPaymentServiceDelegate
NPKProtoDumpLogsResponse
NPKProtoSetTransactionDefaultsRequest
NPKProtoPhotosForFamilyMembersWithDSIDsResponse
NPKProtoQueueTSMConnectionRequest
NPKProtoStandalonePaymentCredential
NPKProtoStandalonePaymentProvisioningFlowPickerSection
NPKStandaloneProvisioningNumericEntryCoordinator
NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext
NPKInAppPaymentInterfaceServerExportedInterface
NPKRemoteInterfacePresenter
NPKPassSyncChange
NPKProtoStandalonePaymentSetupMoreInfoItem
NPKProtoProvisionPeerPaymentPassRequest
NPKPeerPaymentAccountManager
NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest
NPKProtoGizmoInitiatedDeletePassRequest
NPKExpressPassesManager
NPKProtoPassSyncReconciledStateAccepted
NPKProtoAcceptSubcredentialInvitationWithIdentifierRequest
NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext
NPKProtoStandaloneVerificationChannel
NPKGizmoDatabaseManifestEntry
NPKGizmoDatabase
NPKPMUButtonListener
NPKProtoSetPeerPaymentPreferencesResponse
NPKProtoBarcodeEventResponse
NPKProtoRemovePassRequest
NPKProtoPassSyncReconciledStateUnrecognized
NPKProtoStandalonePaymentRemoteCredential
NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext
NPKProtoUpdatePeerPaymentAccountResponse
NPKTestAddPaymentPassRequestContext
NPKProtoPeerPaymentUnregistrationRequest
NPKStandaloneFirstUnlockCoordinator
NPKProtoProvisioningDataResponse
NPKProtoCloudStoreStatusRequest
NPKProtoStandalonePaymentPassListResponse
NPKProtoSecureElementGetPairingInfoRequest
NPKProtoStandaloneCreditAccountCredential
NPKPaymentOptionsSerialization
NPKWorkQueue
NPKWorkQueueItem
NPKProtoWebServiceContextNeededRequest
NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext
NPKProtoInitializeCloudStoreIfNecessaryRequest
NPKProtoSetAccountAttestationAnonymizationSaltRequest
NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest
NPKProtoSecureElementRemoveAppletsRequest
NPKExpressPassController
NPKProtoCheckTLKsMissingResponse
NPKProtoCheckPasscodePolicyComplianceRequest
NPKProtoBalanceReminderForBalanceAndPassRequest
NPKProtoStandalonePaymentProvisioningFlowPickerItem
NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext
NPKProtoSetPreferredPaymentApplicationRequest
NPKQuickPaymentSessionLocalAuthenticationCoordinator
LAUIDelegate
NPKProtoPass
NPKProtoStandalonePaymentSetupField
NPKRemoteButtonListener
NPKDoublePressDelegationAssertionDelegate
NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest
NPKProtoEnableServiceModeResponse
NPKProtoAccountAttestationAnonymizationSaltResponse
NPKProtoRequestPeerAccountTermsAndConditionsAcceptance
NPKProtoStandaloneHelper
NPKAddPaymentPassControllerServerProtocol
PDXPCServiceExportedInterface
NPKProtoMarkPaymentPassForDeleteRequest
NPKProtoRelevantPassTuple
NPKProtoStandalonePingRequest
NPKDoubleClickClientSuppressor
NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest
NPKProtoSignDataResponse
NPKQuickPaymentSessionCleanupDelegate
NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext
NPKProtoRemoveExpressPassesWithCardTypeRequest
NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext
NPKProtoMarkAllAppletsForDeletionRequest
NPKPassAssociatedInfoModel
NPKDateRange
NPKProtoPasscodeUpgradeFlowShouldExitRequest
NPKSharedWebServiceProvider
NPKPaymentWebServiceCompanionTargetDeviceDelegate
NPKSharedPeerPaymentWebServiceArchiver
PKPeerPaymentWebServiceArchiver
PKWebServiceArchiver
NPKProtoUpdatePeerPaymentAccountRequest
NPKProtoSetExpressPassRequest
NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse
NPKProtoTransactionDefaultsNeededRequest
NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext
ProtobufSupport
NPKProtoSetBalanceReminderForBalanceAndPassRequest
NPKProtoUpdateSubcredentialMetadataResponse
NPKOSTransaction
NPKPeerPaymentConversationManager
ReaderMode
PKContactlessCardIngesterDelegate
NPKProtoUpdateSubcredentialMetadataRequest
NPKProtoFamilyMembersRequest
NPKProtoInitializeCloudStoreIfNecessaryResponse
NPKProtoAddPassRequest
NPKProtoUpdateAccountWithIdentifierRequest
NPKProtoRemoveSharingInvitationRequest
NPKProtoAcceptSubcredentialInvitationRequest
NPKPassSyncStateItem
NPKPassSyncState
NPKNanoPassDaemonConnectionProtocol
NPKProtoPassSettingsChangedRequest
NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext
NPKProtoPassSyncStateChangeProcessed
NPKTapToRadarRequest
NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext
NPKPassAssociatedInfoManager
NPKSettingsPreservingFileDataAccessor
NPKProtoAcceptSubcredentialInvitationResponse
NPKProtoUpdatedAccountsForProvisioningResponse
NPKProtoRemoveSharingInvitationResponse
NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest
NPKProtoSetBalanceReminderForBalanceAndPassResponse
NPKContactlessPaymentSessionSoundsManager
NPKContactlessPaymentSessionManagerObserver
NPKProtoRevokeSubcredentialsResponse
NPKProtoStandalonePingResponse
NPKProtoPassSyncStateChange
NPKProtoStandalonePaymentDigitalIssuanceMetadata
NPKProtoUpdatedAccountsForProvisioningRequest
NPKProtoSecureElementGetAppletsResponse
NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse
NPKProtoResetApplePayManateeViewResponse
NPKProtoStandaloneRequestHeader
NPKExpressModeSettingsCoordinator
NPKProtoStandalonePaymentProvisioningMethodMetadata
NPKProtoSetPeerPaymentPreferencesRequest
NPKProtoHandleCredentialsChangeRequest
NPKPaymentWebServiceCompanionTargetDevice
PKPaymentWebServiceTargetDeviceProtocol
PKPaymentWebServiceArchiver
NPKProtoHandleValueAddedServiceTransactionsRequest
NPKProtoStandalonePaymentCredentialUnion
NPKProtoSecureElementSetNewAuthRandomRequest
NPKProtoStandalonePaymentSetupProduct
NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest
NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext
NPKProtoDeviceDidRegisterResponse
NPKProtoRemotePassUpdateResponse
NPKProtoStandaloneInitializationResponse
NPKCompanionServerProtocol
NPKCompanionClientProtocol
NPKProtoStandalonePaymentSetupProductPaymentOption
NPKCompanionAgentConnection
NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext
NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest
NPKProtoDeviceMetadataWithFieldsRequest
NPKProtoCheckPasscodePolicyComplianceResponse
NPKProtoSecureElementRemoveAppletsResponse
NPKProtoPassSyncStateItem
NPKProtoProvisionPeerPaymentPassResponse
NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest
DescriptionSupport
NPKProtoPaymentPreconditionsNotMetRequest
NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse
NPKProtoCompanionMigratedRequest
NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext
NPKProtoPassSyncStateManifestEntry
NPKProtoHandleRemoveTransactionsRequest
NPKProtoHandleCompanioniCloudSignoutRequest
NPKProtoRevokeSubcredentialsRequest
NPKProtoSetExpressPassResponse
NPKBarcodePaymentSession
NPKMockPeerPaymentAccountManager
NPKSafeObjects
NilProtection
NPKMutableArrayAdditions
description
dictionaryRepresentation
stringWithFormat:
dictionary
allocWithZone:
init
isMemberOfClass:
copyWithZone:
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
setObject:forKey:
numberWithBool:
setRequestUUIDString:
assertionType
setAssertionType:
setHasAssertionType:
hasAssertionType
assertionTypeAsString:
StringAsAssertionType:
setPending:
setHasPending:
hasPending
requestUUIDString
pending
.cxx_destruct
_assertionType
_requestUUIDString
_pending
_has
isEqualToString:
setUniqueID:
hasUniqueID
uniqueID
_uniqueID
removeAllObjects
addObject:
count
objectAtIndex:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addPassRelevancyTuples:
passRelevancyTuplesCount
clearPassRelevancyTuples
passRelevancyTuplesAtIndex:
passRelevancyTuplesType
passRelevancyTuples
setPassRelevancyTuples:
_passRelevancyTuples
setTermsURL:
setProduct:
hasTermsURL
setAllowNonSecureHTTP:
setHasAllowNonSecureHTTP:
hasAllowNonSecureHTTP
hasProduct
termsURL
allowNonSecureHTTP
product
_product
_termsURL
_allowNonSecureHTTP
addTransactionsBytes:
addTransactionPassIDs:
transactionsBytesCount
clearTransactionsBytes
transactionsBytesAtIndex:
transactionPassIDsCount
clearTransactionPassIDs
transactionPassIDsAtIndex:
transactionsBytesType
transactionPassIDsType
transactionsBytes
setTransactionsBytes:
transactionPassIDs
setTransactionPassIDs:
_transactionPassIDs
_transactionsBytes
initWithDelegate:
UTF8String
isExpressGymKitAllowed
delegate
expressGymKitAvailabilityManager:didChangeIsExpressGymKitAllowed:
dealloc
_conflictingPassUniqueID
paymentPassWithUniqueID:synchronous:reply:
stringForKey:
bundleWithPath:
isLoaded
load
principalClass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
allowEnableExpressGymKitWithVisibleViewController:completion:
conflictingPass
setDelegate:
_notificationToken
_delegate
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
setCatalogData:
catalogData
_catalogData
addPassesData:
addErrorsData:
passesDatasCount
clearPassesDatas
passesDataAtIndex:
errorsDatasCount
clearErrorsDatas
errorsDataAtIndex:
passesDataType
errorsDataType
passesDatas
setPassesDatas:
errorsDatas
setErrorsDatas:
_errorsDatas
_passesDatas
setLocalizedProgressDescription:
hasLocalizedProgressDescription
localizedProgressDescription
_localizedProgressDescription
addManualEntryFields:
setRequestHeader:
manualEntryFieldsCount
clearManualEntryFields
manualEntryFieldsAtIndex:
manualEntryFieldsType
requestHeader
manualEntryFields
setManualEntryFields:
_manualEntryFields
_requestHeader
timeIntervalSinceDate:
shouldSyncWithCurrentIncomingChange:currentOutgoingChange:currentDate:
reset
lastKnownOutgoingChange
setLastKnownOutgoingChange:
outgoingChangeDate
setOutgoingChangeDate:
lastKnownIncomingChange
setLastKnownIncomingChange:
incomingChangeDate
setIncomingChangeDate:
_lastKnownOutgoingChange
_outgoingChangeDate
_lastKnownIncomingChange
_incomingChangeDate
initWithService:
syncStateChanged:
setProtobufAction:forIncomingRequestsOfType:
syncStateChangeProcessed:
reconciledStateUnrecognized:
proposedReconciledState:
reconciledStateAccepted:
passSettingsChanged:
catalogChanged:
addDelegate:queue:
_archiveTimerFired
_archivedPassSyncEngine
initWithRole:
setDataSource:
_provideUpdatedLibraryStateToSyncEngineAndSyncIfNecessary:
setPassSettings:
data
initWithProtobufData:type:isResponse:
numberWithDouble:
setCompanionCatalog:
setWatchCatalog:
_syncWhenAppropriate
transactionWithName:
initWithData:
initWithProtoPassSyncChange:
hasPassSegmentIndex
passSegmentIndex
changeUUID
passSegmentTotal
passData
hasPassSegmentTotal
npkDescription
setPassData:
handleStateChange:
hasCompanionCatalog
hasWatchCatalog
companionCatalog
watchCatalog
handleIncomingCompanionCatalog:watchCatalog:
invalidate
acceptedChangeUUID
bytes
initWithUUIDBytes:
hasChangeAccepted
changeAccepted
fullPassRequired
handleStateChangeProcessedWithUUID:changeAccepted:fullPassRequired:
unrecognizedReconciledStateHash
libraryPassSyncState
initWithProtoSyncState:
handleReconciledStateUnrecognizedWithHash:passSyncState:
proposedReconciledState
handleProposedReconciledState:
reconciledStateHash
handleReconciledStateAcceptedWithHash:
hasPassSettings
passSettings
handleIncomingPassSettings:forPassWithUniqueID:
length
protoPassSyncChange
companionCatalogToSendWithStateChange
watchCatalogToSendWithStateChange
setPassSegmentIndex:
setPassSegmentTotal:
enumerateObjectsUsingBlock:
getUUIDBytes:
dataWithBytes:length:
setAcceptedChangeUUID:
setChangeAccepted:
setFullPassRequired:
setUnrecognizedReconciledStateHash:
protoSyncState
setLibraryPassSyncState:
setProposedReconciledState:
setReconciledStateHash:
changeType
settingsForPassWithUniqueID:
handleSettingsChanged:forPassWithUniqueID:
reconciledState
currentLibraryPassSyncStateWithReconciledState:
libraryState
setLibraryState:
diffWithBaselineState:representsMaterialDifferenceFromState:
processingChange
passSyncStateByApplyingChange:
writeToFile:options:error:
candidateChange
date
_syncNow
_ensureSyncTimerIsSet
syncIfNecessary
_syncTimerFired
dataWithContentsOfFile:options:error:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
passSyncEngine:sendStateChange:
passSyncEngine:sendStateChangeProcessedWithUUID:changeAccepted:fullPassRequired:
passSyncEngine:sendReconciledStateUnrecognizedWithHash:currentPassSyncState:
passSyncEngine:sendProposedReconciledState:
passSyncEngine:sendReconciledStateAcceptedWithHash:
passSyncEngine:requestsAddPassData:forSyncStateItem:completion:
passSyncEngine:requestsUpdatePassData:forSyncStateItem:baseManifestHashForPartialUpdate:remoteAssetsForPartialUpdate:completion:
passSyncEngine:requestsRemovePassWithUniqueID:completion:
passSyncEngineStateChanged:
passSyncEngineEncounteredUnexpectedEvent:
passSyncEngine:receivedStateChangeProcessed:changeAccepted:
passSyncEngine:finishedProcessingChange:
passSyncEngine:partialDataForPassWithUniqueID:baseManifest:outRemoteAssets:
passSyncEngine:dataForPassWithUniqueID:
initWithPassSyncEngineRole:
start
handlePassLibraryChanged
handleCatalogChangeWithCompanionCatalog:watchCatalog:
suggestSync
dropAllMessages
setDropAllMessages:
passSyncEngine
setPassSyncEngine:
passSyncService
setPassSyncService:
passSyncQueue
setPassSyncQueue:
passSyncEngineArchiveTimer
setPassSyncEngineArchiveTimer:
passSyncEngineSyncTimer
setPassSyncEngineSyncTimer:
passSyncStatus
setPassSyncStatus:
_dropAllMessages
_passSyncEngine
_passSyncService
_passSyncQueue
_passSyncEngineArchiveTimer
_passSyncEngineSyncTimer
_passSyncStatus
addRequestDSIDs:
requestDSIDsCount
clearRequestDSIDs
requestDSIDsAtIndex:
requestDSIDsType
requestDSIDs
setRequestDSIDs:
_requestDSIDs
sharedInstance
addPassData:completion:
needsRelevancyInformation
setNeedsRelevancyInformation:
_needsRelevancyInformation
sharedPaymentWebServiceContext
sharedPaymentWebServiceArchiver
initWithContext:targetDevice:archiver:
standaloneTargetDevice:requestsEnforceUpgradedPasscodePolicyWithCompletion:
standaloneTargetDevice:requestsStartRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:
standaloneTargetDeviceRequestsEndRequiringUpgradedPasscodeIfNecessary:
standalonePaymentWebServiceWithDelegate:
enforceUpgradedPasscodePolicyWithCompletion:
startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:
endRequiringUpgradedPasscodeIfNecessary
setNumericEntryPending:
setHasNumericEntryPending:
hasNumericEntryPending
numericEntryPending
_numericEntryPending
addCurrentExpressPassesInformation:
setActualExpressPassInformation:
currentExpressPassesInformationsCount
clearCurrentExpressPassesInformations
currentExpressPassesInformationAtIndex:
currentExpressPassesInformationType
setSuccess:
setHasSuccess:
hasSuccess
hasActualExpressPassInformation
success
actualExpressPassInformation
currentExpressPassesInformations
setCurrentExpressPassesInformations:
_actualExpressPassInformation
_currentExpressPassesInformations
_success
initWithShouldMemoryMapImages:shouldWaitForContentAndImageSets:
pk_weakObjectsHashTableUsingPointerPersonality
initWithQueue:
defaultCenter
_handleObjectSettingsChanged:
addObserver:selector:name:object:
initWithPassLibrary:
_loadPasses
performSubjectToFirstUnlock:
_reloadPasses
containsObject:
removeObject:
_updateCurrentPasses
passes
passesDataSource:didAddPasses:
_notifyObservers:
passesDataSourceDidReorderPasses:
passesDataSource:didRemovePasses:
localizedDescription
arrayWithObjects:count:
passesDataSource:didUpdatePasses:
currentPasses
currentPaymentPasses
groupIndexForPassUniqueID:
groupAtIndex:
firstObject
lastObject
passType
objectAtIndexedSubscript:
groupsController
groups
moveGroupAtIndex:toIndex:
handleUserPassDelete:
setDefaultPaymentPassUniqueIdentifier:
enableRemoteUpdates
suppressRemoteUpdates:
_reloadPassesWithCompletion:
setCurrentPasses:
setCurrentPaymentPasses:
array
_reorderedPassesForDisplay:
paymentPass
safelyAddObject:
copy
style
insertObject:atIndex:
_loadContentAndImageSetsForPass:completion:
passesDataSourceDidReloadPasses:
loadGroupsWithCompletion:
reloadGroupsWithCompletion:
displayProfile
hasBackgroundImage
integerValue
isImageSetLoaded:
imageSetLoadedIfNeeded:
memoryMapImageData
loadImageSetAsync:preheat:withCompletion:
loadContentAsyncWithCompletion:
colorProfile
allObjects
userInfo
objectForKeyedSubscript:
unsignedIntegerValue
passForUniqueID:
setSettingsWithoutUpdatingDataAccessor:
passesDataSource:didUpdateSettingsForPass:
groupsController:didInsertGroup:atIndex:
groupsController:didRemoveGroup:atIndex:
groupsController:didMoveGroup:fromIndex:toIndex:
groupsControllerShouldExcludePassesWithUniqueIDsFromFiltering:
group:didInsertPass:atIndex:
group:didUpdatePass:atIndex:
group:didRemovePass:atIndex:
group:didMovePassFromIndex:toIndex:
registerObserver:
unregisterObserver:
paymentPasses
shouldAllowMovingItemAtIndex:toIndex:
movePassAtIndex:toIndex:
removePass:
setDefaultPaymentPass:
suppressRemoteUpdates
reloadPasses
reloadPassesWithCompletion:
observers
setObservers:
setGroupsController:
firstUnlockCoordinator
setFirstUnlockCoordinator:
shouldMemoryMapImages
setShouldMemoryMapImages:
shouldWaitForContentAndImageSets
setShouldWaitForContentAndImageSets:
notifyToken
setNotifyToken:
_shouldMemoryMapImages
_shouldWaitForContentAndImageSets
_notifyToken
_observers
_groupsController
_currentPasses
_currentPaymentPasses
_firstUnlockCoordinator
setConfigurationDataBytes:
hasConfigurationDataBytes
configurationDataBytes
_configurationDataBytes
setInvitationData:
hasInvitationData
invitationData
_invitationData
setUrl:
setSeid:
setCommand:
setInfoDictionary:
hasInfoDictionary
seid
command
infoDictionary
_command
_infoDictionary
_seid
_url
setChosenFlowPickerItemIdentifier:
hasChosenFlowPickerItemIdentifier
chosenFlowPickerItemIdentifier
_chosenFlowPickerItemIdentifier
setCommutePlanBytes:
hasCommutePlanBytes
commutePlanBytes
_commutePlanBytes
setAvailableProductsData:
setErrorData:
hasAvailableProductsData
hasErrorData
availableProductsData
errorData
_availableProductsData
_errorData
objectForKey:
domain
code
state
decryptedBarcodeCredential
setMessageData:
setFormat:
stringWithUTF8String:
setAltText:
barcodeIdentifier
initWithBarcodeIdentifier:decryptedBarcodeCredential:error:
barcodes
setBarcodeIdentifier:
setState:
setDecryptedBarcodeCredential:
setBarcodes:
_barcodeIdentifier
_state
_decryptedBarcodeCredential
_barcodes
setType:
setMetadata:
hasType
hasMetadata
type
metadata
_metadata
_type
npkWatchBarcode
messageData
barcode
format
npkAccessoryType
nfcPayload
expirationDate
compare:
npkCompleteHashForWatchOSVersion:
manifestHash
dataWithData:
settings
appendBytes:length:
message
encryptionPublicKeyData
initWithDomain:
allValues
dateByAddingTimeInterval:
balance
value
identifier
mutableCopy
removeObjectForKey:
npkSupportsHidingAccessory
npkExpired
npkCompleteHash
hasLogoImageSet
npkHasValidNFCPayload
npkIsAddValuePending
npkPendingAddValueStateExpireDateForBalanceFieldWithIdentifier:currentBalance:
npkLastAddValueAmountForBalanceFieldWithIdentifier:
npkHandleTransitValuePendingAmount:forBalanceField:passWithUniqueID:
npkClearTransitValuePendingStateIfNecessaryForPassWithID:withBalanceFields:
isPaymentOptionSelectable
deviceContactlessPaymentApplications
devicePaymentApplications
sortedPaymentApplications:ascending:
applicationIdentifier
devicePrimaryContactlessPaymentApplication
npkHasUserSelectableContactlessPaymentApplications
defaultPaymentApplicationForPassUniqueIdentifier:
setDefaultPaymentApplication:forPassUniqueIdentifier:completion:
npkHasMultiplePaymentApplications
npkSortedDeviceContactlessPaymentApplications
npkDevicePaymentApplicationForAID:
npkPreferredContactlessPaymentApplication
npkSetPreferredPaymentApplication:
setObject:forKeyedSubscript:
setStepIdentifier:
setBackStepIdentifier:
setWelcomeStepContext:
setChooseFlowStepContext:
setChooseProductStepContext:
setChooseCredentialsStepContext:
setDigitalIssuanceAmountStepContext:
setDigitalIssuancePaymentStepContext:
setMoreInformationStepContext:
setReaderModeEntryStepContext:
setReaderModeIngestionStepContext:
setManualEntryStepContext:
setSecondaryManualEntryStepContext:
setLocalDeviceManualEntryStepContext:
setLocalDeviceManualEntryProgressStepContext:
setProductDisambiguationStepContext:
setPasscodeUpgradeStepContext:
setTermsAndConditionsStepContext:
setProvisioningProgressStepContext:
setProvisioningResultStepContext:
setIssuerVerificationChannelsStepContext:
setIssuerVerificationFieldsStepContext:
setIssuerVerificationCodeStepContext:
hasBackStepIdentifier
setAllowsAddLater:
setHasAllowsAddLater:
hasAllowsAddLater
hasWelcomeStepContext
hasChooseFlowStepContext
hasChooseProductStepContext
hasChooseCredentialsStepContext
hasDigitalIssuanceAmountStepContext
hasDigitalIssuancePaymentStepContext
hasMoreInformationStepContext
hasReaderModeEntryStepContext
hasReaderModeIngestionStepContext
hasManualEntryStepContext
hasSecondaryManualEntryStepContext
hasLocalDeviceManualEntryStepContext
hasLocalDeviceManualEntryProgressStepContext
hasProductDisambiguationStepContext
hasPasscodeUpgradeStepContext
hasTermsAndConditionsStepContext
hasProvisioningProgressStepContext
hasProvisioningResultStepContext
hasIssuerVerificationChannelsStepContext
hasIssuerVerificationFieldsStepContext
hasIssuerVerificationCodeStepContext
stepIdentifier
backStepIdentifier
allowsAddLater
welcomeStepContext
chooseFlowStepContext
chooseProductStepContext
chooseCredentialsStepContext
digitalIssuanceAmountStepContext
digitalIssuancePaymentStepContext
moreInformationStepContext
readerModeEntryStepContext
readerModeIngestionStepContext
manualEntryStepContext
secondaryManualEntryStepContext
localDeviceManualEntryStepContext
localDeviceManualEntryProgressStepContext
productDisambiguationStepContext
passcodeUpgradeStepContext
termsAndConditionsStepContext
provisioningProgressStepContext
provisioningResultStepContext
issuerVerificationChannelsStepContext
issuerVerificationFieldsStepContext
issuerVerificationCodeStepContext
_backStepIdentifier
_chooseCredentialsStepContext
_chooseFlowStepContext
_chooseProductStepContext
_digitalIssuanceAmountStepContext
_digitalIssuancePaymentStepContext
_issuerVerificationChannelsStepContext
_issuerVerificationCodeStepContext
_issuerVerificationFieldsStepContext
_localDeviceManualEntryProgressStepContext
_localDeviceManualEntryStepContext
_manualEntryStepContext
_moreInformationStepContext
_passcodeUpgradeStepContext
_productDisambiguationStepContext
_provisioningProgressStepContext
_provisioningResultStepContext
_readerModeEntryStepContext
_readerModeIngestionStepContext
_secondaryManualEntryStepContext
_stepIdentifier
_termsAndConditionsStepContext
_welcomeStepContext
_allowsAddLater
appendFormat:
appendString:
setPeerPaymentWebServiceContextData:
setPeerPaymentAccountData:
hasPeerPaymentWebServiceContextData
hasPeerPaymentAccountData
peerPaymentWebServiceContextData
peerPaymentAccountData
_peerPaymentAccountData
_peerPaymentWebServiceContextData
setReminderInterval:
setHasReminderInterval:
hasReminderInterval
reminderInterval
_reminderInterval
setHasState:
hasState
stateAsString:
StringAsState:
setPass:
setPrimaryAccountIdentifier:
setPrimaryAccountNumberSuffix:
setDeviceAccountIdentifier:
setDeviceAccountNumberSuffix:
setDevicePrimaryPaymentApplication:
hasPrimaryAccountIdentifier
hasPrimaryAccountNumberSuffix
hasDeviceAccountIdentifier
hasDeviceAccountNumberSuffix
activationState
setActivationState:
setHasActivationState:
hasActivationState
activationStateAsString:
StringAsActivationState:
hasDevicePrimaryPaymentApplication
pass
primaryAccountIdentifier
primaryAccountNumberSuffix
deviceAccountIdentifier
deviceAccountNumberSuffix
devicePrimaryPaymentApplication
_activationState
_deviceAccountIdentifier
_deviceAccountNumberSuffix
_devicePrimaryPaymentApplication
_pass
_primaryAccountIdentifier
_primaryAccountNumberSuffix
dictionaryWithDictionary:
npkRelevancyUniqueID
npkRelevancyRelevantText
npkRelevancyTupleWithUniqueID:relevantText:
stringWithString:
initWithMachServiceName:remoteObjectInterface:exportedObjectInterface:exportedObject:
setForceConnectionOnResume:
_remoteObjectProxySynchronous:withFailureHandler:
handleMetadataRequestOnPairedDevice:withAssociatedApplicationIdentifiers:completion:
handleApplicationRedirectRequestOnPairedDeviceForPaymentPass:transaction:
startSubcredentialProvisioningOnRemoteDeviceForInvitation:
startSubcredentialProvisioningOnLocalDeviceMatchingInvitation:shouldFetchAnonymizationSaltFromRemoteDevice:completion:
statusForSentInvitation:completion:
statusForReceivedInvitation:completion:
noteWillDeleteAccountsWithCompletion:
remoteService
_errorHandlerWithCompletion:
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxyWithErrorHandler:
remoteService:didEstablishConnection:
remoteService:didInterruptConnection:
remoteServiceDidResume:
remoteServiceDidSuspend:
noteWillDeleteAccountsSynchronous:completion:
setRemoteService:
_remoteService
addFamilyMembers:
familyMembersCount
clearFamilyMembers
familyMembersAtIndex:
familyMembersType
familyMembers
setFamilyMembers:
_familyMembers
addSubcredentialInvitationsData:
subcredentialInvitationsDatasCount
clearSubcredentialInvitationsDatas
subcredentialInvitationsDataAtIndex:
subcredentialInvitationsDataType
subcredentialInvitationsDatas
setSubcredentialInvitationsDatas:
_subcredentialInvitationsDatas
numberWithLongLong:
addUserInfos:
setDomain:
userInfosCount
clearUserInfos
userInfosAtIndex:
userInfosType
hasDomain
setCode:
userInfos
setUserInfos:
_code
_domain
_userInfos
uniqueIDs
minusSet:
setWithArray:
intersectSet:
anyObject
addObjectsFromArray:
catalogByMergingCompanionCatalog:intoWatchCatalog:watchPasses:
balanceFields
foreignReferenceIdentifier
label
transitCommutePlans
properties
passFieldForKey:
unitType
numberWithInteger:
isTransitPass
processUpdateWithAppletHistory:concreteTransactions:ephemeralTransaction:mutatedBalances:balanceLabelDictionary:unitDictionary:
currency
currentCalendar
components:fromDate:
initWithIdentifier:balance:currency:exponent:expirationDate:
npk_processUpdateWithAppletHistory:concreteTransactions:ephemeralTransaction:mutatedBalances:pass:
setServiceURL:
hasServiceURL
setForceReRegistration:
setHasForceReRegistration:
hasForceReRegistration
serviceURL
forceReRegistration
_serviceURL
_forceReRegistration
setWebServiceContextBytes:
hasWebServiceContextBytes
webServiceContextBytes
_webServiceContextBytes
setAmount:
hasAmount
amount
_amount
exponent
initWithIdentifier:forCurrencyAmount:
NPK_paymentBalanceWithAppletBalance:
title
products
itemWithIdentifier:title:products:
itemWithIdentifier:products:
setTitle:
setProducts:
_title
_products
_identifier
sectionWithTitle:footer:
footer
items
sectionWithTitle:
setFooter:
_footer
_items
setPushToken:
hasPushToken
pushToken
_pushToken
initWithCallbackQueue:
internalQueue
_canAddSecureElementPassWithConfiguration:
callbackQueue
_queue_canAcceptInvitation:completion:
_queue_listSubcredentialInvitationsWithCompletion:
setCompletion:
_setUpSubcredentialProvisioningController
subcredentialProvisioningController
_setUpSharingSessionWithSubcredentialProvisioningController:
sharingSession
_paymentWebService
_handleProvisioningAttemptForConfiguration:error:
_makeConfigurationForInvitation:session:metadata:paymentWebService:completion:
canAcceptInvitation:completion:
_fetchInvitationWithIdentifier:completion:
_performBlockFollowingFirstUnlockWithBlock:
deviceContainsInvitationMatchingInvitation:withTimeout:completion:
_errorWithCode:message:
_queue_deviceContainsInvitationMatchingInvitation:withTimeout:completion:
_queue_accountAttestationAnonymizationSaltWithCompletion:
_queue_setAccountAttestationAnonymizationSalt:completion:
originatorIDSHandle
_queue_requestSubcredentialInvitation:fromIDSHandle:completion:
_queue_updateSubcredentialMetadataOnPass:withCredential:completion:
_queue_registerCredentialsWithIdentifiers:completion:
_queue_revokeCredentialsWithIdentifiers:completion:
_queue_removeSharingInvitation:completion:
_queue_declineRelatedInvitationsIfNecessaryForInvitation:completion:
_queue_fetchOrInitializeAccountAttestationAnonymizationSaltIfNecessaryWithCompletion:
setAnonymizationSalt:
subcredentialProvisioningService
sendAcceptSubcredentialProvisioningRequestForInvitation:metadata:
accountAttestationAnonymizationSaltWithCompletion:
startProvisioningWithInvitation:metadata:completion:
setAccountAttestationAnonymizationSalt:completion:
isPairedDeviceConnected
fetchAccountAttestationAnonymizationSaltOnRemoteDeviceWithCompletion:
bundleForClass:
localizedStringForKey:value:table:
fetchOrInitializeAccountAttestationAnonymizationSaltIfNecessaryWithCompletion:
_queue_statusForSentInvitation:completion:
_queue_statusForReceivedInvitation:completion:
_endProvisioningWithPassForInvitation:error:
targetDevice
paymentWebService:canAcceptInvitation:withCompletionV2:
paymentWebService:subcredentialInvitationsWithCompletion:
paymentWebService:matchingInvitationOnDevice:withTimeout:completion:
paymentWebService:accountAttestationAnonymizationSaltWithCompletion:
paymentWebService:setAccountAttestationAnonymizationSalt:withCompletion:
paymentWebService:requestSubcredentialInvitation:completion:
paymentWebService:updateMetadataOnPass:withCredential:completion:
paymentService
registerCredentialsWithIdentifiers:completion:
revokeCredentialsWithIdentifiers:completion:
removeSharingInvitation:withCompletion:
declineRelatedSharingInvitationsIfNecessary:withCompletion:
createAnonymizationSalt
pairedReaderIdentifier
_isInvitationUniqueForPairedReaderIdentifier:
_fetchInvitationMatchingInvitation:completion:
setSubcredentialProvisioningController:
createSessionWithDelegate:
setSharingSession:
sharedService
canAddSecureElementPassWithConfiguration:
pairedTerminalIdentifier
effectiveContactlessPaymentApplicationState
listSubcredentialInvitationsWithCompletion:
isSameInvitationAsInvitation:
initWithSession:invitation:metadata:declineRelatedInvitations:localDeviceWebService:remoteDeviceWebService:
_startProvisioningForProvisioningController:withConfiguration:
startProvisioningWithConfiguration:
_invokeCompletionWithPassForInvitation:error:
endSession
completion
canAddSecureElementPass
subcredentialProvisioningController:didFinishWithPass:
subcredentialProvisioningController:didFinishWithError:
subcredentialProvisioningController:didFinishWithError:inState:
subcredentialProvisioningController:shouldFailAfterError:withCompletion:
subcredentialProvisioningController:didEnterState:
startProvisioningWithInvitationIdentifier:metadata:completion:
requestSubcredentialInvitation:completion:
updateSubcredentialMetadataOnPass:withCredential:completion:
removeSharingInvitation:completion:
declineRelatedInvitationsIfNecessaryForInvitation:completion:
_deviceSupportsSubcredentialProvisioning
setInternalQueue:
setCallbackQueue:
setPaymentService:
setSubcredentialProvisioningService:
_internalQueue
_callbackQueue
_paymentService
_subcredentialProvisioningController
_sharingSession
_completion
_subcredentialProvisioningService
hasProposedReconciledState
_proposedReconciledState
numberWithUnsignedLongLong:
setPassTypeIdentifier:
setSerialNumber:
setLocalizedName:
hasPassTypeIdentifier
hasSerialNumber
setCredentialType:
setHasCredentialType:
hasCredentialType
hasLocalizedName
cardType
setCardType:
setHasCardType:
hasCardType
cardTypeAsString:
StringAsCardType:
passTypeIdentifier
serialNumber
credentialType
localizedName
_credentialType
_cardType
_localizedName
_passTypeIdentifier
_serialNumber
parsePayload:payloadID:maxCount:
allowedPayloadIDs
supportedCurrencyCodes
npk_objectForKey:class:
decimalNumberWithString:
notANumber
initWithSupportedCurrencyCodes:allowedPayloadIDs:
parsePayload:payloadID:
_supportedCurrencyCodes
_allowedPayloadIDs
npk_errorWithDomain:code:
addEntriesFromDictionary:
addIdentifiers:
identifiersCount
clearIdentifiers
identifiersAtIndex:
identifiersType
identifiers
setIdentifiers:
_identifiers
addActualExpressPassInformation:
actualExpressPassInformationsCount
clearActualExpressPassInformations
actualExpressPassInformationAtIndex:
actualExpressPassInformationType
actualExpressPassInformations
setActualExpressPassInformations:
_actualExpressPassInformations
setContext:
setResponseHeader:
fromStepAsString:
StringAsFromStep:
toStepAsString:
StringAsToStep:
hasContext
responseHeader
fromStep
setFromStep:
toStep
setToStep:
context
_context
_fromStep
_responseHeader
_toStep
setDataToSign:
setDigestToSign:
setAid:
hasDataToSign
hasDigestToSign
entanglementMode
setEntanglementMode:
setHasEntanglementMode:
hasEntanglementMode
entanglementModeAsString:
StringAsEntanglementMode:
hasAid
dataToSign
digestToSign
_aid
_dataToSign
_digestToSign
_entanglementMode
removeObserver:name:object:
_handleNotification:
_internalNameForNotificationName:
weak_removeObserver:name:object:
stringByAppendingString:
name
object
postNotificationName:object:userInfo:
weak_addObserver:selector:name:object:
weak_removeObserver:
setDidDeclineInvitations:
setHasDidDeclineInvitations:
hasDidDeclineInvitations
didDeclineInvitations
_didDeclineInvitations
setTimeoutInSeconds:
setHasTimeoutInSeconds:
hasTimeoutInSeconds
timeoutInSeconds
_timeoutInSeconds
setIsAvailable:
setHasIsAvailable:
hasIsAvailable
isAvailable
_isAvailable
resolveGreenTeaDataUsageIfNecessary
_resolveGreenTeaDataUsageIfNecessaryWithCompletion:
currentlyResolving
setCurrentlyResolving:
_currentlyResolving
_passData
_handlePMUButtonEvent
setButtonHandler:
paymentSessionSource:receivedDelegatedButtonEventAtDate:
_performDelegateCallback:
hasOutstandingSessions
beginLocalAuthenticationWithCompletion:
sessionWithQueue:
setRequireFirstInQueue:
setDeferAuthorization:
startSession
setCurrentPass:
setVasPasses:
paymentSessionSource:startedPaymentSession:dueToButtonEventAtDate:
invalidateLocalAuthenticationContexts
paymentSessionSource:declinedToStartPaymentSessionDueToPreconditionState:
initWithDelegate:buttonListener:callbackQueue:
handleDoublePressEvent
setDelegateHandlingButtonEvents:
setPreconditionState:
setInitialPass:
setLocalAuthenticationCoordinator:
_buttonListener
_sessionSourceQueue
_delegateHandlingButtonEvents
_deferAuthorization
_requireFirstInQueue
_preconditionState
_initialPass
_vasPasses
_localAuthenticationCoordinator
_matchesInStringWithType:
resultType
absoluteString
hasPrefix:
substringFromIndex:
dataDetectorWithTypes:error:
matchesInString:options:range:
npkIsPhoneNumber
npkIsEmailAddress
npkBaseAddress
setProductsActionData:
hasProductsActionData
productsActionData
_productsActionData
addPassSyncStateItems:
passSyncStateItemsCount
clearPassSyncStateItems
passSyncStateItemsAtIndex:
passSyncStateItemsType
passSyncStateItems
setPassSyncStateItems:
_passSyncStateItems
addSections:
sectionsCount
clearSections
sectionsAtIndex:
sectionsType
sections
setSections:
_sections
handlerQueue
initWithHandlerQueue:
_handlerQueue_buttonHandler
buttonHandler
setHandlerQueue:
_buttonHandler
_handlerQueue
numberWithUnsignedInt:
addUniqueIDs:
addManifestHashes:
setExpectedHash:
uniqueIDsCount
clearUniqueIDs
uniqueIDsAtIndex:
manifestHashesCount
clearManifestHashes
manifestHashesAtIndex:
uniqueIDsType
manifestHashesType
hasExpectedHash
setFullResyncNeeded:
setHasFullResyncNeeded:
hasFullResyncNeeded
setResyncID:
setHasResyncID:
hasResyncID
expectedHash
setUniqueIDs:
manifestHashes
setManifestHashes:
fullResyncNeeded
resyncID
_expectedHash
_manifestHashes
_resyncID
_uniqueIDs
_fullResyncNeeded
setCryptogram:
setChallengeResponse:
hasCryptogram
hasChallengeResponse
cryptogram
challengeResponse
_challengeResponse
_cryptogram
setTransactionData:
setAppLaunchToken:
hasPassData
hasTransactionData
hasAppLaunchToken
transactionData
appLaunchToken
_appLaunchToken
_transactionData
linkedDevicesWithRelationship:
isActive
setWithObject:
relationship
sendProtobuf:toDestinations:priority:options:identifier:error:
outgoingResponseIdentifier
incomingResponseIdentifier
expectsPeerResponse
isResponse
_handleWalletPreferencesChanged:
_updateAutomaticSelectionPasses
hasStoredValue
ingestedDate
valueAddedServiceAutomaticSelectionCoordinator:didUpdatePasses:
initWithDelegate:passesDataSource:
dataSource
_dataSource
webService
_provisioningLocalizedProgressDescriptionDidChange:
addObserverForName:object:queue:usingBlock:
beginSubjectReporting:
removeObserver:
endSubjectReporting:
subject:sendEvent:
_handleProvisioningFlowStarted:
_performNextActionForProvisioningState:
_flowPickerSectionsWithContext:provisioningController:readerModeSupported:digitalIssuanceSupported:
_transitionToChooseFlowWithSections:requestContext:
associatedCredentialsForDefaultBehaviour
_transitionBasedOnCredentials:product:requestContext:
_transitionToChooseProductWithProducts:requestContext:
_handleProductChosen:requestContext:
productIdentifier
_startDigitalIssuancePaymentWithAmount:requestContext:
_transitionToReaderModeForProduct:requestContext:
_transitionToTermsForReason:URL:requestContext:
_handleProceedWithCredentials:chosenByUser:requestContext:
declineTerms
initWithRequestContext:
_performTransitionToStep:withContext:
requirementsResponse
requiredPaymentSetupFields
_localRequiredFieldsFromRequirementsResponse
_requiredFieldsFromRequirementsResponseExcludingLocalFields
defaultPaymentSetupProvisioningFields
resetForNewProvisioning
credentialProvisioningQueue
setCurrentCredential:
initWithPaymentSetupFields:
paymentSetupFields
paymentSetupFieldWithIdentifier:
currentValue
setCurrentValue:
isCurrentValueFromCameraCapture
setCurrentValueFromCameraCapture:
_fieldsModelCompleteExceptForLocalFields:
_transitionToSecondaryManualEntryWithFields:credential:requestContext:
rawDictionary
status
resolveAmbiguousRequirementsWithProductIdentifier:
_handlePasscodeUpgradeCompleteWithSuccess:error:requestContext:
acceptTerms
_handleReaderModeTermsAccepted:
_handleDigitalIssuanceTermsAccepted:
_handleEndOfProvisioningFlowForCurrentPass:requestContext:
provisionedPass
_performNextStepForProvisionedPass:moreInfoAcknowledged:requestContext:
_requestVerificationOptionsForPass:context:
_updateVerificationForPass:channel:context:
_handleVerificationFieldsForPass:context:
_handleVerificationCode:forPass:context:
setPublicKeyHash:
setNonce:
_endProvisioningFlowWithError:requestContext:
_performEligibility:
_fetchInAppProvisioningCertificates:
encryptionScheme
initWithEncryptionScheme:
nonce
setNonceSignature:
_fetchAddRequestWithCertificatesResponse:requestContext:
displayableErrorForProvisioningError:
_sendDidEncounterError:requestContext:
signNonce:withCompletion:
issuerProvisioningCertificatesForRequest:withCompletion:
publicKeyHash
certificates
setCertificates:
nonceSignature
_handlePreconditionsVerified:
validatePreconditionsAndRegister:
preflightWithCompletion:
_verifyPasscodeStateIfNecessaryWithCompletion:
_configureWebServiceIfNecessary:completion:
deviceRegion
manifestForRegion:
images
hasCachedImageWithScale:
sharedImageAssetDownloader
downloadImageWithScale:fileDownloader:completion:
setHeroImages:
heroImages
defaultImages
setDefaultImagesUsed:
setupProductForProvisioning:includePurchases:withCompletionHandler:
setCredentialsToProvision:
nextCredentialToProvision
_startProvisioningForCredential:requestContext:
isAccountCredential
accountCredential
passDetailsResponse
account
creditDetails
termsAcceptanceRequired
setTermsAcceptedOutOfBand:
_requestRequirements:
_requestPassDetailsForAccountCredential:withCompletionHandler:
_noteProvisioningStateChangeForReaderMode:
_performRequirementsOrEligibilityForInAppProvisioning:
_performPasscodeUpgrade:
_performTerms:
_performProvision:
_handleFinished:
initWithPaymentCredential:
submissionString
initWithCardholderName:primaryAccountNumber:
initWithSource:
encryptionVersion
setEncryptionVersion:
encryptedPassData
setEncryptedCardData:
ephemeralPublicKey
setEphemeralPublicKey:
wrappedKey
setWrappedKey:
issuerIdentifier
setIssuerIdentifier:
hostApplicationIdentifier
setHostApplicationIdentifier:
hostApplicationVersion
setHostApplicationVersion:
FPInfo
setFPInfo:
hexEncoding
setCardholderName:
setCardholderNameInputMethod:
setPrimaryAccountNumber:
setPrimaryAccountNumberInputMethod:
setExpiration:
setExpirationInputMethod:
setProductIdentifier:
fieldsModel
submissionValuesForDestination:
setOverlayParameters:
secureSubmissionValuesForDestination:
setSecureOverlayParameters:
eligibilityResponse
initWithEligibilityResponse:
activationData
setActivationData:
setStyle:
setCardSecurityCode:
_newPaymentRequirementsRequest
possibleProducts
_transitionToProductDisambiguationWithProducts:requestContext:
updateWithPaymentSetupFields:
hasIncompletePaymentSetupFields
learnMoreURL
_displayableErrorWithIneligibilityReason:learnMoreURL:
requestRequirements:withCompletionHandler:
_newPaymentEligibilityRequest
eligibilityStatus
requestEligibility:withCompletionHandler:
passcodeUpgradeCompleted:
preflightPasscodeUpgradeWithCompletion:
_transitionToProvisioningProgressWithRequestContext:
_newPaymentProvisioningRequest
newAssertionForBundle:withReason:
requestProvisioning:withCompletionHandler:
internalIngestionState
_performNextStepForProvisionedPass:requestContext:
secureElementIdentifiers
updateDevicePaymentApplicationsWithSecureElementIdentifiers:
moreInfoItems
_transitionToMoreInformationWithItems:pass:requestContext:
verificationRecordForPass:
verificationStatus
requiredVerificationFields
_transitionToVerificationFieldsWithPaymentPass:fields:requestContext:
channel
_transitionToVerificationCodeWithPaymentPass:channel:requestContext:
_downloadAndAddUpdatedPassForPaymentPass:completion:
allChannels
_transitionToVerificationChannelsWithPaymentPass:channels:requestContext:
requestWithPass:
_handleVerificationResponseForPass:context:
_displayableErrorWithUnderlyingVerificationError:
verificationOptionsForRequest:completion:
currentStepIdentifier
setChannel:
updateVerification:completion:
_downloadRemoteAssetsAndAddPaymentPass:completion:
submitVerificationCode:verificationData:forPass:completion:
passWithPassTypeIdentifier:serialNumber:completion:
dataAccessor
paymentWebService:addPaymentPass:withCompletionHandler:
downloadRemoteAssetsWithCloudStoreCoordinatorDelegate:completion:
currentProduct
devSigned
isRemoteCredential
remoteCredential
predicateWithBlock:
filteredArrayUsingPredicate:
_transitionToChooseCredentials:requestContext:
provisioningMethodTypes
provisioningMethodMetadataForType:
_transitionToDigitalIssuanceForProduct:requestContext:
_transitionToManualEntry:
UUID
UUIDString
setFlowIdentifiers:
setFlowIdentifierToCredential:
setAllowsManualEntry:
configuration
cameraFirstProvisioningEnabledForRegion:
setCameraFirstProvisioningEnabled:
setSetupFields:
incompletePaymentSetupFields
_filteredPaymentSetupFields:forLocalDeviceEntry:
setCredential:
setAllowsAddingDifferentCard:
setPaymentPass:
setMoreInfoItems:
setVerificationChannels:
setVerificationFields:
setVerificationChannel:
remaining
_endProvisioningFlowWithSuccessForPass:requestContext:
setCardAdded:
setProvisionedPass:
setError:
credential
requestContext
_sendDidTransitionFromStep:toStep:withContext:
paymentProvisioningFlowController:didTransitionFromStep:toStep:withContext:
paymentProvisioningFlowController:didEncounterError:requestContext:
_requiredFieldsFromRequirementsResponse
_fieldRequiresLocalEntry:
pk_objectsPassingTest:
submissionStringMeetsAllRequirements
requiredFields
needsConfiguration
configurePaymentServiceWithCompletion:
setupAccountCredentialForProvisioning:completion:
setReaderModeProvisioningSupported:
setDigitalIssuanceSupported:
setSeparateLocalDeviceEntryRequired:
startProvisioningFlow:
startIssuerVerificationFlowForPaymentPass:requestContext:
startInAppProvisioningFlowWithConfiguration:requestContext:
acknowledgeWelcome:
chooseFlowForPickerItem:requestContext:
chooseProduct:requestContext:
handleDigitalIssuanceAmount:requestContext:
chooseReaderMode:
handleReaderModeFields:requestContext:
chooseCredentials:requestContext:
chooseManualEntry:
handleManualEntryFields:credential:requestContext:
handleProductSelection:requestContext:
handlePasscodeUpgradeCompleteWithSuccess:error:requestContext:
acceptTerms:
skipProvisioning:
acknowledgeMoreInformation:
handleIssuerVerificationChannel:requestContext:
handleIssuerVerificationFields:requestContext:
handleIssuerVerificationCode:requestContext:
skipIssuerVerification:
handleIssuerApplicationAddRequest:requestContext:
initWithProvisioningController:setupContext:
provisioningController
setupContext
isReaderModeProvisioningSupported
isDigitalIssuanceSupported
isSeparateLocalDeviceEntryRequired
unitTestingAuthorizationController
setUnitTestingAuthorizationController:
unitTestingCardIngester
setUnitTestingCardIngester:
inAppProvisioningRequestConfiguration
setInAppProvisioningRequestConfiguration:
inAppProvisioningRequest
setInAppProvisioningRequest:
inAppProvisioningPublicKeyHash
setInAppProvisioningPublicKeyHash:
inAppProvisioningNonce
setInAppProvisioningNonce:
inAppProvisioningGetRequestTimer
setInAppProvisioningGetRequestTimer:
setWebService:
currentStep
setCurrentStep:
chooseCredentialsStepIdentifier
setChooseCredentialsStepIdentifier:
immediatelyBeforeTermsStepIdentifier
setImmediatelyBeforeTermsStepIdentifier:
setFieldsModel:
progressNotificationToken
setProgressNotificationToken:
provisioningProgressRequestContext
setProvisioningProgressRequestContext:
issuerVerificationPass
setIssuerVerificationPass:
currentCredential
setCurrentProduct:
termsReason
setTermsReason:
termsAcceptedOutOfBand
digitalIssuancePaymentRequest
setDigitalIssuancePaymentRequest:
digitalIssuanceAmount
setDigitalIssuanceAmount:
digitalIssuancePurchase
setDigitalIssuancePurchase:
digitalIssuanceAmountRequestContext
setDigitalIssuanceAmountRequestContext:
digitalIssuancePaymentRequestContext
setDigitalIssuancePaymentRequestContext:
authorizationController
setAuthorizationController:
cardIngester
setCardIngester:
setInternalIngestionState:
flowIngestionState
setFlowIngestionState:
ingestionProgress
setIngestionProgress:
ingestionStateOnRetry
setIngestionStateOnRetry:
ingestionCardSessionToken
setIngestionCardSessionToken:
ingestionCardNotFoundTimer
setIngestionCardNotFoundTimer:
ingestionMethodMetadata
setIngestionMethodMetadata:
readerModeRequestContext
setReaderModeRequestContext:
_readerModeProvisioningSupported
_digitalIssuanceSupported
_separateLocalDeviceEntryRequired
_termsAcceptedOutOfBand
_currentStep
_provisioningController
_setupContext
_unitTestingAuthorizationController
_unitTestingCardIngester
_inAppProvisioningRequestConfiguration
_inAppProvisioningRequest
_inAppProvisioningPublicKeyHash
_inAppProvisioningNonce
_inAppProvisioningGetRequestTimer
_webService
_chooseCredentialsStepIdentifier
_immediatelyBeforeTermsStepIdentifier
_fieldsModel
_progressNotificationToken
_provisioningProgressRequestContext
_issuerVerificationPass
_currentCredential
_currentProduct
_termsReason
_digitalIssuancePaymentRequest
_digitalIssuanceAmount
_digitalIssuancePurchase
_digitalIssuanceAmountRequestContext
_digitalIssuancePaymentRequestContext
_authorizationController
_cardIngester
_internalIngestionState
_flowIngestionState
_ingestionProgress
_ingestionStateOnRetry
_ingestionCardSessionToken
_ingestionCardNotFoundTimer
_ingestionMethodMetadata
_readerModeRequestContext
initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:updateInterval:
_sendStatusUpdate
service
pendingStatusProtobuf
responseIdentifier
statusTimer
setStatusTimer:
sendOptions
messagePriority
updatesSent
setUpdatesSent:
maxUpdates
initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:
setService:
setPendingStatusProtobuf:
setMessagePriority:
setResponseIdentifier:
queue
setQueue:
setSendOptions:
setMaxUpdates:
_service
_pendingStatusProtobuf
_messagePriority
_responseIdentifier
_statusTimer
_queue
_sendOptions
_updatesSent
_maxUpdates
setBalanceReminderBytes:
hasBalanceReminderBytes
balanceReminderBytes
_balanceReminderBytes
setAuthToken:
hasAuthToken
authToken
_authToken
setPassID:
setPreferredApplicationAID:
hasPassID
hasPreferredApplicationAID
passID
preferredApplicationAID
_passID
_preferredApplicationAID
setUserLanguageCode:
setPassImageSize:
setPassThumbnailImageSize:
setUseSimulatedFlowController:
setHasUseSimulatedFlowController:
hasUseSimulatedFlowController
hasUserLanguageCode
hasPassImageSize
hasPassThumbnailImageSize
useSimulatedFlowController
userLanguageCode
passImageSize
passThumbnailImageSize
_passImageSize
_passThumbnailImageSize
_userLanguageCode
_useSimulatedFlowController
pathForResource:ofType:
defaultManager
fileExistsAtPath:
fileURLWithPath:
initWithCGImage:scale:orientation:
constraintsWithMaxSize:
logoImage
resizedImage:
setLogoImage:
resizedImageToFit:
backgroundImage
resizedImageToCover:
setBackgroundImage:
thumbnailImage
setThumbnailImage:
stripImage
setStripImage:
footerImage
setFooterImage:
bankLogoImage
setBankLogoImage:
networkLogoImage
setNetworkLogoImage:
cobrandLogoImage
setCobrandLogoImage:
cardBackgroundImage
setCardBackgroundImage:
cardBackgroundCombinedImage
setCardBackgroundCombinedImage:
npkImageByMemoryMappingDataWithTemporaryFilePrefix:
loadPDFArtFromBundle:targetSize:scale:
resizeWithScreenSize:
loadPDFArtFromBundle:
npkHasValidPaymentCardAssets
setRegistrationDataBytes:
hasRegistrationDataBytes
registrationDataBytes
_registrationDataBytes
initWithPass:lazyLoadEncodedImages:
setLazyLoadEncodedImages:
setManifestHash:
relevantDate
setRelevantDate:
logoText
setLogoText:
backgroundColor
setBackgroundColor:
foregroundColor
setForegroundColor:
labelColor
setLabelColor:
setIngestionDate:
setDevicePaymentApplications:
setDevicePrimaryContactlessPaymentApplication:
devicePrimaryInAppPaymentApplication
setDevicePrimaryInAppPaymentApplication:
isPrivateLabel
setPrivateLabel:
isCobranded
setCobranded:
setDeletePending:
size
constraintsWithFixedSize:
blurredImageWithRadius:constraints:
setLocalizedDescription:
setNfcPayload:
setCompleteHash:
setHasStoredValue:
setSettings:
issuerCountryCode
setIssuerCountryCode:
availableActions
setAvailableActions:
organizationName
setOrganizationName:
setExpressPassTypesMask:
hasAssociatedPeerPaymentAccount
setHasAssociatedPeerPaymentAccount:
subcredentials
setSubcredentials:
decodeObjectOfClass:forKey:
setGroupID:
decodeIntegerForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
setPreferredPaymentApplication:
setEffectivePaymentApplicationState:
decodeBoolForKey:
setHasUserSelectableContactlessPaymentApplications:
setLogoImageEncoded:
setBackgroundImageEncoded:
setTransitAppletState:
setFrontFieldBuckets:
setBackFieldBuckets:
setLastAddValueAmount:
setPendingAddValueDate:
encodeObject:forKey:
groupID
encodeInteger:forKey:
ingestionDate
preferredPaymentApplication
effectivePaymentApplicationState
encodeBool:forKey:
deletePending
hasUserSelectableContactlessPaymentApplications
logoImageEncoded
backgroundImageEncoded
completeHash
numberWithUnsignedInteger:
transitAppletState
frontFieldBuckets
backFieldBuckets
lastAddValueAmount
pendingAddValueDate
expressPassTypesMask
isEqualToData:
isEqualToDate:
stringByAppendingFormat:
encodeAsData:
lazyLoadEncodedImages
isCachingEnabled
supportsInAppPaymentOnNetworks:capabilities:issuerCountryCodes:paymentApplicationStates:
acceptedForNonWebPaymentWithSupportedNetworkIdentifiers:merchantCapabilities:paymentMode:
filteredSetUsingPredicate:
transitPassPropertiesWithPaymentApplication:
timeIntervalSinceNow
transitProperties
isInStation
felicaProperties
isInShinkansenStation
supportsSecureCoding
setCachingEnabled:
encodeWithCoder:
initWithCoder:
initWithPass:
encodeObject:asDataInCoder:withKey:
supportsInAppPaymentOnNetworks:issuerCountryCodes:
fieldForKey:
isAddValuePending
isEnroute
hasValidNFCPayload
_hasStoredValue
_privateLabel
_cobranded
_deletePending
_hasUserSelectableContactlessPaymentApplications
_hasAssociatedPeerPaymentAccount
_lazyLoadEncodedImages
_logoImage
_backgroundImage
_expressPassTypesMask
_backgroundImageEncoded
_logoImageEncoded
_groupID
_manifestHash
_style
_relevantDate
_ingestionDate
_nfcPayload
_completeHash
_settings
_logoText
_backgroundColor
_foregroundColor
_labelColor
_localizedDescription
_devicePaymentApplications
_devicePrimaryContactlessPaymentApplication
_devicePrimaryInAppPaymentApplication
_preferredPaymentApplication
_effectivePaymentApplicationState
_issuerCountryCode
_availableActions
_organizationName
_transitAppletState
_frontFieldBuckets
_backFieldBuckets
_lastAddValueAmount
_pendingAddValueDate
_subcredentials
isAccessPass
initWithRequestConfiguration:delegate:
_remoteObjectProxyWithErrorHandler:
presentWithCompletion:
setConfiguration:completionHandler:
dismissWithCompletion:
_sendDidFinishWithPass:error:
addPaymentPassController:generateRequestWithCertificateChain:nonce:nonceSignature:completionHandler:
addPaymentPassController:didFinishAddingPaymentPass:error:
canAddPaymentPass
generateRequestWithCertificateChain:nonce:nonceSignature:completionHandler:
didFinishWithPass:error:
setConfiguration:
didFinishCallbackSent
setDidFinishCallbackSent:
_didFinishCallbackSent
_configuration
setDigitalCardImageUrl:
setThumbnailImageUrl:
setLogoImageUrl:
hasDigitalCardImageUrl
hasThumbnailImageUrl
hasLogoImageUrl
digitalCardImageUrl
thumbnailImageUrl
logoImageUrl
_digitalCardImageUrl
_logoImageUrl
_thumbnailImageUrl
addRemoteCredentials:
addCredentials:
remoteCredentialsCount
clearRemoteCredentials
remoteCredentialsAtIndex:
credentialsCount
clearCredentials
credentialsAtIndex:
remoteCredentialsType
credentialsType
setHasAllowsManualEntry:
hasAllowsManualEntry
remoteCredentials
setRemoteCredentials:
credentials
setCredentials:
allowsManualEntry
_credentials
_remoteCredentials
_allowsManualEntry
setLibraryHash:
setPreviousManifestHash:
setCatalog:
hasLibraryHash
hasPreviousManifestHash
hasCatalog
setLastKnownResyncID:
setHasLastKnownResyncID:
hasLastKnownResyncID
setSyncID:
setHasSyncID:
hasSyncID
libraryHash
previousManifestHash
catalog
lastKnownResyncID
syncID
_catalog
_lastKnownResyncID
_libraryHash
_previousManifestHash
_syncID
_openTapToRadarWithRequest:completion:
_requestUserPermisionToFileRadarWithRequest:completion:
_applicationWorkSpace
tapToRadarURL
openURL:configuration:completionHandler:
defaultWorkspace
fileRadarWithRequest:requestUserPermision:completion:
_playSoundsWithIdentifier:
playProvisioningSuccessHaptic
playProvisioningFailureHaptic
playTransactionSuccessHaptic
playTransactionFailureHaptic
playAccessScanCompleteHaptic
playSessionStartFailureHaptic
playSessionTimeoutHaptic
playWarsawHaptic
playInAppPaymentSuccessHaptic
playInAppPaymentFailureHaptic
playTransactionAuthenticationHaptic
handleIncomingProtobufData:withMessageType:
handlePasscodeNowCompliant
interfaceWithProtocol:
sendProtobufData:withMessageType:
handleProvisioningFlowComplete
setClasses:forSelector:argumentIndex:ofReply:
setSessionIdentifier:
protocolVersionAsString:
StringAsProtocolVersion:
hasSessionIdentifier
protocolVersion
setProtocolVersion:
sessionIdentifier
_protocolVersion
_sessionIdentifier
_errorWithUnderlyingError:
initWithType:reason:
isAcquired
acquireWithCompletion:
invalidateWithCompletion:
reason
_reason
_handleDeviceUnpaired:
_handleDevicePaired:
_handleDeviceBecameActive:
_handleDevicePairingFailure:
_handleCompanionAgentStarted
valueForProperty:
deferredActions
deferredSharedPaymentWebServiceContexts
deferredAddedPaymentPasses
deferredPaymentPassesForDevice:
setQueueAppropriateFailedActions:
enumerateKeysAndObjectsUsingBlock:
_performDeferredActions
_cleanUpDeferredDataForPairingID:
getPairedDevices
allKeys
unionSet:
sharedDeferredActionHandler
performActionWhenCompanionAgentIsAvailable:forDevice:
deferredSharedPaymentWebServiceContextForDevice:
setDeferredSharedPaymentWebServiceContext:forDevice:
addDeferredPaymentPass:forDevice:
deferredPaymentPassUniqueIDsForDevice:
deferredPaymentPassWithUniqueID:forDevice:
setDeferredActions:
setDeferredSharedPaymentWebServiceContexts:
setDeferredAddedPaymentPasses:
_deferredActions
_deferredSharedPaymentWebServiceContexts
_deferredAddedPaymentPasses
addChosenPaymentCredentialIdentifiers:
chosenPaymentCredentialIdentifiersCount
clearChosenPaymentCredentialIdentifiers
chosenPaymentCredentialIdentifiersAtIndex:
chosenPaymentCredentialIdentifiersType
chosenPaymentCredentialIdentifiers
setChosenPaymentCredentialIdentifiers:
_chosenPaymentCredentialIdentifiers
setBitmapData:
width
setWidth:
height
setHeight:
bitsPerComponent
setBitsPerComponent:
bitsPerPixel
setBitsPerPixel:
bytesPerRow
setBytesPerRow:
bitmapInfo
setBitmapInfo:
bitmapData
_bitsPerComponent
_bitsPerPixel
_bytesPerRow
_height
_width
_bitmapData
_bitmapInfo
setIdentifier:
setImageHash:
setImageData:
setImageURL:
hasImageHash
hasImageData
hasImageURL
imageHash
imageData
imageURL
_imageData
_imageHash
_imageURL
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
_timestampDateFormatter
timestamp
stringFromDate:
currentPass
hasSession
sessionStarted
sessionWaitingToStart
doublePressReceived
doublePressTimestamp
sessionAuthorized
passActivating
contactlessInterfaceReady
canChangePass
serviceModeRequestedPass
inServiceMode
expressTransactionStatus
failureType
completionReason
transactionContext
setTransactionContext:
setFailureType:
stateForNonModalDisplay
setTimestamp:
setHasSession:
setSessionStarted:
setSessionWaitingToStart:
setDoublePressReceived:
setDoublePressTimestamp:
setSessionAuthorized:
setPassActivating:
setContactlessInterfaceReady:
setCanChangePass:
setServiceModeRequestedPass:
setInServiceMode:
setExpressTransactionStatus:
setCompletionReason:
_hasSession
_sessionStarted
_sessionWaitingToStart
_doublePressReceived
_sessionAuthorized
_passActivating
_contactlessInterfaceReady
_canChangePass
_inServiceMode
_timestamp
_currentPass
_doublePressTimestamp
_serviceModeRequestedPass
_expressTransactionStatus
_failureType
_completionReason
_transactionContext
setTransactionStatus:
detailLabel
formattedValue
action
hasPendingUpdate
isPrimaryBalance
usageDateRange
isCountBasedCommutePlan
details
transitType
amounts
transactionType
enRoute
bundleWithIdentifier:
currencyCode
appletCurrencyCode
setCurrencyCode:
setPaymentTransaction:
setTransactionType:
setTransactionDescription:
setDisplayablePassItems:
setRedeemedTicket:
setEnRoute:
transactionPass
valueAddedServicePass
transactionDescription
displayablePassItems
transactionStatus
paymentBarcode
authenticationRequested
updateWithConcreteTransactions:ephemeralTransaction:updatedPassTransitItems:paymentApplication:
forceToTransitTypeTransactionWithTransactionStatus:
setTransactionPass:
setValueAddedServicePass:
paymentMethodDescription
setPaymentMethodDescription:
paymentTransaction
redeemedTicket
setPaymentBarcode:
setAuthenticationRequested:
_redeemedTicket
_enRoute
_authenticationRequested
_transactionPass
_valueAddedServicePass
_paymentMethodDescription
_paymentTransaction
_transactionStatus
_transactionType
_transactionDescription
_displayablePassItems
_paymentBarcode
_handleContactlessInterfaceVisibilityTimeoutTimer
_registerForServiceModeRequestNotification
_cleanupBarcodePaymentSession
_cleanupQuickPaymentSession
_handleServiceModeRequestEnded
confirmSessionExpectingCredential:
_startContactlessInterfaceVisibilityTimeoutTimer
_baseSessionStateForUpdate
_sendSessionStateToObservers:
_stopContactlessInterfaceVisibilityTimeoutTimer
quickPaymentSession
_sessionStateForTransactionContext:
barcodePaymentSession
isEqualToPassIncludingMetadata:
handleUserSelectedPass:
_sessionStateForUserCanceledBarcodeTransaction
handleExpressTransactionStatus:forPass:paymentApplication:concreteTransactions:ephemeralTransaction:mutatedBalances:appletState:
_sessionStateForExpressTransactionStatus:pass:paymentApplication:concreteTransactions:ephemeralTransaction:mutatedBalances:appletState:
userSelectedPass
supportsBarcodePayment
devicePrimaryBarcodePaymentApplication
initWithPaymentPass:authorizationCredential:
setBarcodePaymentSession:
currentPaymentBarcode
_sessionStateForPaymentBarcode:
retryFetchingBarcode
submitUserIntentionConfirmation:
submitPinCode:
_sessionStateForBarcodeTransactionStatus:paymentBarcode:transaction:
invalidateSession
pk_arrayByApplyingBlock:
componentsJoinedByString:
secureElementPass
passActivationState
lastSessionState
_prepareSessionStateForSendingToObservers:
contactlessPaymentSessionManager:didChangeSessionState:
paymentSession:didMakePassCurrent:
_handleValueAddedServiceTransactions:forValueAddedServicePasses:paymentTransaction:outUserInterventionRequiredPasses:
terminalMode
transitStateWithPassUniqueIdentifier:paymentApplication:completion:
deactivateSessionWithCompletion:
setQuickPaymentSession:
cleanupDelegate
transaction
valueAddedServiceTransactions
didSucceed
valueAddedServicePasses
dataUsingEncoding:
SHA256Hash
merchant
paymentApplication
insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:paymentApplication:completion:
transitHistory
expressState
processTransitTransactionEventWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:expressTransactionState:
_updatedPassItemFieldWithPaymentPass:transitAppletBalances:appletState:paymentApplication:
insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:completion:
error
merchantURL
shouldReceiveSessionUpdatesWithPriority
_managerContextForContactlessInterfaceTransactionContext:
_paymentBalancesFromTransitAppletBalances:
initWithPass:transitProperties:balances:commutePlanValueRequired:
allPassItemsFields
barcodePaymentSession:didReceivePaymentBarcode:
barcodePaymentSession:didUpdateTransactionStatus:withTransaction:
paymentSession:willActivatePass:
paymentSession:didActivatePass:
paymentSession:didFailTransactionForPass:withValueAddedServiceTransactions:forValueAddedServicePasses:
paymentSession:didCompleteForReason:withTransactionContext:
paymentSessionDidEnterField:
paymentSessionDidExitField:
paymentSession:didCompleteTransactionWithContext:
paymentSessionDidReceiveAuthorizationTimeout:
paymentSessionDidReceiveActivationError:
paymentSessionDidReceiveTransactionError:
paymentSessionIsWaitingToStart:
paymentSessionDidStart:
paymentSessionDidSelectPayment:
paymentSessionDidSelectValueAddedService:
paymentSessionDidReceiveStartTransaction:
paymentSessionDidReceiveActivityTimeout:
paymentSessionDidReceiveCredential:
handleContactlessPaymentSession:doublePressExpected:
handleContactlessPaymentInterfaceDidAppear
handleContactlessPaymentInterfaceDidDisappear
handleCredential:
handleDoublePressReceivedAtDate:
handleServiceModeRequestedForPass:
handleEndSessionRequested
handleAutomaticSelectionValueAddedServicePasses:
handleExpressTransactionStatus:forPass:
handleLocalAuthenticationError:
handleEndQuickPaymentSessionRequestedByUI
handlePaymentBarcodeRequested
handleRetryLoadingPaymentBarcodeRequested
handleBarcodePaymentUserIntentionConfirmation:
handleBarcodePaymentPinCodeEntry:
handleEndBarcodePaymentSessionRequestedByUI
setLastSessionState:
setCleanupDelegate:
setUserSelectedPass:
contactlessPaymentInterfaceVisible
setContactlessPaymentInterfaceVisible:
contactlessInterfaceVisibilityTimeoutTimer
setContactlessInterfaceVisibilityTimeoutTimer:
serviceModeRequestNotifyToken
setServiceModeRequestNotifyToken:
_contactlessPaymentInterfaceVisible
_serviceModeRequestNotifyToken
_lastSessionState
_credential
_quickPaymentSession
_cleanupDelegate
_userSelectedPass
_contactlessInterfaceVisibilityTimeoutTimer
_barcodePaymentSession
acceptedPasses
deviceInAppPaymentApplications
beginUpdates
currentBalance
setPeerPaymentBalance:
setPaymentApplication:
endUpdates
peerPaymentQuote
npkIsPeerPayment
paymentRequest
paymentSummaryItems
firstQuoteItemOfType:
npkIsSplitPeerPayment
_hasNonPeerPaymentAcceptedPasses
requestType
npkSetPassAndPaymentApplicationForAID:
npkIsSkeletonPeerPayment
npkIsTopUp
npkIsSplitPeerPaymentWithAnotherPaymentMethod
npkIsSplitPeerPaymentWithoutAnotherPaymentMethod
npkIsCardOnFilePayment
npkIsExternalContextAuthorization
setPasscodeConnection:
setSystemSettingsManager:
setPreflighting:
setPreflightCompletionHandler:
_checkSpaceAvailableOnSecureElement
_checkWatchConnected
_checkCompanioniCloudAccount
_checkWatchiCloudAccount
_checkPasscodeEnabledAndUnlockedState
_checkWristDetectEnabledState
_finishPresentingSetupControllerIfReadyWithSuccess:error:
watchConnected
_errorForConnectionIssue
_checkPasscodeEnabledState
companionAgentConnection
setSpaceAvailableOnSecureElement:
localizedStringFromNumber:numberStyle:
paymentPassUniqueIDsSynchronous:reply:
setWatchConnected:
setNeedsCompanioniCloudAccount:
setCheckedCompanioniCloudStatus:
_errorForCompanionAccountNeeded
setCheckedWatchiCloudStatus:
setNeedsWatchiCloudAccount:
systemSettingsManager
checkedWatchiCloudStatus
aa_primaryAppleAccount
aa_personID
getiCloudInfo:
_checkPasscodeEnabledAndUnlockedStateRequiringPasscode:requiringUnlock:
setCheckedWatchPasscodeAndUnlockedStatus:
setNeedsPasscode:
setNeedsUnlock:
setAuthRandomSetIfNecessary:
setWatchPasscodeAndUnlockedQueryDate:
passcodeConnection
checkedWatchPasscodeAndUnlockedStatus
needsPasscode
needsUnlock
_setAuthRandomIfNecessary
getRemoteDeviceState:
watchPasscodeAndUnlockedQueryDate
boolValue
setNeedsWristDetection:
boolForKey:
setCheckedWristDetectionStatus:
_errorForGenericIssue
setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow:
isPreflighting
checkedWristDetectionStatus
needsWristDetection
_errorForWristDetectNeeded
checkedCompanioniCloudStatus
needsCompanioniCloudAccount
needsWatchiCloudAccount
_errorForGizmoAccountNeeded
_errorForPasscodeNeeded
_errorForUnlockNeeded
spaceAvailableOnSecureElement
authRandomSetIfNecessary
preflightCompletionHandler
URLWithString:
initWithWebService:companionAgentConnection:
addCardPreflightWithCompletion:
transferToCompanionPreflightWithCompletion:
acceptInvitationPreflightWithCompletion:
setCompanionAgentConnection:
_checkedWatchPasscodeAndUnlockedStatus
_checkedCompanioniCloudStatus
_checkedWatchiCloudStatus
_checkedWristDetectionStatus
_authRandomSetIfNecessary
_watchConnected
_spaceAvailableOnSecureElement
_needsPasscode
_needsUnlock
_needsCompanioniCloudAccount
_needsWatchiCloudAccount
_needsWristDetection
_preflighting
_passcodeConnection
_systemSettingsManager
_preflightCompletionHandler
_companionAgentConnection
_watchPasscodeAndUnlockedQueryDate
associatedCredentials
paymentSetupBrowsableProductTypesForRegion:
paymentSetupProductModel
_filteredPaymentSetupProducts:localCredentials:setupContext:webService:mobileCarrierRegion:readerModeSupported:digitalIssuanceSupported:
setupProductsOfType:
displayName
betaPaymentNetworksForRegion:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
isEqualToNumber:
paymentOptions
allSetupProducts
_localCredentials:containProduct:
supportsOSVersion:deviceClass:
regions
supportedProvisioningMethods
allSupportedProtocols
supportsCredentialType:
hsa2Requirement
_isHSA2Enabled
setSupportedProvisioningMethods:
setPaymentSetupProducts:
altDSIDForAccount:
setAltDSID:
setSecurityUpgradeContext:
_authContext
altDSID
authKitAccountWithAltDSID:
securityLevelForAccount:
pk_containsObjectPassingTest:
setHashData:
hasHashData
hashData
_hashData
fetchAccountAttestationAnonymizationSaltResponse:
setProtobufAction:forIncomingResponsesOfType:
subcredentialProvisioningQueue
setMetadataData:
sendProtobuf:responseExpected:extraOptions:
trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:
outstandingRequests
completionHandler
anonymizationSalt
registerProtobufActionsForService:
setDeviceName:
setPassType:
setHasPassType:
hasPassType
passTypeAsString:
StringAsPassType:
hasLocalizedDescription
hasOrganizationName
setRemotePass:
setHasRemotePass:
hasRemotePass
hasDeviceName
remotePass
deviceName
_deviceName
_passType
_remotePass
_performFakeTransitHistoryFetch
transitAppletHistoryFetcher:gotTransitAppletHistory:forAppletWithAID:
setAIDToFetch:
requestTransitHistoryFetch
aidToFetch
setAidToFetch:
_aidToFetch
addAssociatedApplicationIdentifiers:
setRequestData:
associatedApplicationIdentifiersCount
clearAssociatedApplicationIdentifiers
associatedApplicationIdentifiersAtIndex:
associatedApplicationIdentifiersType
hasRequestData
requestData
associatedApplicationIdentifiers
setAssociatedApplicationIdentifiers:
_associatedApplicationIdentifiers
_requestData
setUrlString:
hasUrlString
urlString
_urlString
initWithTransitProperties:appletState:balanceFields:commutePlanFields:
commutePlanFields
_transitProperties
_balanceFields
_commutePlanFields
addBalanceBytes:
balanceBytesCount
clearBalanceBytes
balanceBytesAtIndex:
balanceBytesType
balanceBytes
setBalanceBytes:
_balanceBytes
numberWithInt:
setResponseDictionary:
hasResponseDictionary
setHttpStatus:
setHasHttpStatus:
hasHttpStatus
resultCode
setResultCode:
responseDictionary
httpStatus
_httpStatus
_responseDictionary
_resultCode
_setUpSubcredentialProvisioningQueue
_setUpSubcredentialProvisioningService
_sendProtobuf:responseExpected:extraOptions:
_trackOutstandingRequestWithMessageIdentifier:completionHandler:errorHandler:
subcredentialService
setCompletionHandler:
setErrorHandler:
setMessageIdentifier:
errorHandler
setTimeoutHandler:
setTimeoutQueue:
setOrResetCleanupTimer
sendProtobuf:responseExpected:
setOutstandingRequests:
setSubcredentialService:
_subcredentialProvisioningQueue
_outstandingRequests
_subcredentialService
initWithMachServiceName:options:
setTransientPassUniqueID:
setServiceModeRequested:
setDisableCardSelection:
setDoublePressDelegationRequested:
setRemoteObjectInterface:
handleDelegatedDoublePressEvent
setExportedInterface:
setExportedObject:
_resyncState
setInterruptionHandler:
setXpcConnection:
setInvalidationHandler:
_setQueue:
resume
_remoteObjectProxy
xpcConnection
_xpcConnection
initWithPassWithUniqueID:
setRequestServiceMode:
requestServiceMode
disableCardSelection
_requestServiceMode
_disableCardSelection
doublePressDelegationAssertionDidReceiveDelegatedDoublePressEvent:
setUpdateRequestData:
hasUpdateRequestData
setCancelUpdate:
setHasCancelUpdate:
hasCancelUpdate
hasPass
setRequestAuthorization:
setHasRequestAuthorization:
hasRequestAuthorization
setShouldNotifyUser:
setHasShouldNotifyUser:
hasShouldNotifyUser
updateRequestData
cancelUpdate
requestAuthorization
shouldNotifyUser
_updateRequestData
_cancelUpdate
_requestAuthorization
_shouldNotifyUser
_companionCatalog
_watchCatalog
addPassAppletStates:
passAppletStatesCount
clearPassAppletStates
passAppletStatesAtIndex:
passAppletStatesType
passAppletStates
setPassAppletStates:
_passAppletStates
addReferenceExpressPassesInformation:
setExpressPassInformation:
referenceExpressPassesInformationsCount
clearReferenceExpressPassesInformations
referenceExpressPassesInformationAtIndex:
referenceExpressPassesInformationType
hasExpressPassInformation
expressPassInformation
referenceExpressPassesInformations
setReferenceExpressPassesInformations:
_expressPassInformation
_referenceExpressPassesInformations
setAuthRandomSet:
setHasAuthRandomSet:
hasAuthRandomSet
authRandomSet
_authRandomSet
setVerificationCode:
hasVerificationCode
verificationCode
_verificationCode
setKey:
setValue:
hasValue
_key
_value
_baseFlowStepDescription
verificationChannelsStepContext
verificationFieldsStepContext
verificationCodeStepContext
getIssuerApplicationAddRequestStepContext
_requestContext
decodeObjectForKey:
initWithRequestHeader:
_currentStepIdentifier
defaultImagesUsed
_defaultImagesUsed
_heroImages
flowIdentifiers
flowIdentifierToCredential
_flowIdentifierToCredential
_flowIdentifiers
allowsReaderModeEntry
setAllowsReaderModeEntry:
_allowsReaderModeEntry
subtitle
setupFields
setSubtitle:
_subtitle
_setupFields
ingestionState
decodeDoubleForKey:
encodeDouble:forKey:
physicalCardImageURL
setPhysicalCardImageURL:
setIngestionState:
_physicalCardImageURL
_ingestionState
cameraFirstProvisioningEnabled
_cameraFirstProvisioningEnabled
allowsAddingDifferentCard
_allowsAddingDifferentCard
_moreInfoItems
_paymentPass
cardAdded
_cardAdded
_provisionedPass
_error
verificationChannels
_verificationChannels
verificationFields
_verificationFields
verificationChannel
_verificationChannel
_certificates
_nonce
_nonceSignature
isIncompatible
setIncompatible:
setDate:
setTransaction:
setValueAddedServicePasses:
setValueAddedServiceTransactions:
setTransitHistory:
felicaHistory
setExpressState:
_incompatible
_date
_paymentApplication
_transaction
_valueAddedServicePasses
_valueAddedServiceTransactions
_transitHistory
_felicaHistory
_expressState
_handleTimeoutTimer
_setTimeoutTimer
_handleTransactionCompleteDarwinNotification
invalidated
ourInternalQueue
setOurCurrentPass:
ourCallbackQueue
_scheduleDidActivateEventForPass:
ourCurrentPass
setOurVasPasses:
_handleSessionHasCredentialIfNecessaryWithCurrentPass:
ourVasPasses
setOurInServiceMode:
ourInServiceMode
_sendTransactionCompleteToDelegate
ourConfirmed
setOurConfirmed:
setInvalidated:
changeCardToken
setChangeCardToken:
timeoutTimer
ourPerformedFirstActivation
setOurPerformedFirstActivation:
endSessionWhenAuthorizationIsConsumed
fieldDetectorDidEnterField:withProperties:
fieldDetectorDidExitField:
vasPasses
deferAuthorization
setOurCallbackQueue:
setOurInternalQueue:
setTimeoutTimer:
fieldDetector
setFieldDetector:
_ourConfirmed
_ourInServiceMode
_ourPerformedFirstActivation
_invalidated
_ourCurrentPass
_ourVasPasses
_ourCallbackQueue
_ourInternalQueue
_timeoutTimer
_fieldDetector
_changeCardToken
addVerificationFields:
verificationFieldsCount
clearVerificationFields
verificationFieldsAtIndex:
verificationFieldsType
setPaymentWebServiceContextData:
hasPaymentWebServiceContextData
paymentWebServiceContextData
_paymentWebServiceContextData
initWithCurrencyCode:
stringFromNumber:
currencySymbol
_decimalNumberFormatter
_nonDecimalNumberFormatter
_currencyCode
invalidateCleanupTimer
messageIdentifier
timeoutHandler
timeoutQueue
_messageIdentifier
_completionHandler
_errorHandler
_timeoutHandler
_timeoutQueue
_init
currentUserActivity
passListUserActivity
initWithActivityType:
setPassListUserActivity:
_saveUserActivity:
provisionPassUserActivity
_skeletonBridgeUserActivity
setProvisionPassUserActivity:
individualPassUserActivity
setIndividualPassUserActivity:
addUserInfoEntriesFromDictionary:
getPaymentPassesUserActivity
setGetPaymentPassesUserActivity:
setUpPeerPaymentUserActivity
setSetUpPeerPaymentUserActivity:
viewPeerPaymentUserActivity
setViewPeerPaymentUserActivity:
setCurrentUserActivity:
becomeCurrent
sharedContinuityCoordinator
userViewingPassList
userViewingPassWithUniqueID:isPaymentPass:
userNeedsToProvisionPassWithUniqueID:
userNeedsPaymentPasses
userNeedsToSetUpPeerPayment
userNeedsToViewPeerPaymentForHandle:
userActivityForPassWithUniqueID:
invalidateAllActivities
_provisionPassUserActivity
_getPaymentPassesUserActivity
_passListUserActivity
_individualPassUserActivity
_setUpPeerPaymentUserActivity
_viewPeerPaymentUserActivity
_currentUserActivity
weakObjectsHashTable
acquiredAssertions
acquiredAssertionWithType:
_queue_acquireAssertionWithType:reason:completion:
_queue_invalidateAssertionWithType:completion:
addAssertion:
sharedManager
removeAssertion:
containsAssertionWithType:
acquireAssertionWithType:reason:completion:
invalidateAssertionWithType:completion:
setAcquiredAssertions:
_acquiredAssertions
setIncludeDeviceMetadata:
setHasIncludeDeviceMetadata:
hasIncludeDeviceMetadata
includeDeviceMetadata
_includeDeviceMetadata
assertionUUID
setAssertionUUID:
assertType
setAssertType:
_assertType
_assertionUUID
_sendAssertionRequest:
_outstandingAssertionStatusUpdaterWithRequest:assertionType:assertionUUID:
_addOutstandingAssertionStatusUpdater:withAssertType:
_removeOutstandingAssertionStatusUpdaterWithUUID:
assertTypesUUIDsMap
transportationService
_IDSSendOptions
outstandingAssertionStatusUpdaters
initWithTransportationService:
acquireAssertionOfType:
invalidateAssertionWithUUID:
assertionsUUIDsOfType:
setOutstandingAssertionStatusUpdaters:
setAssertTypesUUIDsMap:
_transportationService
_outstandingAssertionStatusUpdaters
_assertTypesUUIDsMap
_readerModeEntryAllowedForProduct:
initWithPaymentRequest:
setPrivateDelegate:
minLoadedBalance
maxLoadedBalance
_paymentRequestForAmount:
_addCardErrorForPaymentRequest:
canPresentPaymentRequest:completion:
depositAmount
zero
decimalNumberByAdding:
digitalIssuanceMetadata
setItemDescription:
serviceProviderDict
initWithDictionary:
setServiceProviderData:
serviceProviderIdentifier
setServiceProviderIdentifier:
initWithServiceProviderOrder:
serviceProviderAcceptedNetworks
setSupportedNetworks:
serviceProviderSupportedCountries
setSupportedCountries:
serviceProviderCapabilities
setMerchantCapabilities:
serviceProviderCountryCode
setCountryCode:
summaryItemWithLabel:amount:
setPaymentSummaryItems:
initWithAmount:currency:exponent:
initWithPaymentSetupProduct:purchase:balance:
resolveRequirementsUsingProvisioningMethodMetadata:
setRequirementsResponse:
isSupported
supportedNetworks
merchantCapabilities
paymentAuthorizationController:didAuthorizePayment:handler:
paymentAuthorizationControllerDidFinish:
paymentAuthorizationController:didAuthorizePurchase:completion:
paymentAuthorizationController:didAuthorizePayment:completion:
paymentAuthorizationControllerWillAuthorizePayment:
paymentAuthorizationController:didRequestMerchantSessionUpdate:
paymentAuthorizationController:didSelectShippingMethod:handler:
paymentAuthorizationController:didSelectShippingContact:handler:
paymentAuthorizationController:didSelectPaymentMethod:handler:
paymentAuthorizationController:didSelectShippingMethod:completion:
paymentAuthorizationController:didSelectShippingContact:completion:
paymentAuthorizationController:didSelectPaymentMethod:completion:
presentationWindowForPaymentAuthorizationController:
paymentAuthorizationController:didEncounterAuthorizationEvent:
paymentAuthorizationController:willFinishWithError:
paymentAuthorizationController:didRequestMerchantSession:
paymentAuthorizationController:didAuthorizePeerPaymentQuote:handler:
paymentAuthorizationController:didAuthorizeDisbursementVoucher:handler:
paymentAuthorizationController:didAuthorizeContextWithHandler:
downloadRemoteAssetsWithCompletion:
passAtURL:completion:
_handleAccountChanged:
sharedWebServiceProvider
peerPaymentAccount
updatePeerPaymentAccountWithCompletion:
bridgedClientInfoHTTPHeader
setBool:forKey:
synchronize
synchronizeNanoDomain:keys:
associatedPassURL
attemptToDownloadPeerPaymentPassAtURL:withWebService:completion:
provisionPeerPaymentPassWithCompletion:
initializeCloudStoreIfNecessaryWithCompletion:
initializeCloudStoreIfNecessaryWithHandler:
checkTLKsMissingWithCompletion:
resetApplePayManateeViewWithCompletion:
cloudStoreStatusWithCompletion:
peerPaymentReRegisterWithURL:pushToken:peerPaymentWebService:completion:
peerPaymentRegisterWithURL:forceReRegistration:completion:
appleAccountInformation
initWithUUIDString:
supportsCapability:
preferences
setPeerPaymentPreferences:completion:
initWithPeerPaymentPreferences:
peerPaymentPreferences
setDirty:
peerPaymentUpdatePreferencesWithRequest:completion:
downloadPassIfNecessaryWithCompletion:
updateAccountWithCompletion:
bridgedClientInfo
userHasDisabledPeerPayment
setUserHasDisabledPeerPayment:
provisionPeerPaymentPassWithProvisioningController:credential:completion:
setPreferences:completion:
provisionPeerPaymentPassWithProvisioningController:peerPaymentWebService:credential:completion:
deviceClass
peerPaymentReRegisterWithURL:pushToken:completion:
renewAppleAccountWithCompletionHandler:
initalizeCloudStoreIfNecessaryWithCompletion:
initalizeCloudStoreIfNecessaryWithHandler:
peerPaymentWebService
setPeerPaymentWebService:
_peerPaymentWebService
setChosenProductIdentifier:
hasChosenProductIdentifier
chosenProductIdentifier
_chosenProductIdentifier
setAppDisplayName:
hasAppDisplayName
appDisplayName
_appDisplayName
transitBalance
npkIsEnroute
npkHasTransitBalance
setCancelOutstandingRequests:
setHasCancelOutstandingRequests:
hasCancelOutstandingRequests
cancelOutstandingRequests
_cancelOutstandingRequests
_outstandingSessionHashTable
isDeactivated
_handleNewContactlessSession:
_internalQueue_updateSessionWithCurrentPassAndLoyaltyState
_sessionQueue_enablePersistentCardEmulation
_sessionQueue_startContactlessSessionWithSuccessfulCompletionOnInternalQueue:
_updateSessionWithCredentialAndActivate
contactlessSession
activatedPaymentApplication
_sessionQueue_authorizeWithDeferredAuthorization:useCredential:
_sessionQueue_invokeAppropriateCallbackForActivationWithSuccess:invokeOnSuccess:contactlessValidity:forPass:
_checkContactlessValidity:authorizationValidity:performWork:
_internalQueue_getContactlessAndAuthorizationValidityAndPerformWork:
isDeactivating
_internalQueue_deactivateSessionWithCompletion:
_callbackQueue_invokeDidCompleteForReason:withTransactionContext:
contactlessSessionHandle
deactivationCompletionBlocks
setDeactivationCompletionBlocks:
setDeactivating:
setDeactivated:
_internalQueue_invokeDeactivationCompletionBlocks
invalidateSessionWithCompletion:
setContactlessSessionHandle:
setContactlessSession:
_internalQueue_updateContactlessValidityAndPerformWork:
contactlessActivationState
isConfirmed
_sessionQueue_updateContactlessSessionForPass:paymentApplication:vasPasses:sessionConfirmed:deferAuthorization:
activatedValueAddedServicePasses
_checkContactlessValidity:performWork:
activateValueAddedServicePasses:
activatePaymentApplication:forPaymentPass:
startContactlessInterfaceSessionWithCompletion:targetQueue:
isFirstInQueue
requireFirstInQueue
queuePersistentCardEmulation
authorizeAndStartCardEmulationWithCredential:deferAuthorization:
_updateAuthorizationValidity
_internalQueue_updateContactlessSessionForPass:vasPasses:
_handleTransitTransactionWithContext:
_handleConventionalTransactionWithContext:
contactlessInterfaceSession:didFinishTransactionWithContext:
contactlessInterfaceSessionHasPendingServerRequest:
contactlessInterfaceSessionDidFailTransaction:forPaymentApplication:paymentPass:
contactlessInterfaceSessionDidTimeout:forPaymentApplication:paymentPass:valueAddedServicePasses:
contactlessInterfaceSessionDidFail:forPaymentApplication:paymentPass:valueAddedServicePasses:
contactlessInterfaceSessionDidTerminate:
contactlessInterfaceSessionDidStartTransaction:
contactlessInterfaceSessionDidReceiveActivityTimeout:
contactlessInterfaceSession:didEndPersistentCardEmulationWithContext:
contactlessInterfaceSession:didTransitionFromState:toState:
contactlessInterfaceSessionDidEnterField:withProperties:
contactlessInterfaceSession:didReceiveExpressState:
contactlessInterfaceSessionDidExitField:
contactlessInterfaceSessionDidSelectPayment:
contactlessInterfaceSessionDidSelectValueAddedService:
contactlessInterfaceSessionDidFailDeferredAuthorization:
_loyaltyEngineConfigurationChanged:
setEndSessionWhenAuthorizationIsConsumed:
paymentSessionQueue
setPaymentSessionQueue:
contactlessValidity
setContactlessValidity:
authorizationValidity
setAuthorizationValidity:
setConfirmed:
hasPerformedFirstActivation
setPerformedFirstActivation:
_endSessionWhenAuthorizationIsConsumed
_confirmed
_performedFirstActivation
_deactivating
_deactivated
_paymentSessionQueue
_contactlessSessionHandle
_contactlessSession
_contactlessValidity
_authorizationValidity
_deactivationCompletionBlocks
setDeviceMetadata:
hasDeviceMetadata
deviceMetadata
_deviceMetadata
setAccountData:
hasAccountData
accountData
_accountData
setLabel:
setDetail:
arrayWithObjects:
decimalNumberByMultiplyingBy:
setMerchantIdentifier:
setRequiredShippingContactFields:
setBillingContact:
setShippingContact:
setShippingMethods:
shippingMethods
setGivenName:
setFamilyName:
setName:
setEmailAddress:
phoneNumberWithStringValue:
setPhoneNumber:
setStreet:
setCity:
setPostalCode:
setCountry:
setISOCountryCode:
setPostalAddress:
stopUpdatingLocation
initWithEffectiveBundle:delegate:onQueue:
requestWhenInUseAuthorization
location
startUpdatingLocation
setLocationFixTimeout:
setLocationManager:
setInUseAssertion:
_finishLocationFixWithLocation:
locationManager
locationFixTimeout
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
fetchLocationWithCompletion:
inUseAssertion
locationManagerQueue
setLocationManagerQueue:
_locationFixTimeout
_locationManager
_inUseAssertion
_locationManagerQueue
authorizationStatusForBundle:
locationServicesEnabled
horizontalAccuracy
engineName
_sendNextStateChange
syncStateItem
baseManifestHashForPartialUpdate
remoteAssetsForPartialUpdate
backupState
syncStateHash
setReconciledState:
setBackupState:
_unexpectedEventOccurred
_sendStateChangeProcessedWithUUID:changeAccepted:fullPassRequired:
passSyncStateByAddingOrUpdatingSyncStateItem:
passSyncStateByRemovingPassWithUniqueID:
_requestAddPassData:forSyncStateItem:completion:
_requestUpdatePassData:forSyncStateItem:baseManifestHashForPartialUpdate:remoteAssetsForPartialUpdate:completion:
_requestRemovePassWithUniqueID:completion:
syncStateItems
_shouldProcessAddOrUpdateChangeOfType:changeSyncStateItem:librarySyncStateItem:reconciledSyncStateItem:candidateChange:shouldApplyToPassLibrary:shouldApplyToReconciledState:
setProcessingChange:
_finishedProcessingChange:
_sendReconciledStateUnrecognizedWithHash:currentPassSyncState:
setCandidateChange:
setBaseManifestHashForPartialUpdate:
setRemoteAssetsForPartialUpdate:
_sendStateChange:
_receivedStateChangeProcessed:changeAccepted:
setCandidateState:
commonBaselinePassSyncStateWithState:
_sendProposedReconciledState:
candidateState
stateIsSubsetOfUnionOfPassSyncStates:
_sendReconciledStateAcceptedWithHash:
_engineStateChanged
compareWithBaselinePassSyncState:outAddedPassUniqueIDs:outUpdatedPassUniqueIDs:outRemovedPassUniqueIDs:
manifest
initWithChangeUUID:reconciledStateHash:changeType:uniqueID:syncStateItem:passData:baseManifestHashForPartialUpdate:remoteAssetsForPartialUpdate:
initWithChangeUUID:reconciledStateHash:changeType:uniqueID:syncStateItem:passData:
isEqualToChangeIgnoringUUID:
setChangeUUID:
sequenceCounter
engineRole
requireAppleAccountForPaymentPasses
setRequireAppleAccountForPaymentPasses:
_requireAppleAccountForPaymentPasses
_libraryState
_backupState
_reconciledState
_candidateState
_engineRole
_candidateChange
_processingChange
setAccountInfoData:
hasAccountInfoData
setCloudStoreIsSetup:
setHasCloudStoreIsSetup:
hasCloudStoreIsSetup
accountInfoData
cloudStoreIsSetup
_accountInfoData
_cloudStoreIsSetup
dataWithContentsOfFile:
JSONObjectWithData:options:error:
initWithDictionary:bundle:
imageNamed:inBundle:
CGImage
setImageSet:forImageSetType:
initWithIdentifier:status:credentialType:passURL:
_passWithDescription:credentialType:
setSanitizedPrimaryAccountNumber:
_broadwayCredential
_easyProvisioningCredentials
setPassAppletState:
hasPassAppletState
passAppletState
_passAppletState
addTsmRegionPushTopics:
addTsmRegionURLs:
addBrokerRegionPushTopics:
tsmRegionPushTopicsCount
clearTsmRegionPushTopics
tsmRegionPushTopicsAtIndex:
tsmRegionURLsCount
clearTsmRegionURLs
tsmRegionURLsAtIndex:
brokerRegionPushTopicsCount
clearBrokerRegionPushTopics
brokerRegionPushTopicsAtIndex:
setPrimaryRegionTopic:
tsmRegionPushTopicsType
tsmRegionURLsType
brokerRegionPushTopicsType
hasPrimaryRegionTopic
tsmRegionPushTopics
setTsmRegionPushTopics:
tsmRegionURLs
setTsmRegionURLs:
brokerRegionPushTopics
setBrokerRegionPushTopics:
primaryRegionTopic
_brokerRegionPushTopics
_primaryRegionTopic
_tsmRegionPushTopics
_tsmRegionURLs
writeToFile:atomically:
removeItemAtPath:error:
createFileAtPath:contents:attributes:
fileHandleForWritingAtPath:
writeData:
closeFile
dataWithBytesNoCopy:length:freeWhenDone:
stringByAppendingPathComponent:
localizedFailureReason
localizedRecoverySuggestion
_displayableCouldNotAddCardErrorWithUnderlyingError:
serviceIdentifier
paymentStatus
availableActionsFetchDate
setServiceIdentifier:
setPaymentStatus:
setAvailableActionsFetchDate:
_serviceIdentifier
_paymentStatus
_availableActionsFetchDate
peerPaymentPassUniqueID
initWithPeerPaymentPassUniqueID:
initWithPeerPaymentPassUniqueID:paymentService:
_fetchAllPeerPaymentTransactionsWithPeerPaymentPassID:
_passLibraryChanged:
_applicationWillEnterForeground:
setPeerPaymentPassUniqueID:
_transactionQueue_statusOfPaymentTransactionWithServiceIdentifier:
transactionDetails
peerPaymentStatus
_transactionsQueue_setStatus:forPaymentTransactionWithServiceIdentifier:notifyUpdate:
_transactionsQueue_transactionDetailsCreatedIfNecessaryForServiceIdentifier:
_transactionsQueue_notifyStatusUpdateOfTransactionWithServiceIdentifier:
currentLookupIdentifiers
_sharedPeerPaymentWebService
actions
peerPaymentStatusWithPaymentIdentifier:completion:
passWithUniqueID:
deviceTransactionSourceIdentifiers
transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:limit:completion:
paymentServiceEstablishedConnection
paymentServiceReceivedInterruption
paymentDeviceDidEnterFieldWithProperties:
paymentDeviceDidExitField
didUpdateDefaultPaymentPassWithUniqueIdentifier:
paymentPassWithUniqueIdentifier:didReceiveMessage:
transactionSourceIdentifier:didReceiveTransaction:
transactionSourceIdentifier:didRemoveTransactionWithIdentifier:
paymentPassWithUniqueIdentifier:didReceiveBalanceUpdate:
paymentPassWithUniqueIdentifier:didUpdateBalanceReminder:forBalanceWithIdentifier:
paymentPassWithUniqueIdentifier:didEnableMessageService:
paymentPassWithUniqueIdentifier:didEnableTransactionService:
passWithUniqueIdentifier:didReceiveValueAddedServiceTransaction:
paymentPassWithUniqueIdentifier:didUpdateWithTransitPassProperties:
paymentPassWithUniqueIdentifier:didUpdateCategoryVisualizationWithStyle:
featureApplicationAdded:
featureApplicationRemoved:
featureApplicationChanged:
didRecieveCredentialInvitation:
paymentPassWithUniqueIdentifier:didUpdateCredential:
transactionWithIdentifier:didDownloadTransactionReceipt:
transactionBatch:moreComing:readyForNextBatch:
statusOfPaymentTransactionWithServiceIdentifier:
availableActionsForPaymentTransactionWithServiceIdentifier:
setStatus:forPaymentTransactionWithServiceIdentifier:
peerPaymentTransactionWithServiceIdentifier:
lookupTransactionActionsIfNeededWithServiceIdentifier:
_transactionsQueue
_peerPaymentPassQueue
_peerPaymentPassUniqueID
_transactionDetails
_currentLookupIdentifiers
setDefaultShippingAddress:
setDefaultBillingAddresses:
setDefaultContactEmail:
setDefaultContactPhone:
setDefaultContactName:
hasDefaultShippingAddress
hasDefaultBillingAddresses
hasDefaultContactEmail
hasDefaultContactPhone
hasDefaultContactName
defaultShippingAddress
defaultBillingAddresses
defaultContactEmail
defaultContactPhone
defaultContactName
_defaultBillingAddresses
_defaultContactEmail
_defaultContactName
_defaultContactPhone
_defaultShippingAddress
addFamilyPhotosIDs:
addFamilyPhotos:
familyPhotosIDsCount
clearFamilyPhotosIDs
familyPhotosIDsAtIndex:
familyPhotosCount
clearFamilyPhotos
familyPhotosAtIndex:
familyPhotosIDsType
familyPhotosType
familyPhotosIDs
setFamilyPhotosIDs:
familyPhotos
setFamilyPhotos:
_familyPhotos
_familyPhotosIDs
setPushTopic:
hasPushTopic
pushTopic
_pushTopic
setLongDescription:
hasSanitizedPrimaryAccountNumber
hasExpiration
hasLongDescription
sanitizedPrimaryAccountNumber
expiration
longDescription
_expiration
_longDescription
_sanitizedPrimaryAccountNumber
addItems:
itemsCount
clearItems
itemsAtIndex:
itemsType
hasTitle
hasFooter
setItems:
_showCurrentPasscodePromptOrComplete
_invokeCompletionHandler
requestNumericInputForFields:completion:
_showNextPasscodePromptOrComplete
providedFields
setProvidedFields:
completedFields
setCompletedFields:
currentIndex
setCurrentIndex:
_providedFields
_completedFields
_currentIndex
showInAppInterfaceWithPaymentRequest:forHostApplicationName:hostBundleIdentifier:hostProcessIdentifier:hostIdentifier:orientation:activationHandler:
showInAppInterfaceWithRemotePaymentRequest:activationHandler:
showInAppInterfaceWithSkeletonPeerPaymentQuote:activationHandler:
clearInAppInterfaceForSkeletonPeerPaymentQuote:withError:
presentPasscodeUpgradeRequestWithCompletion:
tearDownPasscodeUpgradeRequestWithPasscodeChanged:error:
presentContactlessInterfaceForPassWithUniqueIdentifier:fromSource:completion:
remoteInterfacePresenterConnectionInterrupted:
presentInAppPaymentInterfaceWithPaymentRequest:forHostApplicationName:hostBundleIdentifier:hostProcessIdentifier:hostIdentifier:orientation:completion:
presentContinuityPaymentInterfaceWithRemotePaymentRequest:completion:
showInAppInterfaceWithSkeletonPeerPaymentQuote:completion:
presentSetupApplePayAlert:
isEqualToChange:
setChangeType:
setSyncStateItem:
unsignedIntValue
_changeUUID
_reconciledStateHash
_changeType
_syncStateItem
_baseManifestHashForPartialUpdate
_remoteAssetsForPartialUpdate
setBody:
setLinkText:
setLinkURL:
hasBody
hasLinkText
hasLinkURL
body
linkText
linkURL
_body
_linkText
_linkURL
peerPaymentService
setAccount:
_updateAccount
initWithPeerPaymentService:
postNotificationName:object:
accountWithCompletion:
_peerPaymentService
_account
enforcedPolicy
setEnforcedPolicy:
setHasEnforcedPolicy:
hasEnforcedPolicy
enforcedPolicyAsString:
StringAsEnforcedPolicy:
_enforcedPolicy
updateWithExpressPass:siblingExpressPasses:
hasReconciledStateHash
setInvitationIdentifier:
hasInvitationIdentifier
hasMetadataData
invitationIdentifier
metadataData
_invitationIdentifier
_metadataData
setRemoteCredential:
hasRemoteCredential
hasCredential
setHasAllowsAddingDifferentCard:
hasAllowsAddingDifferentCard
_remoteCredential
setTypeDescriptionUnlocalized:
setTypeDescription:
setContactPoint:
setSourceAddress:
hasIdentifier
setHasType:
typeAsString:
StringAsType:
hasTypeDescriptionUnlocalized
hasTypeDescription
setRequiresUserInteraction:
setHasRequiresUserInteraction:
hasRequiresUserInteraction
hasContactPoint
hasSourceAddress
typeDescriptionUnlocalized
typeDescription
requiresUserInteraction
contactPoint
sourceAddress
_contactPoint
_sourceAddress
_typeDescription
_typeDescriptionUnlocalized
_requiresUserInteraction
localManifestHashes
remoteManifestHashes
setLocalManifestHashes:
setRemoteManifestHashes:
_localManifestHashes
_remoteManifestHashes
_migrationDelegateQueue
_handleHasMigrationDataSource
setPassDBIsAvailable:
database
_preconditionsMetForDatabaseOpen
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_executeSQL:
_table:containsColumn:
_migrationDataSource
latestWatchOSMajorVersion
setObject:atIndexedSubscript:
setMissingImageSetsFromObject:
flushLoadedImageSets
_enumerateAllPassesForMigration:
_updateNFCPayloadDuringMigration:
_updatePrivateLabelAndCobrandDuringMigration:
_updateDeviceAndPreferredPaymentApplicationsDuringMigration:
_updateIngestedDatesDuringMigration:
_updateEffectivePaymentApplicationStateDuringMigration:
_updateHasUserSelectableContactlessPaymentApplications:
_updateEncodedPaymentPassDuringMigration:
_updateHasStoredValueDuringMigration:
_updateSettingsDuringMigration:
_updateCompleteLocalHashesDuringMigration:
_updateAvailableActionsDuringMigration:
_updateOrganizationNamesDuringMigration:
_updateFrontAndBackFieldBucketsDuringMigration:
_updateLocalizedDescriptionDuringMigration:
_updateDevicePaymentApplicationsDuringMigration:
_updatePrimaryContactlessAndInAppPaymentApplicationsDuringMigration:
_updateEncodedImageSetsDuringMigration:
_repairEncodedImagesDuringMigration:
_updateIssuerCountryCodesDuringMigration:
_updateExpressPassTypesMaskDuringMigration:
_updateCompleteRemoteHashesDuringMigration
_updateTransactionSourceIdentifiersDuringMigration:
_migrateDatabase:
_notifyDatabaseChangedExternally
_notifyForFirstUnlock
_decodeObjectOfClass:fromStatement:column:
_decodeObjectOfClasses:fromStatement:column:
dateWithTimeIntervalSinceReferenceDate:
initForReadingFromData:error:
_loadInitialManifestLocked
_savePassLocked:locallyAdded:wasUpdate:
_libraryHashLockedForWatchOSMajorVersion:
_notifyDatabaseChangedWithNoop:
_saveDiffLocked:forPassWithUniqueID:
_removePassWithUniqueIDLocked:
_performTransactionWithBlock:
transactionSourceIdentifier
paymentNetworkIdentifier
_saveTransaction:forTransactionSourceIdentifier:withPaymentCredentialType:shouldTrim:
suppressBehavior
isCloudKitArchived
_removeTransactionWithServiceIdentifierLocked:forTransactionSourceIdentifier:
_saveTransactionLocked:forTransactionSourceIdentifier:
_trimTransactionsForTransactionSourceIdentifierLocked:withPaymentCredentialType:
_removeTransactionWithIdentifier:
_removeTransactionsForTransactionSource:
_transactionsForTransactionSourceIdentifierLocked:withTransactionSource:withBackingData:startDate:endDate:orderByDate:limit:
_transactionWithIdentifierLocked:
_transactionWithServiceIdentifierLocked:
_transactionSourceIdentifierForTransactionWithIdentifierLocked:
_transactionSourceIdentifierForTransactionWithServiceIdentifierLocked:
_transactionSourceIdentifierForPassUniqueIdentifierLocked:
_passUniqueIdentifierForTransactionSourceIdentifierLocked:
_transitAppletStateForPassWithUniqueIDLocked:
_setTransitAppletStateLocked:forPassWithUniqueID:
_paymentBalancesForPassWithUniqueIDLocked:
_setPaymentBalancesLocked:forPassWithUniqueID:
_subcredentialsForPassWithUniqueIDLocked:
_setSubcredentialsLocked:forPassWithUniqueID:
_setCurrentEphemeralTransactionIdentifier:forTransactionSourceIdentifier:
_currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:
_transactionsWithCloudKitArchivedState:
_setLastAddValueAmountLocked:forPassWithUniqueID:
_lastAddValueAmountForPassWithUniqueIDLocked:
_setPendingAddValueDateLocked:forPassWithUniqueID:
_pendingAddValueDateForPassWithUniqueIDLocked:
passDescriptions
transactionSourceIdentifierForPassWithUniqueID:
transactionsForTransactionSourceIdentifier:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:
currentEphemeralTransactionIdentifierForTransactionSourceIdentifier:
paymentBalancesForPassWithUniqueID:
subcredentialsForPassWithUniqueID:
setTransitAppletState:forPassWithUniqueID:
setLastAddValueAmount:forPassWithUniqueID:
setPendingAddValueDate:forPassWithUniqueID:
sharedDatabase
setPreferredPaymentApplication:forPaymentPass:
setCurrentEphemeralTransactionIdentifier:forTransactionSourceIdentifier:
setPaymentBalances:forPassWithUniqueID:
setSubcredentials:forPassWithUniqueID:
_notifyDatabaseChangedWithNoop:firstUnlock:
_passDBIsAvailableLocked
_passForUniqueIDLocked:includeImageSets:
_getPreferredPaymentApplicationForPaymentPass:aid:
_getDeletePendingForUniqueID:
diff:
deleteStatement
insertStatement
setIngestedDate:
timeIntervalSinceReferenceDate
stringValue
_createTransactionSourceIdentifierIfNecessaryForPassWithUniqueIDLocked:
deleteTransactionsForTransactionSourceStatement
_removeTransactionSourceIdentifierForPassWithUniqueIDLocked:
insertTransactionStatement
transactionDate
transactionSource
hasNotificationServiceData
removeTransactionWithServiceIdentifierStatement
removeTransactionStatement
trimTransactionsForTransactionSourceStatement
selectTransactionsStatementWithTransactionSource:orderByDate:
distantPast
distantFuture
selectCloudKitArchivedTransactionsStatement
selectTransactionWithIdentifierStatement
selectTransactionWithServiceIdentifierStatement
selectTransactionSourceIdentifierForTransactionWithIdentifierStatement
insertTransactionSourceIdentifierForPassStatement
deleteTransactionSourceIdentifierForPassStatement
selectTransactionSourceIdentifierForTransactionWithServiceIdentifierStatement
selectTransactionSourceIdentifierForPassUniqueIdentifierStatement
selectPassUniqueIdentifierForTransactionSourceIdentifierStatement
selectTransitAppletStateForPassStatement
updateTransitAppletStateForPassStatement
insertEphemeralTransactionStatement
deleteEphemeralTransactionByTransactionSourceIdentifierStatement
currentEphemeralTransactionIdentifierStatement
selectLastAddValueAmountForPassStatement
updateLastAddValueAmountForPassStatement
selectPendingAddValueDateForPassStatement
updatePendingAddValueDateForPassStatement
selectBalancesForPassStatement
updateBalancesForPassStatement
selectSubcredentialsForPassStatement
updateSubcredentialsForPassStatement
stringWithCString:encoding:
_executeSQLQuery:processResultsBlock:
intValue
selectPassAndImageSetsDataStatement
selectPassDataStatement
hasCredentials
selectPassDiffStatement
insertDiffStatement
passForUniqueID:includeImageSets:
_diffForUniqueIDLocked:
updateDeletePendingStatement
selectDeletePendingStatement
paymentApplications
updatePreferredAIDStatement
selectPreferredAIDStatement
arrayWithArray:
libraryHashForWatchOSMajorVersion:
caseInsensitiveCompare:
sortedArrayUsingSelector:
npkComprehension:
manifestHashesForWatchOSMajorVersion:
dictionaryWithCapacity:
enumerateAllPassesAndDescriptionsWithBlock:includeImageSets:
evaluateWithObject:
_databaseVersionExists:valid:
maxDatabaseVersion
_updateDatabaseVersionRow:
_insertDatabaseVersionRow:
_attemptDatabaseOpen
setMigrationDataSource:
savePass:isLocalPass:
saveDiff:forPassWithUniqueID:
removePassWithUniqueID:
rebuildDatabaseWithPasses:
saveTransaction:forPass:
removeTransactionWithIdentifier:
removeTransactionsForTransactionSource:
transactionSourcesForPassWithUniqueID:
transactionWithIdentifier:
transactionWithServiceIdentifier:
transactionSourceIdentifierForTransactionWithIdentifier:
transactionSourceIdentifierForTransactionWithServiceIdentifier:
passUniqueIDForTransactionSourceIdentifier:
transitAppletStateForPassWithUniqueID:
transactionsWithCloudKitArchivedState:
lastAddValueAmountForPassWithUniqueID:
pendingAddValueDateForPassWithUniqueID:
restoreBlockForVolatilePassData
passDBIsAvailable
numberOfPasses
diffForUniqueID:
setDeletePending:forUniqueID:
preferredPaymentApplicationForPaymentPass:
enumerateAllPassesWithBlock:includeImageSets:
hasPassesMatchingPassDescriptionPredicate:
filteredPassesUsingPassDescriptionPredicate:includeImageSets:
_handleDatabaseChangedExternally
_handleFirstUnlock
_database
_deleteStatement
_insertStatement
_insertDiffStatement
_selectPassDataStatement
_selectPassAndImageSetsDataStatement
_selectPassDiffStatement
_updateDeletePendingStatment
_selectDeletePendingStatement
_updatePreferredAIDStatement
_selectPreferredAIDStatement
_insertTransactionStatement
_removeTransactionStatement
_removeTransactionWithServiceIdentifier
_selectTransactionsStatement
_selectTransactionsStatementWithSource
_selectTransactionsStatementWithoutSource
_selectTransactionWithIdentifierStatement
_selectTransactionWithServiceIdentifierStatement
_insertTransactionSourceIdentifierForPassStatement
_selectTransactionSourceIdentifierForTransactionWithIdentifierStatement
_selectTransactionSourceIdentifierForTransactionWithServiceIdentifierStatement
_selectTransactionSourceIdentifierForPassUniqueIdentifierStatement
_selectPassUniqueIdentifierForTransactionSourceIdentifierStatement
_deleteTransactionSourceIdentifierForPassStatement
_deleteTransactionsForTransactionSourceStatement
_trimTransactionsForTransactionSourceStatement
_selectTransitAppletStateForPassStatement
_updateTransitAppletStateForPassStatement
_insertEphemeralTransactionStatement
_deleteEphemeralTransactionByTransactionSourceIdentifierStatement
_currentEphemeralTransactionIdentifierStatement
_selectLastAddValueAmountForPassStatement
_updateLastAddValueAmountForPassStatement
_selectPendingAddValueDateForPassStatement
_updatePendingAddValueDateForPassStatement
_selectCloudKitArchivedTransactionsStatement
_selectBalancesForPassStatement
_updateBalancesForPassStatement
_selectSubcredentialsForPassStatement
_updateSubcredentialsForPassStatement
_dbQueue
_isInTransaction
_manifest
_passDescriptions
_libraryHashes
_externallyChangedBroadcasts
_sendingLocalNotifyDatabaseChanged
_needsMoreLocalNotifyDatabaseChanged
_passDBIsAvailable
_initializeHIDClient
_handleButtonEvent:
setHidSystemClient:
hidSystemClient
_hidSystemClient
setPeerPaymentPreferencesData:
hasPeerPaymentPreferencesData
peerPaymentPreferencesData
_peerPaymentPreferencesData
setResponseData:
hasResponseData
responseData
_responseData
hasUnrecognizedReconciledStateHash
hasLibraryPassSyncState
_libraryPassSyncState
_unrecognizedReconciledStateHash
setPaymentCredential:
setPassURL:
setSummaryMetadataDescription:
setStatusDescription:
hasPassURL
hasSummaryMetadataDescription
hasStatusDescription
hasPaymentPass
setRank:
setHasRank:
hasRank
hasProductIdentifier
paymentCredential
passURL
summaryMetadataDescription
statusDescription
rank
_passURL
_paymentCredential
_productIdentifier
_rank
_statusDescription
_summaryMetadataDescription
addProducts:
productsCount
clearProducts
productsAtIndex:
productsType
cardPNO
setCardPNO:
cardFlow
setCardFlow:
cardID
setCardID:
cardIssuer
setCardIssuer:
cardProduct
setCardProduct:
cardEncryptionScheme
setCardEncryptionScheme:
_cardPNO
_cardFlow
_cardID
_cardIssuer
_cardProduct
_cardEncryptionScheme
setRequiresFelicaSecureElement:
setPrimaryAccountSuffix:
setPaymentNetwork:
lowercaseString
initWithLabel:value:
setCardDetails:
base64EncodedStringWithOptions:
capitalizedString
stringByReplacingOccurrencesOfString:withString:
initWithURL:
setHTTPMethod:
setHTTPBody:
setValue:forHTTPHeaderField:
defaultSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
initWithData:encoding:
initWithBase64EncodedString:options:
setEncryptedPassData:
dataTaskWithRequest:completionHandler:
firstDeviceUnlockRegistrationToken
setFirstDeviceUnlockRegistrationToken:
blocksToPerformAfterFirstDeviceUnlock
_performFirstUnlockWork
setBlocksToPerformAfterFirstDeviceUnlock:
_firstDeviceUnlockRegistrationToken
_blocksToPerformAfterFirstDeviceUnlock
setProvisioningDataBytes:
hasProvisioningDataBytes
provisioningDataBytes
_provisioningDataBytes
addPaymentPasses:
paymentPassesCount
clearPaymentPasses
paymentPassesAtIndex:
paymentPassesType
setPaymentPasses:
_paymentPasses
setSetAuthRandomIfNotPaired:
setHasSetAuthRandomIfNotPaired:
hasSetAuthRandomIfNotPaired
setAuthRandomIfNotPaired
_setAuthRandomIfNotPaired
hasCurrencyCode
setCurrentBalance:
setHasCurrentBalance:
hasCurrentBalance
setCreditLimit:
setHasCreditLimit:
hasCreditLimit
creditLimit
_creditLimit
_currentBalance
_rawDefaultBillingAddresses
_contactFromEncodedData:
deleteDefaultShippingAddress
deleteDefaultContactEmail
deleteDefaultContactPhone
deleteDefaultContactName
_billingAddressDictionaryFromEncodedData:
_setRawDefaultBillingAddresses:
_deleteAllDefaultBillingAddresses:
setTransactionDefaultsRequest
handleSetTransactionDefaultsRequest:
initWithQueue:takeOutTransactions:
setRemainingWork:
setTakeOutTransactions:
performingWork
remainingWork
setPerformingWork:
removeObjectAtIndex:
workBlock
workQueueName
_onQueue_doWorkIfNecessary
takeOutTransactions
itemWithTransaction:work:
performWork:
setWorkQueueName:
_performingWork
_takeOutTransactions
_workQueueName
_remainingWork
initWithTransaction:work:
_workBlock
addSetupFields:
setupFieldsCount
clearSetupFields
setupFieldsAtIndex:
setupFieldsType
hasSubtitle
hasAnonymizationSalt
_anonymizationSalt
faceImage
setFaceImage:
faceShadowImage
setFaceShadowImage:
addCardAIDs:
cardAIDsCount
clearCardAIDs
cardAIDsAtIndex:
cardAIDsType
cardAIDs
setCardAIDs:
_cardAIDs
_queue_updateExpressPasses
updateExpressPasses
initWithPaymentService:passLibrary:distributedNotificationCenter:delegate:callbackQueue:
_transitionToStatus:forExpressPass:paymentApplicationIdentifier:
_queue_siblingExpressPassesForExpressPass:applicationIdentifier:
expressPassController:didStartTransactionForPass:paymentApplicationIdentifier:siblingExpressPasses:
expressPassController:didCompleteTransactionForPass:
expressPassController:didFailTransactionForPass:
distributedNotificationCenter
_handleEnterNearFieldNotification:
_handleExpressTransactionStartNotification:
_handleExpressTransactionTimeOutNotification:
_handleExpressTransactionEndNotification:
_handleExpressTransactionFailedNotification:
_handleExitNearFieldNotification:
_handlePassesLibraryChangedNotification:
_expressPassesInformationWithAutomaticSelectionTechnologyType:
setCurrentTransactionExpressPassInformation:
_hasNoTransactionStartOrEndNotificationForTechnologyType:
currentTransactionExpressPassInformation
passUniqueIdentifier
expressPasses
paymentApplicationIdentifiers
_parseExpressNotificationObject:outApplicationIdentifier:outApplicationKeyIdentifier:
_onqueue_transactionStartedWithApplicationIdentifier:applicationKeyIdentifier:
technologyType
enumerateCriteriaWithHandler:
_onqueue_transactionEndedWithApplicationIdentifier:applicationKeyIdentifier:
_onqueue_transactionFailedWithApplicationIdentifier:applicationKeyIdentifier:
_queue_expressPassForTransactionApplicationIdentifier:transactionApplicationKeyIdentifier:
subcredentialCredentialIdentifiers
_queue_paymentService
expressPassesInformation
_startListeningForExpressNotifications
passLibrary
_stopListeningForExpressNotifications
_startFieldDetector
_stopFieldDetector
setExpressPassesInformation:
setExpressPasses:
expressPassController:didUpdateExpressPasses:expressPassesInformation:
supportsExpress
supportsInSessionExpress
TCIs
primaryTCIs
_expressPassesInformationWithTCIs:
_expressPassInformationWithTechnologyType:
intersectsSet:
componentsSeparatedByString:
shouldIgnore
authenticationRequired
terminalType
expressPassController:didReceiveAuthenticationRequestForPass:
initWithDelegate:callbackQueue:
currentTransactionPass
setCurrentTransactionPass:
_expressPassChangedNotifyToken
_currentTransactionPass
_expressPassesInformation
_passLibrary
_distributedNotificationCenter
_expressPasses
_currentTransactionExpressPassInformation
setMissing:
setHasMissing:
hasMissing
missing
_missing
setApplyRestrictions:
setHasApplyRestrictions:
hasApplyRestrictions
applyRestrictions
_applyRestrictions
hasBalanceBytes
peerPaymentServiceURL
npkPossiblyOverriddenPeerPaymentServiceURL
subjects:sendEvent:
_invokeCompletionHandlerForInvalidationWithError:
setUiDelegate:
_handleLocalAuthenticationPolicyEvaluatedWithContext:error:
evaluatePolicy:options:reply:
evaluatePolicy:options:error:
_nameForLocalAuthenticationEvent:
_activateLocalAuthenticationEvent:
_deactivateLocalAuthenticationEvent:
externalizedContext
pendingLocalAuthenticationEvents
setPendingLocalAuthenticationEvents:
_presentNextLocalAuthenticationEvent
activeLocalAuthenticationEvent
credentialDelegate
_credentialTypeForEvent:
localAuthenticationCoordinator:cancelRequestForCredentialOfType:
setActiveLocalAuthenticationEvent:
inProgressContext
setCredential:forProcessedEvent:credentialType:reply:
_cancelLocalAuthentication
localAuthenticationCoordinator:requestsCredentialOfType:completion:
setInProgressContext:
event:params:reply:
setCredentialDelegate:
localAuthenticationQueue
setLocalAuthenticationQueue:
completedContext
setCompletedContext:
completedCredential
setCompletedCredential:
completedError
setCompletedError:
_credentialDelegate
_localAuthenticationQueue
_completedContext
_completedCredential
_completedError
_inProgressContext
_pendingLocalAuthenticationEvents
_activeLocalAuthenticationEvent
fieldTypeAsString:
StringAsFieldType:
hasCurrentValue
fieldType
setFieldType:
_currentValue
_fieldType
delegationAssertion
setDelegationAssertion:
_delegationAssertion
setUnlockRequired:
setHasUnlockRequired:
hasUnlockRequired
unlockRequired
_unlockRequired
_convertWelcomeStepContext:protoContext:
_convertChooseFlowStepContext:protoContext:
_convertChooseProductStepContext:protoContext:
_convertChooseCredentialsStepContext:protoContext:
_convertManualEntryStepContext:protoContext:
_convertSecondaryManualEntryStepContext:protoContext:
_convertPasscodeUpgradeStepContext:protoContext:
_convertTermsAndConditionsStepContext:protoContext:
_convertProvisioningProgressStepContext:protoContext:
_convertProvisioningResultStepContext:protoContext:
_convertIssuerVerificationChannelsStepContext:protoContext:
_convertIssuerVerificationFieldsStepContext:protoContext:
_convertIssuerVerificationCodeStepContext:protoContext:
_convertMoreInformationStepContext:protoContext:
_convertLocalDeviceManualEntry:protoContext:
_convertLocalDeviceManualEntryProgress:protoContext:
_convertDigitalIssuanceAmountStepContext:protoContext:
_convertDigitalIssuancePaymentStepContext:protoContext:
_convertReaderModeEntryStepContext:protoContext:
_convertReaderModeIngestionStepContext:protoContext:
toStringValue:
URLForImageWithScale:
imageWithScale:
addHeroImages:
toNPKProtoStandalonePaymentProvisioningFlowPickerSection:
toNPKProtoStandalonePaymentSetupProduct:
toNPKProtoStandalonePaymentCredentialUnion:withFlowIdentifier:thumbnailSize:
toNPKProtoStandalonePaymentRemoteCredential:thumbnailSize:
toNPKProtoStandalonePaymentSetupField:
toNPKProtoStandaloneReaderModeIngestionState:
toNPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext:
toNPKProtoStandalonePaymentSetupFieldType:
toNPKProtoStandaloneError:
toNPKProtoStandalonePaymentPass:thumbnailSize:
toNPKProtoStandaloneVerificationChannel:
addVerificationChannels:
toNPKProtoStandalonePaymentSetupMoreInfoItem:
addMoreInfoItems:
initWithIdentifier:imageData:credentialType:
_convertProtoWelcomeStepContext:requestContext:
toNPKProtoStandalonePassType:
isRemotePass
stringWithCapacity:
toNPKProtoStandalonePass:thumbnailSize:
toNPKProtoStandalonePaymentPassActivationState:
toNPKProtoStandalonePaymentApplicationState:
toNPKProtoStandaloneVerificationChannelType:
setFlowIdentifier:
toNPKProtoStandaloneCreditAccountCredential:thumbnailSize:
setCreditAccountCredential:
toNPKProtoStandalonePaymentCredential:
accountSummary
doubleValue
toNPKProtoStandalonePaymentProvisioningFlowPickerItem:
setDisplayName:
addRegions:
partnerIdentifier
setPartnerIdentifier:
partnerName
setPartnerName:
addRequiredFields:
supportedProtocols
addSupportedProtocols:
readerModeMetadata
toJsonString:
setReaderModeMetadataJson:
flags
setFlags:
setHsa2Requirement:
imageAssetURLs
toNPKProtoStandalonePaymentSetupProductImageAssetURLs:
setImageAssetURLs:
suppressPendingPurchases
setSuppressPendingPurchases:
toNPKProtoStandalonePaymentSetupProductPaymentOption:
addPaymentOptions:
toNPKProtoStandalonePaymentProvisioningMethodMetadata:
addRequestedProvisioningMethods:
setCurrency:
setDepositAmount:
setMinLoadedBalance:
setMaxLoadedBalance:
toNPKProtoStandalonePaymentDigitalIssuanceMetadata:
setDigitalIssuanceMetadata:
readerModeResources
setReaderModeResourcesJson:
minimumReaderModeBalance
setMinimumReaderModeBalance:
setServiceProviderCountryCode:
addServiceProviderAcceptedNetworks:
addServiceProviderCapabilities:
setServiceProviderDictJson:
setAction:
merchantID
setMerchantID:
defaultSuggestions
addDefaultSuggestions:
priority
setPriority:
setSupportedProtocols:
dataWithJSONObject:options:error:
toPKPaymentSetupFieldType:
paymentSetupFieldWithIdentifier:type:
toNPKProtoStandalonePaymentProvisioningFlowStepContext:fromStep:toStep:
fromNPKProtoStandalonePaymentProvisioningFlowStepContext:requestContext:
sha1hash:
toPKPaymentSetupField:
initWithFileURL:error:
serviceResumed
serviceSuspended
addPaymentApplicationAIDs:
paymentApplicationAIDsCount
clearPaymentApplicationAIDs
paymentApplicationAIDsAtIndex:
paymentApplicationAIDsType
paymentApplicationAIDs
setPaymentApplicationAIDs:
_paymentApplicationAIDs
setRelevantText:
hasRelevantText
relevantText
_relevantText
setContent:
content
_content
suppressionAssertion
requestDoubleClickClientSuppressionWithResponseHandler:
endDoubleClickClientSuppressionWithRequestToken:
isSuppressingDoubleClickClients
suppressorQueue
nextSuppressionRequestToken
setNextSuppressionRequestToken:
addIndex:
_postSuppressionStateChanged
_acquireSuppressionAssertionIfNeededWithCompletion:
suppressionRequestTokens
removeIndex:
_acquireSuppressionAssertionWithCompletion:
setSuppressionAssertion:
setSuppressionRequestTokens:
setSuppressorQueue:
_suppressionAssertion
_suppressionRequestTokens
_nextSuppressionRequestToken
_suppressorQueue
addReaderModeFields:
readerModeFieldsCount
clearReaderModeFields
readerModeFieldsAtIndex:
readerModeFieldsType
readerModeFields
setReaderModeFields:
_readerModeFields
setSignedData:
setCertsBytes:
setSignatureInfoBytes:
hasSignedData
hasCertsBytes
hasSignatureInfoBytes
signedData
certsBytes
signatureInfoBytes
_certsBytes
_signatureInfoBytes
_signedData
_saveTransactionFromContext:
setHasAllowsReaderModeEntry:
hasAllowsReaderModeEntry
heroImagesCount
clearHeroImages
heroImagesAtIndex:
heroImagesType
passPropertiesForPass:
updateItemFields
arrayByAddingObjectsFromArray:
_balanceByIDWithBalances:
_primaryDisplayableBalanceFieldWithBalancesByID:
_allPassBalanceFieldsWithBalancesByID:
_commutePlanFieldsWithBalancesByID:
isContentLoaded
_balancePassFieldsFromPass:
_balanceFieldsWithBalancesByID:passFields:maximumCount:
_actionWithIdentifier:type:
initWithBalance:label:formattedValue:identifier:primaryBalance:action:pendingUpdateExpireDate:
foreignReferenceType
_balanceFieldWithPassField:balance:isPrimaryBalance:
localizedTitle
transitCommutePlanType
_shouldAddCommutePlan:action:withBalancesByID:
countForObject:
_formattedValueWithCommutePlan:balancesByID:
initWithLabel:detailLabel:formattedValue:usageDateRange:identifier:details:action:
transitPassProperties
_commutePlanWithFelicaPassProperties:
expiryDate
isActionAvailable
isCommutePlanValueRequired
initWithStartDate:expirationDate:formatterStyle:
hasShinkansenTicket
localizedStringFromDate:dateStyle:timeStyle:
shinkansenValidityTerm
shinkansenValidityStartDate
calendar
dateByAddingUnit:value:toDate:options:
shinkansenOriginStation
shinkansenDestinationStation
shinkansenDepartureTime
shinkansenArrivalTime
shinkansenTrainName
shinkansenCarNumber
displayableShinkansenSeat
isShinkansenTicketActive
shinkansenSecondaryOriginStation
shinkansenSecondaryDestinationStation
shinkansenSecondaryTrainName
shinkansenSecondaryDepartureTime
shinkansenSecondaryArrivalTime
shinkansenSecondaryCarNumber
displayableShinkansenSecondarySeat
hasGreenCarTicket
greenCarValidityStartDate
greenCarOriginStation
greenCarDestinationStation
_identifierFromAction:type:
relevantPropertyIdentifier
associatedEnteredValueIdentifier
associatedPlanIdentifier
balances
setTransitPassProperties:
setBalances:
setCommutePlanValueRequired:
_commutePlanValueRequired
_transitPassProperties
_balances
_dateStringWithDate:style:
startDate
startDateString
expiryDateString
_startDate
_startDateString
_expiryDate
_expiryDateString
setPasscodeChanged:
setHasPasscodeChanged:
hasPasscodeChanged
passcodeChanged
_passcodeChanged
initWithContext:responseQueue:
_webServiceContext
_peerPaymentWebServiceContext
_peerPaymentAccount
setPeerPaymentAccount:
_deviceFailedToPair:
secureElementID
setDeviceID:
initWithCompanionAgentConnection:
peerPaymentTargetDevice
setPeerPaymentService:
sharedPaymentWebServiceContextForDevice:
setTransactionServiceDisabled:
setMessageServiceDisabled:
setIgnoreProvisioningEnablementPercentage:
sharedPeerPaymentWebServiceContextForDevice:
peerPaymentAccountForDevice:
archiveContext:
archiver
setSharedPaymentWebServiceContext:forDevice:
sendWebServiceContextToWatch:
startBackgroundVerificationObserverForPass:verificationMethod:
noteForegroundVerificationObserverActive:
handlePreconditionNotMetWithUniqueIDs:preconditionDescription:shouldUnregister:
handlePushToken:
handleUpdatePaymentPassWithTypeIdentifier:
handlePreferredAID:forPassWithUniqueID:
handlePaymentTransactions:appletStates:forUniqueIDs:
handleAppletState:forUniqueID:
handleRemoveTransactionsWithIdentifiers:
handleBalanceUpdate:forUniqueID:
handleBalanceReminderUpdate:balance:forUniqueID:
handleCredentialsUpdate:forUniqueID:
archiveWebServiceContext:
archiveWebServiceBackgroundContext:
setNewAuthRandom:
handlePaymentWebServiceContextFromWatch:
sendWebServiceContextToWatch
showPaymentSetupForAppDisplayName:
sendPaymentOptionsDefaultsToWatch
handleUpdatedPeerPaymentWebServiceContext:account:
handleDownloadAllPaymentPasses
checkCompanionPeerPaymentRegistrationState
loadWebService
setTargetDevice:
setPeerPaymentTargetDevice:
_targetDevice
_peerPaymentTargetDevice
connection
setSharedPeerPaymentWebServiceContext:forDevice:
setConnection:
_connection
setApplicationIdentifier:
hasApplicationIdentifier
_applicationIdentifier
addConflictingExpressPassIdentifiers:
addConflictingReferenceExpressPassIdentifiers:
conflictingExpressPassIdentifiersCount
clearConflictingExpressPassIdentifiers
conflictingExpressPassIdentifiersAtIndex:
conflictingReferenceExpressPassIdentifiersCount
clearConflictingReferenceExpressPassIdentifiers
conflictingReferenceExpressPassIdentifiersAtIndex:
conflictingExpressPassIdentifiersType
conflictingReferenceExpressPassIdentifiersType
conflictingExpressPassIdentifiers
setConflictingExpressPassIdentifiers:
conflictingReferenceExpressPassIdentifiers
setConflictingReferenceExpressPassIdentifiers:
_conflictingExpressPassIdentifiers
_conflictingReferenceExpressPassIdentifiers
setHasCameraFirstProvisioningEnabled:
hasCameraFirstProvisioningEnabled
hasSequenceCounter
manifestEntrys
fileHash
relativePath
initWithPassTypeIdentifier:serialNumber:sequenceCounter:manifestHash:manifest:
setSequenceCounter:
setHasSequenceCounter:
setRelativePath:
setFileHash:
addManifestEntry:
initWithProtoSyncStateItem:
protoSyncStateItem
initWithSyncStateItems:
_initWithName:
_name
_accountDidChange
senderAddress
recipientAddresses
_internalQueue_lookupRecipientInformationWithAddress:senderAddress:
activeConversation
_newPeerPaymentController
recipientPhoneOrEmail
displayNameForRecipientAddress:
displayNameForRecipientAddress:foundInContacts:
_internalQueue_performPaymentWithAmount:requestToken:completion:
currentPeerPaymentController
setCurrentPeerPaymentController:
_displayableErrorWithError:
receiveCurrency
_skeletonPeerPaymentQuoteWithPeerPaymentController:selectedAmount:recipient:
selectMode:
quoteWithAmount:requestToken:completion:
performQuote:completion:
identifyRecipientWithAddress:senderAddress:completion:
currentRecipientAddressLookup
phoneOrEmail
setCurrentRecipientAddressLookup:
setPhoneOrEmail:
_postNotificationWithRecipient:error:
_internalQueue_performRequestWithAmount:completion:
formalRequestTokenForAmount:completion:
role
_internalQueue_forceLookupRecipientInformation
_negativeBalanceErrorWithUnderlyingError:
_ambiguousSenderAddressErrorWithUnderlyingError:
_lockedOrRestrictedAccountErrorWithUnderlyingError:
_unknownPaymentErrorWithUnderlyingError:
countryCode
sendToUserFeatureDescriptor
merchantIdentifier
decimalNumberBySubtracting:
setRecipient:
initWithPeerPaymentWebService:
setActiveConversation:
senderPhoneOrEmail
recipientDisplayName
recipientFoundInContacts
recipient
lookupRecipientInformationIfNecessary
performPaymentWithAmount:requestToken:completion:
lookupRecipientInformationWithAddress:senderAddress:
performRequestWithAmount:completion:
conversationContext
setConversationContext:
_activeConversation
_recipient
_conversationContext
_currentRecipientAddressLookup
_currentPeerPaymentController
resolveRequirementsUsingProduct:
_startReaderModeIngestion:
_startIngestion
_transitionToIngestionProgress:
_startTransferringCard
initWithPaymentSetupProduct:delegate:
_invalidateCardNotFoundTimer
_startCardNotFoundTimer
_transitionToFlowIngestionState:
_titleForState:
_subtitleForState:
_physicalCardURLFromMetadata:forScale:
_resetReaderModeProvisioningState
_transitionToFlowIngestionState:progress:
_setupCardIngester
_startReadingCard
initWithPaymentSetupProduct:cardSessionToken:
ingestCardWithSuccessHandler:
_tearDownCardIngester
ingestCardWithCardSessionToken:successHandler:
_removePassIfNecessary
removeProvisionedPass
_cardNotFoundTimerFired
_readerModeResources
contactlessCardIngester:didUpdateCardIngestionStatus:
contactlessCardIngester:didFailToIngestCardWithError:resetProvisioning:isRecoverable:
setCredentialData:
hasCredentialData
credentialData
_credentialData
setAccountIdentifier:
hasAccountIdentifier
accountIdentifier
_accountIdentifier
isEqualToPassSyncStateItem:
shortDescription
setManifest:
_sequenceCounter
appendData:
isEqualToPassSyncState:
setSyncStateItems:
initWithPasses:
stateContainsSyncStateItem:
_syncStateItems
setHasPassSettings:
_passSettings
numberWithFloat:
hasPhysicalCardImageURL
setHasIngestionState:
hasIngestionState
ingestionStateAsString:
StringAsIngestionState:
setHasIngestionProgress:
hasIngestionProgress
setHasChangeAccepted:
setHasFullPassRequired:
hasFullPassRequired
_acceptedChangeUUID
_changeAccepted
_fullPassRequired
componentsWithURL:resolvingAgainstBaseURL:
scheme
queryItems
initWithTitle:body:attachmentPaths:
componentsWithString:
queryItemWithName:value:
containsString:
setQueryItems:
_attachmentURLs
attachmentsPaths
_tapToRadarURL
_attachmentsPaths
setHasCardAdded:
hasCardAdded
hasError
initWithPaymentService:
_updateAllPassesItemsFieldsPendingUpdateStatus
pk_setByApplyingBlock:
_transitPassBalanceModelWithPass:currentModel:
_loadPassContentIfNeeded:
_fetchMostRecentInfoForPass:
_notifyObserversOfUpdatedTransitPassInfoForModel:
_updatePassTransitPassesInfoManagerForPassUniqueID:updateBlock:
_fetchMostRecentTransitPropertiesAndAppletStateForPass:
refreshAllPasses
_fetchMostRecentBalancesForPass:
balancesForPaymentPassWithUniqueIdentifier:completion:
passAssociatedInfoManager:didUpdatePassInfo:withPassUniqueID:
setPasses:
addPass:
setPendingAmount:forBalanceField:passWithUniqueID:
passInfoForPassWithUniqueID:
paymentServiceWasInterrupted
setPaymentServiceWasInterrupted:
_observerQueue
_passAssociatedInfoModelsByPassUniqueID
_pendingAddValueUpdatedNotifyToken
_paymentServiceWasInterrupted
objectUniqueID
updateSettings:forPassWithUniqueID:
updateSettings:
setObjectUniqueID:
_objectUniqueID
setPassForInvitation:
hasPassForInvitation
passForInvitation
_passForInvitation
setAccountsRequiringProvisioningData:
setAccountsOnDeviceData:
hasAccountsRequiringProvisioningData
hasAccountsOnDeviceData
accountsRequiringProvisioningData
accountsOnDeviceData
_accountsOnDeviceData
_accountsRequiringProvisioningData
addRemoteAssetsForPartialUpdate:
setLastKnownReconciledPassSyncStateHash:
remoteAssetsForPartialUpdatesCount
clearRemoteAssetsForPartialUpdates
remoteAssetsForPartialUpdateAtIndex:
remoteAssetsForPartialUpdateType
hasLastKnownReconciledPassSyncStateHash
changeTypeAsString:
StringAsChangeType:
hasSyncStateItem
setHasPassSegmentIndex:
setHasPassSegmentTotal:
hasBaseManifestHashForPartialUpdate
lastKnownReconciledPassSyncStateHash
remoteAssetsForPartialUpdates
setRemoteAssetsForPartialUpdates:
_lastKnownReconciledPassSyncStateHash
_passSegmentIndex
_passSegmentTotal
_remoteAssetsForPartialUpdates
serviceProviderAcceptedNetworksCount
clearServiceProviderAcceptedNetworks
serviceProviderAcceptedNetworksAtIndex:
serviceProviderCapabilitiesCount
clearServiceProviderCapabilities
serviceProviderCapabilitiesAtIndex:
defaultSuggestionsCount
clearDefaultSuggestions
defaultSuggestionsAtIndex:
serviceProviderAcceptedNetworksType
serviceProviderCapabilitiesType
defaultSuggestionsType
hasServiceProviderIdentifier
hasServiceProviderCountryCode
hasServiceProviderDictJson
hasAction
hasMerchantID
setServiceProviderAcceptedNetworks:
setServiceProviderCapabilities:
serviceProviderDictJson
setDefaultSuggestions:
_action
_defaultSuggestions
_merchantID
_serviceProviderAcceptedNetworks
_serviceProviderCapabilities
_serviceProviderCountryCode
_serviceProviderDictJson
_serviceProviderIdentifier
exceptionWithName:reason:userInfo:
raise
addAppletsBytes:
lifecycleStatesCount
clearLifecycleStates
lifecycleStatesAtIndex:
addLifecycleStates:
activationStatesCount
clearActivationStates
activationStatesAtIndex:
addActivationStates:
appletsBytesCount
clearAppletsBytes
appletsBytesAtIndex:
appletsBytesType
lifecycleStates
setLifecycleStates:count:
activationStates
setActivationStates:count:
appletsBytes
setAppletsBytes:
_activationStates
_lifecycleStates
_appletsBytes
addCachedHeroImages:
cachedHeroImagesCount
clearCachedHeroImages
cachedHeroImagesAtIndex:
cachedHeroImagesType
hasStepIdentifier
cachedHeroImages
setCachedHeroImages:
_cachedHeroImages
_pendingUpdateExpireDate
_isPrimaryBalance
_label
_formattedValue
_balance
_detailLabel
_details
_usageDateRange
_handleExpressStateChange
expressPassController
expressModeSupportedForPass:
validExpressModeUpgradeRequestForPass:
_expressModeStateForPassWithUniqueID:
_checkForConflictsInEnablingExpressForPass:
_invokeCompletionHandlerWithSuccess:
disableExpressModeForPass:withCompletion:
hasImmediateAutomaticSelectionCriterion
_requestUserAuthenticationForPass:
_handleUserCancelled
expressModeSettingsCoordinator:didEncounterConflictWhenEnablingExpressForPass:conflictingExpressPasses:conflictsWithGymKit:completion:
conflictingExpressPassesWithPassInformation:completion:
_handleSuccessfulUserAuthenticationWithCredential:forPass:
_handleFailedUserAuthentication
expressModeSettingsCoordinator:requestsAuthorizationToEnableExpressForPass:completion:
_upgradeExpressModeForPass:withCredential:
_enableExpressModeForPass:withCredential:
_handleSuccessForPass:
_handleFailedPassUpgrade
upgradeExpressModeForPass:withCredential:completion:
_handleFailedEnableExpress
enableExpressModeWithPassInformation:credential:completion:
expressModeSettingsCoordinator:didUpdateState:forPassWithUniqueID:
_expressModeStateForPassWithUniqueID:fromControllerState:
initWithExpressPassController:queue:
isExpressModeSupportedForPass:
expressModeStateForPass:
enableExpressModeForPass:completionHandler:
disableExpressModeForPass:completionHandler:
setExpressPassController:
currentOperation
setCurrentOperation:
currentContext
setCurrentContext:
expressStateUpdatePending
setExpressStateUpdatePending:
previousPassStates
setPreviousPassStates:
_expressStateUpdatePending
_expressPassController
_currentOperation
_currentContext
_previousPassStates
requiredFieldsCount
clearRequiredFields
requiredFieldsAtIndex:
requiredFieldsType
hasCurrency
hasDepositAmount
hasMinLoadedBalance
hasMaxLoadedBalance
hasReaderModeMetadataJson
hasDigitalIssuanceMetadata
hasReaderModeResourcesJson
hasMinimumReaderModeBalance
setRequiredFields:
readerModeMetadataJson
readerModeResourcesJson
_currency
_depositAmount
_digitalIssuanceMetadata
_maxLoadedBalance
_minLoadedBalance
_minimumReaderModeBalance
_readerModeMetadataJson
_readerModeResourcesJson
_requiredFields
addCredentialsBytes:
credentialsBytesCount
clearCredentialsBytes
credentialsBytesAtIndex:
credentialsBytesType
credentialsBytes
setCredentialsBytes:
_credentialsBytes
mainBundle
bundleIdentifier
setResponseQueue:
queueTSMConnectionResponse:
provisioningDataResponse:
registrationDataResponse:
configurationDataResponse:
signDataResponse:
secureElementGetAppletsResponse:
secureElementRemoveAppletsResponse:
setNewAuthRandomResponse:
didRegisterResponse:
dumpLogsResponse:
pendingRemovalResponse:
updatePaymentPass:
updatePushToken:
preconditionNotMet:
handleValueAddedServiceTransactions:
preferredAIDRequest:
preferredAIDResponse:
handleWebServiceContextDidChangeRequest:
handleWebServiceContextNeededRequest:
handlePaymentTransactions:
handleRemovedTransaction:
setExpressPassResponse:
removeExpressPassesWithCardTypeResponse:
removeExpressPassWithUniqueIdentifierResponse:
conflictingExpressPassIdentifiersForPassInformationResponse:
handleBalanceReminderWithBalanceAndPassRequest:
setBalanceReminderWithBalanceAndPassResponse:
setCommutePlanReminderWithCommutePlanAndPassResponse:
balanceReminderWithBalanceAndPassResponse:
commutePlanReminderWithCommutePlanAndPassResponse:
handleUpdatedAppletState:
getPairingInfoResponse:
handleShowPaymentSetupRequest:
enableServiceModeResponse:
handleTransactionDefaultsNeededRequest:
handleCompanionMigrationResponse:
peerPaymentRegisterResponse:
peerPaymentUnregisterResponse:
handleUpdatedPeerPaymentWebServiceContext:
provisionPeerPaymentPassResponse:
updatePeerPaymentAccountResponse:
setPeerPaymentPreferencesResponse:
openURLWithRequest:
handlePeerPaymentTermsAndConditionsAcceptanceRequest:
deviceMetadataResponse:
updateAccountWithIdentifierResponse:
handleDeviceUnlockedForPendingProvisioningRequest:
performDeviceCheckInResponse:
availableProductsResponse:
performProductActionResponse:
checkTLKsMissingResponse:
initializeCloudStoreIfNecessaryWithHandlerResponse:
resetApplePayManateeViewResponse:
downloadAllPaymentPasses:
checkCompanionPeerPaymentRegistrationState:
initializeCloudStoreIfNecessaryResponse:
cloudStoreStatusResponse:
markAllAppletsForDeletionResponse:
handleBalanceChange:
remotePassUpgradeResponse:
checkPasscodePolicyComplianceResponse:
handlePasscodeUpgradeFlowShouldExitRequest:
applyPasscodeRestrictionsResponse:
subcredentialInvitationsResponse:
acceptSubcredentialInvitationResponse:
matchingCredentialOnDeviceResponse:
canAcceptInvitationResponse:
handleAcceptSubcredentialProvisioningRequest:
fetchOrInitializeAccountAttestationAnonymizationSaltRequest:
accountAttestationAnonymizationSaltResponse:
setAccountAttestationAnonymizationSaltResponse:
requestSubcredentialInvitationResponse:
updateSubcredentialMetadataResponse:
registerCredentialsResponse:
revokeCredentialsResponse:
removeSharingInvitationResponse:
handleCredentialsChange:
declineRelatedSharingInvitationsIfNecessaryRequest:
declineRelatedSharingInvitationsIfNecessaryResponse:
familyMembersResponse:
photosForFamilyMembersWithDSIDsResponse:
setProvisioningService:
_acquireAssertionOfType:
_invalidateAssertionOfType:
provisioningActiveDeviceAssertion
setProvisioningActiveDeviceAssertion:
setActivePairedDevice:withActiveDeviceAssertionHandler:
paymentPassesWithPrimaryAccountIdentifier:completion:
configureWebServiceIfNecessary:completion:
_sendProtobuf:responseExpected:
_deviceIsDaytonaOrLater
_deviceIsFortuneOrLater
_getPairingInfoAndSetAuthRandomIfNotPaired:completion:
_setNewAuthRandomReturningPairingState:
_setNewAuthRandomIfNecessaryReturningPairingState:
authorizationHeader
_paymentWebService:registrationDataWithAuthToken:completionHandler:
responseQueue
setLocation:
phoneNumber
getActivePairedDevice
setDeviceSerialNumber:
setDeviceUDID:
setProductType:
setSecureElementIdentifier:
setSupportsAccessExpressMode:
paymentWebService:signData:withCompletionHandler:
paymentWebService:didRegisterWithRegionMap:primaryRegionTopic:
_supportedRegionsForWebService:
paymentSupportedInCurrentRegionForWebService:
_supportsFeaturesForWebService:
featureWithType:inRegion:
deviceVersion
versionRange
versionMeetsRequirements:deviceClass:
removeAIDsFromSecureElement:withCompletion:
savePaymentPass:forDevice:completion:
downloadRemoteAssetsWithScreenScale:suffix:completion:
removePaymentPassWithUniqueID:forDevice:waitForConfirmation:completion:
redownloadAllPaymentPassesWithCompletion:
initWithIdentifier:lifecycleState:
failedPrecondition
passIDs
scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:handler:
provisioningService
setPassIDs:
actualUniqueID
_expressPassesInformationFromDataArray:
cancelled
expressMode
paymentApplicationIdentifier
initForExpressMode:withPassUniqueIdentifier:paymentApplicationIdentifier:
conflictingExpressPassIdentifiersForPassInformation:withReferenceExpressState:completion:
timeInterval
initWithTimeInterval:
upgradeStatus
expressPassInformations
manager
handlePeerPaymentTermsAndConditionsRequestFromGizmo
handleDeviceUnlockedForPendingProvisioningRequestFromGizmo
needsRegistration
primaryRegion
accountServiceURL
hasAccounts
accountServiceEnabledForRegion:
watchPaymentWebService
setAccountServicesURL:
accounts
accountsWithRequest:completion:
addOperation:
null
provisioningAllowed
associatedPassUniqueID
evaluateWithInput:completion:
setMetadataFields:
applyServiceURL
hasApplications
applyServiceEnabledForRegion:
applyServiceFeaturesForRegionMeetingEnablementThreshold:
_deviceSupportedFeatureIdentifiers
pk_setByRemovingObject:
availableProducts
availableProductsWithRequest:completion:
setDefaultCardUniqueID:completion:
supportsExpressForAutomaticSelectionTechnologyType:
initForPaymentPass:withTechologyTest:
_upgradeExpressAutomaticSelectionCriteriaRequestForPass:
_expressPassInformationWithPass:upgradeRequst:
deviceSupportMultipleExpressPasses
_multipleExpressTransitPassPaymentWebService:handlePotentialExpressPassInformation:upgradeRequest:pass:withCompletionHandler:
_singleExpressTransitPassPaymentWebService:handlePotentialExpressPassInformation:withCompletionHandler:
paymentWebService:passesOfType:
_categoryIdentifierForPass:
associatedAccountServiceAccountIdentifier
_expressModesFromExpressPassesInformation:
remotePassUpgradeWithRequest:pass:requireAuthorization:notifyUserOnPairedDevice:updateBlock:
setExpressWithPassInformation:requestAuthorization:completion:
initDummyExpressInfoForAutomaticSelectionCriteriaUpgradeRequest:paymentPass:withTechologyTest:
instancesRespondToSelector:
_upgradeExpressAutomaticSelectionCriteriaRequestForPass:deviceClass:OSVersion:SEID:
upgradeRequests
minimumOSVersion
initWithMinimumVersion:maximumVersion:
secureElementIdentifier
technologyTypes
registrationDate
passcodeMeetsPolicy
setPasscodeUpgradeFlowController:
passcodeChangeCoordinator
setPasscodeChangeCoordinator:
handleGizmoPasscodeChangeWithVisibleViewController:completion:
exitPasscodeChangeFlowWithPasscodeChanged:error:
_remoteLibrary
devices
deviceForNRDevice:fromIDSDevices:
uniqueIDOverride
_isSubcredentialProvisioningSupported
_deviceIsConnected
setWithCapacity:
subcredentialInvitationCoordinator
_sendProtobuf:responseIdentifier:
willPassWithUniqueIdentifierAutomaticallyBecomeDefault:completion:
consistencyCheckWithCompletion:
familyMembersWithCompletion:
photosForFamilyMembersWithDSIDs:completion:
remoteDeviceAssertionManager
getAllDevices
classNamed:
passcodeUpgradeFlowController
setFlowController:
paymentWebServiceDidUpdateConfiguration:
paymentWebService:queueConnectionToTrustedServiceManagerForPushTopic:withCompletion:
paymentWebService:configurationDataWithCompletionHandler:
paymentWebService:registrationDataWithCompletionHandler:
paymentWebService:signData:signatureEntanglementMode:withCompletionHandler:
paymentWebService:provisioningDataIncludingDeviceMetadata:withCompletionHandler:
paymentWebService:deleteApplicationWithAID:
paymentWebService:filterVerificationChannels:
registrationSupportedInCurrentRegionForWebService:
deviceDescriptionForPaymentWebService:
osVersion
supportsAutomaticPassPresentation
noteProvisioningUserInterfaceDidAppear
noteProvisioningUserInterfaceDidDisappear
noteProvisioningDidBegin
noteProvisioningDidEnd
paymentWebService:setNewAuthRandomIfNecessaryReturningPairingState:
paymentWebService:setNewAuthRandom:
paymentWebService:hasPassesOfType:
paymentWebService:canProvisionPaymentPassWithPrimaryAccountIdentifier:
paymentWebService:validateAddPreconditionsWithCompletion:
downloadAllPaymentPassesForPaymentWebService:
paymentWebService:validateTransferPreconditionsWithCompletion:
paymentWebService:requestPassUpgrade:pass:completion:
claimSecureElementForCurrentUser
claimSecureElementForCurrentUserWithCompletion:
secureElementOwnershipStateForCurrentUser
paymentWebService:registrationDataWithAuthToken:completionHandler:
trustedDeviceEnrollmentInfoForWebService:
signatureForAuthToken:webService:completion:
applePayTrustKeyForIdentifier:completion:
createApplePayTrustKeyWithRequest:completion:
deleteApplePayTrustKeyWithIdentifier:completion:
cellularNetworkRegion
maximumPaymentCards
setMaximumPaymentCards:
deviceIDSIdentifier
paymentWebService:handlePotentialExpressPass:withCompletionHandler:
paymentWebService:canHandlePotentialExpressPass:withCompletionHandler:
removeExpressPassWithUniqueIdentifier:completion:
paymentWebService:isPassExpressWithUniqueIdentifier:completion:
felicaSecureElementIsAvailable
secureElementIsAvailable
supportsExpressModeForExpressPassType:
supportsExpressMode:
isGymKitEnabled
paymentWebService:addPaymentPass:withCompletionHandlerV2:
paymentWebService:removePass:withCompletionHandler:
paymentWebServiceSupportsPeerPaymentRegistration:
paymentWebServiceSupportsAccounts:
supportedFeatureIdentifiersWithPaymentWebService:
supportedFeatureIdentifiersForAccountProvisioningWithPaymentWebService:
updatedAccountsForProvisioningWithCompletion:
featureApplicationsForProvisioningWithCompletion:
paymentWebService:deviceMetadataWithFields:completion:
paymentWebService:updateAccountWithIdentifier:completion:
notePasscodeUpgradeFlowWillBeginWithCompletion:
notePasscodeUpgradeFlowDidEnd
requestPasscodeUpgradeForPasscodeUpgradeFlowController:withVisibleViewController:completion:
exitPasscodeUpgradeForPasscodeUpgradeFlowController:withShouldContinue:error:
paymentWebService:addSharingInvitationReceipts:onCredential:withCompletion:
paymentWebService:removeSharingInvitationReceipts:onCredential:withCompletion:
paymentWebService:revokeSharedCredentialGroup:withCompletion:
paymentWebService:addSubcredential:fromSharingInvitation:withCompletion:
paymentWebService:declineRelatedSharingInvitationsIfNecessary:withCompletion:
paymentWebService:removeSharingInvitation:withCompletion:
requestBackgroundRegistrationForCredential:withCompletion:
paymentWebService:canAcceptInvitation:withCompletion:
paymentWebService:acceptSubcredentialInvitationWithIdentifier:completion:
paymentWebService:acceptSubcredentialInvitationWithIdentifier:metadata:completion:
paymentWebService:credentialWithIdentifier:completion:
paymentWebService:validateAcceptInvitationPreconditionsWithCompletion:
paymentWebService:supportedRegionFeatureOfType:
paymentWebService:setDefaultPaymentPassUniqueIdentifier:
availableProductsWithCompletion:
performProductActionRequest:completion:
performDeviceCheckInWithCompletion:
paymentWebService:storePassOwnershipToken:withIdentifier:
paymentWebService:passOwnershipTokenWithIdentifier:completion:
willPassWithUniqueIdentifierAutomaticallyBecomeDefault:
consistencyCheck
archiveBackgroundContext:
markAllAppletsForDeletionWithCompletion:
paymentWebService:didRegisterWithRegionMap:
secureElementCardsWithCompletion:
dumpLogsWithCompletion:
handlePendingRemovalOfPaymentPass:uniqueID:completion:
handlePreferredAID:forPassWithUniqueID:completion:
retrieveTransactionsForPassWithUniqueID:
handleDeletePaymentTransactionWithIdentifier:passUniqueIdentifier:
removeExpressPassesWithCardType:completion:
conflictingExpressPassIdentifiersForPassInformation:completion:
setBalanceReminder:forBalance:pass:completion:
balanceReminderForBalance:pass:completion:
setCommutePlanReminder:forCommutePlan:pass:completion:
commutePlanReminderForCommutePlan:pass:withCompletion:
cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode:
enableServiceModeForPassWithUniqueIdentifier:completion:
cancelOutstandingEnableServiceModeRequests
cancelOutstandingRemotePassUpdateRequest:pass:
peerPaymentUnregisterWithCompletion:
handleCompanionMigrationWithCompletion:
handleCompanionPeerPaymentRegistration
handleCompanioniCloudSignout
requestAutomaticProvisioningForCompanionPaymentPass:
_serialNumbersOfAllPairedDevices
deviceSupportTransitReminderSetting
_statusUpdaterWithResponseClass:type:responseIdentifier:
setRemoteDeviceAssertionManager:
setManager:
setSubcredentialInvitationCoordinator:
_provisioningService
_responseQueue
_provisioningActiveDeviceAssertion
_remoteDeviceAssertionManager
_manager
_passcodeChangeCoordinator
_passcodeUpgradeFlowController
_subcredentialInvitationCoordinator
hasFlowIdentifier
hasCreditAccountCredential
flowIdentifier
creditAccountCredential
_creditAccountCredential
_flowIdentifier
regionsCount
clearRegions
regionsAtIndex:
supportedProtocolsCount
clearSupportedProtocols
supportedProtocolsAtIndex:
paymentOptionsCount
clearPaymentOptions
paymentOptionsAtIndex:
requestedProvisioningMethodsCount
clearRequestedProvisioningMethods
requestedProvisioningMethodsAtIndex:
regionsType
supportedProtocolsType
paymentOptionsType
requestedProvisioningMethodsType
hasDisplayName
hasPartnerIdentifier
hasPartnerName
setHasSupportedProvisioningMethods:
hasSupportedProvisioningMethods
setHasFlags:
hasFlags
setHasHsa2Requirement:
hasHsa2Requirement
hasImageAssetURLs
setHasSuppressPendingPurchases:
hasSuppressPendingPurchases
setRegions:
setPaymentOptions:
requestedProvisioningMethods
setRequestedProvisioningMethods:
_flags
_hsa2Requirement
_supportedProvisioningMethods
_displayName
_imageAssetURLs
_partnerIdentifier
_partnerName
_paymentOptions
_regions
_requestedProvisioningMethods
_supportedProtocols
_suppressPendingPurchases
_initWithPassTypeIdentifier:serialNumber:credentialType:sanitizedPrimaryAccountNumber:longDescription:cardType:
verificationChannelsCount
clearVerificationChannels
verificationChannelsAtIndex:
verificationChannelsType
imageRef
scale
orientation
resizedImageWithSize:shouldCover:
addExpressPassInformation:
expressPassInformationsCount
clearExpressPassInformations
expressPassInformationAtIndex:
expressPassInformationType
setUpgradeStatus:
setHasUpgradeStatus:
hasUpgradeStatus
upgradeStatusAsString:
StringAsUpgradeStatus:
setExpressPassInformations:
_expressPassInformations
_upgradeStatus
arrayWithCapacity:
supportedServerVersionsCount
clearSupportedServerVersions
supportedServerVersionsAtIndex:
addSupportedServerVersions:
setClientInfoHTTPHeader:
supportedServerVersions
setSupportedServerVersions:count:
supportedServerVersionsAsString:
StringAsSupportedServerVersions:
hasClientInfoHTTPHeader
clientInfoHTTPHeader
_supportedServerVersions
_clientInfoHTTPHeader
connect
noteWatchOfferDisplayedForPaymentPassWithUniqueID:
beginProvisioningFromWatchOfferForPaymentPass:withCompletion:
noteProvisioningPreflightCompleteWithSuccess:error:completion:
provisionPassForAccountIdentifier:makeDefault:completion:
registerDeviceWithCompletion:
paymentPassUniqueIDs:
paymentPassWithUniqueID:reply:
paymentPassWithDeviceAccountIdentifier:completion:
paymentPassWithPairedTerminalIdentifier:completion:
credentialedPassUniqueIDsWithReply:
savePaymentPassAtURL:withUniqueID:forPairingID:completion:
removePaymentPassWithUniqueID:forPairingID:waitForConfirmation:completion:
setDefaultCard:completion:
defaultCard:
defaultPaymentApplicationForPassWithUniqueID:completion:
setDefaultPaymentApplication:forPassWithUniqueID:completion:
initiateConsistencyCheckWithCompletion:
handlePendingUnpairingWithCompletion:
handlePendingiCloudSignoutWithCompletion:
setSharedPaymentWebServiceContext:forPairingID:completion:
sharedPaymentWebServiceContextForPairingID:withCompletion:
setSharedPeerPaymentWebServiceContext:forPairingID:completion:
sharedPeerPaymentWebServiceContextForPairingID:withCompletion:
setPeerPaymentAccount:forPairingID:completion:
peerPaymentAccountForPairingID:withCompletion:
initiateLostModeExitAuthWithCompletion:
transactionsForTransactionSourceIdentifiers:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:completion:
deletePaymentTransactionWithIdentifier:fromDeviceWithPairingID:completion:
balanceReminderForBalance:pass:withCompletion:
fetchPendingTransactionForPassWithUniqueID:completion:
markPendingTransactionAsProcessedForPassWithUniqueID:
trustedDeviceEnrollmentSignatureWithAccountDSID:sessionData:handler:
paymentPassWithUniqueIdentifier:didUpdateWithBalances:
paymentPassWithUniqueIdentifier:didUpdateBalanceReminder:forBalance:
paymentPassWithUniqueIdentifier:didUpdateWithCredentials:
setHasPriority:
hasPriority
setHasSupportedProtocols:
hasSupportedProtocols
_priority
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
mainQueue
_handleServerPaymentPassesChanged:
_handleDefaultCardChanged:
_remoteObjectProxyWithFailureHandler:
_clearCaches
primarySecureElementIdentifier
_isApplePaySupportedInCurrentRegion
_cachedUniqueIDs
queueAppropriateFailedActions
_remoteObjectProxySynchronize:withFailureHandler:
_setCachedUniqueIDs:
_cachedPassForUniqueID:
_applyPropertiesToPass:
_addPassToCache:
_removePassWithUniqueIDFromCache:
fileURL
_savePaymentPass:atURL:forDevice:completion:
_sharedPaymentWebServiceContextForDevice:withCompletion:
_shouldShowApplePaySettingsForTinkerWithCompletion:
_shouldShowApplePaySettingsWithCompletion:
cachedUniqueIDs
setWithSet:
setCachedUniqueIDs:
cachedPasses
setCachedPasses:
setDataAccessor:
setPreferredImageScale:
setPreferredImageSuffix:
memberType
cachedTinkerFamilyMemeber
getActiveTinkerFamilyMemberWithCompletion:
_invalidateCachedPassWithUniqueID:
sharedDeviceConnection
applicationIsInstalledOnPairedDevice:withCompanionBundleID:completion:
_installedCompanionApplicationBundleIDForPaymentPass:
pairedWatchHasApplicationWithBundleID:
installApplication:onPairedDevice:completion:
fetchWatchAppBundleIDForCompanionAppBundleID:completion:
storeIdentifiers
unsignedLongLongValue
initWithStoreItemIdentifier:error:
watchProvisioningURL
watchProvisioningURLForPaymentPass:
isSetupAssistantProvisioningSupported
isIssuerAppProvisioningSupported
watchPeerPaymentWebService
shouldShowWatchOfferForPaymentPass:withCompletion:
noteWatchOfferShownForPaymentPass:
credentialedPassUniqueIDsSynchronous:reply:
defaultCardUniqueID:
setPeerPaymentAccount:forDevice:
shouldShowApplePaySettingsWithCompletion:
deletePaymentTransactionWithIdentifier:fromDevice:completion:
reloadPaymentPassesWithCompletion:
shouldShowWatchExtensionInstallationForPaymentPass:
beginPairedWatchInstallationOfApplicationForPaymentPass:completion:
hasQueuedPaymentPasses
setHasQueuedPaymentPasses:
connectionAvailableActions
setConnectionAvailableActions:
connectionUnavailableWebServiceContext
setConnectionUnavailableWebServiceContext:
_cacheQueue
_queueAppropriateFailedActions
_hasQueuedPaymentPasses
_cachedPasses
_connectionAvailableActions
_connectionUnavailableWebServiceContext
setSelectedVerificationChannelIdentifier:
hasSelectedVerificationChannelIdentifier
selectedVerificationChannelIdentifier
_selectedVerificationChannelIdentifier
metadataFields
_metadataFields
setPasscodeMeetsPolicy:
setHasPasscodeMeetsPolicy:
hasPasscodeMeetsPolicy
_passcodeMeetsPolicy
npk_hasImmediateAutomaticSelectionCriterion
manifestEntrysCount
clearManifestEntrys
manifestEntryAtIndex:
manifestEntryType
setManifestEntrys:
_manifestEntrys
addPassIDs:
passIDsCount
clearPassIDs
passIDsAtIndex:
passIDsType
failedPreconditionAsString:
StringAsFailedPrecondition:
setFailedPrecondition:
_failedPrecondition
_passIDs
moreInfoItemsCount
clearMoreInfoItems
moreInfoItemsAtIndex:
moreInfoItemsType
_fileHash
_relativePath
addCurrentUniqueIDs:
setActualUniqueID:
currentUniqueIDsCount
clearCurrentUniqueIDs
currentUniqueIDsAtIndex:
currentUniqueIDsType
setCancelled:
setHasCancelled:
hasCancelled
setHasNeedsUnlock:
hasNeedsUnlock
hasActualUniqueID
currentUniqueIDs
setCurrentUniqueIDs:
_actualUniqueID
_currentUniqueIDs
_cancelled
_startSessionTimeoutTimer
_updateCurrentPaymentBarcodeWithBarcodeIdentifier:decryptedBarcodeCredential:error:
authorizationCredential
_fetchDecryptedBarcodeWithCredential:
_acquireNotificationSuppressionAssertion
_acquireExpressTransactionSuppressAssertion
_extendSessionTimeoutTimer
_stopSessionTimeoutTimer
_releaseNotificationSuppressionAssertion
_releaseExpressTransactionSuppressionAssertion
setSubmittingAuthenticationResult:
currentTransaction
_handleUpdatedPaymentTransaction:
submitUserConfirmation:forTransactionIdentifier:completion:
_completedAuthenticationForTransaction:
_handleUpdatedTransactionStatus:
submitEncryptedPIN:forTransactionIdentifier:completion:
retrievePINEncryptionCertificateForPassUniqueIdentifier:withCompletion:
submittingAuthenticationResult
retrieveDecryptedBarcodeCredentialForPassUniqueIdentifier:authorization:withCompletion:
initWithPID:flags:reason:name:withHandler:
setEventType:
paymentInformation
setEventMetadata:
setAuthenticationType:
submitBarcodePaymentEvent:forPassUniqueIdentifier:withCompletion:
providerForExtensionPoint:
serialQueue
newAssertionForBundleIdentifier:withReason:
initWithBarcodeIdentifier:deviceAccountIdentifier:
completeLocalExtensionServiceWithCompletion:
handleInformationRequest:completion:
beginLocalExtensionServiceWithUserInteraction:completion:timeout:timeoutHandler:
extensionsWithContainingApplicationIdentifiers:completion:
setCurrentPaymentBarcode:
_insertPaymentTransactionForActiveBarcode
_invokeExtensionToCollectPaymentInformation
authenticationContext
requestedAuthenticationMechanisms
_processedAuthenticationMechanismForTransaction:
_updateCurrentTransactionStatus:transaction:
currentTransactionStatus
setCurrentTransactionStatus:
setCurrentTransaction:
paymentTransactionWithSource:
setOriginatedByDevice:
setPaymentHash:
addUpdateReasons:
setTransactionDate:
processedAuthenticationMechanism:forTransactionIdentifier:completion:
markAuthenticationCompleteForTransactionIdentifier:completion:
notificationSuppressionAssertion
setNotificationSuppressionAssertion:
acquireAssertionOfType:withReason:completion:
expressTransactionSuppressionAssertion
setExpressTransactionSuppressionAssertion:
sessionTimeoutTimer
setSessionTimeoutTimer:
_handleSessionTimeout
setAuthorizationCredential:
setSerialQueue:
_submittingAuthenticationResult
_currentPaymentBarcode
_currentTransactionStatus
_currentTransaction
_authorizationCredential
_sessionTimeoutTimer
_notificationSuppressionAssertion
_expressTransactionSuppressionAssertion
_serialQueue
initWithDictionary:lastUpdated:
_updateMockBalance
_mockAccount
_accountQueue
_balanceOffset
npkSetObject:forKey:
_processArgumentWithMutableDictionary:object:key:
npkDictionaryWithObjectsAndKeys:
npkFindFirstObjectMatchingCondition:
npkSafeObjectAtIndex:
npkSafelyAddObject:
npkFakeArcRetain
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
uppercaseString
npkHasContent
isAllCaps
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
getDevicesMatching:
initWithDomain:pairingID:pairingDataStore:
isConnected
synchronizeUserDefaultsDomain:keys:
floatValue
valueWithPointer:
characterAtIndex:
isMainThread
currentLocale
initWithConfiguration:url:
componentsSeparatedByCharactersInSet:
predicateWithFormat:
supportedRegionsForOSVersion:deviceClass:platform:
fromDeviceVersion
hasFeaturesSupportedForRegion:osVersion:deviceClass:
path
copyItemAtPath:toPath:error:
setDPANSuffix:
setSupportsInAppPayment:
setSupportsContactlessPayment:
setDPANIdentifier:
setTransitProperties:
setTransactionSourceIdentifier:
component:fromDate:
locale
bundle
initWithPassDictionary:bundle:
bundleInfoValueForKey:PID:
applicationProxyForIdentifier:
localizedNameForContext:
pluginKitProxyForIdentifier:
containingBundle
supportsServiceMode
dataForKey:
hasPeerPaymentAccount
peerPaymentEnabledForRegion:
initWithLocaleIdentifier:
setAlwaysShowsDecimalSeparator:
setMinimumFractionDigits:
setMaximumFractionDigits:
decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:
decimalNumberByRoundingAccordingToBehavior:
supportsSerialNumberBasedProvisioning
requiresTransferSerialNumberBasedProvisioning
initRequiringSecureCoding:
finishEncoding
encodedData
watch
isSuicaPass
supportsTransitHistory
processInfo
processName
processIdentifier
setInvalidateWhenBackgrounded:
stringByAppendingPathExtension:
URLByAppendingPathComponent:isDirectory:
initWithURL:options:error:
URLByAppendingPathComponent:
URLByAppendingPathExtension:
writeToURL:options:originalContentsURL:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
isEnumeratingDirectoryPostOrder
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
removeItemAtURL:error:
zippedDataForURL:
inputStreamWithData:
open
unzipStream:toPath:completionHandler:
pathComponents
pathWithComponents:
fileExistsAtPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
copyItemAtURL:toURL:error:
dataWithContentsOfURL:
SHA1Hash
componentsFromLocaleIdentifier:
hasSuffix:
substringWithRange:
deviceID
peerPaymentType
adjustmentType
initWithBytes:length:
initWithObjects:
finishDecoding
pathExtension
initWithFileURL:passURL:error:
remoteAssets
localURL
relativeLocalPath
sha1Hex
@24@0:8^{_NSZone=}16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
i16@0:8
v20@0:8i16
v20@0:8B16
B16@0:8
@20@0:8i16
i24@0:8@16
v16@0:8
@"NSString"
{?="assertionType"b1"pending"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
@"NPKProtoStandalonePaymentSetupProduct"
{?="allowNonSecureHTTP"b1}
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"UIViewController"16@?<v@?B@"NSError">24
@24@0:8@16
@"<NPKExpressGymKitAvailabilityManagerDelegate>"
@"NSData"
@"NPKProtoStandaloneRequestHeader"
B40@0:8@16@24@32
@"NPKPassSyncChange"
@"NSDate"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16@24B32B36
v48@0:8@16@24@32@?40
v64@0:8@16@24@32@40@48@?56
v36@0:8@16@24B32
v32@0:8@"NPKPassSyncEngine"16@"NPKPassSyncChange"24
v40@0:8@"NPKPassSyncEngine"16@"NSUUID"24B32B36
v40@0:8@"NPKPassSyncEngine"16@"NSData"24@"NPKPassSyncState"32
v32@0:8@"NPKPassSyncEngine"16@"NPKPassSyncState"24
v32@0:8@"NPKPassSyncEngine"16@"NSData"24
v48@0:8@"NPKPassSyncEngine"16@"NSData"24@"NPKPassSyncStateItem"32@?<v@?B>40
v64@0:8@"NPKPassSyncEngine"16@"NSData"24@"NPKPassSyncStateItem"32@"NSData"40@"NSDictionary"48@?<v@?BB>56
v40@0:8@"NPKPassSyncEngine"16@"NSString"24@?<v@?B>32
v24@0:8@"NPKPassSyncEngine"16
v36@0:8@"NPKPassSyncEngine"16@"NPKPassSyncChange"24B32
@48@0:8@16@24@32^@40
@32@0:8@16@24
@"NSData"48@0:8@"NPKPassSyncEngine"16@"NSString"24@"NSDictionary"32^@40
@"NSData"32@0:8@"NPKPassSyncEngine"16@"NSString"24
v32@0:8Q16@24
Q24@0:8@16
@"NPKPassSyncEngine"
@"IDSService"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NPKPassSyncServiceSyncStatus"
v24@0:8@?16
@"<NPKPaymentWebServiceStandaloneTargetDeviceDelegate>"
{?="numericEntryPending"b1}
{?="pending"b1"success"b1}
v40@0:8@16@24Q32
v48@0:8@16@24Q32Q40
v40@0:8@"PKGroupsController"16@"PKGroup"24Q32
v48@0:8@"PKGroupsController"16@"PKGroup"24Q32Q40
@"NSArray"24@0:8@"PKGroupsController"16
v40@0:8@16Q24Q32
v40@0:8@"PKGroup"16@"PKPass"24Q32
v40@0:8@"PKGroup"16Q24Q32
B32@0:8Q16Q24
v32@0:8Q16Q24
v24@0:8@"<NPKPassesDataSourceObserver>"16
@"NSArray"16@0:8
@"PKPass"24@0:8@"NSString"16
v24@0:8@"PKPass"16
v24@0:8@"PKPaymentPass"16
v24@0:8@?<v@?@"NSArray">16
@24@0:8B16B20
@"NSHashTable"
@"PKGroupsController"
@"NSArray"
@"NPKStandaloneFirstUnlockCoordinator"
{?="pending"b1}
@40@0:8@16@24@32
v24@0:8Q16
@"NPKProtoStandalonePaymentProvisioningMethodMetadata"
q16@0:8
@"NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowPasscodeUpgradeStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext"
{?="allowsAddLater"b1}
v24@0:8d16
d16@0:8
{?="reminderInterval"b1}
{?="state"b1}
@"NPKProtoStandalonePaymentApplication"
@"NPKProtoStandalonePass"
{?="activationState"b1}
v32@0:8@"PKXPCService"16@"NSXPCConnection"24
v24@0:8@"PKXPCService"16
v36@0:8@16B24@?28
v28@0:8B16@?20
@28@0:8B16@?20
@?24@0:8@?16
@"PKXPCService"
{?="success"b1}
v24@0:8q16
@56@0:8@16^@24^@32^@40@48
{?="forceReRegistration"b1}
v40@0:8@16@24q32
v32@0:8@16q24
v32@0:8@"PKSubcredentialProvisioningController"16@"PKPaymentPass"24
v32@0:8@"PKSubcredentialProvisioningController"16@"NSError"24
v40@0:8@"PKSubcredentialProvisioningController"16@"NSError"24q32
v40@0:8@"PKSubcredentialProvisioningController"16@"NSError"24@?<v@?B>32
v32@0:8@"PKSubcredentialProvisioningController"16q24
v40@0:8@16Q24@?32
v56@0:8@16@24@32@40@?48
@32@0:8q16@24
@?16@0:8
@"PKPaymentService"
@"PKSubcredentialProvisioningController"
@"PKAppletSubcredentialSharingSession"
@"NPKWatchSubcredentialProvisioningService"
@"NPKProtoPassSyncState"
{?="credentialType"b1"cardType"b1}
@40@0:8@16@24Q32
@"NSSet"
@32@0:8@16q24
@"NPKProtoStandalonePaymentProvisioningFlowStepContext"
@"NPKProtoStandaloneResponseHeader"
{?="reminderInterval"b1"pending"b1}
{?="entanglementMode"b1}
v48@0:8@16:24@32@40
{?="didDeclineInvitations"b1}
{?="timeoutInSeconds"b1}
{?="isAvailable"b1}
@"<NPKQuickPaymentSessionSourceDelegate>"
@"NPKButtonListener"
@"PKPass"
@"NSDictionary"
@"NPKQuickPaymentSessionLocalAuthenticationCoordinator"
v20@0:8I16
I16@0:8
@"NPKProtoHash"
{?="resyncID"b1"fullResyncNeeded"b1}
v24@0:8@"<NPKPassesDataSource>"16
v32@0:8@"<NPKPassesDataSource>"16@"NSArray"24
v32@0:8@"<NPKPassesDataSource>"16@"PKPass"24
@"<NPKValueAddedServiceAutomaticSelectionCoordinatorDelegate>"
@"<NPKPassesDataSource>"
v36@0:8B16@20@28
v24@0:8@"NPKPaymentProvisioningFlowControllerRequestContext"16
v32@0:8@"PKPaymentPass"16@"NPKPaymentProvisioningFlowControllerRequestContext"24
v32@0:8@"PKAddPaymentPassRequestConfiguration"16@"NPKPaymentProvisioningFlowControllerRequestContext"24
v32@0:8@"NPKPaymentProvisioningFlowPickerItem"16@"NPKPaymentProvisioningFlowControllerRequestContext"24
v32@0:8@"PKPaymentSetupProduct"16@"NPKPaymentProvisioningFlowControllerRequestContext"24
v32@0:8@"NSDecimalNumber"16@"NPKPaymentProvisioningFlowControllerRequestContext"24
v32@0:8@"NSArray"16@"NPKPaymentProvisioningFlowControllerRequestContext"24
v40@0:8@"NSArray"16@"PKPaymentCredential"24@"NPKPaymentProvisioningFlowControllerRequestContext"32
v36@0:8B16@"NSError"20@"NPKPaymentProvisioningFlowControllerRequestContext"28
v32@0:8@"PKVerificationChannel"16@"NPKPaymentProvisioningFlowControllerRequestContext"24
v32@0:8@"NSString"16@"NPKPaymentProvisioningFlowControllerRequestContext"24
v32@0:8@"PKAddPaymentPassRequest"16@"NPKPaymentProvisioningFlowControllerRequestContext"24
@"<NPKPaymentProvisioningFlowControllerDelegate>"16@0:8
v24@0:8@"<NPKPaymentProvisioningFlowControllerDelegate>"16
v36@0:8@16B24@28
v40@0:8Q16@24@32
v28@0:8i16@20
v32@0:8i16i20@24
@28@0:8@16B24
@"<NPKPaymentProvisioningFlowControllerDelegate>"
@"PKPaymentProvisioningController"
@"PKPaymentAuthorizationController"
@"PKContactlessCardIngester"
@"PKAddPaymentPassRequestConfiguration"
@"PKAddPaymentPassRequest"
@"PKPaymentWebService"
@"PKPaymentSetupFieldsModel"
@"<NSObject>"
@"NPKPaymentProvisioningFlowControllerRequestContext"
@"PKPaymentPass"
@"PKPaymentCredential"
@"PKPaymentSetupProduct"
@"PKPaymentRequest"
@"NSDecimalNumber"
@"PKServiceProviderPurchase"
@"PKPaymentProvisioningMethodMetadata"
@72@0:8@16@24q32Q40@48@56@64
@80@0:8@16@24q32Q40@48@56@64d72
@"IDSProtobuf"
@"NPKProtoStandaloneImageSize"
{?="useSimulatedFlowController"b1}
v32@0:8{CGSize=dd}16
v48@0:8@16{CGSize=dd}24d40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B32@0:8@16@24
B48@0:8@16Q24@32@40
@"PKImage"
@"NSNumber"
@"PKNFCPayload"
@"PKColor"
@"PKPaymentApplication"
@"PKTransitAppletState"
v48@0:8@"NSArray"16@"NSData"24@"NSData"32@?<v@?@"PKAddPaymentPassRequest">40
v32@0:8@"PKPaymentPass"16@"NSError"24
@24@0:8@?16
{?="allowsManualEntry"b1}
@"NPKProtoCatalog"
@"NPKProtoPass"
{?="lastKnownResyncID"b1"resyncID"b1"syncID"b1}
v28@0:8@16i24
v28@0:8@"NSData"16i24
v24@0:8@?<v@?B@"NSError">16
@32@0:8Q16@24
v32@0:8@?16@24
@"NSMutableDictionary"
@"NPKContactlessPaymentSessionManagerTransactionContext"
@"PKPaymentPassAction"16@0:8
@"PKPaymentBalance"16@0:8
@"<NPKDateRange>"16@0:8
@"PKPaymentTransaction"
@"NPKPaymentBarcode"
v40@0:8@16Q24@32
v32@0:8@"NPKBarcodePaymentSession"16@"NPKPaymentBarcode"24
v40@0:8@"NPKBarcodePaymentSession"16Q24@"PKPaymentTransaction"32
v32@0:8@"NPKQuickPaymentSession"16@"PKPass"24
v48@0:8@"NPKQuickPaymentSession"16@"PKPass"24@"NSArray"32@"NSArray"40
v40@0:8@"NPKQuickPaymentSession"16Q24@"PKContactlessInterfaceTransactionContext"32
v24@0:8@"NPKQuickPaymentSession"16
v32@0:8@"NPKQuickPaymentSession"16@"PKContactlessInterfaceTransactionContext"24
v28@0:8@16B24
v72@0:8Q16@24@32@40@48@56@64
v48@0:8@16@24@32^@40
@72@0:8Q16@24@32@40@48@56@64
@40@0:8Q16@24@32
@48@0:8@16@24@32@40
@"NPKContactlessPaymentSessionState"
@"NPKQuickPaymentSession"
@"NPKQuickPaymentSessionCleanupDelegate"
@"NPKBarcodePaymentSession"
v24@0:8B16B20
v28@0:8B16@20
@"PUConnection"
@"NSSManager"
@"NPKCompanionAgentConnection"
@40@0:8q16@24B32B36
@64@0:8@16@24q32@40@48B56B60
{?="passType"b1"remotePass"b1}
@"<NPKTransitAppletHistoryFetcherDelegate>"
@"PKTransitPassProperties"
{?="httpStatus"b1}
@36@0:8@16B24@28
v24@0:8@"NSString"16
@"NSXPCConnection"
@"<NPKDoublePressDelegationAssertionDelegate>"
{?="cancelUpdate"b1"requestAuthorization"b1"shouldNotifyUser"b1}
{?="authRandomSet"b1"pending"b1"success"b1}
@"NSURL"
@"NSError"
@"PKVerificationChannel"
@"PKTransitAppletHistory"
@"PKFelicaAppletHistory"
@"PKExpressTransactionState"
v32@0:8@"PKFieldDetector"16@"PKFieldProperties"24
v24@0:8@"PKFieldDetector"16
@"PKFieldDetector"
@"NSNumberFormatter"
@"NSUserActivity"
B24@0:8Q16
v40@0:8Q16@24@?32
v32@0:8Q16@?24
{?="includeDeviceMetadata"b1}
@"NSUUID"
@40@0:8@16Q24@32
v24@0:8@"PKPaymentAuthorizationController"16
v40@0:8@"PKPaymentAuthorizationController"16@"PKPayment"24@?<v@?@"PKPaymentAuthorizationResult">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPayment"24@?<v@?q>32
v32@0:8@"PKPaymentAuthorizationController"16@?<v@?@"PKPaymentRequestMerchantSessionUpdate">24
v40@0:8@"PKPaymentAuthorizationController"16@"PKShippingMethod"24@?<v@?@"PKPaymentRequestShippingMethodUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKContact"24@?<v@?@"PKPaymentRequestShippingContactUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPaymentMethod"24@?<v@?@"PKPaymentRequestPaymentMethodUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKShippingMethod"24@?<v@?q@"NSArray">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKContact"24@?<v@?q@"NSArray"@"NSArray">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPaymentMethod"24@?<v@?@"NSArray">32
@"UIWindow"24@0:8@"PKPaymentAuthorizationController"16
v32@0:8@16Q24
v32@0:8@"PKPaymentAuthorizationController"16Q24
v32@0:8@"PKPaymentAuthorizationController"16@"NSError"24
v32@0:8@"PKPaymentAuthorizationController"16@?<v@?@"PKPaymentMerchantSession"@"NSError">24
v40@0:8@"PKPaymentAuthorizationController"16@"PKServiceProviderPurchase"24@?<v@?q>32
v40@0:8@"PKPaymentAuthorizationController"16@"PKAuthorizedPeerPaymentQuote"24@?<v@?@"PKPaymentAuthorizationResult">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKDisbursementVoucher"24@?<v@?@"PKPaymentAuthorizationResult">32
v32@0:8@"PKPaymentAuthorizationController"16@?<v@?@"PKPaymentAuthorizationResult">24
v24@0:8@?<v@?B>16
@"PKPeerPaymentAccount"16@0:8
v24@0:8@?<v@?@"PKPeerPaymentAccount">16
v40@0:8@"PKPaymentProvisioningController"16@"PKPeerPaymentCredential"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"CKAccountInfo"B@"NSError">16
@"PKPeerPaymentPreferences"16@0:8
v32@0:8@"PKPeerPaymentPreferences"16@?<v@?@"PKPeerPaymentPreferences"@"NSError">24
v48@0:8@"PKPaymentProvisioningController"16@"PKPeerPaymentWebService"24@"PKPeerPaymentCredential"32@?<v@?B@"NSError">40
v48@0:8@"NSURL"16@"NSString"24@"PKPeerPaymentWebService"32@?<v@?B@"NSError">40
v40@0:8@"NSURL"16@"NSString"24@?<v@?B@"NSError">32
@"PKAppleAccountInformation"16@0:8
v24@0:8@?<v@?q@"PKAppleAccountInformation">16
@"PKPeerPaymentWebService"
{?="cancelOutstandingRequests"b1}
v24@0:8@"PKContactlessInterfaceSession"16
v40@0:8@"PKContactlessInterfaceSession"16@"PKPaymentApplication"24@"PKPaymentPass"32
v48@0:8@"PKContactlessInterfaceSession"16@"PKPaymentApplication"24@"PKPaymentPass"32@"NSArray"40
v32@0:8@"PKContactlessInterfaceSession"16@"PKContactlessInterfaceTransactionContext"24
v40@0:8@"PKContactlessInterfaceSession"16Q24Q32
v32@0:8@"PKContactlessInterfaceSession"16@"PKFieldProperties"24
v32@0:8@"PKContactlessInterfaceSession"16Q24
B48@0:8@16@24@32B40B44
v40@0:8B16B20Q24@32
B24@0:8@?16
B24@0:8B16B20
v40@0:8Q16Q24@?32
@"<NPKQuickPaymentSessionDelegate>"
@"PKPaymentSessionHandle"
@"PKContactlessInterfaceSession"
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"CLInUseAssertion"
v32@0:8@16B24B28
v72@0:8Q16@24@32@40@48^B56^B64
@"NPKPassSyncState"
@"<NPKPassSyncEngineDelegate>"
@"<NPKPassSyncEngineDataSource>"
{?="cloudStoreIsSetup"b1"pending"b1}
v24@0:8@"PKFieldProperties"16
v32@0:8@"NSString"16@"PKPaymentMessage"24
v32@0:8@"NSString"16@"PKPaymentTransaction"24
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSString"16@"NSSet"24
v40@0:8@"NSString"16@"PKPaymentBalanceReminder"24@"NSString"32
v28@0:8@"NSString"16B24
v32@0:8@"NSString"16@"PKValueAddedServiceTransaction"24
v32@0:8@"NSString"16@"PKTransitPassProperties"24
v32@0:8@"NSString"16q24
v24@0:8@"PKFeatureApplication"16
v24@0:8@"PKAppletSubcredentialSharingInvitation"16
v32@0:8@"NSString"16@"PKAppletSubcredential"24
v32@0:8@"NSString"16@"PKTransactionReceipt"24
v36@0:8@"NSDictionary"16B24@?<v@?>28
v36@0:8Q16@24B32
@"NSMutableSet"
v68@0:8@16@24@32i40@44@52@?60
v40@0:8@16q24@?32
v68@0:8@"PKPaymentRequest"16@"NSString"24@"NSString"32i40@"NSString"44@"NSNumber"52@?<v@?B@"NSError">60
v32@0:8@"PKRemotePaymentRequest"16@?<v@?B>24
v32@0:8@"PKPeerPaymentQuote"16@?<v@?B>24
v32@0:8@"PKPeerPaymentQuote"16@"NSError"24
v28@0:8B16@"NSError"20
v40@0:8@"NSString"16q24@?<v@?B>32
@"<NPKRemoteInterfacePresenterDelegate>"
@80@0:8@16@24Q32@40@48@56@64@72
@64@0:8@16@24Q32@40@48@56
@"NPKPassSyncStateItem"
@"PKPeerPaymentService"
@"PKPeerPaymentAccount"
{?="enforcedPolicy"b1}
@"NPKProtoStandalonePaymentCredentialUnion"
@"NPKProtoStandalonePaymentRemoteCredential"
{?="allowsAddingDifferentCard"b1}
{?="type"b1"requiresUserInteraction"b1}
^{sqlite3=}16@0:8
^{sqlite3_stmt=}16@0:8
^{sqlite3_stmt=}32@0:8Q16q24
@36@0:8@16^{sqlite3_stmt=}24i32
@36@0:8#16^{sqlite3_stmt=}24i32
v44@0:8@16@24q32B40
@72@0:8@16Q24Q32@40@48q56q64
@20@0:8B16
v36@0:8@16B24^B28
@72@0:8@16Q24Q32@40@48q56Q64
@32@0:8@16^@24
v28@0:8@?16B24
q32@0:8^B16^B24
^{sqlite3=}
^{sqlite3_stmt=}
v24@0:8^{__IOHIDEvent=}16
^{__IOHIDEventSystemClient=}16@0:8
v24@0:8^{__IOHIDEventSystemClient=}16
^{__IOHIDEventSystemClient=}
@"NPKProtoStandalonePaymentCredential"
@"NPKProtoStandalonePaymentPass"
{?="rank"b1}
{?="setAuthRandomIfNotPaired"b1}
{?="creditLimit"b1"currentBalance"b1}
@32@0:8@16@?24
@"NPKOSTransaction"
@56@0:8@16@24@32@40@48
B24@0:8q16
@24@0:8q16
v40@0:8@16^@24^@32
@"PKPassLibrary"
@"NSDistributedNotificationCenter"
@"<NPKExpressPassControllerDelegate>"
@"PKExpressPassInformation"
{?="missing"b1"pending"b1}
{?="enforcedPolicy"b1"applyRestrictions"b1}
v40@0:8q16@24@?32
v40@0:8q16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSError">32
q24@0:8q16
@"<NPKQuickPaymentSessionLocalAuthenticationCoordinatorCredentialDelegate>"
@"LAContext"
v24@0:8@"NPKDoublePressDelegationAssertion"16
@"NPKDoublePressDelegationAssertion"
{?="pending"b1"unlockRequired"b1}
{CGSize=dd}16@0:8
@32@0:8@16i24i28
i24@0:8Q16
i24@0:8q16
@36@0:8@16@24B32
Q20@0:8i16
v24@0:8@?<v@?>16
v32@0:8@"PKAddPaymentPassRequestConfiguration"16@?<v@?>24
Q24@0:8@?16
@"NPKAssertion"
@"NSMutableIndexSet"
{?="allowsReaderModeEntry"b1}
@44@0:8@16@24@32B40
@32@0:8@16Q24
@"NSDate"16@0:8
{?="passcodeChanged"b1}
v36@0:8@"NSArray"16@"NSString"24B32
v40@0:8@"NSArray"16@"NSDictionary"24@"NSArray"32
v32@0:8@"PKTransitAppletState"16@"NSString"24
v24@0:8@"NSArray"16
v32@0:8@"NSSet"16@"NSString"24
v40@0:8@"PKPaymentBalanceReminder"16@"PKPaymentBalance"24@"NSString"32
v24@0:8@"PKPaymentWebServiceContext"16
v24@0:8@"PKPaymentWebServiceBackgroundContext"16
v32@0:8@"PKPeerPaymentWebServiceContext"16@"PKPeerPaymentAccount"24
v32@0:8@"PKPaymentPass"16@"PKVerificationChannel"24
@"NPKPaymentWebServiceCompanionTargetDevice"
@"NPKPeerPaymentWebServiceCompanionTargetDevice"
v24@0:8@"PKWebServiceContext"16
{?="cancelOutstandingRequests"b1"requestAuthorization"b1}
{?="cameraFirstProvisioningEnabled"b1}
@"NSObject<OS_os_transaction>"
@"MSConversation"
@"PKPeerPaymentRecipient"
@"NPKPeerPaymentConversationContext"
@"PKPeerPaymentController"
v32@0:8Q16d24
@32@0:8@16d24
v32@0:8@"PKContactlessCardIngester"16Q24
v40@0:8@"PKContactlessCardIngester"16@"NSError"24B32B36
v48@0:8@16^@24^@32^@40
v40@0:8@"PKBarcodeEventMetadataRequest"16@"NSSet"24@?<v@?@"PKBarcodeEventMetadataResponse"@"NSError">32
v32@0:8@"PKPaymentPass"16@"PKPaymentTransaction"24
v36@0:8@"PKAppletSubcredentialSharingInvitation"16B24@?<v@?@"PKPaymentPass"@"NSError">28
v32@0:8@"PKAppletSubcredentialSharingInvitation"16@?<v@?Q>24
{?="passSettings"b1}
v20@0:8f16
f16@0:8
{?="ingestionProgress"b1"ingestionState"b1}
{?="changeAccepted"b1"fullPassRequired"b1}
@"NPKProtoStandaloneError"
{?="cardAdded"b1}
v32@0:8@"NPKContactlessPaymentSessionManager"16@"NPKContactlessPaymentSessionState"24
@"NPKProtoPassSyncStateItem"
{?="passSegmentIndex"b1"passSegmentTotal"b1}
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
@68@0:8@16@24@32@40B48@52@60
@"PKPaymentPassAction"
@"PKPaymentBalance"
@72@0:8@16@24@32@40@48@56@64
@"<NPKDateRange>"
Q32@0:8@16@24
@"PKExpressPassController"
@"<NPKExpressModeSettingsCoordinatorDelegate>"
@"NPKProtoStandalonePaymentDigitalIssuanceMetadata"
v48@0:8@16@24Q32@?40
B32@0:8@16Q24
v24@0:8@"PKPaymentWebService"16
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"PKPaymentWebService"16@?<v@?@"PKPaymentDeviceConfigurationData"@"NSError">24
v32@0:8@"PKPaymentWebService"16@?<v@?@"PKPaymentDeviceRegistrationData"@"NSError">24
v48@0:8@"PKPaymentWebService"16@"NSData"24Q32@?<v@?@"NSData"@"PKSecureElementSignatureInfo"@"NSError">40
v36@0:8@"PKPaymentWebService"16B24@?<v@?@"PKPaymentDeviceProvisioningData"@"NSError">28
v32@0:8@"PKPaymentWebService"16@"NSString"24
v40@0:8@"PKPaymentWebService"16@"NSDictionary"24@"NSString"32
@"NSArray"32@0:8@"PKPaymentWebService"16@"NSArray"24
i24@0:8@"PKPaymentWebService"16
@"NSString"24@0:8@"PKPaymentWebService"16
@"PKOSVersionRequirement"16@0:8
v32@0:8@"PKPaymentWebService"16@?<v@?B@"NSData"@"NSData">24
v32@0:8@"PKPaymentWebService"16@?<v@?B>24
B32@0:8@"PKPaymentWebService"16Q24
B32@0:8@"PKPaymentWebService"16@"NSString"24
v32@0:8@"PKPaymentWebService"16@?<v@?B@"NSError">24
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@?<v@?>32
v48@0:8@"PKPaymentWebService"16@"PKPassUpgradeRequest"24@"PKPaymentPass"32@?<v@?@"NSError"@"PKPaymentPass">40
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?@"PKPaymentDeviceRegistrationData"@"NSError">32
@"PKTrustedDeviceEnrollmentInfo"24@0:8@"PKPaymentWebService"16
v40@0:8@"NSString"16@"PKPaymentWebService"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"PKApplePayTrustKey">24
v32@0:8@"PKApplePayTrustKeyRequest"16@?<v@?@"PKApplePayTrustKey"@"NSError">24
v32@0:8@"NSString"16@?<v@?B>24
@"NSArray"32@0:8@"PKPaymentWebService"16Q24
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@?<v@?@"NSSet">32
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@?<v@?@"PKExpressPassInformation">32
v32@0:8@"NSString"16@?<v@?B@"NSSet">24
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?B>32
B24@0:8@"NSString"16
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@?<v@?@"PKPaymentPass">32
v40@0:8@"PKPaymentWebService"16@"PKPass"24@?<v@?B@"NSError">32
B24@0:8@"PKPaymentWebService"16
@"NSSet"24@0:8@"PKPaymentWebService"16
v24@0:8@?<v@?@"NSArray"@"NSArray">16
v40@0:8@"PKPaymentWebService"16Q24@?<v@?@"PKPaymentDeviceMetadata">32
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?@"PKAccount"@"NSError">32
v40@0:8@16@24@?<v@?B@"NSError">32
v36@0:8@16B24@"NSError"28
v32@0:8@"PKPaymentWebService"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?@"NSError">32
v48@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@"PKAppletSubcredential"32@?<v@?@"PKPaymentPass">40
v48@0:8@"PKPaymentWebService"16@"NSArray"24@"PKAppletSubcredential"32@?<v@?B>40
v48@0:8@"PKPaymentWebService"16@"NSSet"24@"PKAppletSubcredential"32@?<v@?B>40
v40@0:8@"PKPaymentWebService"16@"PKSharedCredentialGroup"24@?<v@?@"NSError">32
v48@0:8@"PKPaymentWebService"16@"PKAppletSubcredential"24@"PKAppletSubcredentialSharingInvitation"32@?<v@?B>40
v40@0:8@"PKPaymentWebService"16@"PKAppletSubcredentialSharingInvitation"24@?<v@?B>32
v32@0:8@"PKAppletSubcredential"16@?<v@?B>24
v40@0:8@"PKPaymentWebService"16@"PKAppletSubcredentialSharingInvitation"24@?<v@?@"NSError">32
v32@0:8@"PKPaymentWebService"16@?<v@?@"NSSet">24
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?@"PKPaymentPass"@"NSError">32
v48@0:8@"PKPaymentWebService"16@"NSString"24@"PKAppletSubcredentialSharingInvitationMetadata"32@?<v@?@"PKPaymentPass"@"NSError">40
v48@0:8@"PKPaymentWebService"16@"PKAppletSubcredentialSharingInvitation"24Q32@?<v@?@"PKAppletSubcredentialSharingInvitation"@"NSError">40
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?@"PKAppletSubcredential">32
@"PKWebServiceRegionFeature"32@0:8@"PKPaymentWebService"16q24
v24@0:8@?<v@?@"PKPaymentAvailableProductsResponse"@"NSError">16
v32@0:8@"PKPaymentProductsActionRequest"16@?<v@?@"PKPaymentAvailableProductsResponse"@"NSError">24
v40@0:8@"PKPaymentWebService"16@"NSString"24@"NSString"32
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?@"NSString">32
v32@0:8q16@?24
v48@0:8@16@24B32B36@?40
@36@0:8#16S24@28
@"<NPKPaymentWebServiceCompanionTargetDeviceDelegate>"
@"NRActiveDeviceAssertion"
@"NPKTargetDeviceAssertionManager"
@"NPKTapToRadarManager"
@"<NPKPasscodeChangeCoordinatorProtocol>"
@"NPKSubcredentialInvitationCoordinator"
@"NPKProtoStandaloneCreditAccountCredential"
@"NPKProtoStandalonePaymentSetupProductImageAssetURLs"
{?="flags"b1"hsa2Requirement"b1"supportedProvisioningMethods"b1"suppressPendingPurchases"b1}
@64@0:8@16@24q32@40@48q56
@32@0:8{CGSize=dd}16
@36@0:8{CGSize=dd}16B32
{?="upgradeStatus"b1"pending"b1}
^i16@0:8
v32@0:8^i16Q24
{?="list"^i"count"Q"size"Q}
v36@0:8B16@20@?28
v44@0:8@16@24B32@?36
v80@0:8@16Q24Q32@40@48q56q64@?72
v32@0:8@"PKPaymentPass"16@?<v@?B@"NSError">24
v36@0:8B16@"NSError"20@?<v@?>28
v36@0:8@"NSString"16B24@?<v@?B@"NSError">28
v24@0:8@?<v@?QQ@"NSError">16
v24@0:8@?<v@?@"NSSet">16
v32@0:8@"NSString"16@?<v@?@"PKPaymentPass">24
v32@0:8@"NSString"16@?<v@?@"NSSet">24
v48@0:8@"NSURL"16@"NSString"24@"NSUUID"32@?<v@?B>40
v44@0:8@"NSString"16@"NSUUID"24B32@?<v@?B@"NSError">36
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?@"PKPaymentApplication">24
v40@0:8@"PKPaymentApplication"16@"NSString"24@?<v@?@"PKPaymentPass">32
v40@0:8@"PKPaymentWebServiceContext"16@"NSUUID"24@?<v@?>32
v32@0:8@"NSUUID"16@?<v@?@"PKPaymentWebServiceContext">24
v32@0:8Q16@"NSString"24
v40@0:8@"PKPeerPaymentWebServiceContext"16@"NSUUID"24@?<v@?>32
v32@0:8@"NSUUID"16@?<v@?@"PKPeerPaymentWebServiceContext">24
v40@0:8@"PKPeerPaymentAccount"16@"NSUUID"24@?<v@?>32
v32@0:8@"NSUUID"16@?<v@?@"PKPeerPaymentAccount">24
v24@0:8@?<v@?@"NSError">16
v80@0:8@"NSSet"16Q24Q32@"NSDate"40@"NSDate"48q56q64@?<v@?@"NSSet">72
v40@0:8@"NSString"16@"NSUUID"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"PKPaymentApplication"24@?<v@?@"PKTransitAppletState">32
v40@0:8@"PKPaymentBalance"16@"PKPaymentPass"24@?<v@?@"PKPaymentBalanceReminder">32
v48@0:8@"PKPaymentBalanceReminder"16@"PKPaymentBalance"24@"PKPaymentPass"32@?<v@?B>40
v40@0:8@"PKTransitCommutePlan"16@"PKPaymentPass"24@?<v@?@"PKPaymentCommutePlanReminder">32
v48@0:8@"PKPaymentCommutePlanReminder"16@"PKTransitCommutePlan"24@"PKPaymentPass"32@?<v@?B>40
B24@0:8@"PKAddSecureElementPassConfiguration"16
v32@0:8@"NSString"16@?<v@?@"PKPaymentPass"@"PKPaymentTransaction"@"NSString">24
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSString"Q@"NSData"@"NSError">32
v40@0:8@"NSString"16@"PKPaymentBalanceReminder"24@"PKPaymentBalance"32
{?="cardType"b1"priority"b1"supportedProtocols"b1}
@"<NPKCompanionAgentConnectionDelegate>"
@"PKPaymentWebServiceContext"
{?="passcodeMeetsPolicy"b1}
{?="sequenceCounter"b1}
{?="cancelled"b1"needsUnlock"b1"pending"b1"success"b1}
@"<NPKBarcodePaymentSessionDelegate>"
@"PKAssertion"
@32@0:8@16#24
