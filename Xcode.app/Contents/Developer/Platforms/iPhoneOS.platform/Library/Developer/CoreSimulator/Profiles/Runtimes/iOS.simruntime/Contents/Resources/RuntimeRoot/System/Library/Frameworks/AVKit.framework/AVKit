?ffffff
?ffffff
?ffffff
?[5"y
MbP?{
333333
?333333
ffffff
.AUUUUUU
?)\
ignoresTouches
TB,N,V_ignoresTouches
prominentPlayButton
T@"AVButton",&,N,V_prominentPlayButton
prominentPlayButtonLayoutView
T@"AVLayoutView",&,N,V_prominentPlayButtonLayoutView
styleSheet
T@"AVStyleSheet",&,N,V_styleSheet
playerViewController
T@"AVPlayerViewController",&,N,V_playerViewController
playerLayerView
T@"AVAppStorePlayerLayerView",&,N,V_playerLayerView
videoGravityForLayoutClassDictionary
T@"NSMutableDictionary",&,N,V_videoGravityForLayoutClassDictionary
observationController
T@"AVObservationController",R,N,V_observationController
TB,N,V_showsPlaybackControls
TB,N,V_updatesNowPlayingInfoCenter
TB,N,V_showsMinimalPlaybackControlsWhenEmbeddedInline
canPausePlaybackWhenExitingFullScreen
TB,N,V_canPausePlaybackWhenExitingFullScreen
TB,N,V_allowsEnteringFullScreen
videoGravity
T@"NSString",C,N,V_videoGravity
contentOverlayView
T@"UIView",R,N,V_contentOverlayView
player
T@"AVPlayer",&,N,V_player
playButtonHandlerForLazyPlayerLoading
T@?,C,N,V_playButtonHandlerForLazyPlayerLoading
preferredUnobscuredArea
Tq,N,V_preferredUnobscuredArea
playerViewControllerDelegate
T@"<AVPlayerViewControllerDelegate>",W,N,V_playerViewControllerDelegate
layer
T@"AVPlayerLayer",R,D,N
appStorePlayerViewPlayerLayerOnly
appStorePlayerViewDisableVideo
v16@?0@"AVAppStorePlayerView"8
Central Play
routeDetectionEnabled
TB,N,GisRouteDetectionEnabled,V_routeDetectionEnabled
multipleRoutesDetected
TB,R,N
AVRouteDetectorCoordinatorMultipleRoutesDetectedDidChangeNotification
com.apple.avkit.routeDetectorCoordinatorQueue
delegate
T@"<AVContentOverlayViewDelegate>",W,N,V_delegate
-[UIWindow(AVAdditions) avkit_ensureOrientation:disableTouchCancellation:]
AVKit
%@ (%p) %@
AVKitErrorDomain
playerLayer
T@"AVPlayerLayer",R,N
V:|[simplePlayerLayerView]|
H:|[simplePlayerLayerView]|
simplePlayerLayerView
pegasusProxy
T@"PGPictureInPictureProxy",R,N,V_pegasusProxy
videoRectInScreen
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoRectInScreen
layoutCheckTimer
T@"NSTimer",R,N,V_layoutCheckTimer
secondScreenConnection
T@"AVSecondScreenConnection",&,N,V_secondScreenConnection
sourceWindowWhenPictureInPictureStarted
T@"UIWindow",W,N,V_sourceWindowWhenPictureInPictureStarted
contentSourceAwaitingInvalidation
T@"<AVPictureInPictureContentSource>",W,N,V_contentSourceAwaitingInvalidation
contentSourceAwaitingSetup
T@"<AVPictureInPictureContentSource>",W,N,V_contentSourceAwaitingSetup
observedTimeControlStatus
Tq,N,V_observedTimeControlStatus
scrubbingOrSeeking
TB,N,GisScrubbingOrSeeking,V_scrubbingOrSeeking
scrubbing
TB,N,GisScrubbing,V_scrubbing
seeking
TB,N,GisSeeking,V_seeking
rateWhenScrubbingOrSeekingBegan
Td,N,V_rateWhenScrubbingOrSeekingBegan
TB,N,GisInterruptedForAudioSession,V_interruptedForAudioSession
TB,N,V_wasPlayingWhenSuspended
source
T@"<AVPictureInPictureContentSource>",W,N,V_source
status
Tq,N,V_status
routingVideoToHostedWindow
TB,N,GisRoutingVideoToHostedWindow,V_routingVideoToHostedWindow
T@"<AVPictureInPicturePlatformAdapterDelegate>",W,N,V_delegate
playerController
T@"AVPlayerController",&,N,V_playerController
TB,N,V_allowsPictureInPicturePlayback
systemPictureInPicturePossible
TB,R,N,GisSystemPictureInPicturePossible
alwaysStartsAutomaticallyWhenEnteringBackground
TB,N,V_alwaysStartsAutomaticallyWhenEnteringBackground
TB,N,V_canStartAutomaticallyWhenEnteringBackground
TB,N,V_requiresLinearPlayback
controlsStyle
Tq,N,V_controlsStyle
TB,N,GisMicrophoneEnabled,V_microphoneEnabled
prerollAttributes
T@"AVPictureInPicturePrerollAttributes",&,N,V_prerollAttributes
managesWiredSecondScreenPlayback
TB,N,V_managesWiredSecondScreenPlayback
canAnimatePictureInPictureTransition
pictureInPictureViewController
T@"AVPictureInPictureViewController",R,N,V_pictureInPictureViewController
anyPictureInPictureActive
TB,R,N,GisAnyPictureInPictureActive,V_anyPictureInPictureActive
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Tq,N
-[AVPictureInPicturePlatformAdapter pictureInPictureViewControllerViewWillDisappear:]
-[AVPictureInPicturePlatformAdapter pictureInPictureViewControllerViewDidAppear:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didReceivePlaybackCommand:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:]
shouldReduceResources
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionEnded:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxyPictureInPictureInterruptionBegan:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:didStartPictureInPictureWithAnimationType:]
-[AVPictureInPicturePlatformAdapter pictureInPictureProxy:willStartPictureInPictureWithAnimationType:]
v32@?0@"AVPictureInPicturePlatformAdapter"8@16@"AVKeyValueChange"24
playerController.playing
playerController.timeControlStatus
playerController.scrubbing
playerController.seekToTime
playerController.seeking
v32@?0@"AVPictureInPicturePlatformAdapter"8@16@"NSNotification"24
playerController.hasSeekableLiveStreamingContent
playerController.seekableTimeRanges
playerController.hasLiveStreamingContent
playerController.status
playerController.muted
playerController.timing
playerController.maxTime
playerController.minTime
playerController.rate
playerController.player
playerController.contentDimensions
v16@?0@"<PGMutablePlaybackState>"8
-[AVPictureInPicturePlatformAdapter _updatePictureInPictureShouldStartWhenEnteringBackground]
pictureInPictureShouldStartWhenEnteringBackground
-[AVPictureInPicturePlatformAdapter updateLayoutDependentBehaviors]
-[AVPictureInPicturePlatformAdapter setSource:]
-[AVPictureInPicturePlatformAdapter setWasPlayingWhenSuspended:]
wasPlayingWhenSuspended
-[AVPictureInPicturePlatformAdapter setInterruptedForAudioSession:]
interruptedForAudioSession
-[AVPictureInPicturePlatformAdapter stopPictureInPictureAndRestoreUserInterface:]
shouldRestore
SpringBoard
alwaysAllowNonlinearPlaybackByDefault
v16@?0@"AVPictureInPicturePlatformAdapter"8
playerController.playingOnSecondScreen
playerController.pictureInPicturePossible
pictureInPictureSupported
TB,R,N,GisPictureInPictureSupported
stopPictureInPictureButtonImageName
T@"NSString",R,N
startPictureInPictureButtonImageName
imageSymbolConfiguration
T@"UIImageSymbolConfiguration",R,N
StopPictureInPictureButton
StartPictureInPictureButton
+[AVPictureInPicturePlatformAdapter isPictureInPictureSupported]
isPictureInPictureSupported
pegasusAttributes
T@"PGPlaybackStatePrerollAttributes",R,N,V_pegasusAttributes
requiredLinearPlaybackEndTime
T{?=qiIq},R,N,V_requiredLinearPlaybackEndTime
preferredTintColor
T@"UIColor",R,N
playerLayer.pixelBufferAttributes
pictureInPicturePlayerLayer.videoRect
playerLayer.videoRect
playerLayer.readyForDisplay
playerLayer.videoGravity
pictureInPicturePlayerLayer
T@"AVPlayerLayer",&,N,V_pictureInPicturePlayerLayer
videoDisplaySize
T{CGSize=dd},R,N
T@"AVPlayerController",&,N
readyForDisplay
TB,R,N,GisReadyForDisplay
videoBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
pixelBufferAttributes
T@"NSDictionary",C,N
pictureInPicturePlayerLayerView
T@"AVPictureInPicturePlayerLayerView",R,N
PictureInPictureIndicatorLarge
timestamp
Td,V_timestamp
velocity
Td,V_velocity
scrollView
T@"UIScrollView",&,N,V_scrollView
scrollScrubbing
TB,N,GisScrollScrubbing,V_scrollScrubbing
scrubbingSpeed
Tq,N,V_scrubbingSpeed
resolution
Td,N,V_resolution
slowKnobMovementDetected
TB,N,V_slowKnobMovementDetected
shouldRecoverFromPrecisionScrubbingIfNeeded
TB,N,V_shouldRecoverFromPrecisionScrubbingIfNeeded
loadedTrackOverlayView
T@"UIView",R,N,V_loadedTrackOverlayView
currentThumbView
T@"UIImageView",W,N,V_currentThumbView
previousScrubberVelocities
T@"NSMutableArray",&,N,V_previousScrubberVelocities
updateSlowKnobMovementDetectedTimer
T@"NSTimer",&,N,V_updateSlowKnobMovementDetectedTimer
timestampWhenTrackingEnded
Td,N,V_timestampWhenTrackingEnded
feedbackGenerator
T@"UISelectionFeedbackGenerator",R,N,V_feedbackGenerator
scrubsWhenTappedAnywhere
TB,N,V_scrubsWhenTappedAnywhere
canChangeScrubbingSpeed
TB,N,V_canChangeScrubbingSpeed
hasChangedLocationAtLeastOnce
TB,N,V_hasChangedLocationAtLeastOnce
T@"<AVScrubberDelegate>",W,N,V_delegate
loadedTimeRanges
T@"NSArray",C,N,V_loadedTimeRanges
localizedScrubbingSpeedName
estimatedFrameRate
Tf,N,V_estimatedFrameRate
hitRectInsets
T{NSDirectionalEdgeInsets=dddd},N,V_hitRectInsets
timeIntervalSinceTrackingEnded
Td,R,N
rate
Tf,N,V_rate
extrinsicContentSize
T{CGSize=dd},N,V_extrinsicContentSize
removed
TB,N,GisRemoved,V_removed
collapsed
TB,N,GisCollapsed,V_collapsed
included
TB,N,GisIncluded,V_included
collapsedOrExcluded
TB,R,N,GisCollapsedOrExcluded
hasAlternateAppearance
TB,N,V_hasAlternateAppearance
hasFullScreenAppearance
TB,N,V_hasFullScreenAppearance
layoutAttributes
T@"AVLayoutItemAttributes",R,N,V_layoutAttributes
T{CGSize=dd},N
TB,N,GisRemoved
TB,N,GisCollapsed
TB,N,GisIncluded
TB,N
T@"AVLayoutItemAttributes",R,N
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_FINE_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_QUARTER_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HALF_SPEED_SCRUBBING_TEXT
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SUBTITLE_LABEL_HI_SPEED_SCRUBBING_TEXT
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
activeChannels
T@"NSMutableSet",&,N,V_activeChannels
T@"<AVAirMessageNotificationCenterDelegate>",W,N,V_delegate
mainService
T@"AVBonjourService",R,N,V_mainService
nowPlayingPlayerItem
T@"AVPlayerItem",&,N,V_nowPlayingPlayerItem
-[AVAirMessageNotificationCenter airTransportInputDidClose:]
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]
v24@?0q8@"NSDictionary"16
-[AVAirMessageNotificationCenter airTransport:didReceiveObject:]_block_invoke
-[AVAirMessageNotificationCenter bonjourService:didCloseChannel:]
currentItemIdentifier
-[AVAirMessageNotificationCenter bonjourService:didAcceptConnectionChannel:]
-[AVAirMessageNotificationCenter handleCommandMessage:completion:]
com.apple.avkit.AirMessageNotificationCenter
do not create your own AVAirMessageNotificationCenter
isPrepared
TB,R
startTime
Td,R,V_startTime
duration
Td,R,V_duration
number
TQ,R,V_number
title
T@"NSString",R,C,V_title
image
T@"UIImage",R,V_image
com.apple.AVKit.ChapterImageQueue
avkt/ExternalContentIdentifier
avkt/ExternalUserProfileIdentifier
avkt/PlaybackProgress
avkt/ServiceIdentifier
avkt/iTunesStoreIdentifier
avkt/BrandIdentifier
AVPlayerItemAVKitDataDidChangeNotification
customPropertyStorage
T@"NSMutableDictionary",R,N,V_customPropertyStorage
externalMetadata
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendToAppleTV]
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendExternalMetadata]
v24@?0@"AVAirMessageResponse"8q16
-[AVPlayerItem(AVKitAdditionsPrivate) avkit_airMessageSendExternalMetadata]_block_invoke
externalPlaybackController
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
avkit_persistentIdentifier
T@"NSNumber",R
-[AVPlayerController(AVMediaSelection) _setMediaOption:mediaCharacteristic:]
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) _ensureUserCaptionDisplayType:]
q24@?0@8@16
B8@?0
-[AVPlayerController(AVMediaSelection) selectedMediaOptionMayHaveChanged:]
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) currentLegibleMediaSelectionOption]
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
MediaSelectionOptionsPersistentID
legibleMediaSelectionOptions
audioMediaSelectionOptions
hasLegibleMediaSelectionOptions
hasAudioMediaSelectionOptions
+[AVPlayerController(AVMediaSelection) canonicalLanguageIdentifierFromString:]
NilString
observer
T@"UIView<AVScrollViewObserverContentView>",W,N,V_observer
observedScrollViews
T@"NSHashTable",C,N,V_observedScrollViews
scrolling
TB,N,GisScrolling,V_scrolling
scrollingQuickly
TB,N,GisScrollingQuickly,V_scrollingQuickly
scrollingDidEndTimer
T@"NSTimer",&,N,V_scrollingDidEndTimer
thumbView
T@"UIImageView",&,N,V_thumbView
volumeWarningView
T@"AVVolumeWarningView",W,N,V_volumeWarningView
animatingVolumeChange
TB,N,GisAnimatingVolumeChange,V_animatingVolumeChange
effectiveVolumeLimit
Tf,N,V_effectiveVolumeLimit
unclampedValue
T@"NSNumber",&,N,V_unclampedValue
animator
T@"UIViewPropertyAnimator",&,N,V_animator
stopping
TB,N,GisStopping,V_stopping
behaviorContext
T@"AVNewsWidgetPlayerBehaviorContext",W,N,V_behaviorContext
T@,W,N
-[AVNewsWidgetPlayerBehavior dealloc]
-[AVNewsWidgetPlayerBehavior init]
T@"CALayerHost",R,D,N
hostView
T@"AVPictureInPictureCALayerHostView",R,N,V_hostView
imageQueueSize
T{CGSize=dd},N,V_imageQueueSize
contentDimensions
T{CGSize=dd},N,V_contentDimensions
lastKnownFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownFrame
lastKnownBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_lastKnownBounds
needsGeometryUpdate
TB,N,V_needsGeometryUpdate
deferringGeometryUpdates
TB,N,GisDeferringGeometryUpdates,V_deferringGeometryUpdates
contextId
TI,N
volumeToRestore
Td,N,V_volumeToRestore
animatingTowardsZero
TB,N,GisAnimatingTowardsZero,V_animatingTowardsZero
animatingAwayFromZero
TB,N,GisAnimatingAwayFromZero,V_animatingAwayFromZero
T@"AVPlayerController",R,N,V_playerController
supportsVolumeAnimation
T@"AVHomeIPCameraBehaviorContext",W,N,V_behaviorContext
avkit_videoRectInWindow
avkit_isVisible
avkit_window
T@"UIWindow",R,N
pinchToDismissEnabled
TB,N,GisPinchToDismissEnabled,V_pinchToDismissEnabled
pinchToPresentEnabled
TB,N,GisPinchToPresentEnabled,V_pinchToPresentEnabled
panToDismissEnabled
TB,N,GisPanToDismissEnabled,V_panToDismissEnabled
previousPinchScale
Td,N,V_previousPinchScale
_rotation
Td,N,S_setRotation:,V__rotation
panGestureRecognizer
T@"UIPanGestureRecognizer",R,N,V_panGestureRecognizer
pinchGestureRecognizer
T@"UIPinchGestureRecognizer",R,N,V_pinchGestureRecognizer
rotationGestureRecognizer
T@"UIRotationGestureRecognizer",R,N,V_rotationGestureRecognizer
recognizers
T@"NSArray",R,N,V_recognizers
waitingForTransition
TB,N,GisWaitingForTransition,V_waitingForTransition
waitingForBoundsChange
TB,N,GisWaitingForBoundsChange,V_waitingForBoundsChange
waitingForLocationChangeAfterBoundsChange
TB,N,GisWaitingForLocationChangeAfterBoundsChange,V_waitingForLocationChangeAfterBoundsChange
timestampOfTouchWithLocationChangeAfterBoundsChange
Td,N,V_timestampOfTouchWithLocationChangeAfterBoundsChange
hasContinued
TB,N,V_hasContinued
hasRotated
TB,N,V_hasRotated
initialInterfaceOrientation
Tq,N,V_initialInterfaceOrientation
initialCoordinateSpaceBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialCoordinateSpaceBounds
gestureLocationAfterBoundsChange
T{CGPoint=dd},N,V_gestureLocationAfterBoundsChange
lastReportedLocationInWindow
T{CGPoint=dd},N,V_lastReportedLocationInWindow
anchorLocationInWindow
T{CGPoint=dd},N,V_anchorLocationInWindow
lastNonZeroVelocityWasDownward
TB,N,V_lastNonZeroVelocityWasDownward
transitionInteraction
Tq,N,V_transitionInteraction
view
T@"UIView",W,N,V_view
enabled
TB,N,GisEnabled,V_enabled
transitionDriverDelegate
T@"<AVTransitionDriverDelegate>",W,N,V_transitionDriverDelegate
rotation
rotationVelocity
pinchScale
pinchVelocity
contentTransitioningViewGestureRecognizer
T@"UIPanGestureRecognizer",W,N,V_contentTransitioningViewGestureRecognizer
TB,R,N,GisEnabled
T@"<AVTransitionDriverDelegate>",W,N
Tq,R,N
T@"UIPanGestureRecognizer",W,N
T@"UIView",R,W,N
secondScreens
T@"NSMutableOrderedSet",R,N,V_secondScreens
connections
T@"NSMutableOrderedSet",R,N,V_connections
allowsUpdatingActiveConnection
TB,N,V_allowsUpdatingActiveConnection
-[AVSecondScreenController _insertConnection:atIndex:]
-[AVSecondScreenController _updateActiveConnection]
B16@?0@"AVSecondScreenConnection"8
-[AVSecondScreenController _targetScreen]
-[AVSecondScreenController removeSecondScreen:]
-[AVSecondScreenController addSecondScreen:]
-[AVSecondScreenController setPreferredConnection:]
-[AVSecondScreenController removeConnection:]
-[AVSecondScreenController addConnection:]
v32@?0@"AVSecondScreenController"8@16@"NSNotification"24
-[AVSecondScreenController init]_block_invoke
presentationController
T@"AVPresentationController",R,W,N,V_presentationController
transitionType
sourceView
T@"UIView",W,N,V_sourceView
presentedView
T@"AVPresentationContainerView",R,W,N
containerView
presentationWindow
T@"UIWindow",R,W,N
touchBlockingView
T@"UIView",R,N,V_touchBlockingView
backgroundView
T@"UIView",R,N,V_backgroundView
presentedViewController
T@"UIViewController",R,W,N
transitionContext
T@"<UIViewControllerContextTransitioning>",W,N,V_transitionContext
allowsSecondWindowPresentations
TB,N,V_allowsSecondWindowPresentations
wasInitiallyPresentedWithoutSecondWindow
TB,N,V_wasInitiallyPresentedWithoutSecondWindow
rotatableSecondWindow
T@"UIWindow",&,N,V_rotatableSecondWindow
avFullScreenViewController
T@"AVFullScreenViewController",R,W,N,V_avFullScreenViewController
rotatableWindowViewController
T@"AVFullScreenViewController",R,W,N
presentingTransition
T@"AVPresentationContextTransition",&,N,V_presentingTransition
dismissingTransition
T@"AVPresentationContextTransition",&,N,V_dismissingTransition
currentTransition
T@"AVPresentationContextTransition",R,N
hasActiveTransition
presenting
TB,R,N,GisPresenting
dismissing
TB,R,N,GisDismissing
wasInitiallyInteractive
canBeInteractivelyDismissed
allowsPausingWhenTransitionCompletes
TB,N,V_allowsPausingWhenTransitionCompletes
supportsInteractiveCounterRotationDismissals
receiverPairingIdentity
AVBonjourServiceClientDidResolveNetServiceNotification
AVExternalDeviceAControllerirPlayDeviceRefDidChangeNotification
AVBonjourServiceClientDidResolveAirPlayDeviceNetServiceNotification
netServiceBrowser
T@"NSNetServiceBrowser",R,N,V_netServiceBrowser
airplayDeviceRef
T^v,N,V_airplayDeviceRef
serviceType
T@"NSString",R,N,V_serviceType
T@"<AVBonjourServiceClientDelegate>",W,N,V_delegate
-[AVBonjourServiceClient netServiceDidResolveAddress:]
-[AVBonjourServiceClient airTransportSenderForNetService:]
<%@:%ld>
?host?
-[AVBonjourServiceClient _isServiceForCurrentAirPlayDevice:]
-[AVBonjourServiceClient _updatedAirPlayPairedDeviceAsync]
v24@?0^v8^{__CFError=}16
-[AVBonjourServiceClient _updatedAirPlayPairedDeviceAsync]_block_invoke
v20@?0C8^v12
SUCCESS
FAIL
<AVBonjourServiceClient %p (%@); delegate <%@ %p>>
local
-[AVBonjourServiceClient initWithNetServiceType:]_block_invoke
AVNowPlayingInfoControllerDidReceiveStopCommandEventNotification
playerControllerToActivateAfterDelay
T@"AVPlayerController",W,N,V_playerControllerToActivateAfterDelay
startNowPlayingUpdatesTimer
T@"NSTimer",W,N,V_startNowPlayingUpdatesTimer
TB,N,GisEnabled
overrideParentApplicationDisplayIdentifier
T@"NSString",C,N,V_overrideParentApplicationDisplayIdentifier
v40@?0@"NSMutableDictionary"8@"NSArray"16@"NSString"24^{__CFString=}32
-[AVNowPlayingInfoController stopNowPlayingUpdatesForPlayerController:]
-[AVNowPlayingInfoController startNowPlayingUpdatesForPlayerController:afterDelay:]
-[AVNowPlayingInfoController setPlayerController:]
playerController.legibleMediaSelectionOptions
playerController.audioMediaSelectionOptions
playerController.canSeekChapterBackward
playerController.canSeekChapterForward
playerController.canScanBackward
playerController.canScanForward
playerController.canSeek
playerController.canTogglePlayback
playerController.canPlay
playerController.canPause
v32@?0@"AVNowPlayingInfoController"8@16@"NSNotification"24
playerController.metadata
playerController.contentDuration
playerController.hasContent
-[AVNowPlayingInfoController dealloc]
-[AVNowPlayingInfoController init]
^{__CFArray=}20@?0I8^{__CFDictionary=}12
+[AVNowPlayingInfoController _mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-760.1.7/Embedded/MobileAVKit/Utilities/AVNowPlayingInfoController_Mobile.m
mediaRemoteMediaCharacteristic
com.apple.avkit.sharedNowPlayingInfoController
T@"CAGradientLayer",R,D,N
gradientOpacity
Td,N,V_gradientOpacity
T@"CABackdropLayer",R,D,N
gradientView
T@"AVStatusBarBackgroundGradientViewSubview",&,N,V_gradientView
B24@?0@"UISceneSession"8@"NSDictionary"16
B24@?0@"UIWindowScene"8@"NSDictionary"16
T@"AVMusicAppBehaviorContext",W,N,V_behaviorContext
behavior
T@"AVMusicAppBehavior",W,N,V_behavior
seekTargetTime
T@"NSNumber",&,N,V_seekTargetTime
showsSkipItemButtons
TB,N,V_showsSkipItemButtons
skipToPreviousItemButtonEnabled
TB,N,GisSkipToPreviousItemButtonEnabled,V_skipToPreviousItemButtonEnabled
skipToNextItemButtonEnabled
TB,N,GisSkipToNextItemButtonEnabled,V_skipToNextItemButtonEnabled
T@"AVPlayerViewController",R,W,N,V_playerViewController
T@"AVPlayerViewController",R,W,N
v32@?0@"AVMusicAppBehaviorContext"8@16@"NSNotification"24
v32@?0@"AVMusicAppBehaviorContext"8@16@"AVKeyValueChange"24
playerController.player.currentItem
avkit_musicAppBehaviorContext
T@"AVMusicAppBehaviorContext",R,W,N
AVSecondScreenDidDisconnectNotification
AVSecondScreenConnectionDidBecomePossibleNotification
window
T@"UIWindow",&,N,V_window
windowScene
T@"UIWindowScene",R,W,N,V_windowScene
screen
T@"UIScreen",R,W,N,V_screen
state
Tq,R,N,V_state
debugInfoDisplay
T@"CADisplay",&,N,V_debugInfoDisplay
TVOutScreen
TB,R,N,GisTVOutScreen,V_TVOutScreen
sceneBounds
-[AVSecondScreen setState:]
PlaybackProhibited
PlaybackPossible
PlaybackActive
Invalid
-[AVSecondScreen connectWithSecondScreenConnection:]
-[AVSecondScreen dealloc]
v32@?0@"AVSecondScreen"8@16@"NSNotification"24
-[AVSecondScreen initWithScene:]_block_invoke
v32@?0@"AVSecondScreen"8@"UIWindowScene"16@"NSNotification"24
first
T@"NSString",R,N,V_first
second
T@"NSString",R,N,V_second
value
inputStream
T@"NSInputStream",R,N,V_inputStream
outputStream
T@"NSOutputStream",R,N,V_outputStream
-[AVAirTransportStreams stream:handleEvent:]
/Library/Caches/com.apple.xbs/Sources/MobileAVKit_Sim/MobileAVKit-760.1.7/Common/AirMessaging/AVAirTransport.m
isRunningEventThread()
Input
Output
-[AVAirTransportStreams _inputStreamHasBytesAvailable]
-[AVAirTransportStreams _inputStreamHasBytesAvailable]_block_invoke
-[AVAirTransportStreams _readAvailableData]
-[AVAirTransportStreams _readDataNonBlockingUpToMaxLength:]
<%@ %p: (<%@, >%@), delegate=%@>
<%@ %p>
-[AVAirTransportStreams invalidate]
receiveResponseBlocks
T@"NSMutableArray",R,N,V_receiveResponseBlocks
canWrite
streamDataTransformer
T@"<AVAirTransportTransformationProtocol>",&,N,V_streamDataTransformer
isReadyToSend
T@"<AVAirTransportDelegate>",W,N,V_delegate
-[AVAirTransport sendResponse:]
-[AVAirTransport sendObject:receiveResponse:]_block_invoke
isReadyToSend should be implemented by subclass
-[AVAirTransport writeData:]
-[AVAirTransport writeMore]
_writeData must be implmemented by subclass
-[AVAirTransport terminatePendingRequests]_block_invoke
<%@ %p: delegate=%@>
-[AVAirTransport dealloc]
eventRunLoop
T@"NSRunLoop",R,N
eventThread
T@"NSThread",R,N
com.apple.avkit.AirChannel
+[AVAirTransport startEventThreadIfNecessary]_block_invoke_2
v16@?0@"NSTimer"8
AVAirMessageDispatcherDidChangeTargetNotification
channel
T@"AVAirTransport",&,N,V_channel
bonjourServiceClient
T@"AVBonjourServiceClient",R,N,V_bonjourServiceClient
T@"<AVAirMessageDispatcherClientDelegate>",W,N,V_delegate
currentNetService
T@"NSNetService",&,N,V_currentNetService
haveAirPlayService
-[AVAirMessageDispatcher airTransport:didReceiveObject:]
-[AVAirMessageDispatcher airTransportInputDidClose:]
-[AVAirMessageDispatcher airTransportOutputDidOpen:]
-[AVAirMessageDispatcher didConnectToBonjourService:channel:]
-[AVAirMessageDispatcher sendMessage:completion:]
v24@?0@"<AVAirTransportReverseTransformationResultProtocol>"8q16
-[AVAirMessageDispatcher sendMessage:completion:]_block_invoke
<%@ %p: serviceClient=%@, channel=%@; delegate=%@>
-[UIViewController(AVAdditions) avkit_setNeedsUpdatePreferencesIfNeeded]
UIWhitePointAdaptivityStyleVideo == preferredWhitePointAdaptivityStyle
prefersHomeIndicatorAutoHidden
-[UIWindowScene(AVAdditions) avkit_disableTouchCancellation:forRotationActions:]
actuallyDisableTouchCancellation
com.apple.avkit
loadingIndicator
T@"UIActivityIndicatorView",&,N,V_loadingIndicator
button
T@"AVButton",R,N,V_button
showsLoadingIndicator
TB,N,V_showsLoadingIndicator
TB,R,N,GisCollapsedOrExcluded,V_collapsedOrExcluded
clientIdentifier
T@"NSString",R,N,V_clientIdentifier
sceneIdentifier
T@"NSString",R,N,V_sceneIdentifier
changingVolume
TB,N,GisChangingVolume,V_changingVolume
currentRouteHasVolumeControl
TB,N,V_currentRouteHasVolumeControl
EUVolumeLimit
Tf,N,V_EUVolumeLimit
EUVolumeLimitEnabled
TB,N,GisEUVolumeLimitEnabled,V_EUVolumeLimitEnabled
EUVolumeLimitOverridden
TB,N,GisEUVolumeLimitOverridden,V_EUVolumeLimitOverridden
volume
Tf,N,V_volume
volumeChangesThrottled
TB,N,V_volumeChangesThrottled
canOverrideEUVolumeLimit
TB,N,V_canOverrideEUVolumeLimit
targetVolumeInternal
T@"NSNumber",&,N,V_targetVolumeInternal
maximumTargetVolumeSinceChangingVolumeBegan
T@"NSNumber",&,N,V_maximumTargetVolumeSinceChangingVolumeBegan
volumeCategory
T@"NSString",R,N,V_volumeCategory
sharedSystemController
T@"AVSystemController",&,N,V_sharedSystemController
fullyInitialized
TB,N,GisFullyInitialized,V_fullyInitialized
Tf,R,N
TB,R,N,GisChangingVolume
v16@?0@"AVSystemVolumeController"8
AVVolumeControllerCurrentRouteHasVolumeControlChangedNotification
CannotExceedEUVolumeLimit
EUVolumeLimitReached
RouteChange
ExplicitVolumeChange
AVVolumeControllerVolumeChangedNotification
-[AVSystemVolumeController setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:]
Disabling
Enabling
B24@?0@"AVVolumeHUDAssertion"8^B16
AVVolumeControllerVolumeDidChangeNotificationIsInitialValueKey
MPDebugEUVolumeLimit
.GlobalPreferences
Audio/Video
RegionalBehaviorEUVolumeLimit
windowSceneVolumeHUDAssertions
T@"NSMutableSet",R,N
T@"AVZoomingBehaviorContext",W,N,V_behaviorContext
transportControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_transportControlsAreaLayoutGuideProvidingView
displayModeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_displayModeControlsAreaLayoutGuideProvidingView
volumeControlsAreaLayoutGuideProvidingView
T@"UIView",R,N,V_volumeControlsAreaLayoutGuideProvidingView
unobscuredTopAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredTopAreaLayoutGuideProvidingView
unobscuredCenterAreaLayoutGuideProvidingView
T@"UIView",R,N,V_unobscuredCenterAreaLayoutGuideProvidingView
animatedUnobscuredCenterAreaLayoutGuideProvidingView
T@"UIView",R,N,V_animatedUnobscuredCenterAreaLayoutGuideProvidingView
areTransportControlsVisible
TB,N,V_areTransportControlsVisible
areVolumeControlsVisible
TB,N,V_areVolumeControlsVisible
transportControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_transportControlsAreaLayoutGuide
displayModeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_displayModeControlsAreaLayoutGuide
volumeControlsAreaLayoutGuide
T@"UILayoutGuide",R,N,V_volumeControlsAreaLayoutGuide
unobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredCenterAreaLayoutGuide
animatedUnobscuredCenterAreaLayoutGuide
T@"UILayoutGuide",R,N,V_animatedUnobscuredCenterAreaLayoutGuide
unobscuredTopAreaLayoutGuide
T@"UILayoutGuide",R,N,V_unobscuredTopAreaLayoutGuide
initializationTimestamp
Td,R,N,V_initializationTimestamp
initializedElapsedTime
Td,R,N,V_initializedElapsedTime
timelineRate
Td,R,N,V_timelineRate
timelineDuration
Td,R,N,V_timelineDuration
currentElapsedTime
paused
TB,R,N,GisPaused,V_paused
currentMicaPackageName
T@"NSString",&,N,V_currentMicaPackageName
customButton
T@"AVButton",R,N
v16@?0@"AVMicaPackage"8
AirPlay
Airplay
shouldUseCompactFullScreenSize
TB,N,V_shouldUseCompactFullScreenSize
traitCollection
T@"UITraitCollection",&,N,V_traitCollection
shouldUseMacStyle
TB,R,GshouldUseMacStyle
shouldUsePadStyle
TB,R,GshouldUsePadStyle
defaultItemInlineSize
T{CGSize=dd},R,N,V_defaultItemInlineSize
defaultItemFullScreenSize
T{CGSize=dd},R,N,V_defaultItemFullScreenSize
standardPaddingFullScreen
Td,R,N,V_standardPaddingFullScreen
standardPaddingInline
Td,R,N,V_standardPaddingInline
standardInteritemPadding
Td,R,N,V_standardInteritemPadding
additionalInlinePaddingForDodgingSafeArea
Td,R,N,V_additionalInlinePaddingForDodgingSafeArea
routePickerButtonInlineSize
T{CGSize=dd},R,N,V_routePickerButtonInlineSize
routePickerButtonFullScreenSize
T{CGSize=dd},R,N,V_routePickerButtonFullScreenSize
audioRoutePickerFullScreenSize
T{CGSize=dd},R,N,V_audioRoutePickerFullScreenSize
volumeSliderInlineWidth
Td,R,N,V_volumeSliderInlineWidth
volumeSliderCompactFullScreenWidth
Td,R,N,V_volumeSliderCompactFullScreenWidth
volumeSliderRegularFullScreenWidth
Td,R,N,V_volumeSliderRegularFullScreenWidth
volumeSliderPadding
Td,R,N,V_volumeSliderPadding
minimumProminentPlayButtonDimension
Td,R,N,V_minimumProminentPlayButtonDimension
maximumProminentPlayButtonDimension
Td,R,N,V_maximumProminentPlayButtonDimension
maximumTransportControlsWidth
Td,R,N,V_maximumTransportControlsWidth
maximumMultiRowTransportControlsWidth
Td,R,N,V_maximumMultiRowTransportControlsWidth
minimumTransportControlsWidth
Td,R,N,V_minimumTransportControlsWidth
minimumSingleButtonTransportControlsWidth
Td,R,N,V_minimumSingleButtonTransportControlsWidth
minimumScrubberSize
T{CGSize=dd},R,N,V_minimumScrubberSize
doubleRowLayoutMargins
T{NSDirectionalEdgeInsets=dddd},R,N,V_doubleRowLayoutMargins
doubleRowLayoutMarginsWhenShowingScrubInstructions
T{NSDirectionalEdgeInsets=dddd},R,N,V_doubleRowLayoutMarginsWhenShowingScrubInstructions
doublerowLayoutMarginsWhenShowingCustomContentInfo
T{NSDirectionalEdgeInsets=dddd},R,N,V_doublerowLayoutMarginsWhenShowingCustomContentInfo
spacingBetweenScrubInstructionsAndScrubber
Td,R,N,V_spacingBetweenScrubInstructionsAndScrubber
liveBroadcastLabelTopToBackdropTopDistance
Td,R,N,V_liveBroadcastLabelTopToBackdropTopDistance
infoLabelFont
T@"UIFont",R,N,V_infoLabelFont
scrubberTimeLabelFont
T@"UIFont",R,N,V_scrubberTimeLabelFont
scrubberInfoLabelFont
T@"UIFont",R,N,V_scrubberInfoLabelFont
T@"AVEditBehaviorContext",W,N,V_behaviorContext
T@"<AVEditBehaviorDelegate>",W,N,V_delegate
AVPlayerViewControllerDidChangePlayerControllerNotification
AVPlayerViewControllerDidEnterFullScreenFromInline
AVPlayerViewControllerDidExitFullScreenFromInline
_actualContentOverlayView
T@"AVContentOverlayView",R,N,V__actualContentOverlayView
_defaultPlaybackRateStorage
T@"NSNumber",&,N,V__defaultPlaybackRateStorage
fullScreenViewController
T@"AVFullScreenViewController",R,N
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
TB,N,V_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
finishPreparingForInteractiveDismissalHandler
T@?,C,N,V_finishPreparingForInteractiveDismissalHandler
pendingRestoreUserInterfaceForPictureInPictureStopHandler
T@?,C,N,V_pendingRestoreUserInterfaceForPictureInPictureStopHandler
interactiveDismissalCompletionHandler
T@?,C,N,V_interactiveDismissalCompletionHandler
_observationController
T@"AVObservationController",R,N,V__observationController
_behaviorStorage
T@"AVBehaviorStorage",R,N,V__behaviorStorage
_targetVideoGravitiesForLayoutClass
T@"NSMutableDictionary",R,N,V__targetVideoGravitiesForLayoutClass
_hasBegunObservation
TB,N,V__hasBegunObservation
_numberOfTrackedUserInteractions
Tq,N,S_setNumberOfTrackedUserInteractions:,V__numberOfTrackedUserInteractions
hoverGestureRecognizer
T@"UIHoverGestureRecognizer",&,N,V_hoverGestureRecognizer
_localizedDiscoverabilityTitleForKeyCommandLocalizationKey
T@"NSMutableDictionary",R,N,V__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
overrideRouteSharingPolicy
TQ,N,V_overrideRouteSharingPolicy
secondScreenConnectionDisplaySize
T{CGSize=dd},N,V_secondScreenConnectionDisplaySize
volumeAnimator
T@"AVPlayerControllerVolumeAnimator",&,N,V_volumeAnimator
T@"__AVPlayerLayerView",&,N,V_playerLayerView
TB,N,GisReadyForDisplay,V_readyForDisplay
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoBounds
hasPerformedInitialSetup
TB,N,V_hasPerformedInitialSetup
wasInitializedUsingWebKitSPI
TB,N,V_wasInitializedUsingWebKitSPI
overrideRoutingContextUID
T@"NSString",C,N,V_overrideRoutingContextUID
requiresImmediateAssetInspection
TB,N,V_requiresImmediateAssetInspection
customControlsView
T@"AVPlayerViewControllerCustomControlsView",R,N
TB,N,V_playbackControlsIncludeVolumeControls
videoDisplayScale
viewControllerForFullScreenPresentation
T@"UIViewController",R,N
customControlItems
T@"NSArray",C,N,V_customControlItems
defaultPlaybackRate
Td,N
TB,N,V_canIncludePlaybackControlsWhenInline
overrideLayoutMarginsWhenEmbeddedInline
T@"NSValue",&,N
pictureInPictureActive
TB,R,N,GisPictureInPictureActive,V_pictureInPictureActive
T@?,C,N
TB,N,V_showsTimecodes
T@"NSString",C,N
T@"UIView",R,N
canStartPictureInPictureAutomaticallyFromInline
TB,N,V_canStartPictureInPictureAutomaticallyFromInline
TB,N,V_entersFullScreenWhenPlaybackBegins
exitsFullScreenWhenPlaybackEnds
TB,N,V_exitsFullScreenWhenPlaybackEnds
T@"<AVPlayerViewControllerDelegate>",W,N,V_delegate
-[AVPlayerViewController pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:]
v20@?0B8@"NSError"12
-[AVPlayerViewController avkit_willBeginStoppingPictureInPictureForPictureInPictureViewController:]
Invalid call of %@!
*** Warning: %@ is trying to exit full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
*** Warning: %@ is trying to enter full screen, but is not in its view's window's view controller hierarchy. This results in undefined behavior.
-[AVPlayerViewController exitFullScreenWithCompletion:]_block_invoke
success
-[AVPlayerViewController enterFullScreenWithCompletion:]_block_invoke
-[AVPlayerViewController showFullScreenPresentationFromView:completion:]
v32@?0@"AVPlayerViewController"8@16@"AVKeyValueChange"24
playerLayerView.videoBounds
playerLayerView.readyForDisplay
-[AVPlayerViewController _delegateRespondsTo:]
does NOT
does
v16@?0@"<AVMetricsCollectionBehaviorContext>"8
-[AVPlayerViewController _mediaSelectionDoneButtonTapped:]
B16@?0@"UIView"8
-[AVPlayerViewController _handleDoubleDoubleTapGesture:]
-[AVPlayerViewController _handleSingleTapGesture:]
-[AVPlayerViewController _handleDoubleTapGesture:]
com.apple.iBooks
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_SUBTITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_TV_OUT_TITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_SUBTITLE
EXTERNAL_PLAYBACK_INDICATOR_VIEW_AIRPLAY_TITLE
-[AVPlayerViewController isAudioOnlyContent]
-[AVPlayerViewController _addObservers]
_pictureInPictureController
v16@?0@"AVPlayerViewController"8
playerController.hasEnabledVideo
playerController.hasEnabledAudio
playerController.externalPlaybackType
playerController.playingOnExternalScreen
v32@?0@"AVPlayerViewController"8@16@"NSNotification"24
Exit full screen keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_EXIT_FULLSCREEN
Show next frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_NEXT_FRAME
Show previous frame keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SHOW_PREVIOUS_FRAME
Fast forward keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_FAST_FORWARD
Rewind keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_REWIND
Go to beginning keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_GO_TO_BEGINNING
Skip ahead 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_AHEAD_15
Skip back 15 seconds keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_SKIP_BACK_15
Volume down keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_DOWN
Volume up keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_VOLUME_UP
Play/Pause keyboard command discoverability title
KEYBOARD_DISCOVERABILITY_PLAY_PAUSE
v56@?0@"NSString"8q16:24:32@"NSString"40@"NSString"48
com.apple.AppStore
-[AVPlayerViewController prefersStatusBarHidden]
prefersStatusBarHidden
-[AVPlayerViewController loadView]
*** AVPlayerViewController: Setting a view is not supported.
-[AVPlayerViewController flashPlaybackControlsWithDuration:]
*** Warning: Called %@ with a duration of %@. Ignoring the duration as it is too short.
-[AVPlayerViewController setEntersFullScreenWhenPlaybackBegins:]
entersFullScreenWhenPlaybackBegins
-[AVPlayerViewController setVolumeControlsCanShowSlider:]
-[AVPlayerViewController setPlaybackControlsIncludeVolumeControls:]
playbackControlsIncludeVolumeControls
-[AVPlayerViewController setPlaybackControlsIncludeDisplayModeControls:]
playbackControlsIncludeDisplayModeControls
-[AVPlayerViewController setPlaybackControlsIncludeTransportControls:]
playbackControlsIncludeTransportControls
-[AVPlayerViewController setRequiresLinearPlayback:]
-[AVPlayerViewController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
-[AVPlayerViewController setAllowsEnteringFullScreen:]
allowsEnteringFullScreen
-[AVPlayerViewController setCanHidePlaybackControls:]
canHidePlaybackControls
-[AVPlayerViewController setUpdatesNowPlayingInfoCenter:]
-[AVPlayerViewController setShowsTimecodes:]
_showsTimecodes
-[AVPlayerViewController setPlayerController:]
-[AVPlayerViewController setAllowsPictureInPicturePlayback:]
-[AVPlayerViewController setVideoGravity:forLayoutClass:]
-[AVPlayerViewController setShowsPlaybackControls:]
-[AVPlayerViewController setPlayer:]
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
-[AVPlayerViewController encodeWithCoder:]
AVAllowsPictureInPicturePlayback
AVVideoLayerGravity
AVShowsPlaybackControls
-[AVPlayerViewController initWithCoder:]
AVPlayerShouldAutoplay
AVPlayerAssetFilename
-[AVPlayerViewController dealloc]
*** Warning: %@ was deallocated while its contents were being presented full screen. ***
-[AVPlayerViewController initWithNibName:bundle:]
_playerLayerView.pixelBufferAttributes
_playerLayerView.videoDisplaySize
playerLayerView.videoGravity
iAdPrerollView
showsExitFullScreenButton
TB,R,N,GisPictureInPicturePossible
pictureInPictureSuspended
TB,R,N,GisPictureInPictureSuspended
pictureInPictureWasStartedWhenEnteringBackground
_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,S_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
overrideTransformForProminentPlayButton
T{CGAffineTransform=dddddd},N
canToggleVideoGravityWhenEmbeddedInline
playbackControlsController
T@"AVPlaybackControlsController",R,N
_transitionController
T@"AVTransitionController",R,N
canShowPictureInPictureButton
canControlPlayback
audioOnlyContent
TB,R,N,GisAudioOnlyContent
contentView
T@"AVPlayerViewControllerContentView",R,N
presentingFullScreenFromInline
TB,R,N,GisPresentingFullScreenFromInline
presentedFullScreen
TB,R,N,GisPresentedFullScreen
presentationContext
T@"AVPresentationContext",R,N
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setEntersFullScreenWhenTapped:]
entersFullScreenWhenTapped
-[AVPlayerViewController(DeprecationsAndToBeRemoved) setPreferredUnobscuredArea:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) exitFullScreenAnimated:completionHandler:]
View needs to be loaded before you can call %@!
View may not need layout when you call %@!
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) enterFullScreenAnimated:completionHandler:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) setPlaybackControlsShouldControlSystemVolume:]
-[AVPlayerViewController(AVPlayerViewController_WebKitOnly) initWithPlayerLayerView:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) pictureInPictureButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) fullScreenButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) mediaSelectionButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) videoGravityButtonTapped:]
-[AVPlayerViewController(AVPlaybackControlsViewControllerActions) doneButtonTapped:]
_pictureInPictureController.pictureInPictureWasStartedWhenEnteringBackground
_pictureInPictureController.pictureInPictureSuspended
_pictureInPictureController.pictureInPictureActive
_pictureInPictureController.pictureInPicturePossible
T@"AVEditBehavior",W,N,V_behavior
zoomingBehavior
T@"AVZoomingBehavior",&,N,V_zoomingBehavior
T@"AVObservationController",&,N,V_observationController
editView
T@"AVEditView",&,N,V_editView
editing
TB,N,GisEditing,V_editing
imageGenerator
T@"AVAssetImageGenerator",&,N,V_imageGenerator
playerTimeObserver
T@,&,N,V_playerTimeObserver
T@"UIView",&,N,V_containerView
toolbar
T@"UIToolbar",&,N,V_toolbar
cancelButton
T@"UIBarButtonItem",&,N,V_cancelButton
doneButton
T@"UIBarButtonItem",&,N,V_doneButton
flexibleSpaceItem
T@"UIBarButtonItem",&,N,V_flexibleSpaceItem
playButton
T@"UIBarButtonItem",&,N,V_playButton
pauseButton
T@"UIBarButtonItem",&,N,V_pauseButton
pendingImageRequests
T@"NSMutableArray",R,N,V_pendingImageRequests
requestedImageTimeToCMTimeMap
T@"NSMutableDictionary",R,N,V_requestedImageTimeToCMTimeMap
currentRotation
TQ,N,V_currentRotation
rotationTransform
T{CGAffineTransform=dddddd},N,V_rotationTransform
parameters
T@"AVEditBehaviorParameters",R,C,N,V_parameters
v80@?0{?=qiIq}8^{CGImage=}32{?=qiIq}40q64@"NSError"72
v32@?0@"AVEditBehaviorContext"8@16@"AVKeyValueChange"24
EDIT_BEHAVIOR_CONTEXT_CANCEL
-[AVEditBehaviorContext rotateClockwise]
editView.scrubbing
editView.trimming
playerController.player.timeControlStatus
playerController.player.currentItem.presentationSize
playerController.player.currentItem.duration
avkit_currentEditBehaviorContext
T@"AVEditBehaviorContext",R,W,N
T@"UIView",W,N,V_contentView
T@"UIViewController<AVFullScreenViewControllerDelegate>",W,N,V_delegate
associatedFullScreenViewController
T@"AVFullScreenViewController",W,N,V_associatedFullScreenViewController
sourceFullScreenViewController
T@"AVFullScreenViewController",W,N,V_sourceFullScreenViewController
_avairtvui._tcp.
AVKitAir/1
itemIdentifier
T@"NSString",C,N,V_itemIdentifier
MIMEType
T@"NSString",C,N,V_MIMEType
extendedLanguageTag
T@"NSString",C,N,V_extendedLanguageTag
T@"NSValue",&,N,V_value
rawData
T@"NSData",&,N,V_rawData
array
T@"NSArray",&,N,V_array
dictionary
T@"NSDictionary",&,N,V_dictionary
initialRepresentation
T@"NSDictionary",R,N,V_initialRepresentation
type
TI,R,N,V_type
jsonDataRepresentation
T@"NSData",R,N
dictionaryRepresentation
T@"NSDictionary",R,N
-[AVAirMessage messageDataRepresentation]
mimetype
languagetag
compression
application/octet-stream
%@:%@
item
messagetype
length
-[AVAirMessage jsonDataRepresentation]
 %@: %@
-[AVAirMessage initWithMessageType:itemIdentifier:dictionaryRepresentation:]
isAirMessagingEnabled
+[AVAirMessage messageWithParts:]
+[AVAirMessage _nameForDataCompressionAlgorithm:]
none
lzfse
zlib
lzma
+[AVAirMessage _decompressBodyData:forCompressionAlgorithm:]
+[AVAirMessage isAirMessagingEnabled]_block_invoke
airmessaging
build
sender
kern.osversion
avkitACMIdentifier
T@"AVPictureInPicturePlayerLayerView",R,N,V_pictureInPicturePlayerLayerView
shouldShowAlternateActionButtonImage
TB,N,V_shouldShowAlternateActionButtonImage
T@"<AVPictureInPictureViewControllerDelegate>",W,N,V_delegate
contentViewController
T@"AVPictureInPictureViewController",&,N,V_contentViewController
shouldShowLoadingIndicator
%@ does not support unarchiving from a nib.
-[AVPictureInPictureViewController dealloc]
-[AVPictureInPictureViewController initWithPictureInPicturePlayerLayerView:]
@"UIStackView"24@?0@"NSArray"8d16
@"UILabel"16@?0d8
ExternalPlaybackIndicatorLarge
anchorValue
anchorTimeStamp
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
time stamp
Td,D,N
currentValue
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
scene
T@"UIScene",W,N,V_scene
debugText
T@"NSString",C,N,V_debugText
secondScreenViewController
T@"AVSecondScreenViewController",W,N,V_secondScreenViewController
UIScreen.nativeBounds.size: %@
Content Match: %@
Preferred Color Mode: %@
Disabled
Enabled
Preferred Refresh Rate: %@Hz
Best Variant: %@ %@
Current Variant: %@ %@
--------
Current Display Mode: %@ %@ @ %@Hz
%0.f
%.0f
%.0fx%0.f
HDR10
Dolby
Unknown
naturalSize
formatDescriptions
v16@?0@"AVSecondScreenDebugAssistant"8
player.currentItem.tracks
player.currentItem
debugInfoDisplay.preferences
debugInfoDisplay.currentMode
enableSecondScreenHUD
InternalBuild
com.apple.springboard
feC7TgoAAKLjn/KU8JAKFA
presentationWindowForDisablingAutorotation
T@"UIWindow",W,N,V_presentationWindowForDisablingAutorotation
context
T@"AVPresentationContext",R,N,V_context
v32@?0@"AVPresentationController"8@16@"NSNotification"24
-[AVPresentationController _observeSceneDidBecomeActiveForRestoringRotatability]_block_invoke
-[AVPresentationController dismissalTransitionDidEnd:]
completed
-[AVPresentationController dismissalTransitionWillBegin]
-[AVPresentationController presentationTransitionDidEnd:]
-[AVPresentationController presentationTransitionWillBegin]
-[AVPresentationController dealloc]
-[AVPresentationController initWithPresentedViewController:presentingViewController:]
v16@?0@"NSNotification"8
v32@?0@8@16@24
v48@?0@8@"NSString"16@24@32@"NSString"40
T@,R,N,V_value
oldValue
T@,R,N,V_oldValue
keyPath
T@"NSString",R,N,V_keyPath
observationToken
T@,R,N,V_observationToken
token
T@"NSString",R,N,V_token
includeInitialValue
TB,R,N,V_includeInitialValue
includeChanges
TB,R,N,V_includeChanges
keyPaths
T@"NSSet",R,N,V_keyPaths
changesBlock
T@?,R,N,V_changesBlock
T@"AVHomeIPCameraBehavior",W,N,V_behavior
livePreviewPlayerController
T@"AVHomeIPCameraPlayerController",W,N,V_livePreviewPlayerController
playerControllerToRestore
T@"AVPlayerController",&,N,V_playerControllerToRestore
playbackControlsShowsLoadingIndicator
TB,N,V_playbackControlsShowsLoadingIndicator
TB,N,V_playbackControlsIncludeTransportControls
TB,N,V_playbackControlsIncludeDisplayModeControls
TB,N,GisZoomingEnabled,V_zoomingEnabled
livePreviewContainerView
T@"UIView",R,N,V_livePreviewContainerView
TB,N,GisLivePreviewActive,V_livePreviewActive
hasMicrophone
TB,N,V_hasMicrophone
TB,N,V_canStartPictureInPictureAutomaticallyWhenEnteringBackground
TB,N,V_playbackControlsIncludePictureInPictureButton
livePreviewAspectRatio
T{CGSize=dd},N,V_livePreviewAspectRatio
v32@?0@"AVHomeIPCameraBehaviorContext"8@16@"NSNotification"24
-[AVHomeIPCameraBehaviorContext setPlaybackControlsIncludePictureInPictureButton:]
playbackControlsIncludePictureInPictureButton
-[AVHomeIPCameraBehaviorContext setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:]
canStartPictureInPictureAutomaticallyWhenEnteringBackground
-[AVHomeIPCameraBehaviorContext setLivePreviewActive:]
livePreviewActive
-[AVHomeIPCameraBehaviorContext setZoomingEnabled:]
zoomingEnabled
statusBarBackgroundGradientView
T@"AVStatusBarBackgroundGradientView",R,N,V_statusBarBackgroundGradientView
observingStatusBarHidden
TB,N,GisObservingStatusBarHidden,V_observingStatusBarHidden
contentOverlayViewSubview
T@"UIView",&,N,V_contentOverlayViewSubview
canShowStatusBarBackgroundGradientWhenStatusBarVisible
TB,N,V_canShowStatusBarBackgroundGradientWhenStatusBarVisible
activeContentView
T@"AVPlaybackContentContainerView",R,N
videoContentFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_videoContentFrame
TB,N,GisPlayingOnSecondScreen,V_playingOnSecondScreen
T{CGRect={CGPoint=dd}{CGSize=dd}},N
TB,N,GisPlayingOnSecondScreen
sublayerTransform
previousBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_previousBounds
lastKnownWindow
T@"UIWindow",W,N,V_lastKnownWindow
contentAspectRatio
T{CGSize=dd},N,V_contentAspectRatio
fullScreen
TB,N,GisFullScreen,V_fullScreen
T@"AVPlaybackContentContainerView",R,N,V_activeContentView
messageClass
T#,R,N,V_messageClass
-[AVAirMessageTransformer dataForMessage:]
missing implementation
movieScrubber
T@"UIMovieScrubber",&,V_movieScrubber
trimming
TB,N,GisTrimming,V_trimming
dataSource
T@"<AVEditViewDataSource>",W,N,V_dataSource
T@"<AVEditViewDelegate>",W,N,V_delegate
prefersThumbVisible
TB,N,V_prefersThumbVisible
trimStartTime
trimEndTime
identifier
localeIdentifier
time
dataType
startDate
-[AVMetadataItem(AVAirSerialization) airDictionaryRepresentation]
b64:%@
+[AVMetadataItem(AVAirSerialization) itemWithAirDictionaryRepresentation:]
b64:
targetContentOffset
T@"NSValue",&,N,V_targetContentOffset
stateDescription
T@"NSString",C,N,V_stateDescription
frameForActiveContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForActiveContentView
frameForTransitioningContentView
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frameForTransitioningContentView
boundsOrContentSizeAdjustmentCount
Tq,N,V_boundsOrContentSizeAdjustmentCount
transitionInteractive
TB,N,GisTransitionInteractive,V_transitionInteractive
contentTransitioningDelegate
T@"<AVPlaybackContentTransitioningViewDelegate>",W,N,V_contentTransitioningDelegate
incomingContentView
T@"AVPlaybackContentContainerView",R,N,V_incomingContentView
transitionState
Tq,R,N,V_transitionState
transitionDirection
Tq,R,N,V_transitionDirection
transitionProgress
Td,R,N,V_transitionProgress
%@ %@
Right
 Left
 None
Bounce
    Completed
   Completing
    Cancelled
   Cancelling
Transitioning
   Prohibited
     Possible
         Idle
-[AVPlaybackContentTransitioningView setStateDescription:]
MEDIA_SELECTION_VIEW_CONTROLLER_AUDIO_OPTIONS_HEADER_TITLE
MEDIA_SELECTION_VIEW_CONTROLLER_LEGIBLE_OPTIONS_HEADER_TITLE
AVMediaSelectionViewControllerCellReuseIdentifier
v16@?0@"<UIViewControllerTransitionCoordinatorContext>"8
representedObject
T@,&,N,V_representedObject
-[AVMediaSelectionTableViewController dealloc]
-[AVMediaSelectionTableViewController initWithStyle:]
MEDIA_SELECTION_VIEW_CONTROLLER_NAVIGATION_ITEM_TITLE
AVPictureInPictureControllerWillStartNotification
AVPictureInPictureControllerDidStartNotification
AVPictureInPictureControllerWillStopNotification
AVPictureInPictureControllerDidStopNotification
AVPictureInPictureControllerPlaybackStateDidChangeNotification
AVPictureInPictureControllerPlaybackStateIsPlayingKey
AVPictureInPictureControllerContentSourceKey
platformAdapter
T@"AVPictureInPicturePlatformAdapter",R,N,V_platformAdapter
sourceIfRetainedDuringPictureInPicturePlayback
T@"<AVPictureInPictureContentSource>",&,N,V_sourceIfRetainedDuringPictureInPicturePlayback
playerControllerIsPlayingObservationToken
T@,&,N,V_playerControllerIsPlayingObservationToken
TB,N,GisPictureInPicturePossible,V_pictureInPicturePossible
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,N,GisPictureInPictureSuspended,V_pictureInPictureSuspended
otherPictureInPictureActive
TB,N,GisOtherPictureInPictureActive,V_otherPictureInPictureActive
canStopPictureInPicture
TB,N,S_setCanStopPictureInPicture:,V_canStopPictureInPicture
wantsImmediateAssetInspection
TB,N,V_wantsImmediateAssetInspection
wasPlayingWhenPictureInPictureInterruptionBegan
TB,N,V_wasPlayingWhenPictureInPictureInterruptionBegan
T@"<AVPictureInPictureContentSource>",R,W,N,V_source
T@"AVPictureInPictureViewController",R,N
wantsResourceReduction
TB,R,N,V_wantsResourceReduction
retainsSourceDuringPictureInPicturePlayback
TB,N,V_retainsSourceDuringPictureInPicturePlayback
allowsPictureInPictureFromInlineWhenEnteringBackground
TB,N,V_allowsPictureInPictureFromInlineWhenEnteringBackground
TB,N,V_pictureInPictureWasStartedWhenEnteringBackground
prerollDelegate
T@"<AVPictureInPicturePrerollDelegate>",W,N,V_prerollDelegate
contentSource
T@"AVPictureInPictureControllerContentSource",&,N,V_contentSource
T@"AVPlayerLayer",R,N,V_playerLayer
T@"<AVPictureInPictureControllerDelegate>",W,N,V_delegate
v32@?0@"AVPictureInPictureController"8@16@"AVKeyValueChange"24
videoRect
-[AVPictureInPictureController setContentSource:]_block_invoke
owner.isOtherPictureInPictureActive
-[AVPictureInPictureController pictureInPicturePlatformAdapter:statusDidChange:fromStatus:]
shouldRetainSource
self.sourceIfRetainedDuringPictureInPicturePlayback == nil
-[AVPictureInPictureController pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:]
-[AVPictureInPictureController setPictureInPicturePossible:]
pictureInPicturePossible
-[AVPictureInPictureController setRequiresLinearPlayback:]
requiresLinearPlayback
-[AVPictureInPictureController setCanStartAutomaticallyWhenEnteringBackground:]
canStartAutomaticallyWhenEnteringBackground
-[AVPictureInPictureController setMicrophoneEnabled:]
microphoneEnabled
-[AVPictureInPictureController setAllowsPictureInPicturePlayback:]
allowsPictureInPicturePlayback
-[AVPictureInPictureController startPictureInPicture]
-[AVPictureInPictureController _commonInitWithSource:]_block_invoke
%@ is not a valid initializer. You must call -[%@ initWithPlayerLayer:].
pictureInPictureButtonStartImage
T@"UIImage",R,N
pictureInPictureButtonStopImage
T@"<AVPictureInPictureContentSource>",R,N
sampleBufferDisplayLayer
T@"AVSampleBufferDisplayLayer",R,N,V_sampleBufferDisplayLayer
sampleBufferPlaybackDelegate
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",R,W,N,V_sampleBufferPlaybackDelegate
initialRenderSize
T{CGSize=dd},R,N,V_initialRenderSize
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_stopRoutingVideoToPictureInPictureViewController:]
self.isPIPModeEnabled
-[AVPlayerLayer(AVPictureInPictureContentSource) avkit_startRoutingVideoToPictureInPictureViewController:]
Tq,R,N,V_type
T@"NSString",C,N,V_title
T@"UIImage",&,N,V_image
action
T@?,C,N,V_action
tintColor
T@"UIColor",&,N,V_tintColor
label
T@"UILabel",R,N,V_label
labelIfLoaded
T@"UILabel",R,N
T@"UIActivityIndicatorView",R,N,V_loadingIndicator
numberOfLines
Tq,N,V_numberOfLines
loadingIndicatorLeftAlignmentConstraint
T@"NSLayoutConstraint",&,N,V_loadingIndicatorLeftAlignmentConstraint
loadingIndicatorRightAlignmentConstraint
T@"NSLayoutConstraint",&,N,V_loadingIndicatorRightAlignmentConstraint
loadingIndicatorAlignment
Tq,N,V_loadingIndicatorAlignment
text
T@"NSString",C,N,V_text
attributedText
T@"NSAttributedString",C,N,V_attributedText
font
T@"UIFont",&,N,V_font
needsInitialLayout
TB,N,V_needsInitialLayout
T@"AVPlayerViewControllerContentView",R,N,V_contentView
-[AVExternalPlaybackController _invokeClientCompletionHandlerWithPlaybackState:]
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]
v16@?0Q8
-[AVExternalPlaybackController willBeginPlaybackFromAppWithBundleID:completionHandler:]_block_invoke
MPMediaControlsConfiguration
AVExternalPlaybackStatePlaybackCancelled
AVExternalPlaybackStateWillPlayExternally
AVExternalPlaybackStateWillPlayLocally
timecodeStruct
T{CVSMPTETime=ssIIIssss},N,V_timecodeStruct
frameNumber
Tq,N,V_frameNumber
frameDuration
T{?=qiIq},N,V_frameDuration
tc_flags
TI,N,V_tc_flags
timecodeTrack
T@"AVAssetTrack",&,N,V_timecodeTrack
observationInterval
T{?=qiIq},R,N,V_observationInterval
%02d:%02d:%02d%@%02d
%lu F
-[AVPictureInPicturePlatformAdapter(Common) _setRoutingVideoToHostedWindow:pictureInPictureViewController:source:]
shouldRoute
-[AVPictureInPicturePlatformAdapter(Common) _updateStatusUsingProposedStatus:]
self.status != AVPictureInPictureControllerStatusProhibited
-[AVPictureInPicturePlatformAdapter(Common) _setStatusAndNotifyDelegateIfNeeded:]
groupLeader
T@"AVCABackdropLayerView",W,N,V_groupLeader
dependents
T@"NSHashTable",R,N,V_dependents
activeBackdropEffect
Tq,N,V_activeBackdropEffect
captureOnly
TB,N,GisCaptureOnly
forceLowQualityEffect
TB,N,V_forceLowQualityEffect
customBackgroundColor
T@"UIColor",C,N,V_customBackgroundColor
v16@?0@"AVCABackdropLayerView"8
inputColorMatrix
inputIntermediateBitDepth
inputQuality
inputNormalizeEdges
inputRadius
T@"<AVRoutePickerViewDelegate>",W,N,V_delegate
activeTintColor
T@"UIColor",&,N
routePickerButtonStyle
Tq,N,V_routePickerButtonStyle
prioritizesVideoDevices
v32@?0@"AVRoutePickerView"8@16@"NSNotification"24
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
/System/Library/Frameworks/MediaPlayer.framework/Contents/MacOS/MediaPlayer
MPMediaControls
Unable to find class %s
-[AVRoutePickerView updateButtonAppearance]
Inactive
Active
-[AVRoutePickerView setAirPlayActive:]
airPlayActive
com.apple.avkit.avroutepickerview
contentLayer
T@"AVPictureInPictureIndicatorSublayer",R,N,V_contentLayer
videoRectWhenPIPBegan
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_videoRectWhenPIPBegan
customText
%@ is not a valid initializer. You must call -[%@ initWithTraitCollection:opaque:].
T@"NSString",C,N,V_customText
PICTURE_IN_PICTURE_INDICATOR_LAYER_TITLE
layoutView
T@"AVLayoutView",&,N,V_layoutView
automaticallyDrawsRoundedCorners
TB,N,V_automaticallyDrawsRoundedCorners
prefersLowQualityEffects
TB,N,V_prefersLowQualityEffects
circular
TB,N,GisCircular,V_circular
highlightAnimator
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
micaPackage
T@"AVMicaPackage",&,N,V_micaPackage
imageView
T@"UIImageView",&,N,V_imageView
micaPackageContainerView
T@"UIView",&,N,V_micaPackageContainerView
initialPreciseLocationOfTouch
T{CGPoint=dd},N,V_initialPreciseLocationOfTouch
longPressTimer
T@"NSTimer",W,N,V_longPressTimer
trackingState
Tq,N,V_trackingState
showsHighlightedAppearance
TB,N,V_showsHighlightedAppearance
micaPackageStateName
T@"NSString",&,N,V_micaPackageStateName
longPressEnabled
TB,N,GisLongPressEnabled,V_longPressEnabled
translationOfPanFromPreviousTouch
T{CGPoint=dd},N,V_translationOfPanFromPreviousTouch
cumulativeTranslationSincePanningBegan
T{CGPoint=dd},N,V_cumulativeTranslationSincePanningBegan
locationOfTouchInWindow
T{CGPoint=dd},N,V_locationOfTouchInWindow
v16@?0@"UIImage"8
Mute Toggle
minTime
Td,V_minTime
maxTime
Td,V_maxTime
T@"<AVTimeControlling>",&
interval
currentTime
AVResolution
AVInterval
AVPlayerController
playerController.minTiming
playerController.maxTiming
targetTime
targetTimeWithinEndTimes
remainingTargetTimeWithinEndTimes
Td,R
currentTimeWithinEndTimes
remainingTime
remainingTimeWithinEndTimes
seekableTimeRangeDuration
thirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
TB,R,GisThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
requiredPrioritySizes
T@"NSMutableArray",&,N,V_requiredPrioritySizes
veryHighPrioritySizes
T@"NSMutableArray",&,N,V_veryHighPrioritySizes
highPrioritySizes
T@"NSMutableArray",&,N,V_highPrioritySizes
mediumPrioritySizes
T@"NSMutableArray",&,N,V_mediumPrioritySizes
lowPrioritySizes
T@"NSMutableArray",&,N,V_lowPrioritySizes
currentTotalSize
T{CGSize=dd},N,V_currentTotalSize
T@"AVZoomingBehavior",W,N,V_behavior
contentZoomingView
T@"AVPlaybackContentZoomingView",&,N,V_contentZoomingView
doubleTapGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_doubleTapGestureRecognizer
v32@?0@"AVZoomingBehaviorContext"8@16@"NSNotification"24
contentTransitioningPlayer
T@"AVPlayer",&,N,V_contentTransitioningPlayer
contentTransitionView
T@"AVPlaybackContentTransitioningView",&,N,V_contentTransitionView
T@"AVNewsWidgetPlayerBehavior",W,N,V_behavior
activeContentTransitionType
contentTransitionInteractive
TB,R,N,GisContentTransitionInteractive
contentTransitioningOverlayView
TB,N,GisStartNextContentTransitionButtonEnabled,V_startNextContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled,V_startPreviousContentTransitionButtonEnabled
customContentTransitioningInfoPanel
T@"UIView",&,N,V_customContentTransitioningInfoPanel
-[AVNewsWidgetPlayerBehaviorContext setCustomContentTransitioningInfoPanel:]
-[AVNewsWidgetPlayerBehaviorContext updateStartLeftRightContentTransitionButtonsEnabled]_block_invoke
-[AVNewsWidgetPlayerBehaviorContext setStartPreviousContentTransitionButtonEnabled:]
startPreviousContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext setStartNextContentTransitionButtonEnabled:]
startNextContentTransitionButtonEnabled
-[AVNewsWidgetPlayerBehaviorContext setVideoGravityForTransitioningContent:]
-[AVNewsWidgetPlayerBehaviorContext initWithAVKitOwner:]
legacyDelegate
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N,V_legacyDelegate
T@"AVPlayer",R,N
T@"<AVPlayerViewControllerContentTransitioning_NewsOnly>",W,N
TB,N,GisStartNextContentTransitionButtonEnabled
TB,N,GisStartPreviousContentTransitionButtonEnabled
T@"UIView",&,N
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) startContentTransition:]
-[AVPlayerViewController(AVPlayerViewController_NewsOnly) setContentTransitioningDelegate:]
T@"<UIViewControllerContextTransitioningEx>",R,W,N,V_transitionContext
transitionAnimator
T@"UIViewPropertyAnimator",R,N,V_transitionAnimator
clientAnimator
T@"UIViewPropertyAnimator",R,N,V_clientAnimator
allAnimators
T@"NSMutableArray",R,N,V_allAnimators
T@"AVPresentationContext",&,N,V_presentationContext
transitionAnimatorProgress
T@"<AVTransitionDelegate>",W,N,V_delegate
-[AVTransition completeTransition:]
didComplete
-[AVTransition cancelInteractiveTransition]
-[AVTransition finishInteractiveTransition]
-[AVTransition startInteractiveTransition]
-[AVTransition dealloc]
-[AVTransition initWithTransitionContext:]
rowHeads
T@"NSArray",&,N,V_rowHeads
rowSpacing
T@"NSMutableArray",&,N,V_rowSpacing
debugIdentifier
T@"NSString",C,N,V_debugIdentifier
v32@?0@"AVLayoutItemAttributes"8Q16^B24
v32@?0@"AVLayoutViewRowHead"8Q16^B24
ScaleToFitPillarboxButton
ScaleToFillPillarboxButton
ScaleToFitLetterboxButton
ScaleToFillLetterboxButton
EnterFullScreen
Done
VolumeMuted
VolumeZero
VolumeLow
VolumeMedium
VolumeHigh
ProminentPlaySmall
ProminentPlayLarge
Catalyst_ScaleToFitPillarboxButton
Catalyst_ScaleToFillPillarboxButton
Catalyst_ScaleToFitLetterboxButton
Catalyst_ScaleToFillLetterboxButton
Catalyst_EnterFullScreen
Catalyst_Done
Inline_AirPlay
Inline_MediaSelection
Inline_Pause
Inline_Play
Inline_PiP
Inline_SkipBack15
Inline_SkipForward15
Inline_GotoLive
Catalyst_Inline_MediaSelection
Catalyst_Inline_Pause
Catalyst_Inline_Play
Catalyst_Inline_PiP
Catalyst_Inline_SkipBack15
Catalyst_Inline_SkipForward15
Catalyst_Inline_GotoLive
FullScreen_AirPlay
FullScreen_MediaSelection
FullScreen_Pause
FullScreen_Play
FullScreen_PiP
FullScreen_SkipBack15
FullScreen_SkipForward15
FullScreen_GotoLive
FullScreen_StartPreviousContentTransition
FullScreen_StartNextContentTransition
Catalyst_FullScreen_MediaSelection
Catalyst_FullScreen_Pause
Catalyst_FullScreen_Play
Catalyst_FullScreen_PiP
Catalyst_FullScreen_SkipBack15
Catalyst_FullScreen_SkipForward15
Catalyst_FullScreen_GotoLive
Catalyst_FullScreen_StartPreviousContentTransition
Catalyst_FullScreen_StartNextContentTransition
AVMobileImageNameNoImage
com.apple.avkit.images
v16@?0@"UIGraphicsImageRendererContext"8
AVRoutePickerViewCircularAirPlayGlyph
AVRoutePickerViewSquareAirPlayGlyph
VolumeGlyph
mute
half
full
plusL
stateController
T@"CAStateController",R,N,V_stateController
unscaledSize
T{CGSize=dd},N,V_unscaledSize
layoutDirection
Tq,N,V_layoutDirection
rootLayer
T@"CALayer",&,N,V_rootLayer
T@"NSString",R,C,N,V_state
targetSize
T{CGSize=dd},N,V_targetSize
packageName
T@"NSString",R,N,V_packageName
caml
-RTL
v32@?0@"CAState"8Q16^B24
v32@?0@"CALayer"8Q16^B24
classSubstitions
LKStateTransitionElement
LKStateTransition
LKStateSetProperty
LKStateSetValue
LKStateRemoveElement
LKStateRemoveAnimation
LKStateElement
LKStateAddElement
LKStateAddAnimation
LKEventHandler
LKState
com.apple.avkit.caml
prominentPlayButtonContainer
T@"UIView",&,N,V_prominentPlayButtonContainer
T@"AVButton",W,N,V_prominentPlayButton
volumeButtonContainer
T@"UIView",&,N,V_volumeButtonContainer
volumeButton
T@"AVVolumeButtonControl",W,N,V_volumeButton
T@"UIView",R,N,V_contentView
includedControlType
Tq,N,V_includedControlType
volumeButtonMicaPackageStateName
T@"NSString",C,N,V_volumeButtonMicaPackageStateName
T{CGAffineTransform=dddddd},N,V_overrideTransformForProminentPlayButton
T@"NSValue",&,N,V_overrideLayoutMarginsWhenEmbeddedInline
v32@?0@"AVTurboModePlaybackControlsPlaceholderView"8@16@"AVKeyValueChange"24
animations
T@"NSMutableArray",R,N,V_animations
completions
T@"NSMutableArray",R,N,V_completions
*** AVPlayerViewControllerAnimationCoordinator: Animations added to coordinator after animations performed will be ignored.
Td,R,V_interval
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
com.apple.avkit.AVTimer.timer %p
com.apple.avkit.AVTimer.manage %p
AVSecondScreenConnectionVideoDisplaySizeChanged
AVSecondScreenConnectionReadyDidChangeNotification
AVSecondScreenConnectionActiveDidChangeNotification
AVSecondScreenConnectionPlayingDidChangeNotification
AVSecondScreenConnectionPreferredDisplayCriteriaDidChangeNotification
active
TB,N,GisActive,V_active
connectedSecondScreen
T@"AVSecondScreen",W,N,V_connectedSecondScreen
preferredDisplayCriteria
T@"AVDisplayCriteria",&,N,V_preferredDisplayCriteria
maximumVideoResolution
T{CGSize=dd},N,V_maximumVideoResolution
ready
TB,N,GisReady,V_ready
playing
TB,N,GisPlaying,V_playing
requiresTVOutScreen
TB,N,V_requiresTVOutScreen
T@"UIView",&,N,V_contentView
T@"AVSecondScreenViewController",&,N,V_secondScreenViewController
T@"AVPlayer",R,N,V_player
T@"AVPlayerLayer",R,W,N,V_playerLayer
TB,R,N,GisReadyToConnect,V_readyToConnect
debugAssistant
T@"AVSecondScreenDebugAssistant",R,N,V_debugAssistant
-[AVSecondScreenConnection _currentItemIsReadyToPlayVideoOrLoadingWhileActive]
isReadyToPlayOrLoadingWhileActive
-[AVSecondScreenConnection _determineIsReadyToConnect]
availableVideoDynamicRanges
v16@?0@"AVSecondScreenConnection"8
currentItem.asset
currentItem.hasVideo
currentItem.status
airPlayVideoActive
externalPlaybackActive
allowsExternalPlayback
-[AVSecondScreenConnection setPlayerLayer:]
-[AVSecondScreenConnection dealloc]
T@"AVDisplayCriteria",&,D,N
TB,D,N,GisReadyToConnect
TB,D,N,GisPlaying
TB,D,N
keyValueObservationController
T@"AVObservationController",&,N,V_keyValueObservationController
v32@?0@"AVPlayerVolumeController"8@16@"AVKeyValueChange"24
playerController.volume
appearanceProxy
T@"AVPresentationContainerViewAppearanceProxy",R,N,V_appearanceProxy
wantsAppearanceConfigValues
TB,N,V_wantsAppearanceConfigValues
actualView
T@"UIView",W,N,V_actualView
cornerCurve
T@"NSString",&,N,V_cornerCurve
maskedCorners
TQ,N,V_maskedCorners
cornerRadius
Td,N,V_cornerRadius
backgroundColor
T@"UIColor",&,N,V_backgroundColor
clipsToBounds
TB,N,V_clipsToBounds
T@"AVPresentationContainerViewLayer",R,D,N
counterRotatingContentView
TB,N,GisCounterRotatingContentView,V_counterRotatingContentView
beingPresented
TB,N,GisBeingPresented,V_beingPresented
beingDismissed
TB,N,GisBeingDismissed,V_beingDismissed
fromOrientation
Tq,N,V_fromOrientation
toOrientation
Tq,N,V_toOrientation
willBeginOrientationChange
TB,N,V_willBeginOrientationChange
presentationContainerContentView
T@"UIView",W,N,V_presentationContainerContentView
T@"AVPresentationContainerViewAppearanceProxy",R,N
lineSeparator
T@"NSString",C,N,V_lineSeparator
headerBodySeparator
T@"NSString",C,N,V_headerBodySeparator
bodyLengthKey
T@"NSString",C,N,V_bodyLengthKey
compressionMethodKey
T@"NSString",C,N,V_compressionMethodKey
lineSeparatorData
T@"NSData",&,N,V_lineSeparatorData
headerBodySeparatorData
T@"NSData",&,N,V_headerBodySeparatorData
uncompressedBodyData
T@"NSData",&,N,V_uncompressedBodyData
isIncomplete
TB,R,N,V_isIncomplete
version
T@"NSString",R,N,V_version
headers
T@"NSArray",R,N,V_headers
expectedBodyLength
Tq,R,N,V_expectedBodyLength
rawBodyData
T@"NSData",R,N,V_rawBodyData
extraData
T@"NSData",R,N,V_extraData
uniqueHeaders
repeatedHeaders
T@"NSArray",R,N
bodyAsUTF8Text
bodyAsJSON
T@,R,N
bodyAsJSONDictionary
-[AVAirMessageParts decompressBodyUsingNamedAlgorithm:]
-[AVAirMessageParts decompressBodyUsingAlgorithm:]
-[AVAirMessageParts bodyAsJSON]
airMessage
airMessageParser
T@"AVMessageParser",R,N
-[AVAirMessageParts(AVAirMessages) airMessage]
controlsLayoutView
T@"AVLayoutView",R,N,V_controlsLayoutView
detachedExtraContentLayoutView
T@"AVLayoutView",&,N,V_detachedExtraContentLayoutView
liveBroadcastLabel
T@"AVLabel",R,N,V_liveBroadcastLabel
liveBroadcastScrubberLabel
T@"AVLabel",R,N,V_liveBroadcastScrubberLabel
embeddedExtraContentContainer
T@"AVTouchIgnoringView",R,N,V_embeddedExtraContentContainer
scrubInstructionsLabel
T@"UILabel",R,N,V_scrubInstructionsLabel
detachedScrubInstructionsBackdropLabel
T@"AVLabel",R,N,V_detachedScrubInstructionsBackdropLabel
scrubInstructionsTimer
T@"NSTimer",W,N,V_scrubInstructionsTimer
scrubberValueWhenScrubInstructionsTimerBegan
Tf,N,V_scrubberValueWhenScrubInstructionsTimerBegan
canShowScrubInstructions
flexibleViewAfterRoutePickerView
T@"AVTouchIgnoringView",&,N,V_flexibleViewAfterRoutePickerView
flexibleViewAfterSkipForwardButtons
T@"AVTouchIgnoringView",&,N,V_flexibleViewAfterSkipForwardButtons
showingScrubInstructions
TB,N,GisShowingScrubInstructions,V_showingScrubInstructions
animatingScrubInstructions
TB,N,GisAnimatingScrubInstructions,V_animatingScrubInstructions
T@"<AVTransportControlsViewDelegate>",W,N,V_delegate
doubleRowLayoutEnabled
TB,N,GisDoubleRowLayoutEnabled,V_doubleRowLayoutEnabled
showsLiveStreamingControls
TB,N,V_showsLiveStreamingControls
liveStreamingControlsIncludeScrubber
TB,N,V_liveStreamingControlsIncludeScrubber
minimumRequiredWidth
Td,R,N,V_minimumRequiredWidth
scrubber
T@"AVScrubber",R,N,V_scrubber
elapsedTimeLabel
T@"AVLabel",R,N,V_elapsedTimeLabel
timeRemainingLabel
T@"AVLabel",R,N,V_timeRemainingLabel
standardPlayPauseButton
T@"AVButton",R,N,V_standardPlayPauseButton
skipForwardButton
T@"AVButton",R,N,V_skipForwardButton
skipBackButton
T@"AVButton",R,N,V_skipBackButton
startLeftwardContentTransitionButton
T@"AVButton",R,N,V_startLeftwardContentTransitionButton
startRightwardContentTransitionButton
T@"AVButton",R,N,V_startRightwardContentTransitionButton
routePickerView
T@"AVPlaybackControlsRoutePickerView",R,N,V_routePickerView
mediaSelectionButton
T@"AVButton",R,N,V_mediaSelectionButton
customItems
T@"NSArray",C,N,V_customItems
singleRowViews
doubleRowViews
PLAYBACK_CONTROLS_VIEW_CONTROLLER_SCRUB_INSTRUCTIONS_SLIDE_UP_TITLE_LABEL_TEXT
-[AVTransportControlsView initWithFrame:styleSheet:]
Skip To Previous
Skip To Next
Skip Backward
Skip Forward
Play/Pause
Media Selection
detatchedExtraContentStackView
Live
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
Live Broadcast
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_BROADCAST_LABEL_TEXT
Time Remaining
v16@?0@"NSString"8
Time Elapsed
@"AVLabel"24@?0@"NSString"8@"NSString"16
AVKitOwner
T@,W,N,V_AVKitOwner
behaviorsAndBehaviorContexts
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
v16@?0@8
v16@?0@"<AVBehaviorContext>"8
v16@?0@"<AVBehavior>"8
behaviors
-[UIWindowScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
None
B24@?0@"UIWindow"8@"NSDictionary"16
TVOut
wireless
-[UIScene(AVSecondScreenAdditions) _avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:]
B24@?0@"UIScene"8@"NSDictionary"16
TB,N,V_wasInitiallyInteractive
hasAVKitAnimator
TB,N,V_hasAVKitAnimator
wasCancelledWithInactiveScene
TB,N,V_wasCancelledWithInactiveScene
presenterSupportedOrientations
TQ,N,V_presenterSupportedOrientations
finalInterfaceOrientation
Tq,N,V_finalInterfaceOrientation
isRotated
interfaceRotation
T{CGAffineTransform=dddddd},R,N
counterRotationTransform
T@"<AVHomeIPCameraActionButtonHandling>",W,N,V_delegate
presentationSize
T{CGSize=dd},N,V_presentationSize
muted
TB,N,GisMuted,V_muted
AVPlaybackControlsControllsShowsLoadingIndicatorNotification
AVPlaybackControlsControllerShowsLoadingIndicatorValueKey
playbackControlsView
T@"AVPlaybackControlsView",&,N,V_playbackControlsView
turboModePlaybackControlsPlaceholderView
T@"AVTurboModePlaybackControlsPlaceholderView",W,N,V_turboModePlaybackControlsPlaceholderView
nowPlayingInfoControllerIfLoaded
T@"AVNowPlayingInfoController",&,N,V_nowPlayingInfoControllerIfLoaded
playbackControlsObservationController
T@"AVObservationController",&,N,V_playbackControlsObservationController
timeResolver
T@"AVPlayerControllerTimeResolver",&,N,V_timeResolver
elapsedTimeFormatter
T@"AVTimeFormatter",R,N,V_elapsedTimeFormatter
remainingTimeFormatter
T@"AVTimeFormatter",R,N,V_remainingTimeFormatter
routePickerAlertController
T@"UIAlertController",W,N,V_routePickerAlertController
routeDetectorCoordinator
T@"AVRouteDetectorCoordinator",&,N,V_routeDetectorCoordinator
AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
T@,&,N,V_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
loadingIndicatorTimer
T@"NSTimer",W,N,V_loadingIndicatorTimer
collapseExpandSliderAnimator
T@"UIViewPropertyAnimator",W,N,V_collapseExpandSliderAnimator
volumeController
T@"<AVVolumeController>",&,N,V_volumeController
playerMuteFadeAnimationID
T@"NSUUID",&,N,V_playerMuteFadeAnimationID
showsMediaSelectionButton
showsSkipButtons
showsStartContentTransitionButtons
showsProminentPlayButton
playButtonsShowPauseGlyph
prominentPlayButtonCanShowPauseGlyph
showsRoutePickerView
showsTransportControls
canShowLoadingIndicator
seekingEnabled
TB,R,N,GisSeekingEnabled
canIncludeVideoGravityButton
TB,N,V_canIncludeVideoGravityButton
pendingOrientationChange
T@"NSNumber",&,N,V_pendingOrientationChange
userInteracting
TB,R,N,GisUserInteracting
hasStartedUpdates
TB,N,V_hasStartedUpdates
needsTimeResolver
coveringWindow
TB,N,GisCoveringWindow,V_coveringWindow
TB,R,N,GisFullScreen
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
TB,N,V_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
hasBecomeReadyToPlay
TB,N,V_hasBecomeReadyToPlay
TB,N,V_multipleRoutesDetected
minimumTime
maximumTime
loadingIndicatorTimerDelay
Td,N,V_loadingIndicatorTimerDelay
resumingUpdates
TB,N,GisResumingUpdates,V_resumingUpdates
prefersMuted
TB,N,V_prefersMuted
playbackSuspendedForScrubbing
TB,N,GisPlaybackSuspendedForScrubbing,V_playbackSuspendedForScrubbing
timeControlStatus
Tq,N,V_timeControlStatus
hasSeekableLiveStreamingContent
TB,N,V_hasSeekableLiveStreamingContent
shouldIgnoreTimeResolverUpdates
TB,N,V_shouldIgnoreTimeResolverUpdates
hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
TB,N,V_hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
videoGravityButtonType
Tq,N,V_videoGravityButtonType
playbackViewFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_playbackViewFrame
TB,N,GisVideoScaled,V_videoScaled
uniqueIdentifer
T@"NSString",R,N,V_uniqueIdentifer
windowSceneSessionIdentifier
T@"NSString",&,N,V_windowSceneSessionIdentifier
playbackControlsVisibilityTimer
T@"NSTimer",&,N,V_playbackControlsVisibilityTimer
userInteractingCount
TQ,N,V_userInteractingCount
hidingItemsForTransition
TB,N,GisHidingItemsForTransition,V_hidingItemsForTransition
showingPlaybackControls
TB,N,GisShowingPlaybackControls,V_showingPlaybackControls
T@"AVPlayerController",W,N,V_playerController
playerViewControllerIsBeingTransitionedWithResizing
TB,N,V_playerViewControllerIsBeingTransitionedWithResizing
playerViewControllerIsPresentingFullScreen
TB,N,V_playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
TB,N,V_playerViewControllerIsPresentedFullScreen
playerViewControllerHasInvalidViewControllerHierarchy
TB,N,V_playerViewControllerHasInvalidViewControllerHierarchy
shouldEnterFullScreenWhenPlaybackBegins
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,V_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
TB,N,V_volumeControlsCanShowSlider
showsPictureInPictureButton
TB,N,V_showsPictureInPictureButton
TB,N,V_hasCustomPlaybackControls
TB,N,V_showsVideoGravityButton
showsDoneButtonWhenFullScreen
TB,N,V_showsDoneButtonWhenFullScreen
playbackControlsIncludeStartContentTransitionButtons
TB,N,V_playbackControlsIncludeStartContentTransitionButtons
TB,N,V_playbackControlsShouldControlSystemVolume
forcePlaybackControlsHidden
TB,N,V_forcePlaybackControlsHidden
startLeftwardContentTransitionButtonEnabled
TB,N,GisStartLeftwardContentTransitionButtonEnabled,V_startLeftwardContentTransitionButtonEnabled
startRightwardContentTransitionButtonEnabled
TB,N,GisStartRightwardContentTransitionButtonEnabled,V_startRightwardContentTransitionButtonEnabled
contentTransitionAction
T@?,C,N,V_contentTransitionAction
pictureInPictureController
T@"AVPictureInPictureController",&,N,V_pictureInPictureController
T@"AVSecondScreenContentViewConnection",&,N,V_secondScreenConnection
tapGestureRecognizersCanReceiveTouches
TB,N,V_canHidePlaybackControls
popoverIsBeingPresented
TB,N,GisPopoverBeingPresented,V_popoverIsBeingPresented
-[AVPlaybackControlsController _updateSecondScreenConnectionReadyToConnect]
readyToConnect
v16@?0@"AVNowPlayingInfoController"8
v32@?0@8@16@"AVKeyValueChange"24
v32@?0@"AVPlaybackControlsController"8@16@"NSNotification"24
v32@?0@"AVPlaybackControlsController"8@16@"AVKeyValueChange"24
playerController.hasVideo
playerController.loadedTimeRanges
volumeController.changingVolume
v24@?0@"AVPlaybackControlsController"8@"AVDisplayLink"16
playerController.currentAssetIfReady
-[AVPlaybackControlsController _autoHideControlsAfterDelay:]
-[AVPlaybackControlsController showPlaybackControls:immediately:]
_showingPlaybackControls
-[AVPlaybackControlsController flashPlaybackControlsWithDuration:]
-[AVPlaybackControlsController _observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:]
-[AVPlaybackControlsController setShowsTimecodes:]
showsTimecodes
-[AVPlaybackControlsController setPlaybackControlsShouldControlSystemVolume:]
playbackControlsShouldControlSystemVolume
-[AVPlaybackControlsController setShowsVideoGravityButton:]
showsVideoGravityButton
-[AVPlaybackControlsController setUpdatesNowPlayingInfoCenter:]
updatesNowPlayingInfoCenter
-[AVPlaybackControlsController setVolumeControlsCanShowSlider:]
volumeControlsCanShowSlider
-[AVPlaybackControlsController setCanIncludePlaybackControlsWhenInline:]
canIncludePlaybackControlsWhenInline
-[AVPlaybackControlsController setHasCustomPlaybackControls:]
hasCustomPlaybackControls
-[AVPlaybackControlsController setShowsPlaybackControls:]
showsPlaybackControls
-[AVPlaybackControlsController setShowsMinimalPlaybackControlsWhenEmbeddedInline:]
showsMinimalPlaybackControlsWhenEmbeddedInline
v16@?0@"AVPlaybackControlsController"8
playerController.usesExternalPlaybackWhileExternalScreenIsActive
-[AVPlaybackControlsController dealloc]
-[AVPlaybackControlsController initWithPlayerViewController:]
playbackControlsView.showsPlaybackControls
timeResolver.maxTime
timeResolver.minTime
timeResolver.targetTime
playerController.hasMediaSelectionOptions
pictureInPictureController.pictureInPictureActive
playerController.allowsExternalPlayback
debugLabel
T@"UILabel",R,N,V_debugLabel
T@"AVSecondScreenPlayerLayerView",&,N,V_playerLayerView
initialScreenBoundsHint
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_initialScreenBoundsHint
sourcePlayerLayer
T@"AVPlayerLayer",W,N,V_sourcePlayerLayer
-[AVSecondScreenViewController setPlayingOnSecondScreen:]
playingOnSecondScreen
activeSourcePlayerLayer
T@"AVPlayerLayer",W,N,V_activeSourcePlayerLayer
v32@?0@"AVSecondScreenPlayerLayerView"8@16@"AVKeyValueChange"24
layer.videoRect
-[AVSecondScreenViewController dealloc]
completionSpeed
completionCurve
Tq,N,V_state
displayLink
T@"AVDisplayLink",&,N,V_displayLink
activeTransition
T@"AVTransition",&,N,V_activeTransition
gestureTracker
T@"AVInteractiveTransitionGestureTracker",R,N,V_gestureTracker
T@"AVPresentationController",W,N,V_presentationController
transitionDidBeginHandler
T@?,C,N,V_transitionDidBeginHandler
easeInFunction
T@"CAMediaTimingFunction",&,N,V_easeInFunction
easeOutFunction
T@"CAMediaTimingFunction",&,N,V_easeOutFunction
touchGravity
T{CGPoint=dd},N,V_touchGravity
T@"AVPresentationContext",R,W,N
T@"<AVTransitionControllerDelegate>",W,N,V_delegate
interactiveGestureTracker
T@"<AVTransitionDriver>",&,N,V_interactiveGestureTracker
interactionView
T@"UIView",W,N,V_interactionView
v24@?0@"AVTransitionController"8@"AVDisplayLink"16
-[AVTransitionController animationEnded:]
-[AVTransitionController startInteractiveTransition:]
-[AVTransitionController wantsInteractiveStart]
wantsInteractiveStart
T@"AVSampleBufferDisplayLayerPlayerController",&,N,V_playerController
placeholderLayer
T@"AVPictureInPictureIndicatorLayer",&,N,V_placeholderLayer
sbdlHostView
T@"AVPictureInPictureSampleBufferDisplayLayerHostView",&,N,V_sbdlHostView
sourceLayerHost
T@"CALayerHost",W,N,V_sourceLayerHost
sourceContextId
TI,N,V_sourceContextId
lastKnownRenderSize
T{CGSize=dd},N,V_lastKnownRenderSize
sourceLayer
T@"AVSampleBufferDisplayLayer",R,N,V_sourceLayer
PIPModeEnabled
TB,N,GisPIPModeEnabled,V_PIPModeEnabled
v32@?0@"AVPictureInPictureSampleBufferDisplayLayerView"8@16@"AVKeyValueChange"24
bounds
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
AVPlayerControllerDidBeginScanningNotification
AVPlayerControllerDidEndScanningNotification
AVPlayerControllerScanningDirectionKey
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
currentAssetIfReady
T@"AVAsset",&,N,V_currentAssetIfReady
assetInspectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
assetBeingPrepared
T@"AVAsset",&,N,V_assetBeingPrepared
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
readyToPlay
TB,R,N,GisReadyToPlay
timing
T@"AVValueTiming",&,N,V_timing
minTiming
T@"AVValueTiming",&,N,V_minTiming
maxTiming
T@"AVValueTiming",&,N,V_maxTiming
currentAudioTrack
T@"AVAssetTrack",&,N,V_currentAudioTrack
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
seekToTimeInternal
T{?=qiIq},V_seekToTimeInternal
seekToTime
Td,N,V_seekToTime
metadata
T@"NSDictionary",&,N,V_metadata
contentChapters
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
hasProtectedContent
TB,N,V_hasProtectedContent
availableMetadataFormats
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
rateBeforeScrubBegan
Td,N,V_rateBeforeScrubBegan
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
canTogglePictureInPicture
TB,N,V_canTogglePictureInPicture
hasBegunInspection
TB,N,V_hasBegunInspection
reduceResourceUsageAssertion
T@"BSSimpleAssertion",&,N
playerLayerForReducingResources
T@"AVPlayerLayer",W,N,V_playerLayerForReducingResources
seekTimer
T@"NSObject<OS_dispatch_source>",R,N
currentDate
T@"NSDate",R,N
currentOrEstimatedDate
touchBarRequiresLinearPlayback
error
T@"NSError",R,N
availableTrackAssociationTypes
mediaCharacteristics
mediaType
languageCode
commonMetadata
nominalFrameRate
assetCache
tracks
availableChapterLocales
availableMediaCharacteristicsWithMediaSelectionOptions
streaming
-[AVPlayerController _updateRateForScrubbingAndSeeking]
Reducing Resources for Picture in Picture
AVPlayerControllerResourceReductionIdentifier
v16@?0@"BSSimpleAssertion"8
-[AVPlayerController endReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController beginReducingResourcesForPictureInPicturePlayerLayer:]
shouldRemovePlayer
PIPStashPeakBitRate
PIPStashBufferDuration
-[AVPlayerController externalPlaybackAirPlayDeviceLocalizedName]
EXTERNAL_PLAYBACK_DEVICE_NAME_NIL
-[AVPlayerController updateMinMaxTiming]
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController actuallySeekToTime]
com.apple.motion.notserializable
-[AVPlayerController setVolume:]
-[AVPlayerController setPlaying:]
v16@?0d8
-[AVPlayerController setRate:]_block_invoke
com.apple.videos
isPiPAvailable
audioFormats
player.externalPlaybackActive
player.rate
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
player.currentItem.hasEnabledVideo
player.currentItem.hasEnabledAudio
hasLiveStreamingContent
player.currentItem.seekableTimeRanges
q24@?0@"AVChapter"8@"AVChapter"16
-[AVPlayerController _queuePlayer]
v16@?0@"AVPlayerController"8
currentAudioMediaSelectionOption
hasEnabledAudio
player.currentItem.duration
player.currentItem.asset
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
player.currentItem.presentationSize
-[AVPlayerController dealloc]
v32@?0@"AVPlayerController"8@16@"NSNotification"24
-[AVPlayerController startInspectionIfNeeded]_block_invoke_3
-[AVPlayerController startInspectionIfNeeded]_block_invoke
shouldRestoreRate
delegateCanResumeAfterInterruption
-[AVPlayerController initWithPlayer:]
com.apple.avkit.playerControllerAssetInspectionQueue
com.apple.avkit.seekQueue
playingOnExternalScreen
hasEnabledVideo
hasVideo
externalPlaybackType
player.airPlayVideoActive
player.allowsExternalPlayback
canSeek
player.currentItem.canPlayFastReverse
player.currentItem.canPlayFastForward
seekableTimeRanges
player.timeControlStatus
completelySeekable
player.currentItem.seekableTimeRangesLastModifiedTime
player.currentItem.liveUpdateInterval
player.currentItem.hasVideo
contentDuration
player.currentItem.forwardPlaybackEndTime
forwardPlaybackEndTime
player.currentItem.reversePlaybackEndTime
reversePlaybackEndTime
player.muted
player.volume
player.error
player.currentItem.status
player.status
usesExternalPlaybackWhileExternalScreenIsActive
hasReadableTimecodes
timecodeController
T@"AVTimecodeController",R,N
internalDelegate
T@"<AVPlayerControllerDelegate>",W,N
v32@?0{?=qiIq}8
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
externalPlaybackIndicatorView
T@"AVExternalPlaybackIndicatorView",R,N,V_externalPlaybackIndicatorView
unsupportedContentIndicatorView
T@"UIImageView",R,N,V_unsupportedContentIndicatorView
audioOnlyIndicatorView
T@"UIImageView",R,N,V_audioOnlyIndicatorView
externalPlaybackIndicatorViewIfLoaded
T@"AVExternalPlaybackIndicatorView",R,N
unsupportedContentIndicatorViewIfLoaded
T@"UIImageView",R,N
audioOnlyIndicatorViewIfLoaded
videoContentInset
T{UIEdgeInsets=dddd},N,V_videoContentInset
targetVideoGravities
T@"NSMutableDictionary",R,N,V_targetVideoGravities
automaticVideoGravity
T@"NSString",C,N,V_automaticVideoGravity
backdropLayerView
T@"AVCABackdropLayerView",R,N,V_backdropLayerView
externalPlaybackIndicatorTitle
T@"NSString",C,N,V_externalPlaybackIndicatorTitle
externalPlaybackIndicatorSubtitle
T@"NSString",C,N,V_externalPlaybackIndicatorSubtitle
scrollingObserver
T@"AVScrollViewObserver",R,N,V_scrollingObserver
T@"<AVPlayerViewControllerContentViewDelegate>",W,N,V_delegate
isCoveringWindow
playbackContentContainerView
T@"UIView<AVPlaybackContentContainer>",&,N,V_playbackContentContainerView
layoutClass
T@"NSNumber",R,N
inAWindowAndNotScrolling
TB,R,N,GisInAWindowAndNotScrolling
TB,R,N,GisScrolling
TB,R,N,GisScrollingQuickly
shouldLoadPlaybackControlsHint
TB,N,V_shouldLoadPlaybackControlsHint
canAutomaticallyZoomLetterboxVideos
TB,N,V_canAutomaticallyZoomLetterboxVideos
edgeInsetsForLetterboxedContent
T{UIEdgeInsets=dddd},N,V_edgeInsetsForLetterboxedContent
interactiveContentOverlayView
T@"UIView",&,N,V_interactiveContentOverlayView
iAdPreRollView
T@"UIView",R,N,V_iAdPreRollView
iAdPreRollViewIfLoaded
T@"AVPlaybackControlsView",R,N,V_playbackControlsView
T@"AVTurboModePlaybackControlsPlaceholderView",R,W,N,V_turboModePlaybackControlsPlaceholderView
styleSheetShouldUseCompactFullScreenItemSize
TB,N,V_styleSheetShouldUseCompactFullScreenItemSize
-[AVPlayerViewControllerContentView setShowsAudioOnlyIndicator:]
showsAudioOnlyIndicator
AudioOnlyIndicator
UnsupportedContentIndicator
com.apple.avkit.SharedPreferences
trackingStartTime
Td,N,V_trackingStartTime
wasLongPressed
TB,N,V_wasLongPressed
wasForcePressTriggered
TB,N,V_wasForcePressTriggered
horizontalTranslationOfLongPress
Td,N,V_horizontalTranslationOfLongPress
previousHorizontalPositionOfLongPress
T@"NSNumber",&,N,V_previousHorizontalPositionOfLongPress
force
Td,N,V_force
maximumForceSinceTrackingBegan
Td,N,V_maximumForceSinceTrackingBegan
userInteractionGestureRecognizer
T@"AVUserInteractionObserverGestureRecognizer",&,N,V_userInteractionGestureRecognizer
backgroundEffectView
T@"UIVisualEffectView",&,N,V_backgroundEffectView
treatsForcePressAsLongPress
TB,N,V_treatsForcePressAsLongPress
tintEffectStyle
Tq,N,V_tintEffectStyle
usesBackgroundEffectViewForTextOnlyButtons
TB,N,V_usesBackgroundEffectViewForTextOnlyButtons
forceThreshold
Td,N,V_forceThreshold
multipleTouchesEndsTracking
TB,N,V_multipleTouchesEndsTracking
imageName
T@"NSString",C,N,V_imageName
fullScreenImageName
T@"NSString",C,N,V_fullScreenImageName
inlineImageName
T@"NSString",C,N,V_inlineImageName
fullScreenAlternateImageName
T@"NSString",C,N,V_fullScreenAlternateImageName
inlineAlternateImageName
T@"NSString",C,N,V_inlineAlternateImageName
micaSnapshotAlpha
Td,N,V_micaSnapshotAlpha
disablesHighlightWhenLongPressed
TB,N,V_disablesHighlightWhenLongPressed
clampsHitRectInsetsWhenContainedInScrollableView
TB,N,V_clampsHitRectInsetsWhenContainedInScrollableView
uniqueIdentifier
T@"NSString",C,N,V_uniqueIdentifier
displayPriority
TQ,N,V_displayPriority
displayPartnerAttributes
T@"AVLayoutItemAttributes",W,V_displayPartnerAttributes
hasFlexibleContentSize
TB,N,V_hasFlexibleContentSize
prefersSecondaryMaterialOverlay
TB,N,V_prefersSecondaryMaterialOverlay
minimumSize
T{CGSize=dd},N,V_minimumSize
trailingInterItemSpace
Td,N,V_trailingInterItemSpace
accessibilityIdentifier
T@"NSString",C,N,V_accessibilityIdentifier
nextAttributesInLayoutOrder
T@"AVLayoutItemAttributes",&,N,V_nextAttributesInLayoutOrder
nextAttributesInPriorityOrder
T@"AVLayoutItemAttributes",W,N,V_nextAttributesInPriorityOrder
displayPartner - %@
{minSize: %@ trailingSpace: %f isCollapsed: %@ isIncluded: %@ hasFlexibleContentSize: %@ displayPriority: %ld accessibilityID: %@ %@}
loadingButtonView
T@"AVLoadingButtonView",&,N,V_loadingButtonView
linkFired
T@?,C,N,V_linkFired
T@"CADisplayLink",&,N,V_displayLink
T@,W,N,V_observer
Td,N,V_startTime
runningTime
flattenedArrangedSubviewsInLayoutOrder
T@"NSMutableArray",&,N,V_flattenedArrangedSubviewsInLayoutOrder
currentStackLayout
T@"AVCustomStackLayout",&,N,V_currentStackLayout
layoutDirty
TB,N,GisLayoutDirty,V_layoutDirty
T@"AVCABackdropLayerView",&,N,V_backdropLayerView
secondaryMaterialOverlayView
T@"UIVisualEffectView",&,N,V_secondaryMaterialOverlayView
stackLayoutNeedsUpdate
TB,N,V_stackLayoutNeedsUpdate
targetViewForSecondaryMaterialOverlayView
T@"UIView<AVLayoutViewItem>",&,N,V_targetViewForSecondaryMaterialOverlayView
arrangedSubviews
T@"NSArray",R,C,N,V_arrangedSubviews
contentLayoutMargins
T{NSDirectionalEdgeInsets=dddd},N
shapeStyle
TQ,N,V_shapeStyle
q24@?0@"UIView<AVLayoutViewItem>"8@"UIView<AVLayoutViewItem>"16
v32@?0@"UIView<AVLayoutViewItem>"8Q16^B24
<%@: %p> - %@
v32@?0@"NSValue"8Q16^B24
defaultAudioControls
T@"NSArray",R,N,V_defaultAudioControls
defaultDisplayModeControls
T@"NSArray",R,N,V_defaultDisplayModeControls
keyboardHeight
Td,N,V_keyboardHeight
keyboardUIAvoidanceAnimator
T@"UIViewPropertyAnimator",R,N,V_keyboardUIAvoidanceAnimator
needsIntialLayout
TB,N,V_needsIntialLayout
playbackControlsVisibilityAnimator
T@"UIViewPropertyAnimator",&,N,V_playbackControlsVisibilityAnimator
mostRecentAnimationCompletionsID
T@"NSUUID",&,N,V_mostRecentAnimationCompletionsID
topAreaLayoutGuideExpanded
TB,N,GisTopAreaLayoutGuideExpanded,V_topAreaLayoutGuideExpanded
includesTransportControls
includesDisplayModeControlsContainer
includesCustomDisplayModeControls
includesAudioControlsContainer
includesCustomAudioControls
prefersDoneButtonIncluded
TB,N,V_prefersDoneButtonIncluded
prefersVideoGravityButtonIncluded
TB,N,V_prefersVideoGravityButtonIncluded
prefersFullScreenButtonIncluded
TB,N,V_prefersFullScreenButtonIncluded
prefersPiPButtonIncluded
TB,N,V_prefersPiPButtonIncluded
includedContainers
Tq,R,N,V_includedContainers
volumeControlsContainer
T@"AVTouchIgnoringView",R,N,V_volumeControlsContainer
playbackControlsContainer
T@"AVTouchIgnoringView",R,N,V_playbackControlsContainer
screenModeControls
T@"AVLayoutView",R,N,V_screenModeControls
volumeControls
T@"AVLayoutView",R,N,V_volumeControls
prominentPlayButtonContainerView
T@"AVLayoutView",R,N,V_prominentPlayButtonContainerView
transportControlsContainerView
T@"AVView",R,N,V_transportControlsContainerView
T@"AVButton",R,N,V_doneButton
fullScreenButton
T@"AVButton",R,N,V_fullScreenButton
videoGravityButton
T@"AVButton",R,N,V_videoGravityButton
pictureInPictureButton
T@"AVButton",R,N,V_pictureInPictureButton
customDisplayModeItems
T@"NSArray",R,C,N,V_customDisplayModeItems
T@"AVVolumeButtonControl",R,N,V_volumeButton
volumeSlider
T@"AVVolumeSlider",R,N,V_volumeSlider
customAudioItems
T@"NSArray",R,C,N,V_customAudioItems
T@"AVButton",R,N,V_prominentPlayButton
transportControlsView
T@"AVTransportControlsView",R,N,V_transportControlsView
customMediaItems
T@"NSArray",R,C,N,V_customMediaItems
T@"NSArray",R,C,N,V_customControlItems
T@"AVPlayerViewControllerCustomControlsView",R,N,V_customControlsView
prefersVolumeSliderExpandedAutomatically
TB,N,V_prefersVolumeSliderExpandedAutomatically
visibilityDelegate
T@"<AVPlaybackControlsViewVisibilityDelegate>",W,N,V_visibilityDelegate
showsAudioControls
TB,N,V_showsAudioControls
hasVisibleSubview
v16@?0q8
-[AVPlaybackControlsView updateDisplayControlsVisibilityIncludedButtons:]
self.prefersFullScreenButtonIncluded
self.prefersDoneButtonIncluded
self.prefersVideoGravityButtonIncluded
self.prefersPiPButtonIncluded
v12@?0B8
-[AVPlaybackControlsView setFullScreen:]
-[AVPlaybackControlsView dealloc]
-[AVPlaybackControlsView initWithFrame:styleSheet:]
v32@?0@"AVPlaybackControlsView"8@16@"NSNotification"24
ScreenModeControls
Picture in Picture
Zoom
Full Screen
AVKitAirResponse/1
response-status
Tq,R,N,V_status
localizedDescription
T@"NSString",R,N,V_localizedDescription
-[AVAirMessageResponse bodyData]
%@ status %ld; "%@"
response-description
+[AVAirMessageResponse messageWithVersion:headers:bodyData:]
com.apple.avkit.localizedStringBundleQueue
pipIndicatorLayer
T@"AVPictureInPictureIndicatorLayer",&,N,V_pipIndicatorLayer
customMessage
T@"NSString",C,N,V_customMessage
bounds.origin
position
leadingAnchor
T@"NSLayoutXAxisAnchor",R,N
trailingAnchor
leftAnchor
rightAnchor
topAnchor
T@"NSLayoutYAxisAnchor",R,N
bottomAnchor
widthAnchor
T@"NSLayoutDimension",R,N
heightAnchor
centerXAnchor
centerYAnchor
firstAttributesInLayoutOrder
T@"AVLayoutItemAttributes",R,N,V_firstAttributesInLayoutOrder
firstAttributesInPriorityOrder
T@"AVLayoutItemAttributes",R,W,N,V_firstAttributesInPriorityOrder
playbackState
T@"AVPictureInPicturePlaybackState",C,N,V_playbackState
sbdlObservationController
T@"AVObservationController",&,N,V_sbdlObservationController
pictureInPictureAvailable
TB,N,GisPictureInPictureAvailable,V_pictureInPictureAvailable
TB,N,GisPaused,V_paused
contentTimeRange
T{?={?=qiIq}{?=qiIq}},N,V_contentTimeRange
T@"AVPictureInPictureController",W,N,V_pictureInPictureController
playbackDelegate
T@"<AVPictureInPictureSampleBufferPlaybackDelegate>",W,N,V_playbackDelegate
enqueuedBufferDimensions
T{CGSize=dd},N,V_enqueuedBufferDimensions
v32@?0@"AVSampleBufferDisplayLayerPlayerController"8@16@"AVKeyValueChange"24
v32@?0@"AVSampleBufferDisplayLayerPlayerController"8@16@"NSNotification"24
-[AVSampleBufferDisplayLayerPlayerController seekByTimeInterval:toleranceBefore:toleranceAfter:]
v8@?0
-[AVSampleBufferDisplayLayerPlayerController invalidatePlaybackState]
contentDurationWithinEndTimes
playbackState.timelineDuration
playbackState.timelineRate
AVSBDLPlayerControllerKey
localizedDisplayName
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
T@"AVMediaSelectionOption",R
avkit_autoOption
%@-%@-%@
MEDIA_SELECTION_OPTION_AUTO_TITLE
MEDIA_SELECTION_OPTION_OFF_TITLE
Only access this property on the main queue!
%s Setting: %ld
%s %d
%s playbackCommand: %ld
%s pictureInPictureProxy: %@ reason: %ld
%s pictureInPictureProxy: %@
%s error: %@
Interruption notification: AVPlayerPlaybackWasInterruptedNotification player.rate: %.1f userinfo: %@
%s canStartAutomaticallyWhenEnteringBackground: %s isFullScreen - %s alwaysStartsAutomaticallyWhenEnteringBackground - %s allowsPictureInPicturePlayback - %s playerController.isPlaying - %s status != prohibited - %s
%s %@ --> %@
_sceneActivationState == %ld for start pictureinpicture
%s Removing channel from active list (%@)
%s unable to receive message : %{public}@
%s unexpectedly received a response -- expected a message only
%s I just received something, I know not what
%s Unexpectedly received object from inactive channel (%@)
%s responding with result %d
%s %{public}@
%s new channel %@; activeChannels has %@
%s received message %{public}@
%s Sending all available information for this player item.
%s Sending external metadata (%ld items)
%s Result of sending external metadata: %ld [%{public}@]
%s mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s Skipped setting identical option.
%s Changing MACaptionAppearanceDisplayType: %ld -> %ld
%s Enabling automatic display type because receiver changed captions to forced-only.
%s Persisting preferences for remote legible option change: %{public}@ -> %{public}@
%s Selected legible option: %{public}@ 
%s Selected audible option: %{public}@ 
*** %s Received a forced-only media selection (%{public}@) when display type was NOT forced-only (was %ld). mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup: %d. ***
*** %s Received a non-forced-only media selection (%{public}@) from automatic media selection when display type was forced-only. ***
%s LegibleMediaSelectionOptions: %{public}@
%s AudioMediaSelectionOptions: %{public}@
*** %s must be called on main thread. ***
%s subclass: %@
Cannot unmute when muting.
Cannot mute when unmuting.
Cannot reset when not tracking.
Cannot continue if still waiting.
Cannot cancel when not tracking.
Cannot finish when not tracking.
Began tracking when already tracking.
Recognized pan gesture without enabling pan to dismiss.
Recognized pinch gesture without enabling pinch to present or pinch to dismiss.
Pinch to present and pinch to dismiss cannot be simultaneously enabled.
%s %@ %ld
%s %@ %@
didUpdateTXTRecordData
didStop resolution request %@
didNotResolve %@
didNotResolve %@ due to timeout!
didResolveAddress %@
%s localAirPlayReceiverPairingIdentity = %@
Found netService for the current AirPlay device; posting .DidResolveAirPlayDeviceNetServiceNotification..
willResolve %@
didRemoveService %@
didFindService %@
didNotSearch (errorDict = %{public}@)
%s %@ ===> %@
%s failed to get the input/output streams!
%s current device UID = %{public}@; service identifier = %{public}@
%s %p getting device info...
%s have device info and device. Getting more information...
AppleTV pairedDeviceRef = %@
_updateAirPlayPairedDeviceAsync: first grouped device is not AppleTV (%@)
_updateAirPlayPairedDeviceAsync: grouped devices count != 1
_updateAirPlayPairedDeviceAsync: no grouped devices: localDevice = %@
_updateAirPlayPairedDeviceAsync failed; error = %{public}@
%s done.
%s getActiveOrigin: %@, %@
%s have [active] device info. Getting more information...
[active] AppleTV pairedDeviceRef = %@
[active] first grouped device is not AppleTV (%@)
[active] grouped devices count != 1
[active] no grouped devices; activeDevice = %@
%s [active] done.
Found service for the current AirPlay device! Posting AVBonjourServiceClientDidResolveAirPlayDeviceNetServiceNotification..
delegate has not been set!
Stopping discovery for %{public}@
Beginning discovery for %{public}@...
%s kMRDeviceInfoDidChangeNotification received; note = %{public}@
%s AVExternalPlaybackMonitorAirPlayVideoActiveDidChangeNotification received; note = %{public}@
Pause command
Stop command
Play command
Toggle play pause command
Next track command
Can not seek chapter forward; skipping forward %.2f seconds instead.
Previous track command
Can not seek chapter backward; skipping backward %.2f seconds instead.
Skip forward command
Skip backward command
Begin fast forward command
End fast forward command
Begin rewind command
End rewind command
Change playback rate command
Seek to playback position command
Enable language option command
Disable language option command
Remote Command Status: %ld
Update now playing info if needed: %d
%s playerController: %@
%s %@ -> %@
Attempted to connect with a screen that is not available.
%s Created second window %p on %@
%s %@ foreground: %d haswindows: %d
%s %{public}@: ErrorOccurred
%s %{public}@: OpenCompleted
%s %{public}@: EndEncountered
%s %{public}@: HasSpaceAvailable
%s %{public}@: HasBytesAvailable
%s inputStream hasBytesAvailable
%s ... but the data couldn't be read
%s message data failed to deserialize
%s unexpected message/response received; delegate not expecting messages
%s an error prevented bytes from being read! (%{public}@)
%s the input data disappeared! the input stream has closed.
%s the input data disappeared! Are multiple clients trying to read from this stream? (status = %d)
%s shutting down streams %p and %p
%s failed to transform response object (%@)
%s failed to transform message object (%@)
%s sending %ld bytes...
%s ...succeeded, now waiting for/reading the response...
%s writing %ld bytes...
%s wrote %ld bytes
%s write error occurred
%s write error: stream closed
%s response never received
%s bye bye
%s Starting event thread..
%s Ending event thread..
%s (call unexpected! message will be dropped)
%s channel = %@; delegate = %@
%s the channel.delegate is already set
%s cannot send message; we don't have a channel to the AirPlay receiver (if there is one).
%s cannot send message yet; please wait for output stream to finish opening!
%s telling channel to sendObject (%@)
%s sendObject completed with status = %d; response message: %@
%s %@ volume HUD for windowScene with ID: %@
%@: It is an error to set the target volume without calling -[AVVolumeController begin/endChangingVolume].
%s pending restore user interface for presentation context dismissal
%s Disabling legible display for picture in picture player layer
Target view should be our own view when the full screen view controller is being transitioned!
Unexpected value for the transition controller's presentedViewController
%s <%{public}@ %p> %@ respond to %{public}@
%s .status: %ld .hasEnabledVideo: %d .hasEnabledAudio: %d
The player controller should have content before calling %@.
It's an error to repeatedly add observers.
Did receive stop command notification.
Already performed initial setup.
%s Attempt to load view when view was already loaded.
Expected only one context for AVPlayerViewControllerBehaviorContext. This is fine, but probably means AVPlayerViewControllerBehaviorContext needs to be refactored
Default playback rates of less than 0.5 are not supported. Ignoring.
%s %@ layoutClass: %ld
%s %@
%s %d %p
%s Did not get a valid video composition.
%@ did not receive a view from its delegate, %@.
%s failed to compress data (%ld/%{public}@): %{public}@
%s failed to serialize %{public}@ to JSON (%{public}@)
%s incoming message type %d is unrecognized!
%s removing unrecognized key '%{public}@'
%s error: json deserialization failed
%s This code has not been updated to handle algorithm %ld!
%s failed to decompress data; algorithm name '%{public}@' is not recognized
%s failed to decompress data (%{public}@ algorithm): %{public}@
%s isAirMessageEnabled %@; global %@; app %@; environ %{public}@
value for '%{public}@' is neither a string nor convertible to one
Don't initialize this unless AVSecondScreenDebugHUDEnabled()!
%s Disabling autorotation for window: %p
%s Enabling autorotation for window: %p
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
%s %s %s
%s value does not implement AVMessageTransformerProtocol
%s value not represented by NSData (%@)
%s ** WARNING: the value of this metadata item %@ has not yet been loaded; we're about to force it
%s ** AVMetadataItem representation has no identifier!
%s The value passed for '%{public}@' is raw data, but we do not expect it. Discarding.
%s Metadata values should not be arrays/dictionaries. Lookin' at you, '%@'.
%s %@ Offset: %@ ActiveOrigin: %@ TransitioningOrigin: %@
Instance %@ attempted content transition while one was already active. Ignoring. %@
Attempt to transition while adjusting bounds.
Invalid state transition from %@ to %@.
This is where the problem is.
Invalid state transition
%s old: %ld --> new: %ld
%s starting for playerController %{public}@
%s failed; status = %d
Invalid track type for frame stepping.
Invalid input base frame time.
%s Calling client completion handler with playbackState: %@
%s isLongFormVideoApp = %i
%s Current routing session: %@, routingSessionManager.prefersLikelyDestinationsOverCurrentRoutingSession: %i
%s Using current routing session. Calling client completion handler with playbackState: %@
%s Not using current routing session. AVRoutingSessionManager has %lu likely external destinations: %@
%s Showing medium confidence picker.
%s No likely external destinations. Calling client completion handler with playback state: %@
%s Not a long-form video app. Calling client completion handler with playback state: %@
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUserCancelled.
%s Medium confidence picker dismissed because MPMediaControlsDismissalReasonUnknown.
%s current status: %ld -> proposed status: %ld
%s  newStatus: %ld
%@ should be called from a background thread
%s Setting mica color: (R: %.2f G: %.2f B: %.2f Alpha: %.2f) and state: %@.
Shouldn't already have a contentZooming view.
Content view unexpectedly had incomingContentView.
contentTransitioningPlayer should never be nil here.
Already had a content transition view, which is unexpected.
Warning: Attempted to start content transition on a %@, which was already transitioning. Ignoring.
%s %ld
Unexpected
Unexpectedly missing URL for CAML file. %@
%@: %@ -> %@
%s failed to decompress data (%{public}@)
%s JSON deserialization failed: %{public}@
%s no class registered for version '%{public}@'
%s class %{public}@ does not implement messageWithParts:
Do not call this method when showing the content info panel.
%s Refresh: %.f HDRMode: %@ overscanCompensation: %@
%s This feature requires a UIWindowScene.
Called %@ before creating playback controls view!
%s delay: %f
%s duration: %f
%s Cannot observe keypath %@ %@
*** AVPlayerViewController cannot update status bar visibility while hosted in view service. ***
%@: Unexpected transition state.
%@ called with an invalid state %ld
Unexpected gesture kind.
Unexpected transitioning state.
Tried to dismiss a view controller without a presenting view controller. This is hard.
Cannot present view controller without a view controller from which to present.
Expected a source layer.
Expected a player controller.
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
Resource Reduction assertion was invalidated.
%s Using output context %@
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
Scrubbing Ended
Scrubbing Started
%s %f
Can play immediately: %d
Retrying play immediately.
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s %.1f on %p
%s immediately %.1f on %p
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
isPlaybackBufferEmpty: %d
Rate changed to: %f
Ignoring rate change.
Failed to handle %@ %@
%s queuePlayer: %d
%s have AirPlay to AppleTV for %{public}@
%s have AirPlay to AppleTV, but externalPlaybackType = %ld
Interruption notification: AVAudioSessionInterruptionNotification player.rate: %.1f userinfo: %@
AVAudioSessionInterruptionTypeEnded: %f
%s player: %p
Never load the turboModePlaybackControlsPlaceholderView when the playbackControlsView is already loaded!
%@ - Computed more frames than we have arranged subviews. Number of arranged subviews: %ld -- current frame index: %ld
%@ called when initial layout not needed already set.
%@ %d
%s failed to serialize response body: %{public}@
%s response received: %{public}@
%s response version seems incorrect; have '%{public}@' but expecting '%{public}@'
%s response is invalid: the %{public}@ header is missing
%s  interval: %f shouldResumePlayback: %@
Done seeking.
Resuming playback after a seek.
Expect this to only be set once.
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
AVView
AVAppStorePlayerView
AVAppStorePlayerLayerView
AVRouteDetectorCoordinator
AVContentOverlayView
AVAdditions
_AVSimplePlayerLayerView
AVPictureInPicturePlayerLayerView
AVPictureInPicturePlatformAdapter
AVPictureInPictureControlsStyleAppearance
NSObject
PGPictureInPictureProxyDelegate
AVPictureInPictureViewControllerDelegate
AVPictureInPicturePrerollAttributes
__AVPlayerLayerView
AVScrubberVelocity
AVScrubber
AVPlaybackControlsViewItem
AVLayoutViewItem
AVExternalGestureRecognizerPreventing
UIScrollViewDelegate
AVAirMessageNotificationCenter
AVAirTransportDelegate
AVBonjourServiceDelegate
AVChapter
NSCopying
AVPlayerItemAVKitData
AVKitAdditionsPrivate
AVPlaybackRouteSelecting_Private
AVPlaybackRouteSelecting
AVMediaSelection
AVPlayerController
AVScrollViewObserver
_UIScrollViewScrollObserver
AVVolumeSlider
AVVolumeWarningView
AVNewsWidgetPlayerBehavior
AVBehavior
AVBehaviorInternal
AVPictureInPictureCALayerHostView
AVPictureInPictureSampleBufferDisplayLayerHostView
AVUserInteractionObserverGestureRecognizer
AVPlayerControllerVolumeAnimator
AVPlayerController_AVPlayerControllerVolumeAnimatorAdditions
AVHomeIPCameraActionButtonHandling
AVHomeIPCameraBehavior
AVPictureInPictureContentSource
AVPictureInPictureContentSourceExtensions
AVInteractiveTransitionGestureTracker
AVTransitionDriver
UIInteraction
UIGestureRecognizerDelegate
AVSecondScreenController
AVPresentationContext
AVBonjourServiceClient
NSNetServiceDelegate
NSNetServiceBrowserDelegate
AVNowPlayingInfoController
AVStatusBarBackgroundGradientViewSubview
AVStatusBarBackgroundGradientView
AVMusicAppBehavior
AVMusicAppBehaviorContext
AVBehaviorContext
AVMetricsCollectionBehaviorContext
AVPlayerViewControllerBehaviorContext
AVBehaviorContextInternal
AVPlayerItem_AVMusicAppBehaviorContextAdditions
AVSecondScreen
AVStringPair
AVAirTransportStreams
NSStreamDelegate
AVAirTransport
StreamBased
AVAirMessageDispatcher
AVBonjourServiceClientDelegate
AVLoadingButtonView
AVVolumeHUDAssertion
AVSystemVolumeController
AVVolumeController
AVZoomingBehavior
AVPlayerViewControllerCustomControlsViewLayoutMarginsGuideProvidingView
AVPlayerViewControllerCustomControlsView
AVPictureInPicturePlaybackState
AVPlaybackControlsRoutePickerView
AVStyleSheet
AVEditBehavior
AVPlayerViewController
AVPlaybackControlsViewVisibilityDelegate
AVContentOverlayViewDelegate
AVTransitionControllerDelegate
AVFullScreenViewControllerDelegate
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
AVPictureInPictureControllerDelegate
AVPlayerViewController_AdLibOnly
AVPlayerViewController_WebKitOnly
AVPlayerViewController_AppStoreOnly
AVPlayerViewControllerInternal
AVPlaybackControlsViewControllerActions
AVPlayerViewControllerTransitioningInternal
DeprecationsAndToBeRemoved
AVEditBehaviorContext
AVEditViewDelegate
AVEditViewDataSource
AVPlayerItem_AVEditBehaviorContextAdditions
AVFullScreenViewController
AVExternalGestureRecognizerPreventer
AVAirMessage
AVAirMessageExtensions
AVPictureInPictureViewController
PGPictureInPictureViewController
PGPictureInPictureViewControllerSupport
AVExternalPlaybackIndicatorView
AVValueTiming
NSMutableCopying
NSCoding
AVMutableValueTiming
AVConcreteMutableValueTiming
AVConcreteValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVSecondScreenDebugAssistant
AVPresentationController
AVObservationController
AVKeyValueChange
AVProxyKVOObserver
AVHomeIPCameraBehaviorContext
AVScrubbing
AVPlaybackContentContainerView
AVPlaybackContentContainer
AVPlaybackContentZoomingView
AVAirMessageTransformer
AVDataValueTransformer
AVAirTransportTransformationProtocol
AVEditView
UIMovieScrubberDelegate
UIMovieScrubberDataSource
AVAirSerializationProtocol
AVAirSerialization
AVPlaybackContentTransitioningView
AVMediaSelectionTableViewController
AVTableViewCell
AVMediaSelectionViewController
AVPictureInPictureController
AVPictureInPicturePlatformAdapterDelegate
AVPictureInPictureControllerContentSource
AVControlItem
AVLabel
AVPlayerView
AVExternalPlaybackController
AVTimecode
AVTimecodeController
Common
AVCABackdropLayer
AVCABackdropLayerView
AVRoutePickerView
AVRoutePickerViewInternalDelegate
AVRoutePickerViewDelegate
AVPictureInPictureIndicatorLayer
AVPictureInPictureIndicatorSublayer
AVBackgroundView
AVVolumeButtonControl
AVPlayerControllerTimeResolver
TimeObserverAdditions
AVPrioritizedSize
AVTouchIgnoringView
AVZoomingBehaviorContext
AVNewsWidgetPlayerBehaviorContext
AVPlaybackContentTransitioningViewDelegate
AVNewsWidgetPlayerLegacyBehavior
AVPlayerViewController_NewsOnly
AVTransition
AVCustomStackLayout
AVImage
AVMicaPackage
CAStateControllerDelegate
CAMLParserDelegate
AVTurboModePlaybackControlsPlaceholderView
AVPlayerViewControllerAnimationCoordinator
AVTimer
AVSecondScreenConnection
AVSecondScreenContentViewConnection
AVPlayerVolumeController
AVPresentationContainerViewLayer
AVPresentationContainerViewAppearanceProxy
AVPresentationContainerView
AVMessageParser
AVAirMessageParts
AVAirTransportReverseTransformationResultProtocol
AVAirMessages
AVTransportControlsView
AVScrubberDelegate
AVDefaultBehaviorContext
AVBehaviorStorage
AVBehaviorSupport
AVSecondScreenAdditions
AVPresentationContextTransition
AVHomeIPCameraPlayerController
AVPlaybackControlsController
AVPlayerViewControllerContentViewDelegate
AVTransportControlsViewDelegate
AVSecondScreenViewController
AVSecondScreenPlayerLayerView
UIViewControllerAnimatedTransitioning
UIViewControllerInteractiveTransitioning
AVTransitionDelegate
AVTransitionDriverDelegate
UIViewControllerTransitioningDelegate
AVTransitionController
AVPictureInPictureSampleBufferDisplayLayerView
AVSBDLPIPAdditions
AVPlayerControllerMercurySupportInternal
AVPlayerControllerExternalPlaybackSupportInternal
AVPlayerControllerTimecodeSupportInternal
AVPlayerControllerTimecodeSupport
AVPlayerControllerDelegate
AVBackdropView
AVPlayerViewControllerContentView
AVScrollViewObserverContentView
AVSharedPreferencesProtocol
AVButton
AVInternetDateFormatter
AVLayoutItemAttributes
AVHomeLoadingButtonControlItem
AVDisplayLink
AVLayoutView
AVPlaybackControlsView
AVAirMessageResponse
AVMessageTransformerProtocol
_AVBundle
AVPictureInPictureIndicatorView
AVKitLayoutItem
NSLayoutConstraint_AVKitAdditions
NSLayoutAnchor_AVKitAdditions
NSLayoutDimension_AVKitAdditions
AVLayoutViewRowHead
AVSampleBufferDisplayLayerPlayerController
AVPictureInPictureSuppport
_ignoresTouches
setHidden:
hitTest:withEvent:
ignoresTouches
setIgnoresTouches:
_showsPlaybackControls
_updatesNowPlayingInfoCenter
_showsMinimalPlaybackControlsWhenEmbeddedInline
_canPausePlaybackWhenExitingFullScreen
_allowsEnteringFullScreen
_videoGravity
_contentOverlayView
_player
_playButtonHandlerForLazyPlayerLoading
_preferredUnobscuredArea
_playerViewControllerDelegate
_playerViewController
_prominentPlayButton
_prominentPlayButtonLayoutView
_styleSheet
_playerLayerView
_videoGravityForLayoutClassDictionary
_observationController
initWithFrame:
dealloc
setShowsPlaybackControls:
setUpdatesNowPlayingInfoCenter:
setShowsMinimalPlaybackControlsWhenEmbeddedInline:
setCanPausePlaybackWhenExitingFullScreen:
setAllowsEnteringFullScreen:
setVideoGravity:
setPreferredUnobscuredArea:
setPlayerViewControllerDelegate:
setPlayer:
setVideoGravity:forLayoutClass:
setPlayButtonHandlerForLazyPlayerLoading:
setClipsToBounds:
_setContinuousCornerRadius:
layoutSubviews
_makeActualVideoViewWithPlayerIfNeeded:
_makePlayerLayerViewWithPlayer:
_makePlayerViewControllerWithPlayer:
_prominentPlayButtonTouchUpInside:
showsPlaybackControls
updatesNowPlayingInfoCenter
showsMinimalPlaybackControlsWhenEmbeddedInline
canPausePlaybackWhenExitingFullScreen
allowsEnteringFullScreen
videoGravity
contentOverlayView
player
playButtonHandlerForLazyPlayerLoading
preferredUnobscuredArea
playerViewControllerDelegate
playerViewController
setPlayerViewController:
prominentPlayButton
setProminentPlayButton:
prominentPlayButtonLayoutView
setProminentPlayButtonLayoutView:
styleSheet
setStyleSheet:
playerLayerView
setPlayerLayerView:
videoGravityForLayoutClassDictionary
setVideoGravityForLayoutClassDictionary:
observationController
.cxx_destruct
animateWithDuration:delay:options:animations:completion:
removeFromSuperview
activateConstraints:
setTranslatesAutoresizingMaskIntoConstraints:
addSubview:
bounds
objectForKeyedSubscript:
unsignedIntegerValue
countByEnumeratingWithState:objects:count:
allKeys
layer
layerClass
insertSubview:atIndex:
layoutFrame
layoutMarginsGuide
superview
copy
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
mainScreen
addTarget:action:forControlEvents:
_routeDetectionEnabled
setRouteDetectionEnabled:
multipleRoutesDetected
isRouteDetectionEnabled
endDetectingRoutes
beginDetectingRoutes
routeDetectorCoordinatorQueue
sharedSystemRouteDetector
updateMultipleRoutesDetected
setMultipleRoutesDetected:
postNotificationName:object:
defaultCenter
isMainThread
addObserverForName:object:queue:usingBlock:
_delegate
didAddSubview:
_didRemoveSubview:
delegate
setDelegate:
_isHostedInAnotherProcess
_windowInterfaceOrientation
autorotates
avkit_canAttemptSecondWindowForRotability
_windowOwnsInterfaceOrientation
_windowControlsStatusBarOrientation
_shouldControlAutorotation
avkit_isHostedInAnotherProcess
_shouldAutorotateToInterfaceOrientation:
_setRotatableViewOrientation:duration:
avkit_canAttemptRotation
avkit_preferredInterfaceOrientationFromDeviceOrientation
avkit_supportsAutorotationForInterfaceOrientationMask:
avkit_ensureOrientation:disableTouchCancellation:
userInterfaceIdiom
currentDevice
orientation
rangeOfString:
substringFromIndex:
stringWithFormat:
substringToIndex:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
playerLayer
keyPathsForValuesAffectingPlayerLayer
setWithObjects:
_simplePlayerLayerView
attachPlayerLayer
detachPlayerLayer
didChangeValueForKey:
willChangeValueForKey:
constraintsWithVisualFormat:options:metrics:views:
_allowsPictureInPicturePlayback
_alwaysStartsAutomaticallyWhenEnteringBackground
_canStartAutomaticallyWhenEnteringBackground
_requiresLinearPlayback
_microphoneEnabled
_managesWiredSecondScreenPlayback
_anyPictureInPictureActive
_scrubbingOrSeeking
_scrubbing
_seeking
_interruptedForAudioSession
_wasPlayingWhenSuspended
_routingVideoToHostedWindow
_playerController
_controlsStyle
_prerollAttributes
_pictureInPictureViewController
_status
_pegasusProxy
_layoutCheckTimer
_secondScreenConnection
_sourceWindowWhenPictureInPictureStarted
_contentSourceAwaitingInvalidation
_contentSourceAwaitingSetup
_observedTimeControlStatus
_rateWhenScrubbingOrSeekingBegan
_source
_videoRectInScreen
controlsStyle
setControlsStyle:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxyWillSetupPictureInPictureStop:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxy:didReceivePlaybackCommand:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxy:didRequestFaceTimeAction:
pictureInPictureViewControllerViewDidAppear:
pictureInPictureViewControllerViewWillDisappear:
initWithSource:
startPictureInPicture
stopPictureInPictureAndRestoreUserInterface:
canAnimatePictureInPictureTransition
isSystemPictureInPicturePossible
setAllowsPictureInPicturePlayback:
setInterruptedForAudioSession:
setWasPlayingWhenSuspended:
setMicrophoneEnabled:
setRequiresLinearPlayback:
setAlwaysStartsAutomaticallyWhenEnteringBackground:
setPrerollAttributes:
setStatus:
setSource:
setPlayerController:
setCanStartAutomaticallyWhenEnteringBackground:
updateLayoutDependentBehaviors
_updatePictureInPictureShouldStartWhenEnteringBackground
_updateProxyPlaybackState
_createProxyIfNeeded
_startObservation
_startObservingForPlaybackStateUpdates
setScrubbingOrSeeking:
setSeeking:
setScrubbing:
setObservedTimeControlStatus:
setRoutingVideoToHostedWindow:
_removeSecondScreenConnection
_sceneActivationState
playerController
allowsPictureInPicturePlayback
alwaysStartsAutomaticallyWhenEnteringBackground
canStartAutomaticallyWhenEnteringBackground
requiresLinearPlayback
isMicrophoneEnabled
prerollAttributes
managesWiredSecondScreenPlayback
setManagesWiredSecondScreenPlayback:
pictureInPictureViewController
isAnyPictureInPictureActive
status
pegasusProxy
videoRectInScreen
setVideoRectInScreen:
layoutCheckTimer
secondScreenConnection
setSecondScreenConnection:
sourceWindowWhenPictureInPictureStarted
setSourceWindowWhenPictureInPictureStarted:
contentSourceAwaitingInvalidation
setContentSourceAwaitingInvalidation:
contentSourceAwaitingSetup
setContentSourceAwaitingSetup:
observedTimeControlStatus
isScrubbingOrSeeking
isScrubbing
isSeeking
rateWhenScrubbingOrSeekingBegan
setRateWhenScrubbingOrSeekingBegan:
isInterruptedForAudioSession
wasPlayingWhenSuspended
source
isRoutingVideoToHostedWindow
activationState
associatedBoolValue
associatedDoubleValue
playbackAction
interfaceOrientation
boolValue
integerValue
object
arrayWithObjects:count:
userInfo
preferredContentSizeDidChangeForViewController
setPreferredContentSize:
CGSizeValue
updatePlaybackStateUsingBlock:
initWithControlsStyle:viewController:
pegasusAttributes
setPlaybackRate:elapsedTime:timeControlStatus:
setContentDuration:
setContentType:
setPictureInPictureShouldStartWhenEnteringBackground:
_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
convertRect:toCoordinateSpace:
fixedCoordinateSpace
isPictureInPictureSupported
startPictureInPictureButtonImageName
stopPictureInPictureButtonImageName
imageSymbolConfiguration
_pegasusAttributes
_requiredLinearPlaybackEndTime
initWithPlaybackStatePrerollAttributes:requiredLinearPlaybackEndTime:
preferredTintColor
requiredLinearPlaybackEndTime
prerollAttributesForAdContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
prerollAttributesForSponsoredContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
keyPathsForValuesAffectingVideoLayerGravity
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingVideoBounds
keyPathsForValuesAffectingVideoDisplaySize
keyPathsForValuesAffectingVideoScaled
keyPathsForValuesAffectingPixelBufferAttributes
setWithObject:
setWithArray:
_pictureInPicturePlayerLayerView
_pictureInPicturePlayerLayer
isReadyForDisplay
videoBounds
videoDisplaySize
isVideoScaled
setVideoScaled:
pixelBufferAttributes
setPixelBufferAttributes:
pictureInPicturePlayerLayerView
startRoutingVideoToPictureInPicturePlayerLayerView
stopRoutingVideoToPictureInPicturePlayerLayerView
pictureInPicturePlayerLayer
setPictureInPicturePlayerLayer:
setPlaceholderContentLayerDuringPIPMode:
setLegibleDisplayEnabled:
isLegibleDisplayEnabled
stopRedirectingVideoToLayer:
CGImage
displayScale
_flatImageWithColor:
imageNamed:inBundle:compatibleWithTraitCollection:
startRedirectingVideoToLayer:forMode:
videoRect
isEqualToString:
clearColor
_timestamp
_velocity
timestamp
setTimestamp:
velocity
setVelocity:
_trackingStartTime
_previousValue
_previousValueChangeTime
_currentValueChangedTime
_didHaveLessThanFullScrubbingSpeedSinceTrackingBegin
_collapsed
_included
_removed
_hasAlternateAppearance
_hasFullScreenAppearance
_scrollScrubbing
_slowKnobMovementDetected
_shouldRecoverFromPrecisionScrubbingIfNeeded
_scrubsWhenTappedAnywhere
_canChangeScrubbingSpeed
_hasChangedLocationAtLeastOnce
_estimatedFrameRate
_rate
_feedbackGenerator
_loadedTrackOverlayView
_previousScrubberVelocities
_layoutAttributes
_loadedTimeRanges
_scrubbingSpeed
_resolution
_scrollView
_currentThumbView
_updateSlowKnobMovementDetectedTimer
_timestampWhenTrackingEnded
_extrinsicContentSize
_hitRectInsets
extrinsicContentSize
setExtrinsicContentSize:
isRemoved
setRemoved:
isCollapsed
setCollapsed:
isIncluded
setIncluded:
isCollapsedOrExcluded
hasAlternateAppearance
setHasAlternateAppearance:
hasFullScreenAppearance
setHasFullScreenAppearance:
layoutAttributesDidChange
layoutAttributes
avkit_shouldPreventExternalGestureRecognizerAtPoint:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
feedbackGenerator
loadedTrackOverlayView
previousScrubberVelocities
setLoadedTimeRanges:
clampedEstimatedFrameRate
localizedScrubbingSpeedName
setCurrentThumbView:
timeIntervalSinceTrackingEnded
intrinsicContentSize
setValue:
minimumValueImageRectForBounds:
maximumValueImageRectForBounds:
thumbRectForBounds:trackRect:value:
trackRectForBounds:
createThumbView
setEnabled:
isTracking
beginTrackingWithTouch:withEvent:
continueTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
cancelTrackingWithEvent:
endOrCancelTracking
alignmentRectInsets
updateScrollViewContentSizeAndOffsetIfNeeded
hitRect
pointInside:withEvent:
duration
normalizedPosition
normalizedScrollOffset
valueFromScrollView
contentOffsetFromValue
_shouldTrackTouchAtPoint:
_updateSlowKnobMovementDetected
_updateSlowKnobMovementDetectedForTargetValue:
_updateLayoutItem
setPreviousScrubberVelocities:
loadedTimeRanges
scrubbingSpeed
setScrubbingSpeed:
estimatedFrameRate
setEstimatedFrameRate:
resolution
setResolution:
hitRectInsets
setHitRectInsets:
rate
setRate:
scrollView
setScrollView:
isScrollScrubbing
setScrollScrubbing:
slowKnobMovementDetected
setSlowKnobMovementDetected:
shouldRecoverFromPrecisionScrubbingIfNeeded
setShouldRecoverFromPrecisionScrubbingIfNeeded:
currentThumbView
updateSlowKnobMovementDetectedTimer
setUpdateSlowKnobMovementDetectedTimer:
timestampWhenTrackingEnded
setTimestampWhenTrackingEnded:
scrubsWhenTappedAnywhere
setScrubsWhenTappedAnywhere:
canChangeScrubbingSpeed
setCanChangeScrubbingSpeed:
hasChangedLocationAtLeastOnce
setHasChangedLocationAtLeastOnce:
objectAtIndexedSubscript:
count
removeObjectsInArray:
addObject:
scheduledTimerWithTimeInterval:repeats:block:
minimumValue
maximumValue
_trackEnabled
_thumbHitEdgeInsets
convertPoint:toView:
contentSize
contentOffset
effectiveUserInterfaceLayoutDirection
setContentOffset:
_maxTrackView
floatValue
convertRect:fromView:
_minTrackView
removeAllObjects
setTracking:
sendActionsForControlEvents:
selectionChanged
center
previousLocationInView:
locationInView:
frame
_isPointerTouch
invalidateIntrinsicContentSize
whiteColor
setUserInteractionEnabled:
setThumbImage:forState:
setMaximumTrackImage:forState:
setMinimumTrackImage:forState:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
minimumTrackImageForState:
setSemanticContentAttribute:
keyPathsForValuesAffectingLocalizedScrubbingSpeedName
_started
_mainService
_nowPlayingPlayerItem
_queue
_activeChannels
airTransportOutputDidOpen:
airTransport:didReceiveObject:
airTransportInputDidClose:
bonjourServiceAdditionalTXTRecordInfo:
bonjourService:didAcceptConnectionChannel:
bonjourService:didCloseChannel:
init
_initPrivate
start
stop
playerItemForIdentifier:
handleCommandMessage:completion:
mainService
nowPlayingPlayerItem
setNowPlayingPlayerItem:
queue
activeChannels
setActiveChannels:
removeObject:
containsObject:
length
airTrafficControllerCurrentItemIdentifier:
airTrafficController:didReceiveMessage:completion:
raise:format:
_isNotificationCenterEnabled
prepare
isPrepared
shared
_image
_imageBlock
_startTime
_duration
_number
_title
copyWithZone:
initWithStartTime:duration:number:title:imageFaultBlock:
startTime
number
title
image
initWithCGImage:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
_customPropertyStorage
customPropertyStorage
avkit_data
avkit_dataOrNil
externalMetadata
avkit_airMessageSendExternalMetadata
isEqualToArray:
AVKitData
setAVKitData:
avkit_setValue:forAVKitProperty:
avkit_valueForAVKitProperty:
avkit_airMessageSendToAppleTV
setExternalMetadata:
_externalPlaybackController
prepareRouteSelectionForPlaybackFromBundleID:withCompletionHandler:
prepareRouteSelectionForPlaybackWithCompletionHandler:
_ensureUserCaptionDisplayType:
currentLegibleMediaSelectionOption
currentAudioMediaSelectionOption
propertyList
reloadOptionsAssumingMediaOptionsMayHaveChanged:
audioOptions
legibleOptions
hasAudioMediaSelectionOptions
setLegibleMediaSelectionOptions:audioMediaSelectionOptions:assumeMediaOptionMayHaveChanged:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
autoupdatingCurrentLocale
objectForKey:
localeIdentifier
languageCompare:currentLanguageCode:currentLanguageIdentifier:
sortedArrayUsingComparator:
hasLegibleMediaSelectionOptions
numberWithBool:
isAC3Only
arrayWithArray:
currentItem
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
valueForKey:
avkit_persistentIdentifier
isEqualToSet:
isCC
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
_performAutomaticMediaSelectionForUserCaptionDisplayType:
selectMediaOption:inMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
hasMediaSelectionOptions
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
selectedMediaOptionMayHaveChanged
reloadOptions
reloadOptionsAndCurrentSelections
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
locale
audioMediaSelectionOptions
displayName
localizedCaseInsensitiveCompare:
audioFormats
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
selectedMediaOptionMayHaveChanged:
_selectedMediaOptionWithMediaCharacteristic:
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
mediaSelectionGroupForMediaCharacteristic:
assetCache
isPlayableOffline
mediaSelectionOptionsInMediaSelectionGroup:
options
canonicalLanguageIdentifierFromString:
minusSet:
mediaType
arrayByAddingObject:
_scrolling
_scrollingQuickly
_observer
_observedScrollViews
_scrollingDidEndTimer
_observeScrollViewDidScroll:
initWithContentView:
updateObservedScrollViews
_updateScrollingStatus
isScrolling
setScrolling:
isScrollingQuickly
setScrollingQuickly:
observer
setObserver:
observedScrollViews
setObservedScrollViews:
scrollingDidEndTimer
setScrollingDidEndTimer:
setTolerance:
anyObject
_removeScrollViewScrollObserver:
minusHashTable:
_addScrollViewScrollObserver:
_isScrollViewScrollObserver:
weakObjectsHashTable
_animatingVolumeChange
_effectiveVolumeLimit
_thumbView
_unclampedValue
_volumeWarningView
minimumSize
setEffectiveVolumeLimit:
unclampedValue
didMoveToWindow
gestureRecognizerShouldBegin:
setValue:animated:
_endTracking
thumbView
setThumbView:
effectiveVolumeLimit
setUnclampedValue:
isAnimatingVolumeChange
setAnimatingVolumeChange:
volumeWarningView
setVolumeWarningView:
deactivate
_modulationFeedbackGenerator
userInteractionEnded
_edgeFeedbackGenerator
layoutIfNeeded
startAnimation
addCompletion:
addAnimations:
initWithDuration:timingParameters:
initWithDampingRatio:
_solveForInput:
functionWithName:
valueUpdated:
positionUpdated:
distance
numberWithDouble:
activateWithCompletionBlock:
userInteractionStarted
isDescendantOfView:
convertPoint:fromView:
stopAnimatingAndRemoveFromSuperview
startAnimating
insertSubview:below:
_stopping
_animator
continueAnimating
isStopping
setStopping:
animator
setAnimator:
finishAnimationAtPosition:
stopAnimation:
isInterruptible
isRunning
initWithDuration:curve:animations:
systemYellowColor
isHiddenOrHasHiddenAncestor
numberWithFloat:
_behaviorContext
willMoveToContext:
behaviorContextClass
behaviorContext
setBehaviorContext:
didMoveToContext:
willRemoveFromContext:
didRemoveFromContext:
playerForContentTransitionType:
willBeginContentTransition
didUpdateContentTransitionProgress:
willCompleteContentTransition
didCompleteContentTransition
willCancelContentTransition
didCancelContentTransition
_needsGeometryUpdate
_deferringGeometryUpdates
_hostView
_imageQueueSize
_contentDimensions
_lastKnownFrame
_lastKnownBounds
contextId
setContextId:
setFrame:contentDimensions:imageQueueSize:
_updateGeometryIfNeeded
hostView
imageQueueSize
setImageQueueSize:
contentDimensions
setContentDimensions:
lastKnownFrame
setLastKnownFrame:
lastKnownBounds
setLastKnownBounds:
needsGeometryUpdate
setNeedsGeometryUpdate:
isDeferringGeometryUpdates
setDeferringGeometryUpdates:
setCenter:
setTransform:
blackColor
performWithoutAnimation:
setAutoresizingMask:
_trackedTouches
initWithTarget:action:
canBePreventedByGestureRecognizer:
canPreventGestureRecognizer:
shouldRequireFailureOfGestureRecognizer:
shouldBeRequiredToFailByGestureRecognizer:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEstimatedPropertiesUpdated:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_touchesEndedOrCancelled:
unionSet:
setCancelsTouchesInView:
_animatingTowardsZero
_animatingAwayFromZero
_volumeToRestore
initWithPlayerController:
currentRouteHasVolumeControl
canAnimateVolumeTowardsZero
canAnimateVolumeAwayFromZero
setProgressTowardsZero:
setProgressAwayFromZero:
restoreVolumeIfNeeded
volumeToRestore
setVolumeToRestore:
isAnimatingTowardsZero
setAnimatingTowardsZero:
isAnimatingAwayFromZero
setAnimatingAwayFromZero:
supportsVolumeAnimation
pictureInPictureActionButtonTapped
playbackControlsDidChangePlayerVolume:
playbackControlsDidToggleMuted:
playbackControlsDidUpdateVisibilityOfLoadingIndicator:
avkit_makePlayerControllerIfNeeded:
avkit_pictureInPictureViewController
avkit_startRoutingVideoToPictureInPictureViewController:
avkit_stopRoutingVideoToPictureInPictureViewController:
avkit_beginReducingResourcesForPictureInPictureViewController:playerController:
avkit_endReducingResourcesForPictureInPictureViewController:playerController:
avkit_willBeginStoppingPictureInPictureForPictureInPictureViewController:
avkit_videoRectInWindow
avkit_isVisible
avkit_window
isHidden
superlayer
convertRect:fromLayer:
avkit_visibleRectForRect:inLayer:
_enabled
_pinchToDismissEnabled
_pinchToPresentEnabled
_panToDismissEnabled
_waitingForTransition
_waitingForBoundsChange
_waitingForLocationChangeAfterBoundsChange
_hasContinued
_hasRotated
_lastNonZeroVelocityWasDownward
_contentTransitioningViewGestureRecognizer
_transitionDriverDelegate
_previousPinchScale
__rotation
_panGestureRecognizer
_pinchGestureRecognizer
_rotationGestureRecognizer
_recognizers
_timestampOfTouchWithLocationChangeAfterBoundsChange
_initialInterfaceOrientation
_transitionInteraction
_view
_gestureLocationAfterBoundsChange
_lastReportedLocationInWindow
_anchorLocationInWindow
_initialCoordinateSpaceBounds
locationInWindow
translationInWindow
velocityInWindow
angleOfVelocityInWindow
transitionDriver:shouldRequireFailureOfGestureRecognizer:
isEnabled
transitionDriverDelegate
setTransitionDriverDelegate:
transitionInteraction
rotation
rotationVelocity
pinchScale
pinchVelocity
lastNonZeroVelocityWasDownward
contentTransitioningViewGestureRecognizer
setContentTransitioningViewGestureRecognizer:
willMoveToView:
didMoveToView:
view
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
addRecognizersToView:
_locationRecognizer
_untranslatedUnfilteredLocationInFixedCoordinateSpace
_filteredUntranslatedLocationInWindow
_handlePinchGesture:
_handleRotationGesture:
_handlePanGesture:
_isWaitingToContinue
_beginTracking:
_finish
_cancel
_updateLastNonZeroVelocityDirection
_resetGesturesIfPossible
_setHasContinuedIfNeeded
_reset
isPinchToDismissEnabled
setPinchToDismissEnabled:
isPinchToPresentEnabled
setPinchToPresentEnabled:
isPanToDismissEnabled
setPanToDismissEnabled:
previousPinchScale
setPreviousPinchScale:
_rotation
_setRotation:
panGestureRecognizer
pinchGestureRecognizer
rotationGestureRecognizer
recognizers
isWaitingForTransition
setWaitingForTransition:
isWaitingForBoundsChange
setWaitingForBoundsChange:
isWaitingForLocationChangeAfterBoundsChange
setWaitingForLocationChangeAfterBoundsChange:
timestampOfTouchWithLocationChangeAfterBoundsChange
setTimestampOfTouchWithLocationChangeAfterBoundsChange:
hasContinued
setHasContinued:
hasRotated
setHasRotated:
initialInterfaceOrientation
setInitialInterfaceOrientation:
initialCoordinateSpaceBounds
setInitialCoordinateSpaceBounds:
gestureLocationAfterBoundsChange
setGestureLocationAfterBoundsChange:
lastReportedLocationInWindow
setLastReportedLocationInWindow:
anchorLocationInWindow
setAnchorLocationInWindow:
setLastNonZeroVelocityWasDownward:
setTransitionInteraction:
setView:
setRotation:
coordinateSpace
lastTouchTimestamp
scale
translationInView:
velocityInView:
convertPoint:fromCoordinateSpace:
removeGestureRecognizer:
addGestureRecognizer:
_setRequiresSystemGesturesToFail:
_setEndsOnSingleTouch:
setMaximumNumberOfTouches:
_allowsUpdatingActiveConnection
_secondScreens
_connections
addConnectionForPlayer:playerLayer:
addConnection:
removeConnection:
connectionPassingTest:
preferredConnection
setPreferredConnection:
addSecondScreen:
removeSecondScreen:
activeConnection
_connectionForPlayer:
_targetScreen
_updateActiveConnection
_insertConnection:atIndex:
secondScreens
connections
allowsUpdatingActiveConnection
setAllowsUpdatingActiveConnection:
insertObject:atIndex:
reverseObjectEnumerator
moveObjectsAtIndexes:toIndex:
indexSetWithIndex:
indexOfObject:
lastObject
orderedSet
sharedInstance
_allowsSecondWindowPresentations
_wasInitiallyPresentedWithoutSecondWindow
_allowsPausingWhenTransitionCompletes
_sourceView
_touchBlockingView
_backgroundView
_transitionContext
_rotatableSecondWindow
_avFullScreenViewController
_presentingTransition
_dismissingTransition
_presentationController
initWithPresentationController:
containerView
presentingView
presentationWindow
rotatableWindowViewController
presentedView
presentedViewController
hasActiveTransition
wasInitiallyInteractive
isDismissing
isPresenting
currentTransition
transitionType
canBeInteractivelyDismissed
presentationFromView
dismissalToView
sourceView
setSourceView:
touchBlockingView
backgroundView
transitionContext
setTransitionContext:
allowsSecondWindowPresentations
setAllowsSecondWindowPresentations:
wasInitiallyPresentedWithoutSecondWindow
setWasInitiallyPresentedWithoutSecondWindow:
rotatableSecondWindow
setRotatableSecondWindow:
avFullScreenViewController
presentingTransition
setPresentingTransition:
dismissingTransition
setDismissingTransition:
allowsPausingWhenTransitionCompletes
setAllowsPausingWhenTransitionCompletes:
presentationController
viewForKey:
presentingViewController
_supportedInterfaceOrientationsForWindow:
supportsInteractiveCounterRotationDismissals
presenting
dismissing
rootViewController
_discovering
_resolvedServices
_resolvingServices
_monitoringServices
_netServiceIdentifierToChannel
_observeAirPlayVideoActiveDidChange
_observeMRDeviceInfoDidChange
_serviceType
_netServiceBrowser
_airplayDeviceRef
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
initWithNetServiceType:
beginDiscovery
endDiscovery
setAirplayDeviceRef:
_updatedAirPlayPairedDeviceAsync
_isServiceForCurrentAirPlayDevice:
identifierForNetService:
airTransportSenderForNetService:
serviceType
netServiceBrowser
airplayDeviceRef
name
resolveWithTimeout:
dictionaryFromTXTRecordData:
TXTRecordData
removeFromRunLoop:forMode:
mainRunLoop
stopMonitoring
startMonitoring
scheduleInRunLoop:forMode:
getInputStream:outputStream:
port
hostName
searchForServicesOfType:inDomain:
removeObserver:
mainQueue
setIncludesPeerToPeer:
initWithData:encoding:
keyEnumerator
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_commandHandlerIdentifier
_keyValueObservationController
_backgroundQueue
_overrideParentApplicationDisplayIdentifier
_playerControllerToActivateAfterDelay
_startNowPlayingUpdatesTimer
setOverrideParentApplicationDisplayIdentifier:
startNowPlayingUpdatesForPlayerController:afterDelay:
stopNowPlayingUpdatesForPlayerController:
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
_updateNowPlayingInfo:commandsAndStates:
_makeNowPlayingInfo
_makeCommandsAndStatesDictionaryForPlayerController:
_updateRegisteredRemoteCommandEnabledStatesWithCommandsAndStates:
_handleRemoteCommand:options:
_availableLanguageOptions
_currentLanguageOptions
overrideParentApplicationDisplayIdentifier
playerControllerToActivateAfterDelay
setPlayerControllerToActivateAfterDelay:
startNowPlayingUpdatesTimer
setStartNowPlayingUpdatesTimer:
_createMediaRemoteLanguageOptionWithAVMediaSelectionOption:
_createMediaRemoteLanguageOptionGroupWithAVMediaSelectionOptions:
doubleValue
numberWithInt:
dataValue
firstObject
metadataItemsFromArray:filteredByIdentifier:
stringValue
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
bundleIdentifier
mainBundle
numberWithUnsignedInt:
sharedNowPlayingInfoControllerWithCompletion:
_mediaRemoteLanguageOptionCharacteristicsForAVMediaSelectionOption:
_avMediaCharacteristics
_mediaRemoteLanguageOptionCharacteristicForAVMediaCharacteristic:
_gradientOpacity
gradientOpacity
setGradientOpacity:
setCompositingFilter:
filterWithType:
setLocations:
setColors:
CGColor
colorWithWhite:alpha:
_gradientView
alpha
setAlpha:
gradientView
setGradientView:
connectedScenes
filteredSetUsingPredicate:
avkit_possiblePrimaryWindowScene
_findWindowForControllingOverallAppearanceInWindowScene:
openSessions
persistentIdentifier
avkit_possibleWindowForControllingOverallAppearance
avkit_windowSceneWithSessionIdentifier:
predicateWithBlock:
initWithCapacity:
contextWillHandleUserAction:
skipToNextItem
skipToPreviousItem
_showsSkipItemButtons
_skipToPreviousItemButtonEnabled
_skipToNextItemButtonEnabled
_behavior
_seekTargetTime
playerViewController:didCollectMetricsEvent:
viewDidLoad
contentViewWillTransitionToSize:withCoordinator:
willStartPictureInPictureWithViewController:
didStopPictureInPicture
makePlaybackContentContainerWithFrame:activeContentView:
initWithAVKitOwner:
willAddBehavior:
didAddBehavior:
willRemoveBehavior:
didRemoveBehavior:
behavior
setBehavior:
setSkipToNextItemButtonEnabled:
setSkipToPreviousItemButtonEnabled:
setShowsSkipItemButtons:
_updateSkipItemButtonsEnabled
_updatePlaybackControlsInclusion
showsSkipItemButtons
isSkipToPreviousItemButtonEnabled
isSkipToNextItemButtonEnabled
seekTargetTime
setSeekTargetTime:
avkit_setMusicBehaviorData:
avkit_musicAppBehaviorContext
URLForResource:withExtension:
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
dataWithContentsOfURL:
imageWithData:
pathExtension
_TVOutScreen
_window
_windowScene
_screen
_state
_debugInfoDisplay
initWithScene:
connectWithSecondScreenConnection:
setState:
isAvailable
sceneBounds
_updatePreferredDisplayCriteria
_isWindowSceneAvailable
isTVOutScreen
window
setWindow:
windowScene
screen
state
debugInfoDisplay
setDebugInfoDisplay:
refreshRate
videoDynamicRange
setRootViewController:
setWindowScene:
_first
_second
initWithString:separatedByString:
value
keyEquals:
first
second
caseInsensitiveCompare:
_inputStream
_outputStream
stream:handleEvent:
initWithInput:output:
invalidate
open
_readDataNonBlockingUpToMaxLength:
isReadyToSend
canWrite
_readAvailableData
_writeData:
_inputStreamHasBytesAvailable
_outputStreamDidOpen
_outputStreamCanWrite
_inputStreamDidClose
inputStream
outputStream
eventThread
currentThread
terminatePendingRequests
writeMore
performOnAirChannelQueueSync:
removeObjectAtIndex:
streamDataTransformer
receiveResponseBlocks
write:maxLength:
bytes
hasSpaceAvailable
streamStatus
streamError
setLength:
increaseLengthBy:
read:maxLength:
mutableBytes
initWithLength:
hasBytesAvailable
close
eventRunLoop
_outputQueue
_leftoverInputData
_requestCompletions
_streamDataTransformer
_receiveResponseBlocks
requestCompletions
writeData:
sendObject:receiveResponse:
sendResponse:
setStreamDataTransformer:
performSync:
airTransportQueue
_isRunningOnAirChannelQueue
performAsync:
setObject:atIndexedSubscript:
subdataWithRange:
timeIntervalSinceReferenceDate
startEventThreadIfNecessary
__performBlock:
performSelector:onThread:withObject:waitUntilDone:
currentRunLoop
setName:
addTimer:forMode:
timerWithTimeInterval:repeats:block:
timeIntervalSinceNow
distantFuture
initWithBlock:
channelWithInput:output:
_currentNetService
_channel
_bonjourServiceClient
didConnectToBonjourService:channel:
haveAirPlayService
sendMessage:completion:
currentNetService
setCurrentNetService:
channel
setChannel:
bonjourServiceClient
didChangeTargetForAirMessageDispatcher:
_isDispatcherEnabled
avkit_isEffectivelyFullScreen
viewIfLoaded
isStatusBarHidden
statusBarStyle
setNeedsStatusBarAppearanceUpdate
_effectiveUIClientSettings
whitePointAdaptivityStyle
setNeedsWhitePointAdaptivityStyleUpdate
homeIndicatorAutoHidden
setNeedsUpdateOfHomeIndicatorAutoHidden
avkit_setNeedsUpdatePreferencesIfNeeded
statusBarManager
_disableTouchCancellationOnRotation
instancesRespondToSelector:
avkit_disableTouchCancellation:forRotationActions:
avkit_supportsInteractiveCounterRotationDismissals
_collapsedOrExcluded
_showsLoadingIndicator
_button
_loadingIndicator
initWithTitle:
setShowsLoadingIndicator:
button
showsLoadingIndicator
loadingIndicator
setLoadingIndicator:
stopAnimating
systemFontOfSize:
titleLabel
setColor:
initWithActivityIndicatorStyle:
_clientIdentifier
_sceneIdentifier
initWithSceneIdentifier:clientIdentifier:
clientIdentifier
sceneIdentifier
stringByAppendingString:
_changingVolume
_currentRouteHasVolumeControl
_EUVolumeLimitEnabled
_EUVolumeLimitOverridden
_volumeChangesThrottled
_canOverrideEUVolumeLimit
_fullyInitialized
_EUVolumeLimit
_volume
_targetVolumeInternal
_maximumTargetVolumeSinceChangingVolumeBegan
_volumeCategory
_sharedSystemController
volumeController
setClientWithIdentifier:prefersSystemVolumeHUDHidden:forWindowSceneSessionWithIdentifier:
beginChangingVolumeForWindowSceneSessionID:
endChangingVolume
setTargetVolume:
isChangingVolume
volume
_removeVolumeHUDAssertionsForClientID:
_windowSceneIdentifiersWithVolumeHUDAssertions
setSystemVolumeHUDEnabled:forWindowSceneSessionIdentifier:
setVolume:
_postNotificationForNameIfFullyInitialized:userInfo:
_observeSystemController
_unobserveSystemController
_handleSystemControllerServerDiedNotification
_handleEUVolumeLimitDidChangeNotification:
_handleSystemVolumeDidChangeNotification:
_handleCurrentRouteHasVolumeControlDidChangeNotification:
_applyProposedVolumeIfNeeded
_applyProposedVolumeImmediately
_performOnMainThread:
setChangingVolume:
setCurrentRouteHasVolumeControl:
EUVolumeLimit
setEUVolumeLimit:
isEUVolumeLimitEnabled
setEUVolumeLimitEnabled:
isEUVolumeLimitOverridden
setEUVolumeLimitOverridden:
volumeChangesThrottled
setVolumeChangesThrottled:
canOverrideEUVolumeLimit
setCanOverrideEUVolumeLimit:
targetVolumeInternal
setTargetVolumeInternal:
maximumTargetVolumeSinceChangingVolumeBegan
setMaximumTargetVolumeSinceChangingVolumeBegan:
volumeCategory
sharedSystemController
setSharedSystemController:
isFullyInitialized
setFullyInitialized:
setVolumeTo:forCategory:
removeObserver:name:object:
addObserver:selector:name:object:
postNotificationName:object:userInfo:
_setSystemVolumeHUDEnabled:
windowSceneVolumeHUDAssertions
objectsPassingTest:
mutableCopy
allowUserToExceedEUVolumeLimit
getVolume:forCategory:
attributeForKey:
sharedAVSystemController
setLayoutMargins:
setInsetsLayoutMarginsFromSafeArea:
setPreservesSuperviewLayoutMargins:
_needsInitialConstraints
_transportControlsVisibleConstraint
_transportControlsHiddenConstraint
_volumeControlsVisibleConstraint
_volumeControlsHiddenConstraint
_areTransportControlsVisible
_areVolumeControlsVisible
_transportControlsAreaLayoutGuide
_displayModeControlsAreaLayoutGuide
_volumeControlsAreaLayoutGuide
_unobscuredCenterAreaLayoutGuide
_animatedUnobscuredCenterAreaLayoutGuide
_unobscuredTopAreaLayoutGuide
_transportControlsAreaLayoutGuideProvidingView
_displayModeControlsAreaLayoutGuideProvidingView
_volumeControlsAreaLayoutGuideProvidingView
_unobscuredTopAreaLayoutGuideProvidingView
_unobscuredCenterAreaLayoutGuideProvidingView
_animatedUnobscuredCenterAreaLayoutGuideProvidingView
setAreVolumeControlsVisible:
setAreTransportControlsVisible:
updateConstraints
transportControlsAreaLayoutGuide
displayModeControlsAreaLayoutGuide
volumeControlsAreaLayoutGuide
unobscuredCenterAreaLayoutGuide
animatedUnobscuredCenterAreaLayoutGuide
unobscuredTopAreaLayoutGuide
transportControlsAreaLayoutGuideProvidingView
displayModeControlsAreaLayoutGuideProvidingView
volumeControlsAreaLayoutGuideProvidingView
unobscuredTopAreaLayoutGuideProvidingView
unobscuredCenterAreaLayoutGuideProvidingView
animatedUnobscuredCenterAreaLayoutGuideProvidingView
areTransportControlsVisible
areVolumeControlsVisible
constraintEqualToAnchor:
constraintLessThanOrEqualToAnchor:constant:
constraintGreaterThanOrEqualToAnchor:constant:
safeAreaLayoutGuide
constraintEqualToAnchor:constant:
setNeedsUpdateConstraints
requiresConstraintBasedLayout
_paused
_initializationTimestamp
_initializedElapsedTime
_timelineRate
_timelineDuration
initWithElapsedTime:timelineDuration:timelineRate:paused:
currentElapsedTime
initializationTimestamp
initializedElapsedTime
timelineRate
timelineDuration
isPaused
_customButton
_currentMicaPackageName
customButton
setPrioritizesVideoDevices:
setCurrentMicaPackageName:
_updateCustomButtonMicaPackage
updateButtonAppearance
currentMicaPackageName
setAllowsGroupBlending:
avkit_ancestorViewPassingTest:
_isAnimatingScrollTest
isDecelerating
isDragging
_isAnimatingScroll
avkit_hitTestControlForPoint:withEvent:bestSoFar:shortestDistanceSoFar:
_horizontalVelocity
_verticalVelocity
isUserInteractionEnabled
presentationLayer
opacity
subviews
_isInAWindow
avkit_isCompletelyTransparent
avkit_overrideLayoutMarginsForCounterRotation
avkit_isVideoGravityFrozen
avkit_isCounterRotatedForTransition
avkit_isBeingDismissed
avkit_isBeingPresented
avkit_needsUpdateBackdropCaptureViewHidden
avkit_backdropGroupLeader
avkit_isBeingScrollTested
avkit_isBeingScrolled
avkit_isBeingScrolledQuickly
avkit_isAncestorOfViewPassingTest:
avkit_isInAScrollView
avkit_isDescendantOfNonPagingScrollView
avkit_makeSubtreeDisallowGroupBlending
avkit_hasFullScreenLayoutClass
avkit_reevaluateHiddenStateOfItem:
avkit_sizeWasInvalidatedNeedingLayoutIfNeeded:
avkit_hitTestControlForPoint:withEvent:
avkit_isDescendantOfViewPassingTest:
avkit_isInAWindowAndVisible
avkit_wantsAnimatedViewTransitions
avkit_largestInscribedRectInBoundingPathWithCenter:aspectRatio:
isPagingEnabled
_shouldUseCompactFullScreenSize
_scrubberTimeLabelFont
_scrubberInfoLabelFont
_infoLabelFont
_standardPaddingFullScreen
_standardPaddingInline
_standardInteritemPadding
_additionalInlinePaddingForDodgingSafeArea
_volumeSliderInlineWidth
_volumeSliderCompactFullScreenWidth
_volumeSliderRegularFullScreenWidth
_volumeSliderPadding
_minimumProminentPlayButtonDimension
_maximumProminentPlayButtonDimension
_maximumTransportControlsWidth
_maximumMultiRowTransportControlsWidth
_minimumTransportControlsWidth
_minimumSingleButtonTransportControlsWidth
_spacingBetweenScrubInstructionsAndScrubber
_liveBroadcastLabelTopToBackdropTopDistance
_traitCollection
_defaultItemInlineSize
_defaultItemFullScreenSize
_routePickerButtonInlineSize
_routePickerButtonFullScreenSize
_audioRoutePickerFullScreenSize
_minimumScrubberSize
_doubleRowLayoutMargins
_doubleRowLayoutMarginsWhenShowingScrubInstructions
_doublerowLayoutMarginsWhenShowingCustomContentInfo
initWithTraitCollection:shouldUseCompactFullScreenSize:
playbackControlsViewLayoutMarginsForView:keyboardHeight:isFullScreen:
scrubberInfoLabelFont
scrubberTimeLabelFont
infoLabelFont
shouldUseMacStyle
shouldUsePadStyle
_loadFontsIfNeeded
defaultItemInlineSize
defaultItemFullScreenSize
standardPaddingFullScreen
standardPaddingInline
standardInteritemPadding
additionalInlinePaddingForDodgingSafeArea
routePickerButtonInlineSize
routePickerButtonFullScreenSize
audioRoutePickerFullScreenSize
volumeSliderInlineWidth
volumeSliderCompactFullScreenWidth
volumeSliderRegularFullScreenWidth
volumeSliderPadding
minimumProminentPlayButtonDimension
maximumProminentPlayButtonDimension
maximumTransportControlsWidth
maximumMultiRowTransportControlsWidth
minimumTransportControlsWidth
minimumSingleButtonTransportControlsWidth
minimumScrubberSize
doubleRowLayoutMargins
doubleRowLayoutMarginsWhenShowingScrubInstructions
doublerowLayoutMarginsWhenShowingCustomContentInfo
spacingBetweenScrubInstructionsAndScrubber
liveBroadcastLabelTopToBackdropTopDistance
shouldUseCompactFullScreenSize
setShouldUseCompactFullScreenSize:
traitCollection
setTraitCollection:
fontWithDescriptor:size:
fontDescriptorByAddingAttributes:
fontDescriptor
monospacedDigitSystemFontOfSize:weight:
pointSize
preferredFontForTextStyle:compatibleWithTraitCollection:
_peripheryInsets
_classicMode
_isClassic
displayCornerRadius
statusBarFrame
safeAreaInsets
_playerShouldAutoplay
_hasClientSetVideoGravity
_canShowPictureInPictureButton
_pixelBufferAttributes
_pictureInPictureController
_mediaSelectionPopoverPresentationController
_transitionController
_playbackControlsController
_playerViewControllerView
_overrideLayoutMarginsWhenEmbeddedInline
_overrideTransformForProminentPlayButton
_canToggleVideoGravityWhenEmbeddedInline
_playbackControlsShouldControlSystemVolume
_showsTimecodes
_readyForDisplay
_canStartPictureInPictureAutomaticallyFromInline
_entersFullScreenWhenPlaybackBegins
_exitsFullScreenWhenPlaybackEnds
_shouldUseNetworkingResourcesForLiveStreamingWhilePaused
__hasBegunObservation
_hasPerformedInitialSetup
_wasInitializedUsingWebKitSPI
_requiresImmediateAssetInspection
_playbackControlsIncludeVolumeControls
_canIncludePlaybackControlsWhenInline
_pictureInPictureActive
__targetVideoGravitiesForLayoutClass
__actualContentOverlayView
__defaultPlaybackRateStorage
_finishPreparingForInteractiveDismissalHandler
_pendingRestoreUserInterfaceForPictureInPictureStopHandler
_interactiveDismissalCompletionHandler
__observationController
__behaviorStorage
__numberOfTrackedUserInteractions
_hoverGestureRecognizer
__localizedDiscoverabilityTitleForKeyCommandLocalizationKey
_overrideRouteSharingPolicy
_volumeAnimator
_overrideRoutingContextUID
_customControlItems
_secondScreenConnectionDisplaySize
_videoBounds
playbackControlsViewNeedsUpdateStatusBarAppearance:
playbackControlsView:animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
playerControllerCanRestorePlaybackRateAfterAudioSessionDeactivation:
contentOverlayViewDidAddOrRemoveSubview:
transitionController:willBeginPresentingViewController:
transitionController:willBeginDismissingViewController:
transitionController:targetViewForDismissingViewController:
transitionController:gestureRecognizer:shouldReceiveTouch:
transitionControllerPresentedViewBackgroundColor:
transitionControllerBackgroundViewBackgroundColor:
transitionControllerCanBeginInteractiveDismissalTransition:
transitionControllerCanBeginInteractivePresentationTransition:
transitionControllerBeginInteractivePresentationTransition:
transitionControllerBeginInteractiveDismissalTransition:
transitionController:prepareForFinishingInteractiveTransition:
transitionController:transitionWillComplete:
transitionController:animationProgressDidChange:
fullScreenViewControllerWillBeginFullScreenPresentation:
fullScreenViewControllerWillEndFullScreenPresentation:
viewForFullScreenViewController:
playbackContainerViewForFullScreenViewController:
fullScreenViewController:viewWillTransitionToSize:coordinator:
prefersStatusBarHiddenForFullScreenViewController:
preferredStatusStyleForFullScreenViewController:
keyCommandResponderForFullScreenViewController:
preferredInterfaceOrientationForPresentation
supportedInterfaceOrientations
shouldAutorotate
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
presentationControllerShouldDismiss:
presentationControllerWillDismiss:
presentationControllerDidDismiss:
presentationControllerDidAttemptToDismiss:
pictureInPictureControllerWillStartPictureInPicture:
pictureInPictureControllerDidStartPictureInPicture:
pictureInPictureController:failedToStartPictureInPictureWithError:
pictureInPictureControllerWillStopPictureInPicture:
pictureInPictureControllerDidStopPictureInPicture:
pictureInPictureController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
initWithNibName:bundle:
initWithCoder:
encodeWithCoder:
setRequiresImmediateAssetInspection:
setCanIncludePlaybackControlsWhenInline:
_targetVideoGravitiesForLayoutClass
updateVideoBounds
videoDisplayScale
setShowsTimecodes:
interactiveContentOverlayView
customControlsView
hasCustomPlaybackControls
canControlPlayback
canHidePlaybackControls
setCanHidePlaybackControls:
_inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
_setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
playbackControlsIncludeTransportControls
setPlaybackControlsIncludeTransportControls:
playbackControlsIncludeDisplayModeControls
setPlaybackControlsIncludeDisplayModeControls:
playbackControlsIncludeVolumeControlsControls
setPlaybackControlsIncludeVolumeControls:
volumeControlsCanShowSlider
setVolumeControlsCanShowSlider:
setEntersFullScreenWhenPlaybackBegins:
flashPlaybackControlsWithDuration:
setShouldUseNetworkingResourcesForLiveStreamingWhilePaused:
setCustomControlItems:
setDefaultPlaybackRate:
defaultPlaybackRate
setOverrideLayoutMarginsWhenEmbeddedInline:
overrideLayoutMarginsWhenEmbeddedInline
_activeViewControllerForContentView
viewControllerForFullScreenPresentation
_ensureBehaviorStorage
loadView
performInitialSetupIfNeededAndPossible
performInitialSetup
viewWillAppear:
viewDidAppear:
viewDidDisappear:
viewDidMoveToWindow:shouldAppearOrDisappear:
didMoveToParentViewController:
viewWillTransitionToSize:withTransitionCoordinator:
preferredWhitePointAdaptivityStyle
modalPresentationCapturesStatusBarAppearance
prefersStatusBarHidden
preferredStatusBarStyle
prefersHomeIndicatorAutoHidden
transitioningDelegate
_preferredModalPresentationStyle
_requiresCustomPresentationController
_presentationControllerForPresentedController:presentingController:sourceController:
canBecomeFirstResponder
keyCommands
_handleExitFullScreenKeyCommand:
_handlePlayPauseKeyCommand:
_handleSkipBack15SecondsKeyCommand:
_handleSkipAhead15SecondsKeyCommand:
_handleShowNextFrameKeyCommand:
_handleGoToBeginningKeyCommand:
_handleShowPreviousFrameKeyCommand:
_handleVolumeUpKeyPressedCommand:
_handleVolumeUpKeyReleasedCommand:
_handleVolumeDownKeyPressedCommand:
_handleVolumeDownKeyReleasedCommand:
_handleRewindKeyPressedCommand:
_handleRewindKeyReleasedCommand:
_handleFastForwardKeyPressedCommand:
_handleFastForwardKeyReleasedCommand:
_addObservers
setCanStartPictureInPictureAutomaticallyFromInline:
_isUnsupportedContent
_updateUnsupportedContentIndicatorView
isAudioOnlyContent
_updateAudioOnlyIndicatorView
_updateExternalPlaybackIndicatorView
_updatePlaybackControlsController
_shouldShowPictureInPictureButton
_handleDoubleTapGesture:
_handleSingleTapGesture:
_handleDoubleDoubleTapGesture:
_handleUserInteractionObservationRecognizer:
_beginTrackingUserInteraction
_endTrackingUserInteraction
_isTrackingUserInteraction
_isTrackingUserInteractionWithInteractiveView
_togglePictureInPicture
_mediaSelectionDoneButtonTapped:
_notifyOfMetricsCollectionEvent:
_delegateRespondsTo:
_contentViewWillTransitionToSize:withTransitionCoordinator:
_handleHoverGestureRecognizer:
_loadObservationControllerIfNeeded
_updateContentOverlayViewSuperview
showFullScreenPresentationFromView:completion:
enterFullScreenWithCompletion:
exitFullScreenWithCompletion:
fullScreenViewController
_transitionControllerIfLoaded
_avkitPreferredTransitioningDelegate
_isDescendantOfRootViewController
_transitionFromFullScreenWithReason:animated:completionHandler:
_canEnterFullScreen
_transitionToFullScreenAnimated:interactive:completionHandler:
_transitionFromFullScreenAnimated:completionHandler:
_transitionFromFullScreenAnimated:interactive:completionHandler:
_isTransitioningToOrFromFullScreen
_modalPresentationStyleIsFullScreen
showsTimecodes
setReadyForDisplay:
setVideoBounds:
canStartPictureInPictureAutomaticallyFromInline
entersFullScreenWhenPlaybackBegins
exitsFullScreenWhenPlaybackEnds
setExitsFullScreenWhenPlaybackEnds:
_actualContentOverlayView
_defaultPlaybackRateStorage
set_defaultPlaybackRateStorage:
shouldUseNetworkingResourcesForLiveStreamingWhilePaused
finishPreparingForInteractiveDismissalHandler
setFinishPreparingForInteractiveDismissalHandler:
pendingRestoreUserInterfaceForPictureInPictureStopHandler
setPendingRestoreUserInterfaceForPictureInPictureStopHandler:
interactiveDismissalCompletionHandler
setInteractiveDismissalCompletionHandler:
_behaviorStorage
_hasBegunObservation
set_hasBegunObservation:
_numberOfTrackedUserInteractions
_setNumberOfTrackedUserInteractions:
hoverGestureRecognizer
setHoverGestureRecognizer:
_localizedDiscoverabilityTitleForKeyCommandLocalizationKey
overrideRouteSharingPolicy
setOverrideRouteSharingPolicy:
secondScreenConnectionDisplaySize
setSecondScreenConnectionDisplaySize:
volumeAnimator
setVolumeAnimator:
hasPerformedInitialSetup
setHasPerformedInitialSetup:
wasInitializedUsingWebKitSPI
setWasInitializedUsingWebKitSPI:
overrideRoutingContextUID
setOverrideRoutingContextUID:
requiresImmediateAssetInspection
playbackControlsIncludeVolumeControls
customControlItems
canIncludePlaybackControlsWhenInline
isPictureInPictureActive
deactivationReasons
uiSettings
_FBSScene
contentView
playerViewController:willTransitionToVisibilityOfPlaybackControls:withAnimationCoordinator:
animateAlongsideTransition:completion:
transitionCoordinator
playbackControlsController
presentationContext
playerViewController:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
animateWithDuration:animations:
playerViewControllerDidStopPictureInPicture:
playerViewControllerWillStopPictureInPicture:
playerViewController:failedToStartPictureInPictureWithError:
endBackgroundTask:
isPresentingFullScreenFromInline
playerViewControllerShouldAutomaticallyDismissAtPictureInPictureStart:
playerViewControllerDidStartPictureInPicture:
beginBackgroundTaskWithExpirationHandler:
playerViewControllerWillStartPictureInPicture:
dismissViewControllerAnimated:completion:
playerViewControllerEndReducingResourcesForPictureInPicture:
playerViewControllerBeginReducingResourcesForPictureInPicture:
loadViewIfNeeded
entersFullScreenWhenTapped
numberOfTapsRequired
modalPresentationStyle
parentViewController
playerViewController:shouldExitFullScreenWithReason:
playerViewController:targetViewForDismissalAnimationWithProposedTargetView:
playerViewController:willEndFullScreenPresentationWithAnimationCoordinator:
pause
isCancelled
isInteractive
playerViewControllerShouldMuteVolumeForFullScreenDismissalTransition:
playerViewController:willBeginFullScreenPresentationWithAnimationCoordinator:
attemptRotationToDeviceOrientation
isPresentedFullScreen
setTransitioningDelegate:
setModalPresentationStyle:
exitFullScreenAnimated:completionHandler:
enterFullScreenAnimated:completionHandler:
playerViewController:contentViewWillTransitionToSize:withTransitionCoordinator:
playerViewController:metricsCollectionEventOccured:
stopPictureInPicture
isPictureInPicturePossible
canToggleVideoGravityWhenEmbeddedInline
canShowPictureInPictureButton
setNumberOfTouchesRequired:
setNumberOfTapsRequired:
playerViewControllerShouldStartPictureInPictureFromInlineWhenEnteringBackground:
session
togglePlayback:
doneButtonTapped:
keyCommandWithInput:modifierFlags:action:upAction:discoverabilityTitle:
setDiscoverabilityTitle:
keyCommandWithInput:modifierFlags:action:
isNavigationBarHidden
navigationController
requireGestureRecognizerToFail:
isViewLoaded
_viewControllerForFullScreenPresentationFromView:
convertRect:toView:
dispatchQueue
encodeInteger:forKey:
encodeBool:forKey:
decodeIntegerForKey:
decodeBoolForKey:
playerWithURL:
decodeObjectForKey:
containsValueForKey:
keyPathsForValuesAffectingVideoGravity
iAdPrerollView
setPlaybackControlsShouldControlSystemVolume:
needsLayout
isPictureInPictureSuspended
pictureInPictureWasStartedWhenEnteringBackground
initWithPlayerLayerView:
showsExitFullScreenButton
setShowsExitFullScreenButton:
playbackControlsShouldControlSystemVolume
setWebKitOverrideRouteSharingPolicy:routingContextUID:
keyPathsForValuesAffectingPictureInPicturePossible
keyPathsForValuesAffectingPictureInPictureActive
keyPathsForValuesAffectingPictureInPictureSuspended
keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground
setOverrideTransformForProminentPlayButton:
overrideTransformForProminentPlayButton
setCanToggleVideoGravityWhenEmbeddedInline:
setCanShowPictureInPictureButton:
activeContentViewDidChange
popoverPresentationController
setPermittedArrowDirections:
setSourceRect:
_setIgnoreAppSupportedOrientations:
_ignoreAppSupportedOrientations
presentViewController:animated:completion:
videoGravityButtonTapped:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
toggleMuted:
prepareForFinishingInteractiveTransition:
enterAutoplayPhase
exitAutoplayPhase
flashAutoplayControls
setEntersFullScreenWhenTapped:
_editing
_parameters
_zoomingBehavior
_editView
_imageGenerator
_playerTimeObserver
_containerView
_toolbar
_cancelButton
_doneButton
_flexibleSpaceItem
_playButton
_pauseButton
_pendingImageRequests
_requestedImageTimeToCMTimeMap
_currentRotation
_rotationTransform
editViewDidBeginScrubbing:
editViewDidEndScrubbing:
editView:currentTimeDidChange:
editView:trimStartTimeDidChange:
editView:trimEndTimeDidChange:
editViewWillBeginRequestingThumbnails:
editViewDidFinishRequestingThumbnails:
editViewDuration:
editViewThumbnailAspectRatio:
editView:requestThumbnailImageForTimestamp:
startEditing
endEditing
rotateClockwise
videoCompostitionRotatingAsset:
cancel:
play:
pause:
done:
_generateThumbnails
_makeBarButtonItems
isEditing
setEditing:
rotationTransform
setRotationTransform:
parameters
zoomingBehavior
setZoomingBehavior:
setObservationController:
editView
setEditView:
imageGenerator
setImageGenerator:
playerTimeObserver
setPlayerTimeObserver:
setContainerView:
toolbar
setToolbar:
cancelButton
setCancelButton:
doneButton
setDoneButton:
flexibleSpaceItem
setFlexibleSpaceItem:
playButton
setPlayButton:
pauseButton
setPauseButton:
pendingImageRequests
requestedImageTimeToCMTimeMap
currentRotation
setCurrentRotation:
items
systemWhiteColor
initWithBarButtonSystemItem:target:action:
generateCGImagesAsynchronouslyForTimes:completionHandler:
valueWithCMTime:
cancelAllCGImageGeneration
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
avkit_setCurrentEditBehaviorContext:
actionWithTitle:style:handler:
addAction:
editBehaviorAlertActionsForDoneButtonTap:
setBarButtonItem:
alertControllerWithTitle:message:preferredStyle:
editBehaviorDidCancel:
setRenderSize:
setInstructions:
videoCompositionWithPropertiesOfAsset:
setLayerInstructions:
setTimeRange:
videoCompositionInstruction
setTransform:atTime:
setTrackID:
trackID
videoCompositionLayerInstruction
preferredTransform
naturalSize
tracksWithMediaType:
setVideoComposition:
asset
removeTimeObserver:
setItems:
setAxis:
initWithArrangedSubviews:
setBarStyle:
setMaximumSize:
setAppliesPreferredTrackTransform:
assetImageGeneratorWithAsset:
addPeriodicTimeObserverForInterval:queue:usingBlock:
avkit_currentEditBehaviorContext
_associatedFullScreenViewController
_sourceFullScreenViewController
_contentView
_canShowWhileLocked
targetForAction:withSender:
viewWillMoveToWindow:
attachContentView
associatedFullScreenViewController
setAssociatedFullScreenViewController:
sourceFullScreenViewController
setSourceFullScreenViewController:
setContentView:
_type
_itemIdentifier
_MIMEType
_extendedLanguageTag
_value
_rawData
_array
_dictionary
_initialRepresentation
initWithMessageType:itemIdentifier:
initWithMessageType:itemIdentifier:dictionaryRepresentation:
dictionaryRepresentation
allRecognizedKeysForDictionaryRepresentation
jsonDataRepresentation
headerTextRepresenationForBodyDataLength:extraHeaders:
shouldUseJSONForBody
messageDataRepresentation
type
itemIdentifier
setItemIdentifier:
MIMEType
setMIMEType:
extendedLanguageTag
setExtendedLanguageTag:
rawData
setRawData:
array
setArray:
dictionary
setDictionary:
initialRepresentation
appendData:
dataUsingEncoding:allowLossyConversion:
compressedDataUsingAlgorithm:error:
_nameForDataCompressionAlgorithm:
componentsJoinedByString:
addEntriesFromDictionary:
airMessageCanonicalForm
initWithDictionary:
arrayWithObject:
dataWithJSONObject:options:error:
sortedArrayUsingSelector:
compare:
commonDictionaryRepresentationKeys
base64EncodedStringWithOptions:
dictionaryRepresentationCommon
initWithBase64EncodedString:options:
isAirMessagingEnabled
currentOSIdentifier
currentAppIdentifier
buildVersion
_decompressBodyData:forCompressionAlgorithm:
messageWithRequiresLinearPlayback:itemIdentifier:
messageWithUserScrubToAssetTime:itemIdentifier:
messageWithExternalMetadata:itemIdentifier:
messageWithPosterArtworkMetadata:itemIdentifier:
messageWithParts:
intValue
decompressedDataUsingAlgorithm:error:
lowercaseString
environment
processInfo
standardUserDefaults
initWithSuiteName:
stringWithUTF8String:
absoluteString
avkitACMIdentifier
null
removeObjectForKey:
_shouldShowAlternateActionButtonImage
_contentViewController
willAnimatePictureInPictureStart
didAnimatePictureInPictureStart
willAnimatePictureInPictureStop
didAnimatePictureInPictureStop
viewWillResize
viewDidResize
actionButtonTapped
shouldShowAlternateActionButtonImage
shouldShowLoadingIndicator
initWithPictureInPicturePlayerLayerView:
setContentViewController:
setShouldShowAlternateActionButtonImage:
contentViewController
removeFromParentViewController
willMoveToParentViewController:
addChildViewController:
_imageView
_titleLabel
_subtitleLabel
_textLabelsContainer
setTitleString:subtitleString:
setSpacing:
size
constraintEqualToAnchor:multiplier:
addObjectsFromArray:
setBaselineRelativeArrangement:
setAlignment:
setTextColor:
setTextAlignment:
setLineBreakMode:
setContentMode:
initWithImage:
imageNamed:inBundle:
mutableCopyWithZone:
classForCoder
_timing
anchorValue
anchorTimeStamp
encodeDouble:forKey:
initWithAnchorValue:anchorTimeStamp:rate:
decodeDoubleForKey:
initWithValueTiming:
allocWithZone:
setAnchorValue:
setAnchorTimeStamp:
_timeStamp
isEqualToValueTiming:
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
currentValue
timeStampForValue:
setValueTiming:
_scene
_debugText
_secondScreenViewController
setScene:
setDebugText:
setSecondScreenViewController:
_currentEnabledVideoTrack
_currentDisplay
_currentVideoDynamicRange
_updateDebugLabelText
_actuallyUpdateDebugLabelTextWithCurrentResolution:currentVideoDynamicRange:
scene
debugText
secondScreenViewController
nativeBounds
matchContent
preferredHdrMode
preferences
height
width
hdrMode
currentMode
loadValuesAsynchronouslyForKeys:completionHandler:
statusOfValueForKey:error:
assetTrack
formatDescriptions
_displayID
uniqueId
displays
tracks
hasPrefix:
_context
_presentationWindowForDisablingAutorotation
initWithPresentedViewController:presentingViewController:
shouldRemovePresentersView
shouldPresentInFullscreen
containerViewWillLayoutSubviews
presentationTransitionWillBegin
presentationTransitionDidEnd:
_ensureOrientation:enablingMixedOrientations:
dismissalTransitionWillBegin
_prepareDismissingTransitionContext
dismissalTransitionDidEnd:
_observeSceneDidBecomeActiveForRestoringRotatability
context
presentationWindowForDisablingAutorotation
setPresentationWindowForDisablingAutorotation:
endDisablingInterfaceAutorotation
beginDisablingInterfaceAutorotation
_setViewDelegateContentOverlayInsetsAreClean:
setWindowLevel:
windowLevel
initWithWindowScene:
presented
_unfairLock
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
initWithOwner:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
startObserving:keyPath:includeInitialValue:observationHandler:
startObserving:keyPaths:observationHandler:
startObserving:keyPath:observationHandler:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObservingNotificationForName:object:notificationCenter:observationHandler:
stopObserving:
stopAllObservation
_stopAllObservation
stopObserving
allValues
initWithName:object:userInfo:
token
startObserving:completion:
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
initWithValue:oldValue:keyPath:observationToken:
_oldValue
_keyPath
_observationToken
oldValue
keyPath
observationToken
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
observeValueForKeyPath:ofObject:change:context:
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
includeInitialValue
includeChanges
keyPaths
changesBlock
removeObserver:forKeyPath:context:
valueForKeyPath:
addObserver:forKeyPath:options:context:
globallyUniqueString
_playbackControlsIncludeTransportControls
_playbackControlsIncludeDisplayModeControls
_zoomingEnabled
_livePreviewActive
_hasMicrophone
_canStartPictureInPictureAutomaticallyWhenEnteringBackground
_playbackControlsIncludePictureInPictureButton
_playbackControlsShowsLoadingIndicator
_livePreviewContainerView
_livePreviewPlayerController
_playerControllerToRestore
_livePreviewAspectRatio
beginScrubbing
scrubToTime:resolution:
endScrubbing
setZoomingEnabled:
setLivePreviewActive:
setHasMicrophone:
setCanStartPictureInPictureAutomaticallyWhenEnteringBackground:
setPlaybackControlsIncludePictureInPictureButton:
setLivePreviewAspectRatio:
setBackgroundColor:forContainerOfControlItem:
_updatePlaybackControlsControllerAndZoomingBehavior
_updatePictureInPictureController
isZoomingEnabled
livePreviewContainerView
isLivePreviewActive
hasMicrophone
canStartPictureInPictureAutomaticallyWhenEnteringBackground
playbackControlsIncludePictureInPictureButton
livePreviewAspectRatio
livePreviewPlayerController
setLivePreviewPlayerController:
playerControllerToRestore
setPlayerControllerToRestore:
playbackControlsShowsLoadingIndicator
setPlaybackControlsShowsLoadingIndicator:
_playingOnSecondScreen
_canShowStatusBarBackgroundGradientWhenStatusBarVisible
_observingStatusBarHidden
_contentOverlayViewSubview
_statusBarBackgroundGradientView
_videoContentFrame
initWithFrame:activeContentView:
setVideoGravity:removingAllSubayerTransformAnimations:
activeContentView
canShowStatusBarBackgroundGradientWhenStatusBarVisible
setCanShowStatusBarBackgroundGradientWhenStatusBarVisible:
videoContentFrame
setVideoContentFrame:
isPlayingOnSecondScreen
setPlayingOnSecondScreen:
initWithFrame:playerLayerView:contentOverlayView:
setContentOverlayViewSubview:
removeAllSublayerTransformAnimations
didMoveToSuperview
_updateStatusBarBackgroundGradientViewAlpha
_frameForStatusBarBackgroundGradientView
_resolvedContentFrame
contentOverlayViewSubview
statusBarBackgroundGradientView
isObservingStatusBarHidden
setObservingStatusBarHidden:
avkit_removeAllSublayerTransformAnimations
animationKeys
sublayers
animationForKey:
containsString:
removeAnimationForKey:
_fullScreen
_activeContentView
_lastKnownWindow
_contentAspectRatio
_previousBounds
setLastKnownWindow:
setContentAspectRatio:
zoomToPoint:
scrollView:contentSizeForZoomScale:withProposedSize:
setFrame:
willMoveToWindow:
_contentSizeForScale:
_contentRectForScale:
_updateMinMaxZoomScales
_updateMinMaxZoomScales:
_contentInsets
contentAspectRatio
isFullScreen
setFullScreen:
previousBounds
setPreviousBounds:
lastKnownWindow
zoomScale
setZoomScale:
setMaximumZoomScale:
maximumZoomScale
setMinimumZoomScale:
minimumZoomScale
setContentInset:
contentInset
setScrollEnabled:
setBouncesVertically:
setBouncesHorizontally:
setAlwaysBounceHorizontal:
setAlwaysBounceVertical:
zoomToRect:animated:
setContentSize:
setDecelerationRate:
setShowsHorizontalScrollIndicator:
setShowsVerticalScrollIndicator:
setBouncesZoom:
setContentInsetAdjustmentBehavior:
_previousUnusedData
_messageClass
initWithMessageClass:
resetState
dataForMessage:
reverseTransformerForMessageData:
messageClass
messageTransformerWithClass:
_prefersThumbVisible
_trimming
_dataSource
_movieScrubber
movieScrubber:valueDidChange:
movieScrubber:editingStartValueDidChange:
movieScrubber:editingEndValueDidChange:
movieScrubberDidBeginScrubbing:withHandle:
movieScrubberDidEndScrubbing:withHandle:
movieScrubber:widthDelta:originXDelta:
movieScrubberWillBeginRequestingThumbnails:
movieScrubberDidFinishRequestingThumbnails:
movieScrubberWillBeginEditing:
movieScrubberDidBeginEditing:
movieScrubberDidCancelEditing:
movieScrubberEditingAnimationFinished:
movieScrubber:willZoomToMinimumValue:maximumValue:
movieScrubberDidBeginAnimatingZoom:
movieScrubberDidEndAnimatingZoom:
movieScrubber:requestThumbnailImageForTimestamp:isSummaryThumbnail:
movieScrubberDuration:
movieScrubber:evenlySpacedTimestamps:startingAt:endingAt:
movieScrubberThumbnailAspectRatio:
movieScrubber:requestThumbnailImageForTimestamp:
trimStartTime
trimEndTime
reloadData
userObservationGestureRecognizerFired:
setThumbnailImage:forTimestamp:
setDataSource:
setPrefersThumbVisible:
setTrimming:
setCurrentTime:
dataSource
prefersThumbVisible
isTrimming
movieScrubber
setMovieScrubber:
setThumbIsVisible:
setEditable:
setEdgeInset:
trimEndValue
trimStartValue
itemWithAirDictionaryRepresentation:
airRepresentationForArray:
itemArrayWithAirRepresentations:
airDictionaryRepresentation
identifier
setExtraAttributes:
time
dataType
startDate
extraAttributes
setIdentifier:
localeWithLocaleIdentifier:
setLocale:
setTime:
setDuration:
setStartDate:
_transitionInteractive
_transitionState
_transitionDirection
_transitionProgress
_contentTransitioningDelegate
_incomingContentView
_targetContentOffset
_stateDescription
_boundsOrContentSizeAdjustmentCount
_frameForActiveContentView
_frameForTransitioningContentView
_setTransitionState:transitionDirection:transitionProgress:
performTransition:
_updateTransitionStateIfPossible
_performBoundsOrContentSizeAdjustment:
_isAdjustingBoundsOrContentSize
_updateSizeAndContentFrame
_ensureContentViews
_frameExcludingActiveContent
_frameExcludingTransitioningContent
_canTransitionFromState:toState:
setStateDescription:
_descriptionForState:
_makeStateDescription
transitionState
transitionDirection
transitionProgress
contentTransitioningDelegate
setContentTransitioningDelegate:
incomingContentView
isTransitionInteractive
setTransitionInteractive:
targetContentOffset
setTargetContentOffset:
stateDescription
frameForActiveContentView
setFrameForActiveContentView:
frameForTransitioningContentView
setFrameForTransitioningContentView:
boundsOrContentSizeAdjustmentCount
setBoundsOrContentSizeAdjustmentCount:
_interpageSpacing
numberWithLong:
numberWithInteger:
_isHorizontalBouncing
setContentOffset:animated:
valueWithCGPoint:
CGPointValue
setDirectionalLockEnabled:
_setInterpageSpacing:
setPagingEnabled:
_selectedAudioMediaSelectionOption
_selectedLegibleMediaSelectionOption
initWithStyle:
playerControllerMediaSelectionChanged:
_isSelectedOrCurrentAudioMediaSelectionOption:
_isSelectedOrCurrentLegibleMediaSelectionOption:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:willDisplayHeaderView:forSection:
tableView:didSelectRowAtIndexPath:
deselectRowAtIndexPath:animated:
setAccessoryType:
indexPathForCell:
visibleCells
section
representedObject
cellForRowAtIndexPath:
textLabel
setRepresentedObject:
dequeueReusableCellWithIdentifier:forIndexPath:
tableView
flashScrollIndicators
notifyWhenInteractionChangesUsingBlock:
initiallyInteractive
indexPathsForSelectedRows
numberOfSections
setSeparatorStyle:
setEstimatedRowHeight:
lineHeight
preferredFontForTextStyle:
registerClass:forCellReuseIdentifier:
_representedObject
setBackgroundView:
configureLayerView:
contentConfig
configWithContentConfig:
layerWithFillColor:opacity:filterType:
initWithEffect:
effectCombiningEffects:
effectWithBlurRadius:
colorEffectSaturate:
_mediaSelectionTableViewController
initWithPlayerController:doneButtonTarget:doneButtonAction:
mediaSelectionTableViewController
setOverrideUserInterfaceStyle:
navigationBar
setModalPresentationCapturesStatusBarAppearance:
setRightBarButtonItem:
navigationItem
initWithRootViewController:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
_pictureInPicturePossible
_pictureInPictureSuspended
_canStopPictureInPicture
_otherPictureInPictureActive
_wantsImmediateAssetInspection
_wasPlayingWhenPictureInPictureInterruptionBegan
_wantsResourceReduction
_retainsSourceDuringPictureInPicturePlayback
_allowsPictureInPictureFromInlineWhenEnteringBackground
_pictureInPictureWasStartedWhenEnteringBackground
_playerLayer
_platformAdapter
_sourceIfRetainedDuringPictureInPicturePlayback
_playerControllerIsPlayingObservationToken
_prerollDelegate
_contentSource
pictureInPicturePlatformAdapter:failedToStartError:
pictureInPicturePlatformAdapter:prepareToStopForRestoringUserInterface:
pictureInPicturePlatformAdapterPrepareToStopForDismissal:
pictureInPicturePlatformAdapter:stopPictureInPictureAndRestoreUserInterface:
pictureInPicturePlatformAdapter:handlePlaybackCommand:
pictureInPicturePlatformAdapter:statusDidChange:fromStatus:
pictureInPicturePlatformAdapterBeginReducingResourcesForEligibleOffScreenState
pictureInPicturePlatformAdapterEndReducingResourcesForEligibleOffScreenState
initWithPlayerLayer:
initWithContentSource:
_commonInitWithSource:
stopPictureInPictureEvenWhenInBackground
contentSourceVideoRectInWindowChanged
setAllowsPictureInPictureFromInlineWhenEnteringBackground:
setPictureInPictureActive:
setOtherPictureInPictureActive:
setPictureInPicturePossible:
startObservingPlayerController:
stopObservingPlayerController:
sampleBufferDisplayLayer
reloadPrerollAttributes
invalidatePlaybackState
sampleBufferDisplayLayerRenderSizeDidChangeToSize:
sampleBufferDisplayLayerDidAppear
sampleBufferDisplayLayerDidDisappear
setContentSource:
_sbdlPlayerController
_delegateIfRespondsToSelector:
_stopPictureInPictureAndRestoreUserInterface:
_observePlayerLayer:
setPictureInPictureSuspended:
canStopPictureInPicture
_setCanStopPictureInPicture:
platformAdapter
sourceIfRetainedDuringPictureInPicturePlayback
setSourceIfRetainedDuringPictureInPicturePlayback:
playerControllerIsPlayingObservationToken
setPlayerControllerIsPlayingObservationToken:
isOtherPictureInPictureActive
wantsImmediateAssetInspection
setWantsImmediateAssetInspection:
wasPlayingWhenPictureInPictureInterruptionBegan
setWasPlayingWhenPictureInPictureInterruptionBegan:
wantsResourceReduction
retainsSourceDuringPictureInPicturePlayback
setRetainsSourceDuringPictureInPicturePlayback:
allowsPictureInPictureFromInlineWhenEnteringBackground
setPictureInPictureWasStartedWhenEnteringBackground:
prerollDelegate
setPrerollDelegate:
contentSource
initialRenderSize
dictionaryWithObject:forKey:
pictureInPictureControllerSkipPreroll:
pictureInPictureControllerPrerollAttributes:
_imageNamed:compatibileWithTraitCollection:
pictureInPictureButtonStartImageCompatibleWithTraitCollection:
pictureInPictureButtonStopImageCompatibleWithTraitCollection:
pictureInPictureButtonStartImage
pictureInPictureButtonStopImage
systemImageNamed:withConfiguration:
configurationByApplyingConfiguration:
_sampleBufferDisplayLayer
_sampleBufferPlaybackDelegate
_initialRenderSize
initWithSampleBufferDisplayLayer:playbackDelegate:
initWithSampleBufferDisplayLayer:initialRenderSize:playbackDelegate:
_commonInitWithSampleBufferDisplayLayer:initialRenderSize:playbackDelegate:
sampleBufferPlaybackDelegate
minFrameDuration
avkit_timeForFrameSteppedByFrameCount:fromFrameAtTime:
_avkit_timeForFrameUsingSampleCursorSteppedByFrameCount:fromFrameAtTime:
_avkit_findTimeForFrameUsingFrameRateSteppedByFrameCount:fromFrameAtTime:
_avkit_frameRateIsValid:
avkit_makePictureInPicturePlatformAdapterContentPlaceholderLayer
_titleFont
_action
_tintColor
initWithTitle:type:
setTitle:
setImage:
setTintColor:
setTitleFont:
titleFont
_updateTintColor
setAccessibilityLabel:
setAccessibilityAttributedLabel:
setAccessibilityHint:
setAccessibilityAttributedHint:
_buttonTouchUpInside:
_updateButton
action
setAction:
tintColor
_label
_loadingIndicatorAlignment
_text
_attributedText
_font
_numberOfLines
_loadingIndicatorLeftAlignmentConstraint
_loadingIndicatorRightAlignmentConstraint
label
labelIfLoaded
setFont:
setLoadingIndicatorAlignment:
setText:
setAttributedText:
tintColorDidChange
viewForFirstBaselineLayout
viewForLastBaselineLayout
setNumberOfLines:
loadingIndicatorAlignment
text
attributedText
font
numberOfLines
loadingIndicatorLeftAlignmentConstraint
setLoadingIndicatorLeftAlignmentConstraint:
loadingIndicatorRightAlignmentConstraint
setLoadingIndicatorRightAlignmentConstraint:
translatesAutoresizingMaskIntoConstraints
isEqualToAttributedString:
_needsInitialLayout
initWithFrame:contentView:
beginManagingContentView
needsInitialLayout
setNeedsInitialLayout:
_mediaControls
_clientCompletionHandler
willBeginPlaybackWithCompletionHandler:
willBeginPlaybackFromAppWithBundleID:completionHandler:
_invokeClientCompletionHandlerWithPlaybackState:
externalPlaybackStateDescriptionForState:
present
setDismissHandlerWithReason:
deviceType
outputDevices
outputContextForID:
routingContextUID
startPrewarming
initWithConfiguration:
setStyle:
likelyExternalDestinations
providesExternalVideoPlayback
destination
prefersLikelyDestinationsOverCurrentRoutingSession
currentRoutingSession
longFormVideoRoutingSessionManager
hasRouteSharingPolicyLongFormVideo:
_tc_flags
_frameNumber
_timecodeStruct
_frameDuration
initWithTimecodeString:
stringIsValidNumericValue:
timecodeStruct
setTimecodeStruct:
frameNumber
setFrameNumber:
frameDuration
setFrameDuration:
tc_flags
setTc_flags:
rangeOfCharacterFromSet:
invertedSet
decimalDigitCharacterSet
objectAtIndex:
componentsSeparatedByCharactersInSet:
punctuationCharacterSet
_frameCount
_videoTrack
_timecodeTrack
_timecodes
_maxTimecode
_maxFrameNumber
_timeObserver
_observationInterval
initWithTimecodeTrack:videoTrack:
calculateMaxFrameAndTimecode
maxTimecodeString
maxFrameCountString
calculateFrameNumberAtCMTime:
calculateTimecodeAtFrame:
calculateFrameNumberAtTimecode:
timecodeForFrameNumber32UsingFormatDescription:timecodeStartFrame:
timecodeForFrameNumber64UsingCachedDescription:
offsetFor:fromTimecode:
timecodeForOffset:from:timecode:
calculateFrameNumberAtTimeInterval:
timeIntervalForFrameNumber:
cacheTimecodeDescriptionForSampleBuffer:
validateCMTime:
readTimecodes
timecodeAvailable
timecodeTrack
setTimecodeTrack:
observationInterval
cancelReading
copyNextSampleBuffer
startReading
addOutput:
assetReaderTrackOutputWithTrack:outputSettings:
initWithAsset:error:
naturalTimeScale
timeRange
_setStatusAndNotifyDelegateIfNeeded:
_updateStatus
_setRoutingVideoToHostedWindow:pictureInPictureViewController:source:
_updateStatusUsingProposedStatus:
setScale:
_forceLowQualityEffect
_customBackgroundColor
_groupLeader
_dependents
_activeBackdropEffect
updateActiveBackdropEffectIfGroupLeader
isCaptureOnly
setCaptureOnly:
setCustomBackgroundColor:
setGroupLeader:
updateGroupLeader
addDependent:
removeDependent:
_updateFilters
_ensureDependents
_enumerateDependents:
forceLowQualityEffect
setForceLowQualityEffect:
customBackgroundColor
groupLeader
dependents
activeBackdropEffect
setActiveBackdropEffect:
filters
reducedTransparencyColor
averageFilter
colorMatrixFilter
blurFilter
setFilters:
setGroupName:
groupName
captureOnly
colorWithRed:green:blue:alpha:
setValue:forKey:
valueWithCAColorMatrix:
_getAirPlayStatusQueue
_activeTintColor
_routePickerButton
_oldSize
_buttonHighlightAnimator
_outputContext
_airPlayActive
_prioritizesVideoDevices
_routePickerButtonMicaPackage
_routePickingControls
_routePickerButtonStyle
activeTintColor
setActiveTintColor:
isAirPlayActive
setAirPlayActive:
setCustomButton:
prioritizesVideoDevices
_createOrUpdateRoutePickerButton
_routePickerButtonTapped:
_routePickerButtonTouchDown:
_routePickerButtonTouchDragEnter:
_routePickerButtonTouchUp:
_setRoutePickerButtonAlpha:animated:
_registerNotifications
_updateAirPlayActive
_setupOutputContext
_isAirPlayActive
_defaultActiveTintColor
_normalizedRectInWindow
routePickerButtonStyle
setRoutePickerButtonStyle:
setDismissHandler:
routePickerViewDidEndPresentingRoutes:
setSortByIsVideoRoute:
configuration
initWithRouteSharingPolicy:routingContextUID:
overrideRouteSharingPolicyForRoutePickerView:
overrideRoutingContextUIDForRoutePickerView:
routePickerViewWillBeginPresentingRoutes:
addSublayer:
setContentVerticalAlignment:
setContentHorizontalAlignment:
setContentEdgeInsets:
buttonWithType:
getRed:green:blue:alpha:
commit
setPosition:
setDisableActions:
begin
_contentLayer
_videoRectWhenPIPBegan
initWithDisplayScale:placeholderImage:opaque:videoRectWhenPIPBegan:
layoutSublayers
setCustomText:
customText
contentLayer
videoRectWhenPIPBegan
initWithDisplayScale:placeholderImage:opaque:
_imageSize
_languageAwareOutsets
_lineHeight
_baselineOffset
_textLayer
_imageLayer
_customText
layoutSublayersWithTextAndImageUsingInsetBounds:
textBoundingRectWhenDrawnInRect:
canRenderAttributedTextWithoutTruncationInsideRect:
boundingRectWithSize:options:context:
setString:
initWithString:attributes:
setWrapped:
setTruncationMode:
setAlignmentMode:
setForegroundColor:
setFontSize:
setContentsScale:
setContentsGravity:
setContents:
ascender
_automaticallyDrawsRoundedCorners
_prefersLowQualityEffects
_circular
_layoutView
addSubview:applyingMaterialStyle:tintEffectStyle:
setAutomaticallyDrawsRoundedCorners:
setCircular:
setPrefersLowQualityEffects:
_updateBackdropShape
_ensureOrRemoveLayoutView
_isContainedInOverlappingBackgroundView
automaticallyDrawsRoundedCorners
prefersLowQualityEffects
isCircular
layoutView
setLayoutView:
sendSubviewToBack:
_trackingState
_longPressEnabled
_showsHighlightedAppearance
_micaPackageStateName
_highlightAnimator
_micaPackage
_micaPackageContainerView
_longPressTimer
_translationOfPanFromPreviousTouch
_cumulativeTranslationSincePanningBegan
_locationOfTouchInWindow
_initialPreciseLocationOfTouch
setMicaPackage:
setMicaPackageStateName:
triggerSelectionChangedFeedback
setShowsHighlightedAppearance:
setTrackingState:
setNeedsUpdateGlyphRenderingMode
imageNameForMicaPackageState
setBounds:
_updateMicaPackage:
micaPackageStateName
isLongPressEnabled
setLongPressEnabled:
translationOfPanFromPreviousTouch
setTranslationOfPanFromPreviousTouch:
cumulativeTranslationSincePanningBegan
setCumulativeTranslationSincePanningBegan:
locationOfTouchInWindow
setLocationOfTouchInWindow:
highlightAnimator
setHighlightAnimator:
micaPackage
imageView
setImageView:
micaPackageContainerView
setMicaPackageContainerView:
initialPreciseLocationOfTouch
setInitialPreciseLocationOfTouch:
longPressTimer
setLongPressTimer:
trackingState
showsHighlightedAppearance
position
removeFromSuperlayer
precisePreviousLocationInView:
preciseLocationInView:
transform
setIsAccessibilityElement:
_interval
_currentTime
_timer
_minTime
_maxTime
interval
setInterval:
currentTime
minTime
setMinTime:
maxTime
setMaxTime:
seekableTimeRangeDuration
encodeObject:forKey:
automaticallyNotifiesObserversOfCurrentTime
CMTimeRangeValue
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
currentTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
isThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
targetTime
setTargetTime:
_requiredPrioritySizes
_veryHighPrioritySizes
_highPrioritySizes
_mediumPrioritySizes
_lowPrioritySizes
_currentTotalSize
addSize:withPriority:
removeLastSizeOfPriority:
currentTotalSize
setCurrentTotalSize:
requiredPrioritySizes
setRequiredPrioritySizes:
veryHighPrioritySizes
setVeryHighPrioritySizes:
highPrioritySizes
setHighPrioritySizes:
mediumPrioritySizes
setMediumPrioritySizes:
lowPrioritySizes
setLowPrioritySizes:
sizeValue
valueWithSize:
sizesResolvingFirstPrioritizedSize:secondPrioritizedSize:inAvailableWidth:
_contentZoomingView
_doubleTapGestureRecognizer
_handleDoubleTapGestureRecognizer:
_updateZoomingView
contentZoomingView
setContentZoomingView:
doubleTapGestureRecognizer
setDoubleTapGestureRecognizer:
_startNextContentTransitionButtonEnabled
_startPreviousContentTransitionButtonEnabled
_contentTransitioningPlayer
_customContentTransitioningInfoPanel
_contentTransitionView
contentTransitioningViewShouldBeginDragging:locationInView:
contentTransitioningView:shouldBeginTransitionWithDirection:
contentTransitioningPlayerContentViewForTransition:
contentTransitioningViewDidChangeTransitionStatus:oldState:oldTransitionDirection:oldProgress:
setVideoGravityForTransitioningContent:
startContentTransition:
_transitionDirectionForContentTransitionType:
contentTransitioningOverlayView
activeContentTransitionType
isContentTransitionInteractive
setStartNextContentTransitionButtonEnabled:
setStartPreviousContentTransitionButtonEnabled:
updateStartLeftRightContentTransitionButtonsEnabled
setCustomContentTransitioningInfoPanel:
contentTransitionTypeForTransitionDirection:
contentTransitioningPlayer
setContentTransitioningPlayer:
isStartNextContentTransitionButtonEnabled
isStartPreviousContentTransitionButtonEnabled
customContentTransitioningInfoPanel
contentTransitionView
setContentTransitionView:
_legacyDelegate
legacyDelegate
setLegacyDelegate:
playerViewControllerDidCancelContentTransition:
playerViewControllerWillCancelContentTransition:
playerViewControllerDidCompleteContentTransition:
playerViewControllerWillCompleteContentTransition:
playerViewController:didUpdateContentTransitionProgress:
playerViewControllerWillBeginContentTransition:
playerViewController:playerForContentTransitionType:
_newsWidgetPlayerBehaviorContext
_newsWidgetPlayerLegacyBehavior
_presentationContext
_transitionAnimator
_clientAnimator
_allAnimators
initWithTransitionContext:
transitionAnimatorProgress
startInteractiveTransition
_presentationTransitionWillBegin
_dismissalTransitionWillBegin
pauseInteractiveTransition
updateWithPercentComplete:scale:translation:rotation:
finishInteractiveTransition
_animateFinishInteractiveTransition
_freezeDismissingViewForFinishing
cancelInteractiveTransition
_animateAlongsideInteractivePresentationTransitionAnimationForCancelling
_animateAlongsideInteractiveDismissalTransitionAnimationForCancelling
addRunAlongsideAnimationsIfNeeded
completeTransition:
_presentationTransitionDidEnd:
_dismissalTransitionDidEnd:
_startOrContinueAnimatorsReversed:
_initialFrameForPresentedView
_finalFrameForPresentedView
_transformForScale:translation:rotation:locationInWindow:sourceRectInContainerView:
_updateCornerAppearanceAttributesOfView:toSourceView:similarity:
_sourceViewFrameInContainerView
setPresentationContext:
transitionAnimator
clientAnimator
allAnimators
finalFrameForViewController:
continueAnimationWithTimingParameters:durationFactor:
timingParameters
setReversed:
pauseAnimation
updateInteractiveTransition:
__runAlongsideAnimations
_alongsideAnimationsCount
addKeyframeWithRelativeStartTime:relativeDuration:animations:
animateKeyframesWithDuration:delay:options:animations:completion:
setFractionComplete:
makeObjectsPerformSelector:
viewControllerForKey:
insertSubview:belowSubview:
setScrubsLinearly:
initWithAnimationCurve:
isReversed
fractionComplete
transitionDuration
_debugIdentifier
_rowHeads
_rowSpacing
initWithLayoutRowHeads:
layoutFramesInBoundingSize:
itemsThatFitSize:
prioritizedSizeThatFitsSize:
setRowSpacing:afterRow:
layoutHeightThatFitsRowsStartingWithRow:
_flexibleWidthMapForLayoutItemsBeginningWithLayoutItem:endingWithItem:withAvailableSize:
_lastVisibleLayoutItemAttributesFrom:
_heightForRow:startingFrom:inBoundingSize:
debugIdentifier
setDebugIdentifier:
rowHeads
setRowHeads:
rowSpacing
setRowSpacing:
enumerateObjectsUsingBlock:
valueWithRect:
arrayWithCapacity:
_suppressesAccessibilityHairlineThickening
initWithSize:
setFill
fillRect:
imageWithActions:
resizableImageWithCapInsets:
imageWithRenderingMode:
avkit_loadedImageNames
avkit_flatWhiteResizableTemplateImage
avkit_imageNamed:completion:
_packageName
_stateController
_layoutDirection
_rootLayer
_targetSize
_unscaledSize
stateController:didSetStateOfLayer:
stateController:transitionDidStart:speed:
stateController:transitionDidStop:completed:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
CAMLParser:didFailToFindClassWithName:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
initWithPackageName:layoutDirection:
rootLayer
setTargetSize:
setState:color:
removeCompositingFiltersWithName:
_setState:
_recursivelyFindSublayerWithName:rootLayer:
_recursivelySetFillColor:rootLayer:
_recursivelyRemoveCompositingFiltersWithName:rootLayer:
transitionToStateWithName:
transitionToStateWithName:onLayer:
availableStates
availableStatesOnLayer:
sublayerWithName:
_loadRootLayerIfNeeded
targetSize
unscaledSize
setUnscaledSize:
packageName
stateController
layoutDirection
setLayoutDirection:
setRootLayer:
initWithLayer:
result
parseContentsOfURL:
parser
activateBackground:
states
setState:ofLayer:transitionSpeed:
stateWithName:
compositingFilter
setFillColor:
classSubstitions
asynchronouslyPrepareMicaPackageWithName:layoutDirection:completion:
_includedControlType
_volumeButtonMicaPackageStateName
_volumeButton
_prominentPlayButtonContainer
_volumeButtonContainer
initWithFrame:styleSheet:
hasVisibleControls
setIncludedControlType:
setVolumeButtonMicaPackageStateName:
_updateFramesAndHitRectInsets
_frameForIncludedViewType:
_makeVolumeButtonAndContainerIfNeeded
_makeVolumeButtonAndContainer
_makeProminentPlayButtonAndContainerIfNeeded
_makeProminentPlayButtonAndContainer
includedControlType
volumeButtonMicaPackageStateName
volumeButton
setVolumeButton:
prominentPlayButtonContainer
setProminentPlayButtonContainer:
volumeButtonContainer
setVolumeButtonContainer:
UIEdgeInsetsValue
isEqualToValue:
_animations
_completions
addCoordinatedAnimations:completion:
performCoordinatedAnimations
didFinishAnimations:
animations
completions
_invalidated
initWithTimeInterval:queue:block:repeats:
UTF8String
_readyToConnect
_active
_playing
_requiresTVOutScreen
_ready
_debugAssistant
_connectedSecondScreen
_preferredDisplayCriteria
_maximumVideoResolution
initWithPlayer:playerLayer:
startUpdates
debugAssistant
setPlayerLayer:
setPreferredDisplayCriteria:
setReadyToConnect:
setActive:
setPlaying:
connectWithScreen:active:
_loadSecondScreenViewControllerIfNeeded
_postNotification:oldValue:newValue:
_startObservingPlayer
_updatePreferredDisplayCriteriaFromPreparedAssetIfNeeded:
_determineIsReadyToConnect
_allowsNonAirPlayExternalPlayback
_currentItemIsReadyToPlayVideoOrLoadingWhileActive
isReadyToConnect
connectedSecondScreen
setConnectedSecondScreen:
isActive
isPlaying
requiresTVOutScreen
setRequiresTVOutScreen:
preferredDisplayCriteria
maximumVideoResolution
setMaximumVideoResolution:
isReady
setReady:
initWithRefreshRate:videoDynamicRange:
keyValueObservationController
setKeyValueObservationController:
_wantsAppearanceConfigValues
_appearanceProxy
appearanceProxy
setWantsAppearanceConfigValues:
maskedCorners
setMaskedCorners:
masksToBounds
setMasksToBounds:
cornerCurve
setCornerCurve:
cornerRadius
setCornerRadius:
continuousCorners
setContinuousCorners:
wantsAppearanceConfigValues
actualView
clipsToBounds
_clipsToBounds
_actualView
_cornerCurve
_maskedCorners
_cornerRadius
_backgroundColor
setActualView:
backgroundColor
setBackgroundColor:
_counterRotatingContentView
_beingPresented
_beingDismissed
_willBeginOrientationChange
_presentationContainerContentView
_fromOrientation
_toOrientation
_continuousCornerRadius
_setCornerRadius:
willBeginAdjustingOrientation
avkit_overrideLayoutMarginsForInterfaceOrientation:
willStartPresentationTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
willStartDismissalTransitionFromInterfaceOrientation:toOrientation:needsCounterRotation:
didStopTransition
_contentTransform
_radiansForCounterRotation
isCounterRotatingContentView
setCounterRotatingContentView:
presentationContainerContentView
setPresentationContainerContentView:
isBeingPresented
setBeingPresented:
isBeingDismissed
setBeingDismissed:
fromOrientation
setFromOrientation:
toOrientation
setToOrientation:
willBeginOrientationChange
setWillBeginOrientationChange:
_lineSeparator
_headerBodySeparator
_bodyLengthKey
_compressionMethodKey
_lineSeparatorData
_headerBodySeparatorData
initWithLineSeparator:headerBodySeparator:bodyLengthKey:compressionMethodKey:
setLineSeparator:
setHeaderBodySeparator:
partsWithData:
lineSeparator
headerBodySeparator
bodyLengthKey
setBodyLengthKey:
compressionMethodKey
setCompressionMethodKey:
lineSeparatorData
setLineSeparatorData:
headerBodySeparatorData
setHeaderBodySeparatorData:
setUncompressedBodyData:
decompressBodyUsingNamedAlgorithm:
uniqueHeaders
messagePartsWithData:lineSeparator:data:headerBodySeparator:data:bodyLengthKey:
_uniqueHeaders
_repeatedHeaders
_isIncomplete
_version
_headers
_expectedBodyLength
_rawBodyData
_extraData
_uncompressedBodyData
isIncomplete
shouldCallReverseTransformerAgain
initWithVersion:headers:expectedBodyLength:body:extra:
_setIncomplete
_identifyUniqueAndRepeatedHeadersIfNecessary
repeatedHeaders
bodyAsUTF8Text
bodyAsJSON
bodyAsJSONDictionary
decompressBodyUsingAlgorithm:
version
headers
expectedBodyLength
rawBodyData
extraData
uncompressedBodyData
JSONObjectWithData:options:error:
componentsSeparatedByString:
rangeOfData:options:range:
dataUsingEncoding:
_matchingClass
airMessage
registerClass:forMessageVersion:
airMessageParser
_doubleRowLayoutEnabled
_showsLiveStreamingControls
_liveStreamingControlsIncludeScrubber
_showingScrubInstructions
_animatingScrubInstructions
_scrubberValueWhenScrubInstructionsTimerBegan
_minimumRequiredWidth
_scrubber
_elapsedTimeLabel
_timeRemainingLabel
_standardPlayPauseButton
_skipForwardButton
_skipBackButton
_startLeftwardContentTransitionButton
_startRightwardContentTransitionButton
_routePickerView
_mediaSelectionButton
_customItems
_controlsLayoutView
_detachedExtraContentLayoutView
_liveBroadcastLabel
_liveBroadcastScrubberLabel
_embeddedExtraContentContainer
_scrubInstructionsLabel
_detachedScrubInstructionsBackdropLabel
_scrubInstructionsTimer
_flexibleViewAfterRoutePickerView
_flexibleViewAfterSkipForwardButtons
scrubberSlowKnobMovementDetected:
setDoubleRowLayoutEnabled:
setShowsLiveStreamingControls:
setLiveStreamingControlsIncludeScrubber:
setCustomItems:
reevaluateHiddenStateOfAllItems
traitCollectionDidChange:
beginScrubbing:
scrubberValueChanged:
endScrubbing:
_singeRowLayoutSpacingAfterSubview:
_doubleRowLayoutSpacingAfterSubview:
_layoutDoubleRowViews
_layoutSingleRowViews
_rowSpacingForDoubleRowLayoutAfterRow:
_layoutItemDisplayPriorityForSubview:
_updateFontSizes
_showScrubInstructions
_updateScrubInstructionsLabelsText
_updateScrubInstructionsFrame
_scrubInstructionsAttributedText
_updateCustomContentTransitioningInfoPanelLayout
singleRowViews
doubleRowViews
canShowScrubInstructions
isDoubleRowLayoutEnabled
showsLiveStreamingControls
liveStreamingControlsIncludeScrubber
minimumRequiredWidth
scrubber
elapsedTimeLabel
timeRemainingLabel
standardPlayPauseButton
skipForwardButton
skipBackButton
startLeftwardContentTransitionButton
startRightwardContentTransitionButton
routePickerView
mediaSelectionButton
customItems
controlsLayoutView
detachedExtraContentLayoutView
setDetachedExtraContentLayoutView:
liveBroadcastLabel
liveBroadcastScrubberLabel
embeddedExtraContentContainer
scrubInstructionsLabel
detachedScrubInstructionsBackdropLabel
scrubInstructionsTimer
setScrubInstructionsTimer:
scrubberValueWhenScrubInstructionsTimerBegan
setScrubberValueWhenScrubInstructionsTimerBegan:
flexibleViewAfterRoutePickerView
setFlexibleViewAfterRoutePickerView:
flexibleViewAfterSkipForwardButtons
setFlexibleViewAfterSkipForwardButtons:
isShowingScrubInstructions
setShowingScrubInstructions:
isAnimatingScrubInstructions
setAnimatingScrubInstructions:
appendAttributedString:
systemFontOfSize:weight:
sizeThatFits:
systemLayoutSizeFittingSize:
_AVKitOwner
_behaviorsAndBehaviorContexts
behaviors
addBehavior:
removeBehavior:
enumerateAllBehaviorsUsingBlock:
enumerateAllBehaviorsConformingToProtocol:usingBlock:
behaviorOfClass:
enumerateAllBehaviorContextsUsingBlock:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
behaviorContextOfClass:
AVKitOwner
setAVKitOwner:
behaviorsAndBehaviorContexts
objectEnumerator
setObject:forKey:
allObjects
strongToStrongObjectsMapTable
avkit_asWindowScene
_isCarScreen
windows
filteredArrayUsingPredicate:
displayConfiguration
_setAVKitRequestedRefreshRate:HDRMode:overscanCompensation:
avkit_screenType
avkit_screenHasWindowsExcludingWindow:
_avkit_setPreferredRefreshRate:HDRMode:overscanCompensation:
sharedApplication
avkit_isForeground
avkit_resetPreferredModeSwitchRequest
avkit_setPreferredRefreshRate:HDRMode:
avkit_secondScreenScenes
_wasInitiallyInteractive
_hasAVKitAnimator
_wasCancelledWithInactiveScene
_presenterSupportedOrientations
_finalInterfaceOrientation
counterRotationTransform
interfaceRotation
isRotated
presenterSupportsOrientation:
setWasInitiallyInteractive:
hasAVKitAnimator
setHasAVKitAnimator:
wasCancelledWithInactiveScene
setWasCancelledWithInactiveScene:
presenterSupportedOrientations
setPresenterSupportedOrientations:
finalInterfaceOrientation
setFinalInterfaceOrientation:
_muted
_presentationSize
hasContent
hasEnabledVideo
hasLiveStreamingContent
hasSeekableLiveStreamingContent
timeControlStatus
togglePlaybackEvenWhenInBackground:
setMuted:
beginReducingResourcesForPictureInPicturePlayerLayer:
endReducingResourcesForPictureInPicturePlayerLayer:
presentationSize
setPresentationSize:
isMuted
_playerViewControllerIsBeingTransitionedWithResizing
_playerViewControllerIsPresentingFullScreen
_playerViewControllerIsPresentedFullScreen
_playerViewControllerHasInvalidViewControllerHierarchy
_volumeControlsCanShowSlider
_showsPictureInPictureButton
_hasCustomPlaybackControls
_showsVideoGravityButton
_showsDoneButtonWhenFullScreen
_playbackControlsIncludeStartContentTransitionButtons
_forcePlaybackControlsHidden
_startLeftwardContentTransitionButtonEnabled
_startRightwardContentTransitionButtonEnabled
_canHidePlaybackControls
_popoverIsBeingPresented
_canIncludeVideoGravityButton
_hasStartedUpdates
_coveringWindow
_hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
_hasBecomeReadyToPlay
_multipleRoutesDetected
_resumingUpdates
_prefersMuted
_playbackSuspendedForScrubbing
_hasSeekableLiveStreamingContent
_shouldIgnoreTimeResolverUpdates
_hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
_videoScaled
_hidingItemsForTransition
_showingPlaybackControls
_contentTransitionAction
_volumeController
_nowPlayingInfoControllerIfLoaded
_playbackControlsView
_turboModePlaybackControlsPlaceholderView
_playbackControlsObservationController
_timeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_routePickerAlertController
_routeDetectorCoordinator
_AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
_loadingIndicatorTimer
_collapseExpandSliderAnimator
_playerMuteFadeAnimationID
_pendingOrientationChange
_loadingIndicatorTimerDelay
_timeControlStatus
_videoGravityButtonType
_uniqueIdentifer
_windowSceneSessionIdentifier
_playbackControlsVisibilityTimer
_userInteractingCount
_playbackViewFrame
playerViewControllerContentView:willLoadPlaybackControlsView:
playerViewControllerContentView:willLoadTurboModePlaceholderView:
playerViewControllerContentViewIsPlayingOnSecondScreen:
playerViewControllerContentViewPlaybackContentContainerViewChanged:
playerViewControllerContentViewDidLayoutSubviews:
playerViewControllerContentViewDidMoveToSuperviewOrWindow:
playerViewControllerContentViewShouldApplyAutomaticVideoGravity:
playerViewControllerContentViewEdgeInsetsForLetterboxedVideo:
playerViewControllerContentViewDidChangeVideoGravity:
playerViewControllerContentViewHasActiveTransition:
playerViewControllerContentViewIsBeingTransitionedFromFullScreen:
playerViewControllerContentViewOverrideLayoutClass:
playerViewControllerContentViewDidUpdateScrollingStatus:
transportControlsNeedsLayoutIfNeeded:
transportControls:scrubberDidBeginScrubbing:
transportControls:scrubberDidScrub:
transportControls:scrubberDidEndScrubbing:
initWithPlayerViewController:
startUpdatesIfNeeded
toggleMuted
_updateVolumeButtonInclusionAndPrefersVolumeSliderExpandedWithPreferredExpansion:
setPlayerViewControllerIsPresentingFullScreen:
setPlayerViewControllerIsPresentedFullScreen:
setPlayerViewControllerIsBeingTransitionedWithResizing:
setHasCustomPlaybackControls:
setShowsDoneButtonWhenFullScreen:
setShowsVideoGravityButton:
setVolumeController:
setCoveringWindow:
setCanIncludeVideoGravityButton:
setShowsPictureInPictureButton:
showsRoutePickerView
showsProminentPlayButton
prominentPlayButtonCanShowPauseGlyph
showsTransportControls
shouldEnterFullScreenWhenPlaybackBegins
showsMediaSelectionButton
minimumTime
maximumTime
isSeekingEnabled
showsSkipButtons
showsStartContentTransitionButtons
canShowLoadingIndicator
playButtonsShowPauseGlyph
needsTimeResolver
tapGestureRecognizersCanReceiveTouches
playbackControlsViewDidLoad:
turboModePlaybackControlsPlaceholderViewDidLoad:
secondScreenConnectionDidBecomeActive:
secondScreenConnectionDidResignActive:
handleVolumeChange:
handleCurrentRouteSupportsVolumeControlChanged:
volumeSliderValueDidChange:
volumeButtonTapTriggered:
volumeButtonLongPressTriggered:
beginChangingVolume
volumeButtonPanChanged:
_prefersVolumeSliderExpandedAutomatically
_showOrHideDisplayModeControls
_updateVolumeButtonGlyph
_volumeButtonMicaPackageState
_updateVolumeSliderValueWithSystemVolume:animated:
prominentPlayButtonTouchUpInside:
skipButtonTouchUpInside:
skipButtonLongPressTriggered:
skipButtonLongPressEnded:
skipButtonForcePressChanged:
startContentTransitionButtonTouchUpInside:
_bindEnabledStateOfControls:toKeyPath:
_bindInclusionOfControlItems:toKeyPath:
_observeBoolForKeyPath:usingKeyValueObservationController:observationHandler:
_seekByTimeInterval:toleranceBefore:toleranceAfter:
setForcePlaybackControlsHidden:
togglePlaybackControlsVisibility
_updatePlaybackControlsVisibilityWantsPlaybackControlsVisible:
showPlaybackControls:immediately:
flashVolumeControlsWithDuration:
_autoHideControlsAfterDelay:
beginShowingItemsDueToIndirectUserInteraction
endShowingItemsDueToIndirectUserInteraction
setPopoverIsBeingPresented:
beginUserInteraction
endUserInteraction
isUserInteracting
beginHidingItemsForTransition
endHidingItemsForTransitionAndShowImmediately:
_updatePlaybackControlsVisibleAndObservingUpdates
_startObservingForPlaybackViewUpdates
_startObservingPotentiallyUnimplementedPlayerControllerProperties
_wantsRouteDetectionEnabled
_updateSkipButtonsEnableLongPress
updateControlsInclusion
_updateControlInclusion
_updateContainerInclusion
_updateOrCreateTimeResolverIfNeeded
_updateScrubberAndTimeLabels
_updateVideoGravityButtonType
_updateHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:playing:userDidEndTappingProminentPlayButton:
_updatePrefersInspectionSuspended
_updateNowPlayingInfoCenter
_updateEdgeInsetsForLetterboxedContentInContentView:
_updateSecondScreenConnectionReadyToConnect
playerViewControllerIsBeingTransitionedWithResizing
playerViewControllerIsPresentingFullScreen
playerViewControllerIsPresentedFullScreen
playerViewControllerHasInvalidViewControllerHierarchy
setPlayerViewControllerHasInvalidViewControllerHierarchy:
inlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused
setInlinePlaybackControlsAlwaysShowLargePlayButtonWhenPaused:
showsPictureInPictureButton
showsVideoGravityButton
showsDoneButtonWhenFullScreen
playbackControlsIncludeStartContentTransitionButtons
setPlaybackControlsIncludeStartContentTransitionButtons:
forcePlaybackControlsHidden
isStartLeftwardContentTransitionButtonEnabled
setStartLeftwardContentTransitionButtonEnabled:
isStartRightwardContentTransitionButtonEnabled
setStartRightwardContentTransitionButtonEnabled:
contentTransitionAction
setContentTransitionAction:
pictureInPictureController
setPictureInPictureController:
nowPlayingInfoControllerIfLoaded
setNowPlayingInfoControllerIfLoaded:
isPopoverBeingPresented
playbackControlsView
setPlaybackControlsView:
turboModePlaybackControlsPlaceholderView
setTurboModePlaybackControlsPlaceholderView:
playbackControlsObservationController
setPlaybackControlsObservationController:
timeResolver
setTimeResolver:
elapsedTimeFormatter
remainingTimeFormatter
routePickerAlertController
setRoutePickerAlertController:
routeDetectorCoordinator
setRouteDetectorCoordinator:
AVRouteDetectorCoordinatorMultipleRoutesDetectedObserver
setAVRouteDetectorCoordinatorMultipleRoutesDetectedObserver:
loadingIndicatorTimer
setLoadingIndicatorTimer:
collapseExpandSliderAnimator
setCollapseExpandSliderAnimator:
playerMuteFadeAnimationID
setPlayerMuteFadeAnimationID:
canIncludeVideoGravityButton
pendingOrientationChange
setPendingOrientationChange:
hasStartedUpdates
setHasStartedUpdates:
isCoveringWindow
hasPlaybackBegunSincePlayerControllerBecameReadyToPlay
setHasPlaybackBegunSincePlayerControllerBecameReadyToPlay:
hasBecomeReadyToPlay
setHasBecomeReadyToPlay:
loadingIndicatorTimerDelay
setLoadingIndicatorTimerDelay:
isResumingUpdates
setResumingUpdates:
prefersMuted
setPrefersMuted:
isPlaybackSuspendedForScrubbing
setPlaybackSuspendedForScrubbing:
setTimeControlStatus:
setHasSeekableLiveStreamingContent:
shouldIgnoreTimeResolverUpdates
setShouldIgnoreTimeResolverUpdates:
hasBegunObservingPotentiallyUnimplementedPlayerControllerProperties
setHasBegunObservingPotentiallyUnimplementedPlayerControllerProperties:
videoGravityButtonType
setVideoGravityButtonType:
playbackViewFrame
setPlaybackViewFrame:
uniqueIdentifer
windowSceneSessionIdentifier
setWindowSceneSessionIdentifier:
playbackControlsVisibilityTimer
setPlaybackControlsVisibilityTimer:
userInteractingCount
setUserInteractingCount:
isHidingItemsForTransition
setHidingItemsForTransition:
isShowingPlaybackControls
setShowingPlaybackControls:
setMaximumValue:
setMinimumValue:
stringFromSeconds:
setFormatTemplate:
timeIntervalSince1970
date
isValid
UUID
reason
horizontalSizeClass
areAnimationsEnabled
verticalSizeClass
keyPathsForValuesAffectingFullScreen
keyPathsForValuesAffectingShowsRoutePickerView
keyPathsForValuesAffectingShowsProminentPlayButton
keyPathsForValuesAffectingProminentPlayButtonCanShowPauseGlyph
keyPathsForValuesAffectingShowsTransportControls
keyPathsForValuesAffectingShouldEnterFullScreenWhenPlaybackBegins
keyPathsForValuesAffectingShowsMediaSelectionButton
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinimumTime
keyPathsForValuesAffectingMaximumTime
keyPathsForValuesAffectingSeekingEnabled
keyPathsForValuesAffectingShowsSkipButtons
keyPathsForValuesAffectingShowsStartContentTransitionButtons
keyPathsForValuesAffectingCanShowLoadingIndicator
keyPathsForValuesAffectingPlayButtonsShowPauseGlyph
keyPathsForValuesAffectingNeedsTimeResolver
_sourcePlayerLayer
_debugLabel
_initialScreenBoundsHint
loadPlayerLayerViewIfNeeded
setSourcePlayerLayer:
setInitialScreenBoundsHint:
viewDidLayoutSubviews
_updateContentViewIfNeeded
_updateLayout
initialScreenBoundsHint
sourcePlayerLayer
debugLabel
bringSubviewToFront:
sizeToFit
startShowingContentFromSourcePlayerLayer:
stopShowingContentFromActiveSourcePlayerLayer
_activeSourcePlayerLayer
activeSourcePlayerLayer
setActiveSourcePlayerLayer:
interruptibleAnimatorForTransition:
animationEnded:
transitionDuration:
animateTransition:
completionSpeed
completionCurve
wantsInteractiveStart
startInteractiveTransition:
transitionWillComplete:success:
transitionPresentedViewBackgroundColor:
transitionBackgroundViewBackgroundColor:
transitionDriver:gestureRecognizer:shouldReceiveTouch:
transitionDriver:shouldDriveTransitionInteractionOfType:
transitionDriver:didBeginTrackingTransitionInteraction:readyToProceedHandler:
transitionDriverDidContinueInteraction:
transitionDriverDidCancelInteraction:
transitionDriverDidFinishInteraction:
animationControllerForPresentedController:presentingController:sourceController:
animationControllerForDismissedController:
interactionControllerForPresentation:
interactionControllerForDismissal:
presentationControllerForPresentedViewController:presentingViewController:sourceViewController:
_interactiveGestureTracker
_interactionView
_displayLink
_activeTransition
_gestureTracker
_transitionDidBeginHandler
_easeInFunction
_easeOutFunction
_touchGravity
displayLink
setInteractiveGestureTracker:
setInteractionView:
addTransitionDriver:toView:
beginFullScreenPresentationOfViewController:fromView:isInteractive:completion:
beginFullScreenDismissalOfViewController:animated:isInteractive:completion:
_cancelTransition
_finishTransition
_fireDidBeginHandlerIfNeeded
_startObservingAnimatorProgress
interactiveGestureTracker
interactionView
setDisplayLink:
activeTransition
setActiveTransition:
gestureTracker
setPresentationController:
transitionDidBeginHandler
setTransitionDidBeginHandler:
easeInFunction
setEaseInFunction:
easeOutFunction
setEaseOutFunction:
touchGravity
setTouchGravity:
isAnimated
supportsMultipleScenes
addInteraction:
removeInteraction:
_PIPModeEnabled
_sourceContextId
_sourceLayer
_placeholderLayer
_sbdlHostView
_sourceLayerHost
_lastKnownRenderSize
initWithSourceLayer:playerController:
setPIPModeEnabled:
setLastKnownRenderSize:
_updateGeometry
_makePictureInPicturePlatformAdapterContentPlaceholderLayer
sourceLayer
isPIPModeEnabled
placeholderLayer
setPlaceholderLayer:
sbdlHostView
setSbdlHostView:
sourceLayerHost
setSourceLayerHost:
sourceContextId
setSourceContextId:
lastKnownRenderSize
pictureInPictureController:didTransitionToRenderSize:
avkit_sbdlpip_findFirstCALayerHost
_jKeyDown
_kKeyDown
_lKeyDown
_audioMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation
_lastKnownPersistedExtendedLanguageTag
_isResumed
_seekTimer
_timeOfLastUpdate
_seekQueue
_ignoreRateKeyValueChange
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_pendingSeek
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_forceScanning
_rateBeforeForceScanning
_reduceResourceUsageAssertion
_defaultPlaybackRate
_touchBarRequiresLinearPlayback
_timecodeController
_internalDelegate
_atMaxTime
_atMinTime
_pictureInPictureSupported
_seekingInternal
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_canTogglePictureInPicture
_hasBegunInspection
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_minTiming
_maxTiming
_currentAudioTrack
_seekToTime
_metadata
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_playerLayerForReducingResources
_seekToTimeInternal
initWithPlayer:
startInspectionIfNeeded
startKVO
observationInfo
setObservationInfo:
_queuePlayer
isReadyToPlay
error
isCompletelySeekable
_observeValueForKeyPath:oldValue:newValue:
_retryPlayImmediatelyIfNeeded
canPlayImmediately
seekTimer
_handleSeekTimerEvent
canPlay
autoplay:
canPause
canTogglePlayback
touchBarRequiresLinearPlayback
setTouchBarRequiresLinearPlayback:
isLooping
setLooping:
updateAtMinMaxTime
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
isInspectionSuspended
setInspectionSuspended:
contentDuration
nominalFrameRate
reversePlaybackEndTime
setReversePlaybackEndTime:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
_setMinTiming:maxTiming:
contentDurationWithinEndTimes
currentDate
currentOrEstimatedDate
seekableTimeRanges
hasEnabledAudio
hasVideo
hasContentChapters
isStreaming
hasTrimmableContent
hasShareableContent
_assetIsRestrictedFromSaving:
audioWaveform
_assetIsMarkedNotSerializable:
_assetContainsProResRaw:
_updateCurrentAudioTrackIfNeeded
canSeek
seekToTime:
seekToTime:toleranceBefore:toleranceAfter:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
actuallySeekToTime
seekByTimeInterval:
seekByTimeInterval:toleranceBefore:toleranceAfter:
canScanForward
scanForward:
beginScanningForward:
_updateScanningForwardRate
endScanningForward:
canScanBackward
scanBackward:
beginScanningBackward:
_updateScanningBackwardRate
endScanningBackward:
canSeekToBeginning
seekToBeginning:
canSeekToEnd
seekToEnd:
canSeekFrameForward
seekFrameForward:
canSeekFrameBackward
seekFrameBackward:
seekOrStepByFrameCount:
skipBackwardThirtySeconds:
gotoEndOfSeekableRanges:
seekToChapter:
canSeekChapterForward
seekChapterForward:
canSeekChapterBackward
seekChapterBackward:
updateTiming
updateMinMaxTiming
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnExternalScreen
isExternalPlaybackActive
externalPlaybackType
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPictureInterrupted
setPictureInPictureInterrupted:
togglePictureInPicture:
acquireResourceReductionAssertion
setReduceResourceUsageAssertion:
reduceResourceUsageAssertion
isReducingResourcesForPictureInPicture
startUsingNetworkResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_cancelPendingSeeksIfNeeded
_updateRateForScrubbingAndSeeking
scanningDelays
_prepareAssetForInspectionIfNeeded
isAtMaxTime
setAtMaxTime:
isAtMinTime
setAtMinTime:
currentAssetIfReady
setCurrentAssetIfReady:
assetInspectionQueue
setAssetInspectionQueue:
assetBeingPrepared
setAssetBeingPrepared:
setPictureInPictureSupported:
timing
setTiming:
minTiming
setMinTiming:
maxTiming
setMaxTiming:
currentAudioTrack
setCurrentAudioTrack:
isSeekingInternal
setSeekingInternal:
seekToTimeInternal
setSeekToTimeInternal:
seekToTime
setSeekToTime:
metadata
setMetadata:
contentChapters
setContentChapters:
isComposable
setComposable:
hasProtectedContent
setHasProtectedContent:
availableMetadataFormats
setAvailableMetadataFormats:
isCompatibleWithAirPlayVideo
setCompatibleWithAirPlayVideo:
rateBeforeScrubBegan
setRateBeforeScrubBegan:
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
canTogglePictureInPicture
setCanTogglePictureInPicture:
hasBegunInspection
setHasBegunInspection:
playerLayerForReducingResources
setPlayerLayerForReducingResources:
cancelPendingSeeks
associatedTracksOfType:
initWithIdentifier:forReason:invalidationBlock:
setPreferredForwardBufferDuration:
setPreferredPeakBitRate:
preferredForwardBufferDuration
preferredPeakBitRate
deviceName
supportsMultipleOutputDevices
outputContext
liveUpdateInterval
seekableTimeRangesLastModifiedTime
timebase
stepByCount:
canStepBackward
canStepForward
canPlayFastReverse
canPlayFastForward
track
getBytes:length:
metadataItemsFromArray:withKey:keySpace:
metadataForFormat:
availableVideoDynamicRanges
currentEstimatedDate
setActionAtItemEnd:
actionAtItemEnd
setAttribute:forKey:error:
isPlaybackLikelyToKeepUp
isPlaybackBufferEmpty
playImmediatelyAtRate:
isPiPAvailable
applicationState
sortUsingComparator:
chapterMetadataGroupsBestMatchingPreferredLanguages:
preferredLanguages
dictionaryWithDictionary:
commonMetadata
stopGeneratingTimecodes
internalDelegate
handlesAudioSessionInterruptions
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
setRateWithForce:
usesExternalPlaybackWhileExternalScreenIsActive
setHandlesAudioSessionInterruptions:
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingPreferredDisplayCriteria
keyPathsForValuesAffectingMaximumVideoResolution
hasTimecodes
loadTimecodeControllerIfNeeded
timecodeController
frameNumberForCurrentTime
hasReadableTimecodes
timecodeObservationInterval
startGeneratingTimecodesUsingBlock:
seekToTimecode:
seekToFrame:
timecodeForCurrentTime
maxTimecode
setInternalDelegate:
functionWithControlPoints::::
removeAllFiltersFromView:
applyPrimaryGlyphTintToView:
applySecondaryGlyphTintToView:
applyGlyphTintColor:toView:
configureSlider:thumbView:loadedTrackView:
applyBaseTrackTintToView:
applyCompletedTrackTintToView:
applyLoadedTrackTintToView:
configureView:forTintEffectWithColor:filterType:
configureView:withBackgroundFillOfColor:opacity:filter:
secondaryMaterialOverlayView
secondaryGlyphTintColor
setBackgroundEffects:
effectCompositingColor:withMode:alpha:
layerWithTintColor:filterType:
imageForState:
titleForState:
_setTextColorFollowsTintColor:
_shouldLoadPlaybackControlsHint
_canAutomaticallyZoomLetterboxVideos
_styleSheetShouldUseCompactFullScreenItemSize
_automaticVideoGravity
_externalPlaybackIndicatorView
_unsupportedContentIndicatorView
_audioOnlyIndicatorView
_iAdPreRollView
_playbackContentContainerView
_interactiveContentOverlayView
_targetVideoGravities
_backdropLayerView
_externalPlaybackIndicatorTitle
_externalPlaybackIndicatorSubtitle
_scrollingObserver
_edgeInsetsForLetterboxedContent
_videoContentInset
scrollViewObserverValuesDidChange:
initWithFrame:playbackContentContainerView:targetVideoGravities:
automaticVideoGravity
setAutomaticVideoGravity:
setStyleSheetShouldUseCompactFullScreenItemSize:
externalPlaybackIndicatorView
externalPlaybackIndicatorViewIfLoaded
unsupportedContentIndicatorView
unsupportedContentIndicatorViewIfLoaded
audioOnlyIndicatorView
audioOnlyIndicatorViewIfLoaded
iAdPreRollView
iAdPreRollViewIfLoaded
setInteractiveContentOverlayView:
setShouldLoadPlaybackControlsHint:
addPlaybackContentContainerViewIfNeeded
setPlaybackContentContainerView:
isViewDescendantOfPlaybackControlsSubview:
setShowsUnsupportedContentIndicator:
setShowsAudioOnlyIndicator:
setShowsExternalPlaybackIndicator:
setExternalPlaybackIndicatorTitle:subtitle:
setTargetVideoGravity:forLayoutClass:
layoutClass
loadPlaybackControlsViewIfNeeded
removeTurboModePlaybackControlsPlaceholderViewIfNeeded
isInAWindowAndNotScrolling
_isBeingTransitionedToOrFromFullScreen
_updateVideoGravityDuringLayoutSubviewsAndAssertThatIfYouBreakThisMethodYouOwnThisMethod
_updateVideoContentInsetForVideoGravity:
_applyVideoGravityIfNeeded:
_mediaTimingFunctionForCurrentAnimationCurve
_insertPlaybackControlsOrPlaceholderView:
_loadTurboOrFullPlaybackControlsIfNeeded
_loadTurboModePlaybackControlsPlaceholderViewIfNeeded
_updateStyleSheet
playbackContentContainerView
shouldLoadPlaybackControlsHint
canAutomaticallyZoomLetterboxVideos
setCanAutomaticallyZoomLetterboxVideos:
edgeInsetsForLetterboxedContent
setEdgeInsetsForLetterboxedContent:
styleSheetShouldUseCompactFullScreenItemSize
videoContentInset
setVideoContentInset:
targetVideoGravities
backdropLayerView
externalPlaybackIndicatorTitle
setExternalPlaybackIndicatorTitle:
externalPlaybackIndicatorSubtitle
setExternalPlaybackIndicatorSubtitle:
scrollingObserver
_currentAnimationCurve
removeAllAnimations
setAnimationTimingFunction:
setAnimationDuration:
_currentAnimationDuration
_isInAnimationBlock
_isInAnimationBlockWithAnimationsEnabled
numberWithUnsignedLong:
setEdgesInsettingLayoutMarginsFromSafeArea:
setAutomaticVideoGravity:completion:
remoteObjectProxy
resume
setRemoteObjectInterface:
interfaceWithProtocol:
initWithServiceName:
_wasLongPressed
_treatsForcePressAsLongPress
_usesBackgroundEffectViewForTextOnlyButtons
_multipleTouchesEndsTracking
_disablesHighlightWhenLongPressed
_clampsHitRectInsetsWhenContainedInScrollableView
_wasForcePressTriggered
_tintEffectStyle
_forceThreshold
_force
_maximumForceSinceTrackingBegan
_imageName
_fullScreenImageName
_inlineImageName
_fullScreenAlternateImageName
_inlineAlternateImageName
_micaSnapshotAlpha
_horizontalTranslationOfLongPress
_previousHorizontalPositionOfLongPress
_userInteractionGestureRecognizer
_backgroundEffectView
setImageName:
setWasLongPressed:
setForce:
setMultipleTouchesEndsTracking:
setUsesBackgroundEffectViewForTextOnlyButtons:
setTintEffectStyle:
setHighlighted:
setImage:forState:
setTitle:forState:
_preferredLayoutSize
_handleUserInteractionGestureRecognizer:
_resetTrackedState
_updateImageIfNeeded
setFullScreenImageName:
setFullScreenAlternateImageName:
setInlineImageName:
setInlineAlternateImageName:
_updateTintColorIfNeeded
_updateEdgeInsets
_updateBackgroundEffectViewIsHidden
_preferredImageName
_imageViewAlpha
wasLongPressed
treatsForcePressAsLongPress
setTreatsForcePressAsLongPress:
tintEffectStyle
usesBackgroundEffectViewForTextOnlyButtons
forceThreshold
setForceThreshold:
force
maximumForceSinceTrackingBegan
setMaximumForceSinceTrackingBegan:
multipleTouchesEndsTracking
imageName
fullScreenImageName
inlineImageName
fullScreenAlternateImageName
inlineAlternateImageName
micaSnapshotAlpha
setMicaSnapshotAlpha:
disablesHighlightWhenLongPressed
setDisablesHighlightWhenLongPressed:
clampsHitRectInsetsWhenContainedInScrollableView
setClampsHitRectInsetsWhenContainedInScrollableView:
trackingStartTime
setTrackingStartTime:
wasForcePressTriggered
setWasForcePressTriggered:
horizontalTranslationOfLongPress
setHorizontalTranslationOfLongPress:
previousHorizontalPositionOfLongPress
setPreviousHorizontalPositionOfLongPress:
userInteractionGestureRecognizer
setUserInteractionGestureRecognizer:
backgroundEffectView
setBackgroundEffectView:
numberOfTouches
isHighlighted
setEffect:
alwaysBounceHorizontal
alwaysBounceVertical
buttonWithAccessibilityIdentifier:
setAdjustsImageWhenHighlighted:
_setVisualEffectViewEnabled:backgroundColor:
_dateFormatter
stringFromDate:
dateFromString:
internetDateFormatter
_hasFlexibleContentSize
_prefersSecondaryMaterialOverlay
_displayPriority
_displayPartnerAttributes
_trailingInterItemSpace
_accessibilityIdentifier
_nextAttributesInLayoutOrder
_nextAttributesInPriorityOrder
_uniqueIdentifier
_minimumSize
displayPriority
setDisplayPriority:
displayPartnerAttributes
setDisplayPartnerAttributes:
hasFlexibleContentSize
setHasFlexibleContentSize:
prefersSecondaryMaterialOverlay
setPrefersSecondaryMaterialOverlay:
setMinimumSize:
trailingInterItemSpace
setTrailingInterItemSpace:
accessibilityIdentifier
setAccessibilityIdentifier:
nextAttributesInLayoutOrder
setNextAttributesInLayoutOrder:
nextAttributesInPriorityOrder
setNextAttributesInPriorityOrder:
uniqueIdentifier
setUniqueIdentifier:
appendFormat:
_loadingButtonView
loadingButtonView
setLoadingButtonView:
fontDescriptorWithSize:
fontWithName:size:
timeFontWithFont:
boldSystemFontOfSize:
italicSystemFontOfSize:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
_linkFired
startDisplayLinkUpdatesForObserver:framesPerSecond:usingBlock:
linkFired:
runningTime
linkFired
setLinkFired:
setStartTime:
addToRunLoop:forMode:
setPreferredFramesPerSecond:
displayLinkWithTarget:selector:
_layoutDirty
_stackLayoutNeedsUpdate
_arrangedSubviews
_shapeStyle
_flattenedArrangedSubviewsInLayoutOrder
_currentStackLayout
_secondaryMaterialOverlayView
_targetViewForSecondaryMaterialOverlayView
setNeedsLayout
setArrangedSubviews:
setShapeStyle:
setContentLayoutMargins:
contentLayoutMargins
hasVisibleArrangedSubview
_updateStackLayoutIfNeeded
_applyShapeStyle
_insertArrangedSubview:atIndex:
_removeArrangedSubview:
arrangedSubviews
shapeStyle
flattenedArrangedSubviewsInLayoutOrder
setFlattenedArrangedSubviewsInLayoutOrder:
currentStackLayout
setCurrentStackLayout:
isLayoutDirty
setLayoutDirty:
setBackdropLayerView:
setSecondaryMaterialOverlayView:
stackLayoutNeedsUpdate
setStackLayoutNeedsUpdate:
targetViewForSecondaryMaterialOverlayView
setTargetViewForSecondaryMaterialOverlayView:
_setCornerRadius:continuous:maskedCorners:
enumerateObjectsWithOptions:usingBlock:
semanticContentAttribute
directionalLayoutMargins
setDirectionalLayoutMargins:
CGRectValue
_showsAudioControls
_needsIntialLayout
_topAreaLayoutGuideExpanded
_prefersDoneButtonIncluded
_prefersVideoGravityButtonIncluded
_prefersFullScreenButtonIncluded
_prefersPiPButtonIncluded
_customControlsView
_includedContainers
_volumeControlsContainer
_playbackControlsContainer
_screenModeControls
_volumeControls
_prominentPlayButtonContainerView
_transportControlsContainerView
_fullScreenButton
_videoGravityButton
_pictureInPictureButton
_customDisplayModeItems
_volumeSlider
_customAudioItems
_transportControlsView
_customMediaItems
_visibilityDelegate
_defaultAudioControls
_defaultDisplayModeControls
_keyboardHeight
_keyboardUIAvoidanceAnimator
_playbackControlsVisibilityAnimator
_mostRecentAnimationCompletionsID
setupInitialLayout
setIncludedContainers:animations:
includesAudioControlsContainer
includesCustomAudioControls
includesTransportControls
includesDisplayModeControlsContainer
includesCustomDisplayModeControls
setCustomControlItems:animations:
animateAlongsideVisibilityAnimationsWithAnimationCoordinator:appearingViews:disappearingViews:
hasVisibleSubview
updateLayoutForChangedControlsVisibility
setShowsAudioControls:
setPrefersVolumeSliderExpanded:prefersVolumeButtonIncluded:animated:
safeAreaInsetsDidChange
_showPlaybackControlsAnimated:
_updateTransportControlsFrame
_updateVolumeControlsWithSize:
_preferredArrangedAudioModeViews
_preferredArrangedDisplayModeViews
_currentArrangedAudioModeViews
_currentArrangedDisplayModeViews
_audioViewsToRemoveDuringAnimation
_displayModeViewsToRemoveDuringAnimation
_collapse:views:
_collapse:view:
updateDisplayControlsVisibilityIncludedButtons:
_updatePlaybackControlsContainerVisibilityAnimated:additionalActions:
reevaluateHiddenStateForContainersAndSubviews
_updateAreVolumeAndTransportControlsVisible
_updateDoubleRowLayoutEnabled
_setupInitialLayout
_updateLayoutMargins
_animateKeyboardAvoidance:duration:
_playbackControlsViewItems
_playbackControlsViewsForControlItems:withType:
_customControlsViewIfLoaded
includedContainers
volumeControlsContainer
playbackControlsContainer
screenModeControls
volumeControls
prominentPlayButtonContainerView
transportControlsContainerView
fullScreenButton
videoGravityButton
pictureInPictureButton
customDisplayModeItems
volumeSlider
customAudioItems
transportControlsView
customMediaItems
prefersVolumeSliderExpandedAutomatically
setPrefersVolumeSliderExpandedAutomatically:
visibilityDelegate
setVisibilityDelegate:
showsAudioControls
defaultAudioControls
defaultDisplayModeControls
keyboardHeight
setKeyboardHeight:
keyboardUIAvoidanceAnimator
needsIntialLayout
setNeedsIntialLayout:
playbackControlsVisibilityAnimator
setPlaybackControlsVisibilityAnimator:
mostRecentAnimationCompletionsID
setMostRecentAnimationCompletionsID:
isTopAreaLayoutGuideExpanded
setTopAreaLayoutGuideExpanded:
prefersDoneButtonIncluded
setPrefersDoneButtonIncluded:
prefersVideoGravityButtonIncluded
setPrefersVideoGravityButtonIncluded:
prefersFullScreenButtonIncluded
setPrefersFullScreenButtonIncluded:
prefersPiPButtonIncluded
setPrefersPiPButtonIncluded:
layoutMargins
updateConstraintsIfNeeded
setCompletionBlock:
minusOrderedSet:
orderedSetWithArray:
setPriority:
longValue
_localizedDescription
initWithStatus:localizedDescription:
headersForContentLength:compression:
bodyData
localizedDescription
stringByAppendingFormat:
messageWithVersion:headers:bodyData:
responseWithParts:
bundle
bundleForClass:
localizedStringForKey:value:table:
_customMessage
_pipIndicatorLayer
layoutSublayersOfLayer:
setCustomMessage:
_addIndicatorLayerIfNeeded
customMessage
pipIndicatorLayer
setPipIndicatorLayer:
addAnimation:forKey:
avkit_constraintsFromCenterAnchorsToCenterAnchorsOfItem:
avkit_constraintsFromEdgeAnchorsToEdgeAnchorsOfItem:
avkit_constraintsFromCenterAndDimensionAnchorsToCenterAndDimensionAnchorsOfItem:
avkit_constraintsFromDimensionAnchorsToSize:
leadingAnchor
trailingAnchor
leftAnchor
rightAnchor
topAnchor
bottomAnchor
widthAnchor
heightAnchor
centerXAnchor
centerYAnchor
avkit_constraintEqualToAnchor:priority:
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
avkit_constraintGreaterThanOrEqualToAnchor:priority:
avkit_constraintLessThanOrEqualToAnchor:priority:
avkit_constraintEqualToAnchor:constant:priority:
avkit_constraintGreaterThanOrEqualToAnchor:constant:priority:
avkit_constraintLessThanOrEqualToAnchor:constant:priority:
constraintGreaterThanOrEqualToConstant:
constraintLessThanOrEqualToConstant:
avkit_constraintEqualToConstant:priority:
avkit_constraintGreaterThanOrEqualToConstant:priority:
avkit_constraintLessThanOrEqualToConstant:priority:
avkit_constraintsFromEdgesOfItem:toLeadingAnchor:topAnchor:trailingAnchor:bottomAnchor:priority:
avkit_constraintsFromEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromLeadingAndTrailingEdgesOfItem:toEdgesOfItem:
avkit_constraintsFromTopAndBottomEdgesOfItem:toEdgesOfItem:
constraintEqualToConstant:
_firstAttributesInLayoutOrder
_firstAttributesInPriorityOrder
initWithFirstAttributesInLayoutOrder:firstAttributesInPriorityOrder:
firstAttributesInLayoutOrder
firstAttributesInPriorityOrder
_pictureInPictureAvailable
_playbackDelegate
_playbackState
_sbdlObservationController
_enqueuedBufferDimensions
_contentTimeRange
_effectiveRate
_currentSBDLTime
setPlaybackDelegate:
setPlaybackState:
setEnqueuedBufferDimensions:
isPictureInPictureAvailable
setPictureInPictureAvailable:
playbackDelegate
enqueuedBufferDimensions
playbackState
sbdlObservationController
setSbdlObservationController:
setPaused:
contentTimeRange
setContentTimeRange:
pictureInPictureController:skipByInterval:completionHandler:
pictureInPictureControllerStopPlayback:
pictureInPictureControllerStartPlayback:
pictureInPictureControllerPlaybackTimeRange:
pictureInPictureControllerPlaybackPaused:
keyPathsForValuesAffectingRate
avkit_sampleBufferDisplayLayerPlayerController
avkit_removePictureInPicturePlayerController
avkit_title
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
avkit_autoOption
localizedDisplayName
v20@0:8B16
@40@0:8{CGPoint=dd}16@32
B16@0:8
@"NSString"
@"UIView"
@"AVPlayer"
@"<AVPlayerViewControllerDelegate>"
@"AVPlayerViewController"
@"AVButton"
@"AVLayoutView"
@"AVStyleSheet"
@"AVAppStorePlayerLayerView"
@"NSMutableDictionary"
@"AVObservationController"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v16@0:8
v24@0:8@16
v24@0:8q16
v32@0:8@16Q24
v24@0:8@?16
v24@0:8d16
@16@0:8
@?16@0:8
q16@0:8
#16@0:8
@"<AVContentOverlayViewDelegate>"
B24@0:8Q16
v28@0:8q16B24
@"_AVSimplePlayerLayerView"
@"<AVPictureInPicturePlatformAdapterDelegate>"
@"AVPlayerController"
@"AVPictureInPicturePrerollAttributes"
@"AVPictureInPictureViewController"
@"PGPictureInPictureProxy"
@"NSTimer"
@"AVSecondScreenConnection"
@"UIWindow"
@"<AVPictureInPictureContentSource>"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
q24@0:8@"PGPictureInPictureProxy"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"PGPictureInPictureProxy"16
@"UIWindow"24@0:8@"PGPictureInPictureProxy"16
v32@0:8@"PGPictureInPictureProxy"16q24
v40@0:8@"PGPictureInPictureProxy"16q24@"NSError"32
v32@0:8@"PGPictureInPictureProxy"16@?<v@?B>24
v24@0:8@"PGPictureInPictureProxy"16
v40@0:8@"PGPictureInPictureProxy"16q24q32
v32@0:8@"PGPictureInPictureProxy"16@"PGCommand"24
v28@0:8@"PGPictureInPictureProxy"16B24
v40@0:8@"PGPictureInPictureProxy"16Q24Q32
q24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
@24@0:8@16
v32@0:8@16q24
v40@0:8@16q24@32
v32@0:8@16@?24
v40@0:8@16q24q32
v32@0:8@16@24
v28@0:8@16B24
v40@0:8@16Q24Q32
v24@0:8@"AVPictureInPictureViewController"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d16@0:8
@"PGPlaybackStatePrerollAttributes"
{?="value"q"timescale"i"flags"I"epoch"q}
@48@0:8@16{?=qiIq}24
{?=qiIq}16@0:8
@48@0:8{?=qiIq}16@40
@"AVPictureInPicturePlayerLayerView"
@"AVPlayerLayer"
{CGSize=dd}16@0:8
@"UISelectionFeedbackGenerator"
@"NSMutableArray"
@"AVLayoutItemAttributes"
@"<AVScrubberDelegate>"
@"NSArray"
@"UIScrollView"
@"UIImageView"
{CGSize="width"d"height"d}
{NSDirectionalEdgeInsets="top"d"leading"d"bottom"d"trailing"d}
v32@0:8{CGSize=dd}16
@"AVLayoutItemAttributes"16@0:8
B32@0:8{CGPoint=dd}16
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
f16@0:8
v20@0:8f16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}84@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48f80
B32@0:8@16@24
{UIEdgeInsets=dddd}16@0:8
B40@0:8{CGPoint=dd}16@32
{CGPoint=dd}16@0:8
{NSDirectionalEdgeInsets=dddd}16@0:8
v48@0:8{NSDirectionalEdgeInsets=dddd}16
@"<AVAirMessageNotificationCenterDelegate>"
@"AVBonjourService"
@"AVPlayerItem"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
v32@0:8@"AVAirTransport"16@"<AVAirTransportReverseTransformationResultProtocol>"24
v24@0:8@"AVAirTransport"16
v32@0:8@"AVBonjourService"16@"AVAirTransport"24
@"NSDictionary"24@0:8@"AVBonjourService"16
@"UIImage"
@24@0:8^{_NSZone=}16
@56@0:8d16d24Q32@40@?48
@32@0:8d16@24
v36@0:8@16@24B32
q40@0:8@16@24@32
@"UIView<AVScrollViewObserverContentView>"
@"NSHashTable"
@"NSNumber"
@"AVVolumeWarningView"
v24@0:8f16B20
@"UIViewPropertyAnimator"
@"AVNewsWidgetPlayerBehaviorContext"
v24@0:8@"<AVBehaviorContext>"16
@24@0:8q16
@"AVPictureInPictureCALayerHostView"
I16@0:8
v20@0:8I16
v80@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48{CGSize=dd}64
@32@0:8@16:24
@"AVHomeIPCameraBehaviorContext"
@"AVPlayerController"24@0:8@"AVPlayerController"16
@"AVPictureInPictureViewController"16@0:8
v32@0:8@"AVPictureInPictureViewController"16@"AVPlayerController"24
@"UIWindow"16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
@"UIPanGestureRecognizer"
@"<AVTransitionDriverDelegate>"
@"UIPinchGestureRecognizer"
@"UIRotationGestureRecognizer"
{CGPoint="x"d"y"d}
B32@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24
@"<AVTransitionDriverDelegate>"16@0:8
v24@0:8@"<AVTransitionDriverDelegate>"16
@"UIPanGestureRecognizer"16@0:8
v24@0:8@"UIPanGestureRecognizer"16
v24@0:8@"UIView"16
@"UIView"16@0:8
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v32@0:8{CGPoint=dd}16
@"NSMutableOrderedSet"
@32@0:8@16@24
@24@0:8@?16
@"<UIViewControllerContextTransitioning>"
@"AVFullScreenViewController"
@"AVPresentationContextTransition"
@"AVPresentationController"
@"<AVBonjourServiceClientDelegate>"
@"NSNetServiceBrowser"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v40@0:8@16@24@32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
v24@0:8^v16
^v16@0:8
v32@0:8@16d24
I28@0:8I16@20
^v24@0:8@16
@"AVStatusBarBackgroundGradientViewSubview"
@"AVMusicAppBehaviorContext"
@"AVMusicAppBehavior"
@"AVPlayerViewController"16@0:8
v32@0:8@"AVPlayerViewController"16q24
v40@0:8{CGSize=dd}16@"<UIViewControllerTransitionCoordinator>"32
v24@0:8@"UIViewController"16
@"UIView<AVPlaybackContentContainer>"56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
v40@0:8{CGSize=dd}16@32
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
v24@0:8@"<AVBehavior>"16
@40@0:8@16{CGSize=dd}24
@"UIWindowScene"
@"UIScreen"
@"CADisplay"
@"NSInputStream"
@"NSOutputStream"
v32@0:8@"NSStream"16Q24
@24@0:8Q16
@"NSData"
@"<AVAirTransportTransformationProtocol>"
@"<AVAirTransportDelegate>"
@"<AVAirMessageDispatcherClientDelegate>"
@"NSNetService"
@"AVAirTransport"
@"AVBonjourServiceClient"
v32@0:8@"NSNetService"16@"AVAirTransport"24
v28@0:8B16@?20
@"UIActivityIndicatorView"
@"AVSystemController"
v36@0:8@"NSString"16B24@"NSString"28
v24@0:8@"NSString"16
v36@0:8@16B24@28
v28@0:8B16@20
@"AVZoomingBehaviorContext"
@"NSLayoutConstraint"
@"UILayoutGuide"
@44@0:8d16d24d32B40
B24@0:8@?16
v56@0:8{CGPoint=dd}16@32N^@40N^d48
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{CGPoint=dd}16d32
@"UIFont"
@"UITraitCollection"
@28@0:8@16B24
{UIEdgeInsets=dddd}36@0:8@16d24B32
@"AVEditBehaviorContext"
@"<AVEditBehaviorDelegate>"
@"NSDictionary"
@"AVPictureInPictureController"
@"UIPopoverPresentationController"
@"AVTransitionController"
@"AVPlaybackControlsController"
@"AVPlayerView"
@"NSValue"
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@"AVContentOverlayView"
@"AVBehaviorStorage"
@"UIHoverGestureRecognizer"
@"AVPlayerControllerVolumeAnimator"
@"__AVPlayerLayerView"
v24@0:8@"AVPlaybackControlsView"16
v48@0:8@"AVPlaybackControlsView"16@"<AVPlayerViewControllerAnimationCoordinator>"24@"NSArray"32@"NSArray"40
v48@0:8@16@24@32@40
B24@0:8@"AVPlayerController"16
v24@0:8@"AVContentOverlayView"16
v32@0:8@"AVTransitionController"16@"UIViewController"24
@"UIView"32@0:8@"AVTransitionController"16@"UIViewController"24
B40@0:8@"AVTransitionController"16@"UIGestureRecognizer"24@"UITouch"32
@"UIColor"24@0:8@"AVTransitionController"16
B24@0:8@"AVTransitionController"16
v24@0:8@"AVTransitionController"16
v32@0:8@"AVTransitionController"16@?<v@?>24
v28@0:8@"AVTransitionController"16B24
v28@0:8@"AVTransitionController"16f24
B40@0:8@16@24@32
v28@0:8@16f24
v24@0:8@"AVFullScreenViewController"16
@"UIView"24@0:8@"AVFullScreenViewController"16
v48@0:8@"AVFullScreenViewController"16{CGSize=dd}24@"<UIViewControllerTransitionCoordinator>"40
B24@0:8@"AVFullScreenViewController"16
q24@0:8@"AVFullScreenViewController"16
@"UIResponder"24@0:8@"AVFullScreenViewController"16
v48@0:8@16{CGSize=dd}24@40
v24@0:8@"UIPopoverPresentationController"16
B24@0:8@"UIPopoverPresentationController"16
v40@0:8@"UIPopoverPresentationController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
q24@0:8@"UIPresentationController"16
q32@0:8@"UIPresentationController"16@"UITraitCollection"24
@"UIViewController"32@0:8@"UIPresentationController"16q24
v40@0:8@"UIPresentationController"16q24@"<UIViewControllerTransitionCoordinator>"32
B24@0:8@"UIPresentationController"16
v24@0:8@"UIPresentationController"16
q32@0:8@16@24
@32@0:8@16q24
v24@0:8@"AVPictureInPictureController"16
v32@0:8@"AVPictureInPictureController"16@"NSError"24
v32@0:8@"AVPictureInPictureController"16@?<v@?B>24
@40@0:8@16@24@32
v36@0:8q16B24@?28
v32@0:8B16B20@?24
v24@0:8Q16
v32@0:8Q16@24
{CGAffineTransform=dddddd}16@0:8
v64@0:8{CGAffineTransform=dddddd}16
@"AVEditBehavior"
@"AVEditBehaviorParameters"
@"AVZoomingBehavior"
@"AVEditView"
@"AVAssetImageGenerator"
@"UIToolbar"
@"UIBarButtonItem"
v24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16d24
d24@0:8@"AVEditView"16
v32@0:8@"AVEditView"16@"NSNumber"24
d24@0:8@16
@"UIViewController<AVFullScreenViewControllerDelegate>"
@28@0:8I16@20
@36@0:8I16@20@28
@32@0:8Q16@24
@28@0:8B16@20
@"<AVPictureInPictureViewControllerDelegate>"
@"UILabel"
@"UIStackView"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
d24@0:8d16
@"UIScene"
@"AVSecondScreenViewController"
@"AVPresentationContext"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@48@0:8@16@24@32@40
@"NSSet"
@60@0:8@16@24@32B40B44B48@?52
v48@0:8@16@24@32^v40
v56@0:8@16@24@32@40^v48
@"AVHomeIPCameraBehavior"
@"AVHomeIPCameraPlayerController"
v32@0:8d16d24
@"AVStatusBarBackgroundGradientView"
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"AVPlaybackContentContainerView"48
@"AVPlaybackContentContainerView"16@0:8
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48@56
@"AVPlaybackContentContainerView"
{CGSize=dd}48@0:8@16d24{CGSize=dd}32
{CGSize=dd}24@0:8d16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
@24@0:8#16
@"NSData"24@0:8@"<AVMessageTransformerProtocol>"16
@"AVAirMessageParts<AVAirTransportReverseTransformationResultProtocol>"24@0:8@"NSData"16
@"<AVEditViewDataSource>"
@"<AVEditViewDelegate>"
@"UIMovieScrubber"
v32@0:8@"UIMovieScrubber"16d24
v28@0:8@"UIMovieScrubber"16i24
v32@0:8@"UIMovieScrubber"16f24f28
v24@0:8@"UIMovieScrubber"16
v40@0:8@"UIMovieScrubber"16d24d32
v28@0:8@16i24
v32@0:8@16f24f28
v40@0:8@16d24d32
d24@0:8@"UIMovieScrubber"16
@"NSArray"44@0:8@"UIMovieScrubber"16i24@"NSNumber"28@"NSNumber"36
v32@0:8@"UIMovieScrubber"16@"NSNumber"24
v36@0:8@"UIMovieScrubber"16@"NSNumber"24B32
@44@0:8@16i24@28@36
v32@0:8^{CGImage=}16@24
@"NSDictionary"16@0:8
@24@0:8@"NSDictionary"16
@"NSArray"24@0:8@"NSArray"16
@"<AVPlaybackContentTransitioningViewDelegate>"
B32@0:8q16q24
@"AVMediaSelectionOption"
q32@0:8@16q24
v40@0:8@16@24q32
@"AVMediaSelectionTableViewController"
@40@0:8@16@24:32
@"<AVPictureInPictureControllerDelegate>"
@"AVPictureInPicturePlatformAdapter"
@"<AVPictureInPicturePrerollDelegate>"
@"AVPictureInPictureControllerContentSource"
v32@0:8@"AVPictureInPicturePlatformAdapter"16@"NSError"24
v32@0:8@"AVPictureInPicturePlatformAdapter"16@?<v@?B>24
v24@0:8@"AVPictureInPicturePlatformAdapter"16
v28@0:8@"AVPictureInPicturePlatformAdapter"16B24
v32@0:8@"AVPictureInPicturePlatformAdapter"16q24
v40@0:8@"AVPictureInPicturePlatformAdapter"16q24q32
@"AVSampleBufferDisplayLayer"
@"<AVPictureInPictureSampleBufferPlaybackDelegate>"
@48@0:8@16{CGSize=dd}24@40
{?=qiIq}48@0:8q16{?=qiIq}24
B20@0:8f16
@"UIColor"
@"NSAttributedString"
@"AVPlayerViewControllerContentView"
@"MPMediaControls"
{CVSMPTETime="subframes"s"subframeDivisor"s"counter"I"type"I"flags"I"hours"s"minutes"s"seconds"s"frames"s}
{CVSMPTETime=ssIIIssss}16@0:8
v40@0:8{CVSMPTETime=ssIIIssss}16
v40@0:8{?=qiIq}16
@"AVAssetTrack"
q40@0:8{?=qiIq}16
@32@0:8^{opaqueCMFormatDescription=}16q24
{CVSMPTETime=ssIIIssss}24@0:8q16
{CVSMPTETime=ssIIIssss}40@0:8q16q24@32
q24@0:8d16
d24@0:8q16
v24@0:8^{opaqueCMSampleBuffer=}16
B40@0:8{?=qiIq}16
v36@0:8B16@20@28
@"AVCABackdropLayerView"
@"UIButton"
@"AVOutputContext"
@"AVMicaPackage"
@"<AVRoutePickerViewDelegate>"
v28@0:8d16B24
Q24@0:8@"AVRoutePickerView"16
@"NSString"24@0:8@"AVRoutePickerView"16
Q24@0:8@16
v24@0:8@"AVRoutePickerView"16
@"AVPictureInPictureIndicatorSublayer"
@68@0:8d16^{CGImage=}24B32{CGRect={CGPoint=dd}{CGSize=dd}}36
{NSEdgeInsets="top"d"left"d"bottom"d"right"d}
@"CATextLayer"
@"CALayer"
@36@0:8d16^{CGImage=}24B32
B48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"<AVTimeControlling>"
@"AVTimer"
v40@0:8{CGSize=dd}16Q32
@40@0:8@16@24d32
@"AVPlaybackContentZoomingView"
@"UITapGestureRecognizer"
@"AVNewsWidgetPlayerBehavior"
@"AVPlaybackContentTransitioningView"
B40@0:8@"AVPlaybackContentTransitioningView"16{CGPoint=dd}24
B32@0:8@"AVPlaybackContentTransitioningView"16q24
@"AVPlaybackContentContainerView"24@0:8@"AVPlaybackContentTransitioningView"16
v48@0:8@"AVPlaybackContentTransitioningView"16q24q32d40
B40@0:8@16{CGPoint=dd}24
B32@0:8@16q24
v48@0:8@16q24q32d40
q24@0:8q16
@"<AVPlayerViewControllerContentTransitioning_NewsOnly>"
@"<AVTransitionDelegate>"
@"<UIViewControllerContextTransitioningEx>"
v56@0:8d16d24{CGPoint=dd}32d48
{CGAffineTransform=dddddd}96@0:8d16{CGPoint=dd}24d40{CGPoint=dd}48{CGRect={CGPoint=dd}{CGSize=dd}}64
@32@0:8{CGSize=dd}16
v32@0:8d16Q24
d24@0:8Q16
@48@0:8@16@24{CGSize=dd}32
d48@0:8Q16@24{CGSize=dd}32
@"CAStateController"
v32@0:8@"CAStateController"16@"CALayer"24
v36@0:8@"CAStateController"16@"CAStateTransition"24f32
v36@0:8@"CAStateController"16@"CAStateTransition"24B32
v36@0:8@16@24f32
@32@0:8@"CAMLParser"16@"NSURL"24
v40@0:8@"CAMLParser"16@24@"NSURL"32
#32@0:8@"CAMLParser"16@"NSString"24
v44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
@44@0:8@"CAMLParser"16@"NSString"24@"NSURL"32I40
v48@0:8@"CAMLParser"16r*24[1{__va_list_tag=II^v^v}]32Q40
#32@0:8@16@24
v44@0:8@16@24@32I40
@44@0:8@16@24@32I40
v48@0:8@16r*24[1{__va_list_tag=II^v^v}]32Q40
v32@0:8@16^{CGColor=}24
v32@0:8^{CGColor=}16@24
v40@0:8@16q24@?32
@"AVVolumeButtonControl"
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8q16
v32@0:8@?<v@?>16@?<v@?B>24
v32@0:8@?16@?24
@"NSObject<OS_dispatch_source>"
@44@0:8d16@24@?32B40
@"AVSecondScreenDebugAssistant"
@"AVSecondScreen"
@"AVDisplayCriteria"
@"AVPresentationContainerViewAppearanceProxy"
{UIEdgeInsets=dddd}24@0:8q16
v36@0:8q16q24B32
@56@0:8@16@24q32@40@48
@64@0:8@16@24@32@40@48@56
v32@0:8#16@24
@"<AVTransportControlsViewDelegate>"
@"AVScrubber"
@"AVLabel"
@"AVPlaybackControlsRoutePickerView"
@"AVTouchIgnoringView"
v24@0:8@"AVScrubber"16
@"NSMapTable"
v40@0:8:16@24@?32
v40@0:8d16q24q32
v32@0:8d16q24
B24@0:8q16
@"<AVHomeIPCameraActionButtonHandling>"
@"<AVVolumeController>"
@"AVNowPlayingInfoController"
@"AVSecondScreenContentViewConnection"
@"AVPlaybackControlsView"
@"AVTurboModePlaybackControlsPlaceholderView"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"UIAlertController"
@"AVRouteDetectorCoordinator"
@"NSUUID"
v32@0:8@"AVPlayerViewControllerContentView"16@"AVPlaybackControlsView"24
v32@0:8@"AVPlayerViewControllerContentView"16@"AVTurboModePlaybackControlsPlaceholderView"24
B24@0:8@"AVPlayerViewControllerContentView"16
v24@0:8@"AVPlayerViewControllerContentView"16
{UIEdgeInsets=dddd}24@0:8@"AVPlayerViewControllerContentView"16
@"NSNumber"24@0:8@"AVPlayerViewControllerContentView"16
{UIEdgeInsets=dddd}24@0:8@16
v24@0:8@"AVTransportControlsView"16
v32@0:8@"AVTransportControlsView"16@"AVScrubber"24
v40@0:8@16@24@?32
v40@0:8d16d24d32
v24@0:8B16B20
v28@0:8B16B20B24
@"AVSecondScreenPlayerLayerView"
d24@0:8@"<UIViewControllerContextTransitioning>"16
v24@0:8@"<UIViewControllerContextTransitioning>"16
@"<UIViewImplicitlyAnimating>"24@0:8@"<UIViewControllerContextTransitioning>"16
v28@0:8@"AVTransition"16B24
@"UIColor"24@0:8@"AVTransition"16
B40@0:8@"<AVTransitionDriver>"16@"UIGestureRecognizer"24@"UITouch"32
B32@0:8@"<AVTransitionDriver>"16q24
v40@0:8@"<AVTransitionDriver>"16q24@?<v@?>32
v24@0:8@"<AVTransitionDriver>"16
@"<UIViewControllerAnimatedTransitioning>"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<UIViewControllerAnimatedTransitioning>"24@0:8@"UIViewController"16
@"<UIViewControllerInteractiveTransitioning>"24@0:8@"<UIViewControllerAnimatedTransitioning>"16
@"UIPresentationController"40@0:8@"UIViewController"16@"UIViewController"24@"UIViewController"32
@"<AVTransitionControllerDelegate>"
@"<AVTransitionDriver>"
@"AVDisplayLink"
@"AVTransition"
@"AVInteractiveTransitionGestureTracker"
@"CAMediaTimingFunction"
v44@0:8@16@24B32@?36
v40@0:8@16B24B28@?32
@"AVSampleBufferDisplayLayerPlayerController"
@"AVPictureInPictureIndicatorLayer"
@"AVPictureInPictureSampleBufferDisplayLayerHostView"
@"CALayerHost"
@"AVValueTiming"
@"BSSimpleAssertion"
@"AVTimecodeController"
@"<AVPlayerControllerDelegate>"
@"AVAsset"
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v48@0:8@16@24d32@40
@"AVExternalPlaybackIndicatorView"
@"<AVPlayerViewControllerContentViewDelegate>"
@"UIView<AVPlaybackContentContainer>"
@"AVScrollViewObserver"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
v24@0:8@"AVScrollViewObserver"16
v48@0:8{UIEdgeInsets=dddd}16
v32@0:8@"NSString"16@?<v@?>24
@"AVUserInteractionObserverGestureRecognizer"
@"UIVisualEffectView"
@"NSISO8601DateFormatter"
@"AVLoadingButtonView"
@32@0:8@16d24
@24@0:8d16
@"CADisplayLink"
@"AVCustomStackLayout"
@"UIView<AVLayoutViewItem>"
@"AVPlayerViewControllerCustomControlsView"
@"AVView"
@"AVVolumeSlider"
@"AVTransportControlsView"
@"<AVPlaybackControlsViewVisibilityDelegate>"
v32@0:8q16@?24
v32@0:8q16d24
@"NSData"16@0:8
@32@0:8q16@24
@"NSArray"24@0:8@"<AVKitLayoutItem>"16
@"NSArray"32@0:8{CGSize=dd}16
@"NSLayoutXAxisAnchor"16@0:8
@"NSLayoutYAxisAnchor"16@0:8
@"NSLayoutDimension"16@0:8
@60@0:8@16@24@32@40@48f56
@28@0:8@16f24
@36@0:8@16d24f32
@28@0:8d16f24
@"AVPictureInPicturePlaybackState"
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
{?={?=qiIq}{?=qiIq}}16@0:8
v64@0:8{?={?=qiIq}{?=qiIq}}16
