n}?Rq
?[5"y
?ffffff
?333333
333333
M@333333
PG_wantsVibrancyEffect
TB,R,N
v8@?0
com.apple.springboard
com.apple.PineBoard
%@ may only be called from system shells.
%@ may only be initialized by PGPictureInPictureController.
pid: %ui- bundle: %@
processIdentifier
Ti,R,N,V_processIdentifier
bundleIdentifier
T@"NSString",R,N,V_bundleIdentifier
v24@?0@"BSProcessHandle"8@"NSError"16
v16@?0@"NSDictionary"8
CFBundleIdentifier
layer
T@"CAGradientLayer",R,D,N
com.apple.InCallService
%@ may only be called from allowed system Apps.
com.apple.pegasus.PGPictureInPictureController %p
v20@?0B8@"NSError"12
B24@?0@"PGPictureInPictureRemoteObject"8^B16
-[PGPictureInPictureController listener:shouldAcceptNewConnection:]
pictureInPictureApplications
activePictureInPictureApplication
pictureInPictureActive
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
TB,R,N,GisPictureInPictureActive,V_pictureInPictureActive
T@"NSSet",R,N,V_pictureInPictureApplications
T@"PGPictureInPictureApplication",R,N,V_activePictureInPictureApplication
isStartingStoppingOrCancellingPictureInPicture
delegate
T@"<PGPictureInPictureControllerDelegate>",W,N
analyticsDelegate
T@"<PGPictureInPictureAnalyticsDelegate>",W,N,V_analyticsDelegate
owner
T@,R,W,N,V_owner
linkFired
T@?,R,C,N,V_linkFired
preferredFramesPerSecond
TQ,N,V_preferredFramesPerSecond
hostedWindowHostingHandle
T@"PGHostedWindowHostingHandle",R,N
interrupted
TB,R,GisInterrupted
allowsResumingAfterInterruptionEnds
TB,R
PGCommand.m
Invalid parameter not satisfying: %@
action != PGSystemActionSendToProxy
v32@?0@"NSNumber"8@"NSNumber"16^B24
dictionaryRepresentation
T@"NSDictionary",R,N,V_dictionaryRepresentation
systemAction
Tq,R,N
faceTimeAction
playbackAction
associatedBoolValue
associatedDoubleValue
Td,R,N
skipByInterval
skipToLive
setPlaying
setMuted
setSuspended
beginInterruption
endInterruption
skipPreroll
invalid
setCameraEnabled
setMicrophoneMuted
switchCamera
sendToProxy
sendActionButtonTapped
cancelPIP
restoreFromPIP
toggleVisibility
toggleZoom
v16@?0@"NSError"8
T@"PGHostedWindowHostingHandle",&,N
cornerRadiusScale
Td,N,V_cornerRadiusScale
ignoreCornerRadiusUpdates
TB,N,V_ignoreCornerRadiusUpdates
sourceView
T@"UIView",W,N,V_sourceView
v24@?0@8@"PGDisplayLink"16
AD_PREROLL_LABEL
SPONSORED_PREROLL_LABEL
Sponsored
SKIP_PREROLL_IN_N_SECONDS
'IN N ', as in skip 'IN N' seconds.
SKIP_PREROLL
Skip
forward.end.fill
preferredHeight
viewModel
T@"PGControlsViewModel",R,N,V_viewModel
contentTypeLabel
T@"UILabel",R,N,V_contentTypeLabel
skipPrerollButtonView
T@"PGButtonView",R,N,V_skipPrerollButtonView
labelText
T@"NSString",C,N
timeRemainingText
labelSize
T{CGSize=dd},N,V_labelSize
displayLink
T@"PGDisplayLink",R,N,V_displayLink
v16@?0q8
progress
Td,N,V_progress
customElapsedTrackTintColor
T@"UIColor",&,N,V_customElapsedTrackTintColor
includesWaitingToPlayIndicator
TB,N,V_includesWaitingToPlayIndicator
Unknown Reason
v16@?0@"BSSimpleAssertion"8
v16@?0@"NSTimer"8
commandHandler
T@"<PGCommandHandler>",W,N,V_commandHandler
showsPictureInPictureUnavailableIndicator
TB,N,V_showsPictureInPictureUnavailableIndicator
showingControlsForHoverActive
TB,N,GisShowingControlsForHoverActive,V_showingControlsForHoverActive
interactivelyResizing
TB,N,GisInteractivelyResizing,V_interactivelyResizing
inputRadius
inputNormalizeEdges
inputQuality
inputIntermediateBitDepth
inputColorMatrix
PGCABackdropLayerView.m
[groupLeader _isCaptureOnly] || groupLeader == nil
groupLeader != self
v16@?0@"PGCABackdropLayerView"8
T@"PGCABackdropLayer",R,D,N
groupLeader
T@"PGCABackdropLayerView",W,N,V_groupLeader
dependents
T@"NSHashTable",R,N,V_dependents
customBackgroundColor
T@"UIColor",C,N,V_customBackgroundColor
v24@?0^{__CFRunLoopObserver=}8Q16
runLoopObserver
T^{__CFRunLoopObserver=},N,V_runLoopObserver
actions
T@?,C,N,V_actions
com.apple.pegasus
nVh/gwNpy7Jv1NOk00CMrw
_UIHostedWindowHostingHandle
v24@?0@"PGControlsView"8@"PGDisplayLink"16
PGControlsView.m
You cannot do this, but Xcode thinks you can.
LIVE_INDICATOR_BADGE
LIVE
prefersControlsHidden
TB,N,V_prefersControlsHidden
Common
%@ (%p) %@
Maiden
Idle
Starting
Active
Stopping
Transition
Suspended
Invalid
None
Canceling
unspecified
uilocked
faceTimeCamera
otherCamera
stashed
com.apple.pegasus.PGPictureInPictureRemoteObject %p
PictureInPicture - PGPictureInPictureRemoteObject - %p
@8@?0
%@ is not a valid initializer. You must call -[%@ initWithConnection:].
application
none
sourceSceneSessionPersistentIdentifier
controlsStyle
transitioningState
isPictureInPicturePossible
isInterrupted
currentState
pictureInPictureShouldStartWhenEnteringBackground
underLock
com.apple.MissingBundleIdentifier
-[PGPictureInPictureRemoteObject startPictureInPictureEnteringBackgroundAnimated:withCompletionHandler:]
-[PGPictureInPictureRemoteObject suspend]
-[PGPictureInPictureRemoteObject resume]
-[PGPictureInPictureRemoteObject cancel]
-[PGPictureInPictureRemoteObject invalidate]
-[PGPictureInPictureRemoteObject setCurrentResourcesUsageReductionReasons:]
-[PGPictureInPictureRemoteObject _setCurrentState:]
-[PGPictureInPictureRemoteObject _processAssertionForProcessIdentifier:]_block_invoke
v12@?0B8
-[PGPictureInPictureRemoteObject _startPreventingCancelAndRestoreUserActions]_block_invoke
-[PGPictureInPictureRemoteObject startPictureInPictureAnimated:completionHandler:]
-[PGPictureInPictureRemoteObject stopPictureInPictureAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:]
-[PGPictureInPictureRemoteObject setPictureInPictureShouldStartWhenEnteringBackground:completionHandler:]
-[PGPictureInPictureRemoteObject updatePlaybackStateWithDiff:]
-[PGPictureInPictureRemoteObject stopPictureInPictureAndRestoreUserInterface]
-[PGPictureInPictureRemoteObject pictureInPictureViewControllerDidRequestStop:]
-[PGPictureInPictureRemoteObject pictureInPictureViewControllerDidRequestCancel:]
connection
T@"NSXPCConnection",R,N
queue
T@"NSObject<OS_dispatch_queue>",R,N
pictureInPictureApplication
T@"PGPictureInPictureApplication",R,N,V_pictureInPictureApplication
pictureInPictureViewController
T@"PGPictureInPictureViewController",R,N,V_pictureInPictureViewController
T@"<PGPictureInPictureRemoteObjectDelegate>",W,N
shouldStartPictureInPictureEnteringBackground
canStopPictureInPicture
canCancelPictureInPicture
canEndTwoStageStopPictureInPicture
Tq,R,N,V_currentState
TQ,R,N
pictureInPicturePossible
TB,N,GisPictureInPicturePossible
initialLayerFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_initialLayerFrame
preferredContentSize
T{CGSize=dd},R,N,V_preferredContentSize
T@"NSString",R,N,V_sourceSceneSessionPersistentIdentifier
PGMaterialView.m
view == _contentView || view == _backdropLayerView
contentView
T@"UIView",R,N
backdropHidden
TB,N,GisBackdropHidden
Playback
FaceTime
HomeKitCamera
Minimal
PGPictureInPictureViewControllerPrefersIdleTimerDisabledDidChangeNotification
hitTestExtenderView
T@"UIView",W,N,V_hitTestExtenderView
PG-PictureInPictureViewController
%@ is not a valid initializer. You must call -[%@ initWithControlsStyle:].
%@ does not support unarchiving from a nib.
PGPictureInPictureViewController.AnimationType
PGPictureInPictureViewController.InitialSpringVelocity
not hidden
hidden
v16@?0B8B12
PGPictureInPictureViewController.m
Toggle visibility action should not be sent to PictureInPictureViewController.
-[PGPictureInPictureViewController updatePlaybackStateWithDiff:]
contentViewCornerRadius
waitForUIFinalizationCompletionBlock
T@?,C,N,V_waitForUIFinalizationCompletionBlock
Tq,R,N,V_controlsStyle
T@"<PGPictureInPictureViewControllerDelegate>",W,N,V_delegate
TB,N,GisInterrupted
T@"PGControlsViewModel",R,N
T@"PGPictureInPictureApplication",R,W,N,V_application
contentContainer
T@"<PGPictureInPictureViewControllerContentContainer>",W,N,V_contentContainer
canStartShowingChrome
TB,N,V_canStartShowingChrome
contentContainerView
preferredMinimumWidth
minimumStashTabSize
T{CGSize=dd},N,V_minimumStashTabSize
TB,N,V_stashed
isStashTabHidden
prefersIdleTimerDisabled
com.apple.pegasus.PG_dispatch_async_with_timeout
v16@?0@"NSNotification"8
v16@?0@?<v@?>8
PGPlaybackState.m
No invalid key.
Elapsed Time
v32@?0@"NSNumber"8@16^B24
contentType
Tq,N
contentDuration
Td,N
muted
TB,N,GisMuted
requiresLinearPlayback
TB,N
prerollAttributes
T@"PGPlaybackStatePrerollAttributes",&,N
routingVideoToHostedWindow
TB,N,GisRoutingVideoToHostedWindow
mutableDictionary
T@"NSMutableDictionary",R,N,V_mutableDictionary
T@"NSDictionary",R,N
elapsedTime
timeControlStatus
playbackRate
TB,R,N,GisMuted
hasInvalidTiming
TB,R,N,GisRoutingVideoToHostedWindow
T@"PGPlaybackStatePrerollAttributes",R,N
normalizedProgress
supportsFaceTimeActions
cameraActive
TB,N,GisCameraActive
canSwitchCamera
microphoneMuted
TB,N,GisMicrophoneMuted
cameraHasMicrophone
AnchorContentTime
AnchorWallTime
ContentType
ContentDuration
TimeControlStatus
PlaybackRate
Muted
RequiresLinearPlayback
RoutingVideoToHostedWindow
PrerollAttributes
FaceTime-SupportsActions
FaceTime-CameraActive
FaceTime-MicrophoneMuted
FaceTime-CanSwitchCamera
SecurityCam-HasMicrophone
Paused
Playing
WaitingToPlayAtSpecifiedRate
Unknown
VideoOnDemand
LiveBroadcast
SecurityCamera
VideoCall
requiredLinearPlaybackEndTime
Content Type
preferredTintColor
r: %@ g: %@ b: %@ a: %@
T@"UIColor",R,N
Advertisement
unknown
UIView.CornerRadius
PG_allowsEdgeAntialiasing
TB,N,SPG_setAllowsEdgeAntialiasing:
PG_allowsGroupBlending
TB,N,SPG_setAllowsGroupBlending:
PG_anchorPoint
T{CGPoint=dd},N,SPG_setAnchorPoint:
PG_compositingFilter
T@,&,N,SPG_setCompositingFilter:
tabShadowView
T@"UIView",W,N,V_tabShadowView
tabViewBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
PGPictureInPictureProxyPictureInPictureActiveChangedNotification
PGPictureInPictureProxy.m
%@ needs valid viewController!
com.apple.pegasus.PGPictureInPictureProxy %p
-[PGPictureInPictureProxy initWithControlsStyle:viewController:]_block_invoke
v28@?0B8@"NSError"12B20B24
shouldShowAlternateActionButtonImage
%@ is not a valid initializer. You must call -[%@ initWithControlsStyle:viewController:].
v16@?0@"<PGMutablePlaybackStateFaceTimeSupport>"8
-[PGPictureInPictureProxy setPictureInPictureShouldStartWhenEnteringBackground:]
-[PGPictureInPictureProxy preferredContentSizeDidChangeForViewController]
{CGSize=dd}
-[PGPictureInPictureProxy viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController]
{CGRect={CGPoint=dd}{CGSize=dd}}
-[PGPictureInPictureProxy windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController]
-[PGPictureInPictureProxy startPictureInPicture]
-[PGPictureInPictureProxy stopPictureInPictureAndRestoreUserInterface:]
-[PGPictureInPictureProxy rotateContentContainer:withCompletionHandler:]
v28@?0B8@"NSError"12@"BKSAnimationFenceHandle"20
v16@?0@"<PGMutablePlaybackState>"8
-[PGPictureInPictureProxy setControlsStyle:animated:withCompletionHandler:]
-[PGPictureInPictureProxy _startPictureInPictureAnimated:enteringBackground:withCompletionHandler:]
completionHandler != nil
successHandler != nil && failureHandler != nil
H:|[view]|
view
V:|[view]|
v48@?0{CGRect={CGPoint=dd}{CGSize=dd}}8q40
B8@?0
-[PGPictureInPictureProxy _updatePlaybackStateIfNeeded]
-[PGPictureInPictureProxy pictureInPictureStartRequestedAnimated:withCompletionHandler:]
-[PGPictureInPictureProxy pictureInPictureStopRequestedAnimated:withCompletionHandler:]
-[PGPictureInPictureProxy beginTwoStagePictureInPictureStopByRestoringUserInterfaceWithCompletionHandler:]
-[PGPictureInPictureProxy endTwoStagePictureInPictureStopWithCompletionBlock:]
-[PGPictureInPictureProxy pictureInPictureCancelRequestedAnimated:withCompletionHandler:]
-[PGPictureInPictureProxy updatePictureInPicturePossible:]
-[PGPictureInPictureProxy _legacyPictureInPictureInterruptionBegan]
-[PGPictureInPictureProxy _legacyPictureInPictureInterruptionEnded]
-[PGPictureInPictureProxy pictureInPictureCancelled]
-[PGPictureInPictureProxy setResourcesUsageReductionReasons:]
pictureInPictureSuspended
TB,N,GisPictureInPictureStashed,V_stashed
_pipStopUserInterfaceRestoreContinuationBlock
T@?,C,N,V__pipStopUserInterfaceRestoreContinuationBlock
_pipStopFinalStageCompletionHandler
T@?,C,N,V__pipStopFinalStageCompletionHandler
Tq,N,V_controlsStyle
viewController
T@"UIViewController<PGPictureInPictureViewController>",R,N,V_viewController
T@"<PGPictureInPictureProxyDelegate>",W,N
TB,R,N,GisPictureInPicturePossible
TB,R,N,GisPictureInPictureActive
TB,R,N,GisPictureInPictureSuspended
pictureInPictureInterrupted
TB,R,N,GisPictureInPictureInterrupted
pictureInPictureWasStartedWhenEnteringBackground
playbackState
T@"PGPlaybackState",R,N
pictureInPictureStashedOrUnderLock
TB,R,N,GisPictureInPictureStashedOrUnderLock,V_pictureInPictureStashedOrUnderLock
resourcesUsageReductionReasons
TQ,R,N,V_resourcesUsageReductionReasons
PG-StashedView
chevron.compact.left
chevron.compact.right
blurProgress
Td,N,V_blurProgress
stashedTabWidth
Td,N,V_stashedTabWidth
animatedLayerProperties
T@"NSArray",C,N,V_animatedLayerProperties
PGPegasusErrorDomain
buttonView
T@"PGButtonView",W,N,V_buttonView
enabledTintColor
disabledTintColor
actualButton
T@"_PGButton",&,N,V_actualButton
highlighted
TB,N,GisHighlighted,V_highlighted
highlightAnimator
T@"UIViewPropertyAnimator",W,N,V_highlightAnimator
pointerInteraction
T@"UIPointerInteraction",W,N,V_pointerInteraction
T@"<PGButtonViewDelegate>",W,N,V_delegate
systemImageName
T@"NSString",C,N,V_systemImageName
circular
TB,N,GisCircular,V_circular
text
font
T@"UIFont",C,N
enabled
TB,N,GisEnabled
glyphSize
Td,N,V_glyphSize
filters.gaussianBlur.inputRadius
gaussianBlur
inputHardEdges
groupName
gaussianBlurRadius
backdropScale
xmark
RESTORE_FULLSCREEN
Restore fullscreen
CLOSE_PIP
Close Picture in Picture
video.slash.fill
mic.slash.fill
UNMUTE
Unmute
MUTE
Mute
CAMERA_OFF
Camera off
CAMERA_ON
Camera on
phone.down.fill
END_CALL
End call
mic.fill
play.slash.fill
play.fill
pause.fill
gobackward.15
goforward.15
SKIP_FORWARD_15_SECONDS
Skip forward 15 seconds
SKIP_BACK_15_SECONDS
Skip back 15 seconds
PLAY
Play
PAUSE
Pause
STOP
Stop
stop.fill
controlsShouldAutoHide
restoreButtonAccessibilityIdentifier
cancelButtonAccessibilityIdentifier
actionButtonAccessibilityIdentifier
skipBackButtonAccessibilityIdentifier
skipForwardButtonAccessibilityIdentifier
includesLiveIndicatorBadge
includesRestoreButton
includesCancelButton
includesActionButton
includesSkipBackButton
includesSkipForwardButton
includesContentLoadingIndicator
isSkipBackButtonEnabled
isActionButtonEnabled
isSkipForwardButtonEnabled
includesSingleTapGestureRecognizer
includesDoubleTapGestureRecognizer
includesDoubleDoubleTapGestureRecognizer
includesProgressBar
progressBarShouldUpdate
actionButtonSystemImageName
actionButtonImageTintColor
actionButtonBackgroundTintColor
skipBackButtonImageTintColor
skipBackButtonBackgroundTintColor
skipForwardButtonImageTintColor
skipForwardButtonBackgroundTintColor
cancelButtonImageTintColor
cancelButtonBackgroundTintColor
skipForwardButtonSystemImageName
skipBackButtonSystemImageName
cancelButtonSystemImageName
actionButtonsWantBackground
T@"<PGControlsViewModelDelegate>",W,N,V_delegate
T@"PGPlaybackState",R,C,N,V_playbackState
TB,N,GisInterrupted,V_interrupted
secondsUntilPrerollSkippable
isPrerollSkippable
preventsRestoreAndCancelActions
TB,N,V_preventsRestoreAndCancelActions
values
T@"PGControlsViewModelValues",R,C,N,V_values
stashEventsShouldBeginAndEndInterruptions
pip.exit
T@"NSMutableDictionary",R,N,V_dictionaryRepresentation
restoreButtonSystemImageName
T@"NSString",R,C,N
isPrerollActive
prerollTintColor
%@ needs to be invoked on the main thread!
Multiple remote object response for attempted action, desired effect is ambigious
Could remoteObject{%p} start pip upon backgrounding? %{BOOL}u, since we have at least the following: matchesSceneIdentifier{%{bool}u} shouldStartPictureInPictureEnteringBackground{%{bool}u}
%s %p %{public}@
%@ may not be invoked on the main thread!
%{public}@ - Connection with PID %d interrupted!
%{public}@ - Connection with PID %d invalidated!
%@ - Sending touch delivery policy %@ failed with error: %@
Called endTwoStageStopPictureInPictureWithCompletionBlock on object that hasn't begun.
pictureInPictureInterruptionBeganWithReason: %{public}@ isInterrupted %{BOOL}u %p
remote object %p notifying proxy of pictureInPictureInterruptionBegan
%@ - Not sending interruption began since current state is not active
pictureInPictureInterruptionEndedWithReason: %{public}@ isInterrupted %{BOOL}u %p
remote object %p notifying proxy of pictureInPictureInterruptionEnded
%s %p %{public}@ -> %{public}@
remote object %p notifying proxy of pictureInPictureInterruptionBegan at PIP start
%s %p Attempt to aquire assertions for %{public}@ failed
%s %p Assertion for %{public}@ dropped
%@ - Attempt to aquire finish task assertions for %{public}@ failed.
%@ - Assertion for %{public}@ dropped
%@ - Unable to acquire finish task assertion for invalid process identifier for %{public}@
teardown pictureInPictureInterruption state: isInterrupted: %{BOOL}u shouldNotifyProxy: %{BOOL}u didNotifyProxyToEndInterruption: %{BOOL}u
%s vc: %p
%@ preferredContentSize:%{publi}@
%@ preferredContentSize:%{public}@
%s %p %{BOOL}u
%s %p %@
%s %p canStop: %{BOOL}u
%s %p canCancel: %{BOOL}u
%{public}@ setStashed:%{bool}u shouldBeginOrEndInterruption:%{bool}u
%@ may not be called before view is loaded!
[Layout] %{public}@:%d Stash view set %{public}@
[Layout] Removing Stash Tab Views
%@ Preparing animation with initial layer frame: %@
Should have nil _analyticsSessionUUID
%@ %{bool}u
%s %p REMOTE: %@
%s %p - Connection interrupted!
%s %p - Connection invalidated
%s %p %{public}@ --> %{public}@
%s %p 
%s %p %ld
%{public}@ failed with state: _isPictureInPictureActive{%{bool}u} _isStartingStoppingOrCancellingPictureInPicture{%{bool}u}
Failed to setup start with error: %{public}@
Timed out attempting to activate app on PIP stop
Timed out attempting to restore UI on PIP stop, attempt proceeding anyway
%@ must be invoked on the main thread!
%s %p APP: %@
%{public}@ %{bool}u
%{public}@ Did update stashed or under lock state. stashedOrUnderLock{%{bool}u}
%{public}@ Did notify delegate of updated stashed or under lock state. stashedOrUnderLock{%{bool}u}
%@ oldReasons cannot equal new ones.
%@ %@
[Layout] progress{%.2f} thresholdedProgress{%.2f} backdropScale{%.2f}
%@ - Acquiring remote object proxy for connection %@ failed with error: %@
updatePlaybackStateWithDiff: %@
playback state after updates: %@
PGVibrancyEffects
PGPictureInPictureApplication
PGGradientView
Utility
PGPictureInPictureController
NSXPCListenerDelegate
NSObject
PGPictureInPictureRemoteObjectDelegate
PGAdditions
PGDisplayLink
BSInvalidatable
PGHostedWindow
PGHostedWindowHostingHandle
PGInterruptionAssistant
PGCommand
PGLayerHostView
_PGBundle
PGPortalView
PGPrerollIndicatorView
PGButtonViewDelegate
PGProgressIndicator
PGVibrantFillView
PGControlsContainerView
PGControlsViewModelDelegate
UIGestureRecognizerDelegate
PGCABackdropLayerView
PGCABackdropLayer
PGCABackdropLayerViewSupport
PGRunLoopObserver
PGPictureInPictureRemoteObjectInterface
PGPictureInPictureExportedInterface
PGLayoutContainerView
PGControlsView
PGPictureInPictureRemoteObject
PGPictureInPictureViewControllerDelegate
PGMaterialView
PGHitTestExtendableView
PGPictureInPictureViewController
PGCommandHandler
PGPlaybackStateDiffConsumer
PGPlaybackState
PGMutablePlaybackState
NSCopying
FaceTimeSupport
PGMutablePlaybackStateFaceTimeSupport
SecurityCameraSupport
PGMutablePlaybackStateSecurityCameraSupport
PGPlaybackStatePrerollAttributes
PGStashedMaskView
PGPictureInPictureProxy
_PGPictureInPictureConnectionExportedObject
PGStashView
__PGView
_PGButton
PGButtonView
UIPointerInteractionDelegate
PGBackdropView
PGControlsViewModel
PGControlsViewModelValues
getRed:green:blue:alpha:
PG_wantsVibrancyEffect
tintColor
layer
compositingFilter
isEqualToString:
setCompositingFilter:
PG_recursivelyDisallowGroupBlending
PG_removeVibrancyEffect
setAllowsGroupBlending:
subviews
countByEnumeratingWithState:objects:count:
PG_updateVibrancyEffectForTintColor
_setTextColorFollowsTintColor:
setAdjustsImageWhenDisabled:
imageForState:
titleLabel
setTintColor:
imageView
titleForState:
setBackgroundColor:
weakObjectsHashTable
processIdentifier
initWithProcessIdentifier:
addObject:
mainBundle
bundleIdentifier
containsObject:
raise:format:
init
dealloc
isEqualToPGPictureInPictureApplication:
hash
stringWithFormat:
pictureInPictureApplicationWithProcessIdentifier:
isEqual:
description
.cxx_destruct
_processIdentifier
_bundleIdentifier
objectForKeyedSubscript:
serviceWithDefaultShellEndpoint
dictionaryWithObjects:forKeys:count:
optionsWithDictionary:
errorWithDomain:code:userInfo:
openApplication:withOptions:completion:
invalidate
applicationInfoForPID:completion:
bundleInfoValueForKey:PID:
initWithFrame:
colorWithWhite:alpha:
CGColor
arrayWithObjects:count:
setColors:
setLocations:
setUserInteractionEnabled:
layerClass
hitTest:withEvent:
sourceSceneSessionPersistentIdentifier
matchesSceneSessionIdentifier:
UTF8String
initWithMachServiceName:
setDelegate:
resume
isStartingStoppingOrCancellingPictureInPicture
pictureInPictureController:didCreatePictureInPictureViewController:
pictureInPictureController:willDestroyPictureInPictureViewController:
pictureInPictureController:willHidePictureInPictureViewController:
pictureInPictureController:didHidePictureInPictureViewController:
pictureInPictureController:shouldCancelPictureInPictureForApplication:whenStartingPictureInPictureForApplication:
pictureInPictureController:shouldDenyNewConnection:
pictureInPictureController:didRequestStopForPictureInPictureViewController:sourceSceneSessionIdentifier:animated:
initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:
preferredContentSizeForInteractivelyEnteringBackgroundForApplication:sceneSessionPersistentIdentifier:
shouldStartPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:
startPictureInPictureForApplicationEnteringBackground:sceneSessionPersistentIdentifier:animated:completionHandler:
stopPictureInPictureForApplication:sceneSessionPersistentIdentifier:animated:completionHandler:
cancelPictureInPictureForApplication:sceneSessionPersistentIdentifier:
_remoteObjectThatShouldStartPictureInPictureEnteringBackgroundForPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
initialLayerFrame
preferredContentSize
_remoteObjectThatCanCancelPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
isMainThread
startPictureInPictureEnteringBackgroundAnimated:withCompletionHandler:
_remoteObjectThatCanStopPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
stopPictureInPictureAnimated:withCompletionHandler:
beginTwoStageStopPictureInPictureByRestoringUserInterfaceWithCompletionHandler:
_remoteObjectThatCanEndTwoStageStopPictureInPictureApplication:error:
endTwoStageStopPictureInPictureWithCompletionBlock:
cancel
pictureInPictureViewController
_remoteObjectForPictureInPictureApplication:passingTest:error:
setCurrentResourcesUsageReductionReasons:
pictureInPictureInterruptionBeganWithReason:
pictureInPictureInterruptionEndedWithReason:
pictureInPictureApplication
objectsPassingTest:
_remoteObjectsForPictureInPictureApplication:
count
anyObject
shouldStartPictureInPictureEnteringBackground
canStopPictureInPicture
canCancelPictureInPicture
canEndTwoStageStopPictureInPicture
connection
delegate
willChangeValueForKey:
setWithSet:
didChangeValueForKey:
initWithConnection:
_pictureInPictureRemoteObjectIsFaceTime:
setPictureInPicturePossible:
queue
_setQueue:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
removeObject:
setInvalidationHandler:
setRemoteObjectInterface:
analyticsDelegate
setAnalyticsDelegate:
suspend
isPictureInPictureSupported
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
listener:shouldAcceptNewConnection:
pictureInPictureRemoteObjectShouldAcceptSetupRequest:
pictureInPictureRemoteObjectShouldUpdateCancellationPolicyOnStart:
pictureInPictureRemoteObjectShouldCancelActivePictureInPictureOnStart:
pictureInPictureRemoteObject:didRequestPictureInPictureStopForViewController:sourceSceneSessionIdentifier:animated:
pictureInPictureRemoteObject:didCreatePictureInPictureViewController:
pictureInPictureRemoteObject:willShowPictureInPictureViewController:
pictureInPictureRemoteObject:didShowPictureInPictureViewController:
pictureInPictureRemoteObject:willHidePictureInPictureViewController:
pictureInPictureRemoteObject:didHidePictureInPictureViewController:
pictureInPictureRemoteObject:willDestroyPictureInPictureViewController:
initialFrameForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:
preferredContentSizeForInteractivePictureInPictureAnimationEnteringBackgroundForApplication:
shouldStartPictureInPictureForApplicationEnteringBackground:
startPictureInPictureForApplicationEnteringBackground:animated:completionHandler:
stopPictureInPictureForApplication:animated:completionHandler:
cancelPictureInPictureForApplication:
preferredContentSizeForActivePictureInPictureWithApplication:sceneSessionPersistentIdentifier:
beginTwoStageStopPictureInPictureForApplication:withSceneSessionPersistentIdentifier:animated:byRestoringUserInterfaceWithCompletionHandler:
endTwoStageStopPictureInPictureForApplication:withSceneSessionPersistentIdentifier:animated:completionHandler:
startPictureInPictureResourcesUsageReductionForApplication:requestingViewController:
stopPictureInPictureResourcesUsageReductionForApplication:requestingViewController:
pictureInPictureInterruptionBegan
pictureInPictureInterruptionEnded
existingPictureInPictureApplicationForBundleIdentifier:
_remoteObjectForPictureInPictureApplication:sceneSessionPersistentIdentifier:error:
isPictureInPictureActive
pictureInPictureApplications
activePictureInPictureApplication
_pictureInPictureRemoteObjects
_pictureInPictureRemoteObjectsSupportingActiveSessionCancellationOnStart
_listener
_listenerQueue
_activePictureInPictureRemoteObject
_suspendedPictureInPictureRemoteObject
_delegate
_delegateRespondsTo
_pictureInPictureActive
_pictureInPictureApplications
_activePictureInPictureApplication
_analyticsDelegate
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
PG_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:
_linkFired:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
mainRunLoop
addToRunLoop:forMode:
isPaused
setPaused:
owner
linkFired
initWithOwner:linkFired:
preferredFramesPerSecond
_link
_invalidated
_owner
_linkFired
_preferredFramesPerSecond
hostingHandle
canBecomeFirstResponder
_canBecomeKeyWindow
hostedWindowHostingHandle
dictionary
_numberOfInterruptionsForReason:
numberWithLong:
numberWithInteger:
setObject:forKeyedSubscript:
_calculateIsInterrupted
integerValue
allKeys
initWithExceptionPolicy:
isInterrupted
shouldNotifyProxyOfInterruptionBegan
noteDidNotifyProxyOfInterruptionBegan
shouldNotifyProxyOfInterruptionEnded
noteDidNotifyProxyOfInterruptionEnded
allowsResumingAfterInterruptionEnds
addReason:
removeReason:
isInterruptedForReason:
notePictureInPictureSessionDidEnd
_reasons
_ignoreFaceTimeCameraInterruptions
_allowsResumingAfterInterruptionEnds
_isInterrupted
_lastInterruptionStateSentToProxy
_unfairLock
initWithDictionary:
numberWithBool:
numberWithDouble:
commandForPlaybackAction:associatedBoolValue:
commandForPlaybackAction:
commandForPlaybackAction:associatedDoubleValue:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
commandForSystemAction:
commandForFaceTimeAction:associatedBoolValue:
commandForFaceTimeAction:
copy
dictionaryRepresentation
boolValue
doubleValue
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
descriptionBuilderWithMultilinePrefix:
appendString:withName:
appendBool:withName:
appendDouble:withName:decimalPrecision:
appendDescriptionForKey:value:toBuilder:
enumerateKeysAndObjectsUsingBlock:
appendBodySectionWithName:multilinePrefix:block:
commandForSetMuted:
commandForSetPlaying:
commandForSetSuspended:
commandForBeginInterruption
commandForEndInterruptionWithShouldResumeSuggestion:
commandForSkipToLive
commandForSkipPreroll
commandForSkipByInterval:
commandForCancelPIP
commandForRestoreFromPIP
commandForToggleControlsVisibility
commandForSendActionButtonTapped
commandForToggleZoom
commandForSetCameraEnabled:
commandForSetMicrophoneMuted:
commandForSwitchCamera
playbackAction
systemAction
faceTimeAction
associatedBoolValue
associatedDoubleValue
succinctDescription
_dictionaryRepresentation
PG_setAllowsEdgeAntialiasing:
setClipsToBounds:
viewWithHostedWindowHostingHandle:
addSubview:
_setContinuousCornerRadius:
setHostedWindowHostingHandle:
_manageSharingOfTouchesBetweenClientAndHostContext
window
contextID
_contextId
policyRequiringSharingOfTouchesDeliveredToChildContextId:withHostContextId:
endpoint
setAssertionEndpoint:
ipc_addPolicy:
setCornerRadiusScale:
didMoveToWindow
cornerRadiusScale
ignoreCornerRadiusUpdates
setIgnoreCornerRadiusUpdates:
_remoteView
_touchDeliveryPolicyAssertion
_cornerRadiusScale
_cornerRadius
_ignoreCornerRadiusUpdates
bundleForClass:
bundle
localizedStringForKey:value:table:
portalLayer
setSourceLayer:
setMatchesTransform:
setSourceView:
sourceView
_sourceView
updateValues
sizeToFit
viewModel
values
isPrerollActive
prerollAttributes
contentType
setLabelText:
secondsUntilPrerollSkippable
setTimeRemainingText:
setAccessibilityIdentifier:
setHidden:
contentTypeLabel
prerollTintColor
text
labelText
whiteColor
setTextColor:
systemFontOfSize:weight:
setFont:
setCornerCurve:
setCornerRadius:
setTextAlignment:
setTransform:
setText:
frame
setLabelSize:
_layoutContentTypeLabel
timeRemainingText
buttonWithDelegate:
disabledTintColor
setEnabled:
setGlyphSize:
setSystemImageName:
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
isPrerollSkippable
enabledTintColor
_layoutSkipPrerollButton
layoutSubviews
handleSkipPrerollButtonTapped
length
bounds
preferredHeight
labelSize
setFrame:
_subviewTransform
setFrameOrigin:
buttonViewDidReceiveTouchUpInside:
buttonView:imageRectForContentRect:proposedRect:
buttonView:titleRectForContentRect:proposedRect:
buttonView:contentEdgeInsetsForProposedInsets:
initWithFrame:viewModel:
labelWidth
skipPrerollButtonView
displayLink
_viewModel
_contentTypeLabel
_skipPrerollButtonView
_displayLink
_labelSize
contentView
_updateElapsedTrackTintColor
_performLayout
_updatePulseAnimatorIfNeeded
_setCornerRadius:
progress
customElapsedTrackTintColor
includesWaitingToPlayIndicator
_transitionToPulseStateIfNeeded:
isRunning
isInterruptible
stopAnimation:
finishAnimationAtPosition:
_applyPulseState
initWithDuration:curve:animations:
addCompletion:
startAnimation
setCustomElapsedTrackTintColor:
setProgress:
setIncludesWaitingToPlayIndicator:
_elapsedTrack
_completeTrack
_pulseAnimator
_pulseState
_includesWaitingToPlayIndicator
_progress
_customElapsedTrackTintColor
tintColorDidChange
setOverrideUserInterfaceStyle:
_handleSingleTapGestureRecognizer:
initWithTarget:action:
addGestureRecognizer:
setDelaysTouchesEnded:
_handleDoubleTapGestureRecognizer:
setNumberOfTapsRequired:
_handleDoubleDoubleTapGestureRecognizer:
setNumberOfTouchesRequired:
_handleHoverGestureRecognizer:
setBorderWidth:
setBorderColor:
_updateVisibilityOfView:hidden:animated:existingAnimator:
_setControlsHidden:animated:
_invalidateTimer
prefersControlsHidden
_setPrefersControlsHidden:animated:
commandHandler
handleCommand:
includesSingleTapGestureRecognizer
includesDoubleTapGestureRecognizer
includesDoubleDoubleTapGestureRecognizer
viewModelDidUpdateValuesFromOldValues:
_updateHideControlsAfterDelayTimer
playbackState
normalizedProgress
controlsShouldAutoHide
includesContentLoadingIndicator
_continuousCornerRadius
insertSubview:belowSubview:
removeFromSuperview
view
locationInView:
isDescendantOfView:
gestureRecognizerShouldBegin:
state
handleSingleTap
handleDoubleTap
handleDoubleDoubleTap
isShowingControlsForHoverActive
setShowingControlsForHoverActive:
_controlsShouldAutoHide
_acquirePreventAutoHideOfControlsAssertionWithReason:
UUID
UUIDString
setWithCapacity:
initWithIdentifier:forReason:invalidationBlock:
setPrefersControlsHidden:
updateProgress
performWithoutAnimation:
updateControlsAlpha
_performVisibilityTransitionAnimated:existingAnimator:animations:success:
setAlpha:
scheduledTimerWithTimeInterval:repeats:block:
controlsViewModel:valuesChangedFromOldValue:
controlsViewModel:didIssueCommand:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
setControlsContainerHidden:animated:
setInteractivelyResizing:
PG_acquireAssertionToPreventAutoHideOfControlsWithReason:
setCommandHandler:
showsPictureInPictureUnavailableIndicator
setShowsPictureInPictureUnavailableIndicator:
isInteractivelyResizing
_controlsView
_containerViewVisibilityAnimator
_controlsViewVisibilityAnimator
_hidableControlsVisibilityAnimator
_interruptionDimmingView
_singleTapGestureRecognizer
_doubleTapGestureRecognizer
_doubleDoubleTapGestureRecognizer
_hoverGestureRecognizer
_hideControlsAfterDelayTimer
_preventAutoHideOfControlsAssertionIdentifiers
_interactivelyResizing
_showsPictureInPictureUnavailableIndicator
_showingControlsForHoverActive
_commandHandler
filterWithType:
setValue:forKey:
valueWithCAColorMatrix:
colorWithRed:green:blue:alpha:
initWithFrame:captureOnly:
setCaptureOnly:
setGroupName:
defaultCenter
updateEffects
addObserver:selector:name:object:
removeObserver:name:object:
_preferredEffect
_preferredBackgroundColor
materialFilters
_isCaptureOnly
isEnabled
PG_backdropGroupLeader
setGroupLeader:
groupLeader
groupName
scale
setScale:
filters
isEqualToArray:
setFilters:
backgroundColor
_hasAnyDependentsThatWantsCapturedBlur
customBackgroundColor
reducedTransparencyColor
PG_preferredVisibilityForView:
captureOnly
_removeDependent:
_addDependent:
_wantsCapturedBlur
_enumerateDependents:
_ensureDependents
alpha
superview
initWithCoder:
pointInside:withEvent:
setCustomBackgroundColor:
_isTransparentOrHasTransparentAncestor
dependents
_customBackgroundColor
_groupLeader
_dependents
valueForKeyPath:
setValue:forKeyPath:
setActions:
actions
setRunLoopObserver:
runLoopObserver
_actions
_runLoopObserver
initializePictureInPictureWithControlsStyle:preferredContentSize:completionHandler:
setupStartAnimated:hostedWindowHostingHandle:sceneSessionPersistentIdentifier:preferredContentSize:initialInterfaceOrientation:initialLayerFrame:playbackState:completionHandler:
startPictureInPictureAnimated:completionHandler:
updateInitialLayerFrameForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:
updateSourceSceneSessionPersistentIdentifierForInteractiveTransitionAnimationUponBackgrounding:withCompletionHandler:
updatePreferredContentSize:withCompletionHandler:
checkActivePictureInPictureCancellationPolicyWithCompletion:
rotateContentContainer:withCompletionHandler:
setupStopAnimated:needsApplicationActivation:completionHandler:
stopPictureInPictureAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:
cleanupWithCompletionHandler:
setPictureInPictureShouldStartWhenEnteringBackground:completionHandler:
updatePlaybackStateWithDiff:
stopPictureInPictureAndRestoreUserInterface
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
pictureInPictureStartRequestedAnimated:withCompletionHandler:
pictureInPictureStopRequestedAnimated:withCompletionHandler:
beginTwoStagePictureInPictureStopByRestoringUserInterfaceWithCompletionHandler:
endTwoStagePictureInPictureStopWithCompletionBlock:
pictureInPictureCancelRequestedAnimated:withCompletionHandler:
updatePictureInPicturePossible:
pictureInPictureCancelled
updateHostedWindowSize:animationType:initialSpringVelocity:synchronizationFence:
hostedWindowSizeChangeBegan
hostedWindowSizeChangeEnded
actionButtonTapped
setStashedOrUnderLock:
setResourcesUsageReductionReasons:
setCircular:
_progressIndicatorFrameWithScaling:
null
includesRestoreButton
includesSkipBackButton
includesActionButton
includesSkipForwardButton
includesCancelButton
includesLiveIndicatorBadge
isSkipBackButtonEnabled
isActionButtonEnabled
isSkipForwardButtonEnabled
actionButtonsWantBackground
systemWhiteColor
cancelButtonImageTintColor
cancelButtonBackgroundTintColor
skipBackButtonImageTintColor
skipBackButtonBackgroundTintColor
skipForwardButtonImageTintColor
skipForwardButtonBackgroundTintColor
actionButtonImageTintColor
actionButtonBackgroundTintColor
cancelButtonSystemImageName
restoreButtonSystemImageName
skipBackButtonSystemImageName
actionButtonSystemImageName
skipForwardButtonSystemImageName
cancelButtonAccessibilityIdentifier
restoreButtonAccessibilityIdentifier
skipBackButtonAccessibilityIdentifier
actionButtonAccessibilityIdentifier
skipForwardButtonAccessibilityIdentifier
setBackdropHidden:
includesProgressBar
isHidden
setNeedsLayout
layoutIfNeeded
_showsGradientView
traitCollection
displayScale
recommendedUpdateCadenceForProgressBarWithWidthInPixels:
preferredMinimumWidth
origin
_prerollIndicatorFrameWithScaling:
font
sizeWithAttributes:
setCenter:
center
initWithActivityIndicatorStyle:
insertSubview:atIndex:
darkGrayColor
isAnimating
startAnimating
stopAnimating
_isInAWindow
handleRestoreButtonTapped
handleActionButtonTapped
handleSkipBackButtonTapped
handleSkipForwardButtonTapped
handleCancelButtonTapped
updateControlsHidden
_restoreButton
_cancelButton
_skipBackButton
_actionButton
_skipForwardButton
_liveIndicatorBadgeButton
_contentLoadingIndicator
_contentLoadingIndicatorContainerView
_hidableItemsLayoutContainerView
_captureOnlyView
_progressIndicator
_prerollIndicatorView
_gradientView
_allButtons
_groupNameBase
_displayLinkForProgressUpdates
_prefersControlsHidden
rangeOfString:
substringToIndex:
substringFromIndex:
deactivateAnalyticsSessionIfNeeded
pictureInPictureDidDestroyAnalyticsSourceWithUUID:
_isUnderLock
pictureInPictureDidCreateAnalyticsSourceWithUUID:bundleIdentifier:contentType:
PG_appProxyWithDebugMethodAndPointerProem:
notePictureInPictureStartedAutomatically:
_processAssertionForProcessIdentifier:
PG_appProxyWithDebugMethodAndPointerProem:errorHandler:
_invalidationTimerWithTimeout:
_startPreventingCancelAndRestoreUserActions
_invalidateInterruptionBeganFinishTaskAssertion
_finishTaskAssertionForProcessIdentifier:
setInterrupted:
_setCurrentState:
performSuspendAnimationWithCompletionHandler:
performResumeAnimationWithCompletionHandler:
_invalidationTimerWithTimeout:block:
notePictureInPictureWillStopForAppRequest:preferredFullScreenRestore:
_tearDownAndNotifyClientAboutCancellation:
performStopAnimated:withFinalInterfaceOrientation:finalLayerFrame:completionHandler:
initWithPID:flags:reason:name:withHandler:
preventsRestoreAndCancelActions
setPreventsRestoreAndCancelActions:
currentConnection
initWithApplication:controlsStyle:
setAnalyticsDelegate:analyticsSourceUUID:
setPreferredContentSize:
prepareStartAnimationWithInitialInterfaceOrientation:initialLayerFrame:completionHandler:
performStartAnimated:withCompletionHandler:
_updatePreferredContentSize:withCompletionHandler:
_synchronizedDrawingFence
performRotateAnimationWithRotation:completionHandler:
prepareStopAnimationWithCompletionHandler:
pictureInPictureViewControllerDidRequestStop:
pictureInPictureViewControllerDidRequestCancel:
pictureInPictureViewController:updateHostedWindowSize:animationType:initialSpringVelocity:
pictureInPictureViewControllerHostedWindowSizeChangeBegan:
pictureInPictureViewControllerHostedWindowSizeChangeEnded:
pictureInPictureViewController:didReceiveCommand:
pictureInPictureViewController:didTransitionToStashed:shouldBeginOrEndInterruption:
transitioningState
isPictureInPicturePossible
currentState
_connection
_queue
_controlsStyle
_currentState
_processAssertion
_interruptionBeganFinishTaskAssertion
_cancelPictureInPictureFinishTaskAssertion
_finishTaskInvalidationUUID
_twoStagedStopInvalidationTimer
_analyticsSourceUUID
_shouldNoteStartedAutomaticallyForAnalytics
_isPictureInPicturePossible
_pictureInPictureShouldStartWhenEnteringBackground
_shouldShowAlternateActionButtonImage
_shouldShowLoadingIndicator
_interruptionAssistant
_transitioningState
_hasBegunTwoStateStop
_stashed
_resourcesUsageReductionReasons
_stateCaptureInvalidatable
_pictureInPictureApplication
_pictureInPictureViewController
_sourceSceneSessionPersistentIdentifier
_preferredContentSize
_initialLayerFrame
isBackdropHidden
_contentView
_backdropLayerView
_backgroundColor
convertPoint:toView:
hitTestExtenderView
setHitTestExtenderView:
_hitTestExtenderView
initWithNibName:bundle:
prefersIdleTimerDisabled
postNotificationName:object:
setStashProgress:
isViewLoaded
_handleTapWhileStashedGestureRecognizer:
removeGestureRecognizer:
_updatePrefersIdleTimerDisabled
stashEventsShouldBeginAndEndInterruptions
pictureInPictureDidChangeStashStateForAnalyticsSessionWithUUID:stashed:
isRoutingVideoToHostedWindow
playbackSourceDidUpdateIsRoutingVideoToHostedWindow:
acquireInterfaceOrientationLock
relinquishInterfaceOrientationLock
handleTapWhileStashedGesture
handleDoubleTapGesture
setStashed:
showChrome:animated:
_resetStashTabViewsIfPossible
pictureInPictureDidDeactivateAnalyticsSessionWithUUID:analyticsSourceUUID:appStoppedSession:restoredFullScreen:
pictureInPictureDidDestroyAnalyticsSessionWithUUID:
setMinimumStashTabSize:
setStashedTabWidth:
clearColor
contentViewCornerRadius
_loadShadowViewIfNeeded
PG_animateUsingDefaultTimingWithAnimations:completion:
PG_animateUsingDefaultDampedSpringWithInitialSpringVelocity:animations:completion:
blurProgress
setBlurProgress:
PG_animateUsingDefaultTimingWithOptions:animations:completion:
animateWithDuration:delay:options:animations:completion:
_setStashedTabHidden:left:
_animateUsingSpringBehavior:tracking:animations:completion:
setView:
viewDidLoad
initWithShadowAttributes:maskCornerRadius:
_addMaskViewSubviewIfNeeded
viewWillLayoutSubviews
frameWithContentWithFrame:
_layoutStashTabViewsIfNeeded
tabViewBounds
setBounds:
position
setPosition:
_setPortalActive:left:
_setStashMaskActive:
setTabHidden:left:
setChevronHidden:left:
maskView
setMaskView:
_updateContentCornerRadiusForMaskActive:
PG_performWithoutRetargetingAnimation:
initWithFrame:minimumStashTabSize:
setTabShadowView:
resetChevronState
preferredContentSizeDidChangeForPictureInPictureViewController
_performStartAnimationWithCompletionHandler:
supportsFaceTimeActions
pictureInPictureDidCreateAnalyticsSessionWithUUID:bundleIdentifier:contentType:
pictureInPictureDidActivateAnalyticsSessionWithUUID:analyticsSourceUUID:automatically:
sharedApplication
endIgnoringInteractionEvents
beginIgnoringInteractionEvents
performStartAnimationWithCompletionHandler:
_performStopAnimationWithFinalInterfaceOrientation:finalLayerFrame:completionHandler:
performStopAnimationWithFinalInterfaceOrientation:finalLayerFrame:completionHandler:
playbackRate
animateViewWithAnimationType:initialSpringVelocity:animations:completion:
setContentContainer:
setCanStartShowingChrome:
updateHostedWindowSize:
isStashTabHidden
setStashTabHidden:left:withSpringBehavior:
loadView
contentContainerView
setContentViewHidden:
application
contentContainer
canStartShowingChrome
minimumStashTabSize
stashed
waitForUIFinalizationCompletionBlock
setWaitForUIFinalizationCompletionBlock:
controlsStyle
_hostedWindowHostingHandle
_backgroundView
_containerView
_controlsContainerView
_shadowView
_stashView
_tabShadowView
_stashMaskView
_leftSideContentPortalView
_rightSideContentPortalView
_initialLayerFrameIsNull
_prefersIdleTimerDisabled
_isSuspended
_stashTabHidden
_stashTabShownLeft
_isShowingChrome
_inFlightStashTabAnimationIdentifier
_inFlightStashProgressAnimationIdentifier
_stashedTapGestureRecognizer
_contentContainer
_analyticsSessionUUID
_startedAutomatically
_contentContainerRespondsTo
_canStartShowingChrome
_application
_waitForUIFinalizationCompletionBlock
_minimumStashTabSize
addObserverForName:object:queue:usingBlock:
removeObserver:
mutableCopy
mutableDictionary
_ensureMutableDictionary
addEntriesFromDictionary:
isEqualToDictionary:
elapsedTime
keysForEqualityOfNumberValues
_numberForKey:
isEqualToNumber:
requiredLinearPlaybackEndTime
isEquivalentToPlaybackState:
dictionaryWithCapacity:
hasInvalidTiming
contentDuration
_integerForKey:
_doubleForKey:
anchorContentTime
timeControlStatus
anchorWallTime
_boolForKey:
_setInteger:forKey:
_setDouble:forKey:
_setBool:forKey:
_dictionaryForKey:
_setDictionaryOrNotFound:forKey:
defaultValueForKey:
_setStateValue:forKey:
appendString:withName:skipIfEmpty:
setPlaybackRate:elapsedTime:timeControlStatus:
setContentType:
setContentDuration:
isMuted
setMuted:
requiresLinearPlayback
setRequiresLinearPlayback:
setPrerollAttributes:
setRoutingVideoToHostedWindow:
copyWithZone:
diffFromPlaybackState:
_prerollAttributes
_mutableDictionary
setSupportsFaceTimeActions:
isCameraActive
setCameraActive:
canSwitchCamera
setCanSwitchCamera:
isMicrophoneMuted
setMicrophoneMuted:
cameraHasMicrophone
setCameraHasMicrophone:
initWithRequiredLinearPlaybackEndTime:preferredTintColor:contentType:
setObject:forKey:
objectForKey:
preferredTintColorDescription
prerollAttributesForAdContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
prerollAttributesForSponsoredContentWithRequiredLinearPlaybackEndTime:preferredTintColor:
preferredTintColor
allowsEdgeAntialiasing
mainScreen
setContentsScale:
setAllowsEdgeAntialiasing:
allowsGroupBlending
anchorPoint
setAnchorPoint:
activate
begin
setDisableActions:
commit
_performWithoutRetargetingAnimations:
_currentAnimationDuration
setAnimationDuration:
_animateUsingDefaultTimingWithOptions:animations:completion:
_animateUsingDefaultDampedSpringWithDelay:initialSpringVelocity:options:animations:completion:
PG_allowsEdgeAntialiasing
PG_allowsGroupBlending
PG_setAllowsGroupBlending:
PG_anchorPoint
PG_setAnchorPoint:
PG_compositingFilter
PG_setCompositingFilter:
PG_cornerRadius
PG_performWithoutAnimation:
blackColor
convertPoint:fromView:
containsPoint:
_mainBodyBounds
tabShadowView
_tabHidden
_tabShownLeft
_mainBody
_tab
_tabTopCornerFill
_tabBottomCornerFill
_tabLeftTopCornerDestOut
_tabLeftBottomCornerDestOut
_tabRightTopCornerDestOut
_tabRightBottomCornerDestOut
initWithControlsStyle:viewController:
_updatePlaybackStateContentTypeIfNeeded
initWithMachServiceName:options:
initWithPictureInPictureProxy:
_beginDeactivatingPictureInPicture
_endDeactivatingPictureInPictureIfNeededWithAnimationType:stopReason:
PG_remoteObjectWithDebugMethodAndPointerProem:
shouldShowAlternateActionButtonImage
addObserver:forKeyPath:options:context:
setRootViewController:
_stopObservingWindowSceneActivationState
removeObserver:forKeyPath:context:
pictureInPictureProxyInterfaceOrientationForTransitionAnimation:
pictureInPictureProxyViewFrameForTransitionAnimation:
pictureInPictureProxyViewControllerWindowForTransitionAnimation:
pictureInPictureProxy:willStartPictureInPictureWithAnimationType:
pictureInPictureProxy:didStartPictureInPictureWithAnimationType:
pictureInPictureProxy:failedToStartPictureInPictureWithAnimationType:error:
pictureInPictureProxy:restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:
pictureInPictureProxy:willStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxy:didStopPictureInPictureWithAnimationType:reason:
pictureInPictureProxyPictureInPictureInterruptionBegan:
pictureInPictureProxyPictureInPictureInterruptionEnded:
pictureInPictureProxy:didUpdateStashedOrUnderLockState:
pictureInPictureProxy:didUpdateResourcesUsageReductionReasons:oldReasons:
pictureInPictureProxyWillSetupPictureInPictureStop:
pictureInPictureProxy:didRequestFaceTimeAction:
_updateFaceTimePlaybackStateUsingBlock:
_updateAutoPIPSettingsAndNotifyRemoteObjectIfNeeded
valueWithBytes:objCType:
_expectedScene
activationState
_viewFrameForTransitionAnimationAssumeApplicationActive:
_addWindowSceneActivationStateObserverIfNeeded:
_sceneSessionPersistentIdentifierForTransitionAnimationAssumeApplicationActive:
_startPictureInPictureAnimated:enteringBackground:withCompletionHandler:
remoteObjectProxy
_stopPictureInPictureAnimated:restoreUserInterface:withCompletionHandler:
PG_remoteObjectWithDebugMethodAndPointerProem:errorHandler:
_systemAnimationFenceExemptQueue
_synchronizeDrawingWithFence:
performAsync:
updatePlaybackStateUsingBlock:
setControlsStyle:animated:withCompletionHandler:
_setMaybeNeedsUpdatePlaybackState
observeValueForKeyPath:ofObject:change:context:
__coordinateStartAnimated:withCompletionHandler:
__updateCancellationPolicyWithSuccessHandler:failureHandler:
__didStartWithAnimationType:completionHandler:
__actuallyStartWithAnimationType:successHandler:failureHandler:
__setupStartWithAnimationType:initialLayerFrame:successHandler:failureHandler:
_interfaceOrientationForTransitionAnimationAssumeApplicationActive:
_resetPlaybackStateAccordingToRemoteObject
_generatePlaybackStateDiffAndMarkAsSent
localizedDescription
setTranslatesAutoresizingMaskIntoConstraints:
addChildViewController:
didMoveToParentViewController:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
willAnimatePictureInPictureStart
didAnimatePictureInPictureStart
_updatePictureInPictureActive:
__actuallyStopAnimated:reason:finalLayerFrame:finalInterfaceOrientation:completionHandler:
__restoreUserInterfaceAnimated:reason:completionHandler:
__setupStopAnimated:needsApplicationActivation:waitForApplicationActivation:successHandler:failureHandler:
_isViewControllerWindowSceneActive
__actuallyStopAnimated:reason:completionHandler:
__setupStopAnimated:needsApplicationActivation:successHandler:failureHandler:
__waitForApplicationActivationWithSuccessHandler:failureHandler:
_sourceScene
_beginDeactivatingPictureInPictureWithAnimationType:stopReason:
_endDeactivatingPictureInPictureIfNeededWithAnimationType:stopReason:cleanupHandlerOrNil:
_setStashedOrUnderLockIfNeeded:
_setResourcesUsageReductionReasons:
pictureInPictureProxy:didReceivePlaybackCommand:
_legacyPictureInPictureInterruptionEnded
willAnimatePictureInPictureStop
didAnimatePictureInPictureStop
willMoveToParentViewController:
removeFromParentViewController
__cleanupWithCompletionHandler:
_executeDelegateCallbackBlock:assumeApplicationActive:
fixedCoordinateSpace
windowScene
session
persistentIdentifier
applicationState
connectedScenes
_updateAutoPIPSettingsAndNotifyRemoteObject
viewFrameForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
windowSceneForInteractiveTransitionAnimationWhenEnteringBackgroundDidChangeForViewController
_updatePlaybackStateIfNeeded
set_pipStopUserInterfaceRestoreContinuationBlock:
_twoStageStopForPictureInPictureRestoreWithContinueAfterUserInterfaceRestoreBlock:completionHandler:
set_pipStopFinalStageCompletionHandler:
viewWillResize
viewDidResize
_notifyActionButtonTapped
_legacyPictureInPictureInterruptionBegan
skipForwardButtonTappedWithTimeInterval:
pictureInPictureProxyWithControlsStyle:viewController:
isPictureInPictureSuspended
isPictureInPictureInterrupted
pictureInPictureShouldStartWhenEnteringBackground
setPictureInPictureShouldStartWhenEnteringBackground:
pictureInPictureWasStartedWhenEnteringBackground
playbackProgress
loadedTimeRanges
setLoadedTimeRanges:
preferredContentSizeDidChangeForViewController
startPictureInPicture
stopPictureInPictureAndRestoreUserInterface:
setPlaybackProgress:playbackRate:
setControlsStyle:
viewController
isPictureInPictureStashedOrUnderLock
resourcesUsageReductionReasons
isPictureInPictureStashed
_pipStopUserInterfaceRestoreContinuationBlock
_pipStopFinalStageCompletionHandler
_sceneSessionPersistentIdentifier
_isPictureInPictureActive
_isPictureInPictureSuspended
_pictureInPictureWasStartedWhenEnteringBackground
_shouldCancelActivePictureInPictureOnStart
_shouldPullCancellationPolicyOnStart
_isDeactivatingPictureInPicture
_windowSceneActivationStateObserver
_playbackProgress
_playbackRate
_loadedTimeRanges
_playbackState
_playbackStateAccordingToRemoteObject
_hostedWindow
_rootViewController
_isStartingStoppingOrCancellingPictureInPicture
_isHostedWindowSizeChangeDuringPinchGesture
_pictureInPictureStashedOrUnderLock
_viewController
__pipStopUserInterfaceRestoreContinuationBlock
__pipStopFinalStageCompletionHandler
_pictureInPictureProxy
setGaussianBlurRadius:
configurationWithFont:
systemImageNamed:withConfiguration:
imageWithRenderingMode:
initWithImage:
secondaryLabelColor
transform
setBackdropScale:
layoutStashChevrons
stashedTabWidth
_backdropView
_lightTintView
_darkTintView
_leftChevron
_rightChevron
_chevronsHidden
_isChevronShownLeft
_blurProgress
_stashedTabWidth
animatedLayerProperties
_shouldAnimatePropertyWithKey:
setAnimatedLayerProperties:
_animatedLayerProperties
hitRect
setTitle:forState:
setImage:forState:
imageRectForContentRect:
buttonView
titleRectForContentRect:
setButtonView:
_buttonView
quaternaryLabelColor
buttonWithType:
setAdjustsImageWhenHighlighted:
_handleTouchUpInside:
addTarget:action:forControlEvents:
_handleTouchDown:
_handleDragEnter:
_handleDragExit:
_handleTouchUpOrCancel:
actualButton
contentEdgeInsets
setContentEdgeInsets:
initWithDelegate:
setPointerInteraction:
addInteraction:
accessibilityIdentifier
_updateForCircularAppearanceIfNeeded
_shouldHitTest
_updateGlyphConfigurationIfNeeded
initWithView:
effectWithPreview:
styleWithEffect:shape:
glyphSize
systemImageName
setHighlighted:
isHighlighted
pointerInteraction:regionForRequest:defaultRegion:
pointerInteraction:styleForRegion:
pointerInteraction:willEnterRegion:animator:
pointerInteraction:willExitRegion:animator:
isCircular
setActualButton:
highlightAnimator
setHighlightAnimator:
pointerInteraction
_currentGlyphSize
_currentGlyphImageName
_preventAutoHideOfControlsAssertion
_circular
_highlighted
_systemImageName
_glyphSize
_actualButton
_highlightAnimator
_pointerInteraction
PG_remoteObjectProxyWithDebugMethodAndPointerProem:
PG_remoteObjectProxyWithDebugMethodAndPointerProem:errorHandler:
remoteObjectProxyWithErrorHandler:
setName:
_updateFilters
arrayWithObject:
gaussianBlurRadius
backdropScale
_gaussianBlurFilter
_averageColorFilter
_updateViewModelValues
progressBarShouldUpdate
systemRedColor
systemYellowColor
_lastKnownElapsedTime
_hasBegun
_interrupted
_preventsRestoreAndCancelActions
_values
_objectForKey:
initWithDictionaryRepresentation:
defaultPrerollTintColor
B16@0:8
v16@0:8
@20@0:8i16
@16@0:8
B24@0:8@16
Q16@0:8
i16@0:8
@"NSString"
#16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@40@0:8{CGPoint=dd}16@32
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v44@0:8@16@24@32B40
v32@0:8@16@24
B24@0:8@"PGPictureInPictureRemoteObject"16
v44@0:8@"PGPictureInPictureRemoteObject"16@"PGPictureInPictureViewController"24@"NSString"32B40
v32@0:8@"PGPictureInPictureRemoteObject"16@"PGPictureInPictureViewController"24
v24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGSize=dd}24@0:8@16
v36@0:8@16B24@?28
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
{CGSize=dd}32@0:8@16@24
v44@0:8@16@24B32@?36
v24@0:8q16
@24@0:8@16
@40@0:8@16@?24^@32
@40@0:8@16@24^@32
@32@0:8@16^@24
@"NSMutableSet"
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"PGPictureInPictureRemoteObject"
@"<PGPictureInPictureControllerDelegate>"
{?="pictureInPictureController_didCreatePictureInPictureViewController"b1"pictureInPictureController_willDestroyPictureInPictureViewController"b1"pictureInPictureController_willHidePictureInPictureViewController"b1"pictureInPictureController_didHidePictureInPictureViewController"b1"pictureInPictureController_shouldCancelPictureInPictureForApplication_whenStartingPictureInPictureForApplication"b1"pictureInPictureController_shouldDenyNewConnection"b1"pictureInPictureController_didRequestStopForPictureInPictureViewController_sourceSceneSessionIdentifier_animated"b1}
@"NSSet"
@"PGPictureInPictureApplication"
@"<PGPictureInPictureAnalyticsDelegate>"
@76@0:8@16q24q32@40q48d56d64f72
@32@0:8@16@?24
v24@0:8Q16
@?16@0:8
@"CADisplayLink"
@24@0:8q16
q24@0:8q16
B24@0:8q16
@"NSMutableDictionary"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@28@0:8q16B24
@32@0:8q16d24
@20@0:8B16
@24@0:8d16
q16@0:8
d16@0:8
v40@0:8q16@24@32
@"NSDictionary"
v24@0:8d16
v20@0:8B16
@"_UIRemoteView"
@"BKSTouchDeliveryPolicyAssertion"
@"UIView"
{CGRect={CGPoint=dd}{CGSize=dd}}88@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
{UIEdgeInsets=dddd}56@0:8@16{UIEdgeInsets=dddd}24
v24@0:8@"PGButtonView"16
{CGRect={CGPoint=dd}{CGSize=dd}}88@0:8@"PGButtonView"16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56
{UIEdgeInsets=dddd}56@0:8@"PGButtonView"16{UIEdgeInsets=dddd}24
@56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48
{CGAffineTransform=dddddd}16@0:8
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
@"PGControlsViewModel"
@"UILabel"
@"PGButtonView"
@"PGDisplayLink"
{CGSize="width"d"height"d}
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"PGVibrantFillView"
@"UIViewPropertyAnimator"
@"UIColor"
v32@0:8@"PGControlsViewModel"16@"PGControlsViewModelValues"24
v32@0:8@"PGControlsViewModel"16@"PGCommand"24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v24@0:8B16B20
@40@0:8@16B24B28@32
@44@0:8B16@20@?28@?36
@"PGControlsView"
@"UITapGestureRecognizer"
@"UIGestureRecognizer"
@"NSTimer"
@"<PGCommandHandler>"
@52@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16B48
B40@0:8{CGPoint=dd}16@32
v24@0:8@?16
@"PGCABackdropLayerView"
@"NSHashTable"
^{__CFRunLoopObserver=}16@0:8
v24@0:8^{__CFRunLoopObserver=}16
^{__CFRunLoopObserver=}
Vv48@0:8q16{CGSize=dd}24@?40
Vv108@0:8B16@20@28{CGSize=dd}36q52{CGRect={CGPoint=dd}{CGSize=dd}}60@92@?100
Vv28@0:8B16@?20
Vv56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?48
Vv32@0:8@16@?24
Vv40@0:8{CGSize=dd}16@?32
Vv24@0:8@?16
Vv32@0:8q16@?24
Vv32@0:8B16B20@?24
Vv68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?60
Vv24@0:8@16
Vv48@0:8q16{CGSize=dd}24@?<v@?B@"NSError">40
Vv108@0:8B16@"PGHostedWindowHostingHandle"20@"NSString"28{CGSize=dd}36q52{CGRect={CGPoint=dd}{CGSize=dd}}60@"NSDictionary"92@?<v@?B@"NSError">100
Vv28@0:8B16@?<v@?B@"NSError">20
Vv56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@?<v@?B@"NSError">48
Vv32@0:8@"NSString"16@?<v@?B@"NSError">24
Vv40@0:8{CGSize=dd}16@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError"BB>16
Vv32@0:8q16@?<v@?B@"NSError"@"BKSAnimationFenceHandle">24
Vv32@0:8B16B20@?<v@?B@"NSError">24
Vv68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?<v@?B@"NSError"@"BKSAnimationFenceHandle">60
Vv24@0:8@?<v@?B@"NSError">16
Vv24@0:8@"NSDictionary"16
Vv20@0:8B16
Vv56@0:8{CGSize=dd}16q32d40@48
Vv24@0:8Q16
Vv56@0:8{CGSize=dd}16q32d40@"BKSAnimationFenceHandle"48
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
@"UIActivityIndicatorView"
@"PGLayoutContainerView"
@"PGProgressIndicator"
@"PGPrerollIndicatorView"
@"NSArray"
v56@0:8@16{CGSize=dd}24q40d48
v32@0:8@16B24B28
v56@0:8@"PGPictureInPictureViewController"16{CGSize=dd}24q40d48
v24@0:8@"PGPictureInPictureViewController"16
v32@0:8@"PGPictureInPictureViewController"16@"PGCommand"24
v32@0:8@"PGPictureInPictureViewController"16B24B28
v28@0:8B16@?20
@32@0:8d16@?24
v40@0:8{CGSize=dd}16@?32
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@"NSXPCConnection"
@"BKSProcessAssertion"
@"NSUUID"
@"PGInterruptionAssistant"
@"<BSInvalidatable>"
@"<PGPictureInPictureRemoteObjectDelegate>"
{?="pictureInPictureRemoteObject_shouldAcceptSetupRequest"b1"pictureInPictureRemoteObject_shouldCancelActivePictureInPictureOnStart"b1"pictureInPictureRemoteObject_shouldUpdateCancellationPolicyOnStart"b1"pictureInPictureRemoteObject_didCreatePictureInPictureViewController"b1"pictureInPictureRemoteObject_willShowPictureInPictureViewController"b1"pictureInPictureRemoteObject_didShowPictureInPictureViewController"b1"pictureInPictureRemoteObject_willHidePictureInPictureViewController"b1"pictureInPictureRemoteObject_didHidePictureInPictureViewController"b1"pictureInPictureRemoteObject_willDestroyPictureInPictureViewController"b1"pictureInPictureRemoteObject_didRequestPictureInPictureStopForViewController_sourceSceneSessionIdentifier_animated"b1}
@"PGPictureInPictureViewController"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v48@0:8q16d24@?32@?40
v24@0:8@"PGCommand"16
v24@0:8@"NSDictionary"16
@32@0:8@16q24
@32@0:8@16@24
v32@0:8B16B20@24
v64@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24@?56
v68@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28@?60
v32@0:8q16@?24
@"PGHostedWindowHostingHandle"
@"PGLayerHostView"
@"PGControlsContainerView"
@"MTShadowView"
@"PGStashView"
@"PGStashedMaskView"
@"PGPortalView"
@"<PGPictureInPictureViewControllerContentContainer>"
@"<PGPictureInPictureViewControllerDelegate>"
{?="prepareStopAnimationWithCompletionHandler"b1"acquireInterfaceOrientationLock"b1"relinquishInterfaceOrientationLock"b1"handleTapWhileStashedGesture"b1"handleDoubleTapGesture"b1"performRotateAnimationWithRotation"b1}
v40@0:8d16d24q32
@"PGPlaybackStatePrerollAttributes"16@0:8
v24@0:8@"PGPlaybackStatePrerollAttributes"16
@24@0:8^{_NSZone=}16
d24@0:8q16
v32@0:8q16q24
v32@0:8d16q24
v28@0:8B16q20
v32@0:8@16q24
@"PGPlaybackStatePrerollAttributes"
@32@0:8d16@24
@40@0:8d16@24q32
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
v32@0:8@?16@?24
v40@0:8Q16@?24@?32
v40@0:8d16@?24@?32
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGSize=dd}48
@32@0:8q16@24
v32@0:8d16d24
v36@0:8q16B24@?28
v48@0:8@16@24@32^v40
v32@0:8B16B20@?24
v72@0:8q16{CGRect={CGPoint=dd}{CGSize=dd}}24@?56@?64
v40@0:8q16@?24@?32
v40@0:8B16B20@?24@?32
v44@0:8B16B20B24@?28@?36
v36@0:8B16q20@?28
v76@0:8B16q20{CGRect={CGPoint=dd}{CGSize=dd}}28q60@?68
v40@0:8q16q24@?32
q20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}20@0:8B16
v28@0:8@?16B24
B20@0:8B16
@"PGPlaybackState"
@"PGRunLoopObserver"
@"PGHostedWindow"
@"UIViewController"
@"<PGPictureInPictureProxyDelegate>"
{?="pictureInPictureProxyInterfaceOrientationForTransitionAnimation"b1"pictureInPictureProxyViewFrameForTransitionAnimation"b1"pictureInPictureProxyViewControllerWindowForTransitionAnimation"b1"pictureInPictureProxy_willStartPictureInPictureWithAnimationType"b1"pictureInPictureProxy_didStartPictureInPictureWithAnimationType"b1"pictureInPictureProxy_failedToStartPictureInPictureWithAnimationType_error"b1"pictureInPictureProxy_restoreUserInterfaceForPictureInPictureStopWithCompletionHandler"b1"pictureInPictureProxy_willStopPictureInPictureWithAnimationType_reason"b1"pictureInPictureProxy_didStopPictureInPictureWithAnimationType_reason"b1"pictureInPictureProxyPictureInPictureInterruptionBegan"b1"pictureInPictureProxyPictureInPictureInterruptionEnded"b1"pictureInPictureProxy_didUpdateStashedOrUnderLockState"b1"pictureInPictureProxy_didUpdateResourcesUsageReductionReasons_oldReasons"b1"pictureInPictureProxyWillSetupPictureInPictureStop"b1}
@"UIViewController<PGPictureInPictureViewController>"
@"PGPictureInPictureProxy"
@"PGBackdropView"
@"UIImageView"
v32@0:8@16Q24
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@40@0:8@16@24@32
v40@0:8@16@24@32
@"UIPointerRegion"40@0:8@"UIPointerInteraction"16@"UIPointerRegionRequest"24@"UIPointerRegion"32
@"UIPointerStyle"32@0:8@"UIPointerInteraction"16@"UIPointerRegion"24
v40@0:8@"UIPointerInteraction"16@"UIPointerRegion"24@"<UIPointerInteractionAnimating>"32
@"<PGButtonViewDelegate>"
@"_PGButton"
@"UIPointerInteraction"
@"CAFilter"
Q24@0:8d16
@"<PGControlsViewModelDelegate>"
@"PGControlsViewModelValues"
q24@0:8@16
