?cfuarfedlppa
cfuamtpilppa
xfua2qrvlppa
xfuakrfclppa
xfuamndllppa
xmuamed3lppa
xmuaxmcmlppa
xfuaytcslppa
xfuaqepilppa
xfuafspslppa
xfuamnlllppa
mcpl
<tlfdtccv
lmrn
uouarneglppa
cntlptuo
cntltpni
mlovptuo
mlovtpni
mcpl)
MbP?
zt?)\
fff>
B33s?
St12length_error
St11logic_error
St9exception
NSt3__117bad_function_callE
N5caulk12future_errorE
NSt3__112bad_weak_ptrE
St13runtime_error
St9bad_alloc
11CAException
?12CAXException
3$_0
21AudioSessionException
crdmltppltp^ccrdtuc^bcrdtsb^cltpclt^pcrdorp^vppaptuo
tnrgynedtdnu
cdca3-ca
AggregateDevice.mm
ddagg
subdevices
stacked
channels-out
channels-in
name
mDeviceID != kAudioObjectUnknown
mDeviceUID != nil
mAggregate
!mAggregate->mStacked
!mAggregate->mChildDevices.empty()
mInput.streamChannelCounts == inputStreamChannelCounts
mInput.totalChannelCount == std::accumulate(inputStreamChannelCounts.begin(), inputStreamChannelCounts.end(), 0U)
mOutput.streamChannelCounts == outputStreamChannelCounts
mOutput.totalChannelCount == std::accumulate(outputStreamChannelCounts.begin(), outputStreamChannelCounts.end(), 0U)
GetNumberChannelDescriptions
/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1180.12/CoreAudioTypes/Interfaces/Private/CoreAudioBaseTypes.hpp
GetAudioChannelLayout().mNumberChannelDescriptions == (mStorage.size() - kHeaderSize) / sizeof(AudioChannelDescription)
broken promise
reduction failed
no state
findSlotForKey
/System/Volumes/Data/SWE/iOS/BuildRoots/BuildRoot857/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator14.2.Internal.sdk/System/Library/PrivateFrameworks/caulk.framework/Headers/concurrent/guarded_lookup_hash_table.h
firstDeletion >= 0
private
master
SimulatorDefaultDeviceAggregate
iOSSimulatorAudioDevice
%s-%d-%d
handler
T@?,C,V_handler
TB,V_running
detached
TB,V_detached
connected
TB,V_connected
clientID
TQ,R,V_clientID
channelKeys
T@"NSArray",R,V_channelKeys
prewarmed
TB,R,V_prewarmed
TB,R
state
Ti,R
serverProcessID
Ti,V_serverProcessID
hapticLatency
Td,R
asyncStopCallback
T@?,C,V_asyncStopCallback
completionCallback
T@?,C,V_completionCallback
connectionCallback
T@?,C,V_connectionCallback
disconnecting
TB,R,V_disconnecting
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.CoreHaptics
v24@?0@"NSArray"8@"NSError"16
v16@?0Q8
com.apple.audio.hapticd
MachServiceName
Client completion queue
hapticserver_timeout
write
res.address0 != NULL
res.size0 != 0
reserveForWrite
(inSize & 3) == 0
v24@?0Q8@"NSError"16
v40@?0Q8d16Q24@"NSError"32
q24@?0@"AVHapticPlayerParameterCurveControlPoint"8@"AVHapticPlayerParameterCurveControlPoint"16
q24@?0@"AVHapticEvent"8@"AVHapticEvent"16
v28@?0@"NSObject<OS_xpc_object>"8I16@"NSError"20
v24@?0d8@"NSError"16
hcln
hapticclient_verbose
hcst
hapticclient_state_verbose
SetPlayerLatency
/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1180.12/Source/CAServices/Utility/PlayerSynchronizer.cpp
playerID < mNumPlayers
CancelPlayer
mNumWaitingPlayers > 0
CheckReadyToPlay
PlayerReachedLoopPoint
  InputDispatcher %p [%d]
    null converter
                         %s
HALNotification for 0x%x, %d addrs:
CAListenerProxy
HALListener@%p
DeviceAggregateListener@%p
DeviceAggregateNotification for 0x%x
 voice
<RemoteIOClient@%p(@%p); %s%s; %s>
, *** deferring ***
RemoteIOServer
com.apple.audio.AURemoteIOServer
aurios
aurioserver_verbose
RemoteIOClient
AQDefaultDevice
[%d]
inter-app-audio
%s/new-mail.caf
/System/Library/Audio/UISounds
%s/mail-sent.caf
%s/sms-received1.caf
/System/Library/Audio/UISounds/nano
%s/sms-received2.caf
%s/sms-received3.caf
%s/sms-received4.caf
%s/sms-received5.caf
%s/sms-received6.caf
%s/Anticipate.caf
/System/Library/Audio/UISounds/New
%s/Bloom.caf
%s/Calypso.caf
%s/Choo_Choo.caf
%s/Descent.caf
%s/Fanfare.caf
%s/Ladder.caf
%s/Minuet.caf
%s/News_Flash.caf
%s/Noir.caf
%s/Sherwood_Forest.caf
%s/Spell.caf
%s/Suspense.caf
%s/Telegraph.caf
%s/Tiptoes.caf
%s/Typewriters.caf
%s/Update.caf
%s/ReceivedMessage.caf
%s/SentMessage.caf
%s/alarm.caf
%s/Swish.caf
%s/low_power.caf
%s/ussd.caf
%s/SIMToolkitCallDropped.caf
%s/SIMToolkitGeneralBeep.caf
%s/SIMToolkitNegativeACK.caf
%s/SIMToolkitPositiveACK.caf
%s/SIMToolkitSMS.caf
%s/Tink.caf
%s/ct-busy.caf
%s/ct-congestion.caf
%s/ct-path-ack.caf
%s/ct-error.caf
%s/ct-call-waiting.caf
%s/ct-keytone2.caf
%s/vc~invitation-accepted.caf
%s/vc~ringing.caf
%s/vc~ended.caf
%s/wheels_of_time.caf
%s/go_to_sleep_alert.caf
%s/warsaw.caf
%s/nfc_scan_complete.caf
%s/access_scan_complete.caf
%s/3rd_party_critical.caf
%s/lock.caf
%s/key_press_click.caf
%s/Tock.caf
%s/key_press_delete.caf
%s/key_press_modifier.caf
%s/connect_power.caf
%s/RingerChanged.caf
%s/photoShutter.caf
%s/shake.caf
%s/focus_change_keyboard.caf
%s/focus_change_app_icon.caf
%s/focus_change_large.caf
%s/focus_change_small.caf
%s/navigation_push.caf
%s/navigation_pop.caf
%s/keyboard_press_normal.caf
%s/keyboard_press_delete.caf
%s/keyboard_press_clear.caf
%s/begin_record.caf
%s/end_record.caf
%s/jbl_begin.caf
%s/jbl_confirm.caf
%s/jbl_ambiguous.caf
%s/jbl_no_match.caf
%s/jbl_cancel.caf
%s/dtmf-0.caf
%s/dtmf-1.caf
%s/dtmf-2.caf
%s/dtmf-3.caf
%s/dtmf-4.caf
%s/dtmf-5.caf
%s/dtmf-6.caf
%s/dtmf-7.caf
%s/dtmf-8.caf
%s/dtmf-9.caf
%s/dtmf-star.caf
%s/dtmf-pound.caf
%s/ringback_tone_ansi.caf
%s/ringback_tone_cept.caf
%s/ringback_tone_hk.caf
%s/ringback_tone_aus.caf
%s/ringback_tone_uk.caf
%s/busy_tone_ansi.caf
%s/busy_tone_cept.caf
%s/call_waiting_tone_ansi.caf
%s/call_waiting_tone_cept.caf
%s/end_call_tone_cept.caf
%s/long_low_short_high.caf
%s/short_double_high.caf
%s/short_low_high.caf
%s/short_double_low.caf
%s/middle_9_short_double_low.caf
%s/health_notification.caf
%s/MultiwayJoin.caf
%s/MultiwayLeave.caf
%s/multiway_invitation.caf
%s/tweet_sent.caf
%s/camera_timer_final_second.caf
%s/camera_timer_countdown.caf
%s/camera_shutter_burst.caf
/System/Library/Audio/UISounds/Modern
%s/camera_shutter_burst_begin.caf
%s/camera_shutter_burst_end.caf
%s/ScreenCapture.caf
%s/payment_success.caf
%s/payment_failure.caf
%s/nfc_scan_failure.caf
%s/acknowledgment_sent.caf
%s/acknowledgment_received.caf
%s/HealthNotificationUrgent.caf
%s/Alarm_Haptic.caf
%s/Timer_Haptic.caf
%s/Preview_AudioAndHaptic.caf
%s/Notification_Haptic.caf
%s/System_Notification_Haptic.caf
%s/Notification_Salient_Haptic.caf
%s/Ringtone_US_Haptic.caf
%s/Ringtone_UK_Haptic.caf
%s/Detent_Haptic.caf
%s/CameraCountdownTick_Haptic.caf
%s/CameraCountdownImminent_Haptic.caf
%s/HourlyChime_Haptic.caf
%s/NavigationLeftTurn_Haptic.caf
%s/NavigationRightTurn_Haptic.caf
%s/NavigationGenericManeuver_Haptic.caf
%s/SedentaryTimer_Haptic.caf
%s/SiriStart_Haptic.caf
%s/SiriStopSuccess_Haptic.caf
%s/SiriStopFailure_Haptic.caf
%s/Stockholm_Haptic.caf
%s/StockholmActive_Haptic.caf
%s/StockholmActiveSingleCycle_Haptic.caf
%s/StockholmFailure_Haptic.caf
%s/Alert_ActivityGoalAttained_Haptic.caf
%s/Alert_ActivityGoalBehind_Haptic.caf
%s/Alert_ActivityGoalClose_Haptic.caf
%s/Alert_BatteryLow_10p_Haptic.caf
%s/Alert_BatteryLow_5p_Haptic.caf
%s/Alert_Calendar_Haptic.caf
%s/Alert_Calendar_Salient_Haptic.caf
%s/Alert_PassbookBalance_Haptic.caf
%s/Alert_PassbookGeofence_Haptic.caf
%s/Alert_PhotostreamActivity_Haptic.caf
%s/Alert_ReminderDue_Haptic.caf
%s/Alert_ReminderDue_Salient_Haptic.caf
%s/Alert_WalkieTalkie_Haptic.caf
%s/BatteryMagsafe_Haptic.caf
%s/BuddyPairingFailure_Haptic.caf
%s/BuddyPairingSuccess_Haptic.caf
%s/CameraShutter_Haptic.caf
%s/Alert_MapsDirectionsInApp_Haptic.caf
%s/MessagesIncoming_Haptic.caf
%s/MessagesOutgoing_Haptic.caf
%s/OnOffPasscodeFailure_Haptic.caf
%s/PhoneHangUp_Haptic.caf
%s/PhotosZoomDetent_Haptic.caf
%s/QB_Dictation_Haptic.caf
%s/StopwatchLap_Haptic.caf
%s/StopwatchReset_Haptic.caf
%s/StopwatchStart_Haptic.caf
%s/StopwatchStop_Haptic.caf
%s/TimerCancel_Haptic.caf
%s/TimerPause_Haptic.caf
%s/TimerStart_Haptic.caf
%s/TimerWheelHoursDetent_Haptic.caf
%s/WalkieTalkieActiveStart_Haptic.caf
%s/WorkoutComplete_Haptic.caf
%s/WorkoutCountdown_Haptic.caf
%s/ET_BeginNotification_Haptic.caf
%s/ET_BeginNotification_Salient_Haptic.caf
%s/Alert_1stParty_Haptic.caf
%s/Alert_3rdParty_Haptic.caf
%s/Alert_3rdParty_Salient_Haptic.caf
%s/Beat_Haptic.caf
%s/DoNotDisturb_Haptic.caf
%s/OrbLayers_Haptic.caf
%s/ET_RemoteTap_Receive_Haptic.caf
%s/ET_RemoteTap_Send_Haptic.caf
%s/WorkoutSelect_Haptic.caf
%s/WorkoutPressStart_Haptic.caf
%s/TimerWheelMinutesDetent_Haptic.caf
%s/PhoneAnswer_Haptic.caf
%s/PhoneHold_Haptic.caf
%s/WalkieTalkieActiveEnd_Haptic.caf
%s/UISwitch_On_Haptic.caf
%s/UISwitch_Off_Haptic.caf
%s/UISwipe_Haptic.caf
%s/SystemStartup_Haptic.caf
%s/BuddyPairingRemoteConnection_Haptic.caf
%s/BuddyPairingRemoteTap_Haptic.caf
%s/QB_Dictation_Off_Haptic.caf
%s/RingtoneDucked_US_Haptic.caf
%s/RingtoneDucked_UK_Haptic.caf
%s/SalientNotification_Haptic.caf
%s/3rdParty_DirectionUp_Haptic.caf
%s/3rdParty_DirectionDown_Haptic.caf
%s/3rdParty_Success_Haptic.caf
%s/3rdParty_Failure_Haptic.caf
%s/3rdParty_Retry_Haptic.caf
%s/3rdParty_Start_Haptic.caf
%s/3rdParty_Stop_Haptic.caf
%s/Alarm_Nightstand_Haptic.caf
%s/Alert_BatteryLow_5p_Salient_Haptic.caf
%s/NavigationLeftTurn_Salient_Haptic.caf
%s/NavigationRightTurn_Salient_Haptic.caf
%s/NavigationGenericManeuver_Salient_Haptic.caf
%s/SedentaryTimer_Salient_Haptic.caf
%s/Alert_ActivityGoalAttained_Salient_Haptic.caf
%s/Alert_ActivityGoalBehind_Salient_Haptic.caf
%s/Alert_PassbookGeofence_Salient_Haptic.caf
%s/WorkoutSaved_Haptic.caf
%s/VoiceOver_Click_Haptic.caf
%s/SiriAutoSend_Haptic.caf
%s/HummingbirdCompletion_Haptic.caf
%s/HummingbirdNotification_Haptic.caf
%s/RemoteCameraShutterBurstBegin_Haptic.caf
%s/RemoteCameraShutterBurstEnd_Haptic.caf
%s/WorkoutPaused_Haptic.caf
%s/WorkoutResumed_Haptic.caf
%s/Warsaw_Haptic.caf
%s/GoToSleep_Haptic.caf
%s/AutoUnlock_Haptic.caf
%s/Alert_ActivityFriendsGoalAttained_Haptic.caf
%s/Alert_SpartanConnecting_Haptic.caf
%s/Alert_SpartanConnecting_LowLatency_Haptic.caf
%s/Alert_SpartanConnected_LowLatency_Haptic.caf
%s/Alert_SpartanDisconnected_LowLatency_Haptic.caf
%s/AccessScanComplete_Haptic.caf
%s/BuddyMigrationStart_Haptic.caf
%s/SOSFallDetectionPrompt_Haptic.caf
%s/SOSFallDetectionPromptEscalation_Haptic.caf
%s/SOSEmergencyContactTextPrompt_Haptic.caf
%s/WorkoutStartAutodetect.caf
%s/WorkoutCompleteAutodetect.caf
%s/WorkoutPausedAutoDetect.caf
%s/WorkoutResumedAutoDetect.caf
%s/WorkoutPaceAbove.caf
%s/WorkoutPaceBelow.caf
%s/WalkieTalkieReceiveStart_Haptic.caf
%s/WalkieTalkieReceiveEnd_Haptic.caf
%s/Alert_Health_Haptic.caf
%s/MultiwayInvitation.caf
%s/3rd_Party_Critical_Haptic.caf
%s/SwTest1_Haptic.caf
SIMULATOR_ROOT
%s%s
CAException
  TapMixer @ %p : %s
    %s, %s
    tap sources:
    taps:
      %p: %s, %s, %s
empty mixmap
      %p: %s, %s
 (%.3fs latency)
        %s
pid %d
TapManager @ %p
AQIONodeManager.mMutex
com.apple.coreaudio.aqme_showgraph
aqiotime
aqiotime_verbose
v16@?0^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}8
AQME
aqme_captureoutput
aqme_captureinput
readCommand
/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1180.14/Aspen/Haptics/HapticSharedMemory.h
srcCmd->head.mSize != 0
SequenceTrack @%p
Num Events: %d, Track Length: %.2f beats
Speaker
SSClientCompletionQueue
SSClientCompletion
SequencePlayer
SequencePlayer::Playing Guard
Output port
Apple MusicPlayer
result = EstablishCallback (true)
home
~MIDIPacketEmitter
/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1180.12/CoreAudioUtility/Source/Utility/MIDI/MIDIPacketEmitter.h
TheList()->numPackets == 0
DispatchMIDIChannelMessage
/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1180.12/Source/CAServices/Sequencer/SequenceDestination.cpp
channel <= 15
DispatchMIDINoteMessage
noteChannel <= 15
EndpointWakeupThread
AudioUnitRender error %d from %s, %d fr, ABL %s
not 
AQME_AUSpatialMixer
TapDownstream
TimePitchUpstream
After RebuildMixerChannelChain
TimePitchDownstream
((inTimeStamp).mFlags & (kAudioTimeStampHostTimeValid|kAudioTimeStampSampleTimeValid)) == ((kAudioTimeStampHostTimeValid|kAudioTimeStampSampleTimeValid))
AQME_AUMultiChannelMixer
AQME_AUScotty
AQME_AUControlFreak
com.apple.mobilemusicsettings.latenightmode
AQME_AULoudnessNormalization
latenightmode
com.apple.preferences-sounds
v12@?0i8
AQME_AULoudnessNormalizer
Converter
Source
((*inTimeStamp).mFlags & (kAudioTimeStampHostTimeValid|kAudioTimeStampSampleTimeValid)) == ((kAudioTimeStampHostTimeValid|kAudioTimeStampSampleTimeValid))
false
true
 (overridden to on)
-now-
%d(%s):%.3f
realloc failed
             %s, running: %d
             
                 
%sAULoudnessNormalizer: 
%sEQ, preset=%d 
%sSweepFilter, 
%sTimePitch%s, rate=%g, pitch=%g 
%sPre-FX tap: 
%sPost-FX tap: 
%sAUScotty: 
%sAUMultiChannelMixer: 
%sAUSpatialMixer: 
%sAUVariableEQv2_1: 
%sAUControlFreak: 
%sAUVariableEQv2_2: 
%sUnknown AU: 
input               
Sample rate converter complexity %s; quality %d
com.apple.audio.SystemSoundServer-Sim
v16@?0^v8
kSSXPCMessageKey_Action
kSSXPCMessageKey_ActionID
kSSXPCMessageKey_ShouldCompletePlayback
kSSXPCMessageKey_ClientPlayOptions
kSSXPCMessageKey_VibrationData
kSSXPCMessageKey_ClientCompletionToken
kSSXPCMessageKey_AudioDataToken
kSSXPCMessageKey_AudioData
kSSXPCMessageKey_Property
kSSXPCMessageKey_PropertyValue
kSSXPCMessageKey_StopImmediately
kSSXPCMessageKey_Prefs_Volume
kSSXPCMessageKey_Prefs_AlertVisualOn
kSSXPCMessageKey_Prefs_UIAudioOn
kSSXPCMessageKey_Prefs_AlertAudioOn
<CA_UISoundClientBase@%p>
<CA_UISoundClient@%p>
ss_src_quality
v16@?0^{__CFSet=}8
kSTSNotification_DidLoadSTSImplementation
kSTSNotification_DidLabelSpatializer
kSTSKey_STSLabel
kSTSKey_Spatializer
kSTSNotification_WillDestroySpatializer
AQOfflineMixer.mMutex
offpre
offpost
/usr/local/lib/libAudioDiagnostics.dylib
aqom
aqofflinemixer_verbose
aqoffline_capture
enableInput
After maintainTaps
  MESubmixGraph: %p
  Mixer:         
    inputs:
      %2d: %s   
 %4.2f
| %4.2f |
    
output              
      volume %.3f, balance %.3f, mono output %s
  Dynamics:      
  Tap mixer %p %s
  --> %p, bus %d
port 0x%x: %d send, %d rcv, %d sendonce, %d dead name refs
AQServer.mServerLock
aqsrv
aqserver_verbose
MZSessionNotification_AppStateResume_Initial
resume
MZSessionNotification_AppStatePause_Initial
qacc
<AudioQueueOwner@%p, aq %p>
AQServer_OfflineRender
buf == NULL
AQOfflineMixer
<RouteQueryingNodeClient@%p, %s>
/Library/Audio/Tunings/
.aupreset
0x%x
disable_spatialization
device_can_spatialize
v16@?0@"FBSOrientationUpdate"8
CA Orientation Manager
CA Orientation Manager Notification Queue
/System/Library/Frameworks/CoreMotion.framework/CoreMotion
CMDeviceOrientationManager
v24@?0@"CMDeviceOrientation"8@"NSError"16
Unidentified
Unknown
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
FaceUp
FaceDown
/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1180.12/Source/CAServices/DLS/DlsFileBase.cpp
isRIFFHeaderGood
GetHeader().IsListType()
GetHeader().GetSubType() == ChunkType(kListType_InfoList)
isHeaderGood
GetHeader().GetSubType() == kListType_InfoList
User Bank
program
lins
pdta
- Unnamed -
AQMEIO_AU @ %p: 
input 
virtual OSStatus AQMEIO_AU::GetNearestStartTime(AudioTimeStamp &, uint32_t)
virtual OSStatus AQMEIO_AU::GetCurrentTime(AudioTimeStamp &)
virtual void AQMEIO_AU::SetCurrentIOBufferFrameSize(int)
virtual int AQMEIO_AU::GetCurrentIOBufferFrameSize()
virtual int AQMEIO_AU::GetMaxIOBufferFrameSize()
AQOfflineRender
/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1180.12/Source/CAServices/Sequencer/TempoMap.cpp
baseTime <= inSeconds
baseBeats <= inBeats
TriggerAdaptToDevice
Stream format change pending
Session.
Device.
Could not construct
<empty binding>
Could not convert
.None
.Output
.Input
.InputOutput
IOSuspensions: 
BB downlink
Default input
Unused input
Speaker telemetry
BB uplink
VIO downlink
VIO client other
Mix to uplink
AC-3
VP priority
Default output
Unused output
AQMEIO.mStateGuard
device/route was restarted/changed underneath us
overload
CreateSystemSoundIDOption_AudioFileURL
CreateSystemSoundIDOption_LongFormMedia
PlaySystemSoundOption_Loop
PlaySystemSoundOption_Behavior
PlaySystemSoundOption_Flags
CreateSystemSoundIDOption_VibrationPattern
PlaySystemSoundOption_VibrationPattern
PlaySystemSoundOption_LoopPeriod
PlaySystemSoundOption_Volume
PlaySystemSoundOption_Pan
PlaySystemSoundOption_IgnoreRingerSwitch
PlaySystemSoundOption_UnduckTime
com.apple.sound.beep.volume
com.apple.sound.uiaudio.enabled
com.apple.sound.beep.flash
com.apple.sound.beep.enabled
com.apple.sound.beep.sound
systemsoundclient_verbose
AudioServicesGuard
kCGSSessionOnConsoleKey
kCGSSessionUserIDKey
IOConsoleUsers
StopSound
SIMULATOR_AUDIO_SETTINGS_PATH
sim_output_device_uid
sim_input_device_uid
sim_volume
sim_ringer_state
central
ignore
<%p>
<ZenAQIONodeClient@%p, %s>
com.apple.coreaudio.ASClientManager
reset
OutputDeviceDidChange_Reason
LineIn
MicrophoneBuiltIn
MicrophoneWired
MicrophoneBluetooth
USBInput
LineOut
Headphones
BluetoothHFPOutput
BluetoothA2DPOutput
Receiver
USBOutput
HDMIOutput
AirPlay
CarAudioInput
CarAudioOutput
AirPlayLowLatency
ActiveAudioRouteDidChange_OldDetailedRoute
ActiveAudioRouteDidChange_NewDetailedRoute
RouteDetailedDescription_Inputs
RouteDetailedDescription_Outputs
RouteDetailedDescription_PortType
input source ID
input source name
output destination ID
output destination name
RouteDetailedDescription_Name
RouteDetailedDescription_UID
RouteDetailedDescription_ChannelDescriptions
AccessoryID
Routes
RouteType
RouteID
Sources
DataSourceID
DataSourceName
MicrophoneRegion
MicrophoneOrientation
MicrophonePolarPatterns
MicrophonePolarPattern
ChannelDescription_ID
ChannelDescription_Name
ChannelDescription_Label
InterruptionInfo_State
InterruptionInfo_Type
InterruptionInfo_InterruptorName
InterruptionInfo_WasSuspended
deviceID
TI,R,N
deviceUID
T@"NSString",R,N
MSNMonitorSetMicrophoneState
/System/Library/PrivateFrameworks/MediaSafetyNet.framework/MediaSafetyNet
/System/Library/PrivateFrameworks/MediaSafetyNet.framework/Contents/MacOS/MediaSafetyNet
null
buffer
silence
flush
stop
dispose
setCookie
setCpec
setLoudness
params
setISOE
aq_ignorehwcodecs
<empty>
AQConverterManager.ConverterThread.mConverterThreadGuard
AQConverterThread
 (end of input)
ConvertInput
ConvertOutput
Passed
Decoded
Silence
zero frames
fully trimmed
not enough input
did work
no work done
not enough input data
not enough output space
fatal codec error
play
<AudioQueueObject@%p; %s%s; %s>
setting cryptor
setting cookie
Queue's converter/codec:
high
  isInput=%d, isRunning=%d, isStarted=%d, isPaused=%d
(default)
, %d channels, sr=%.f Hz
  Audio device: '%s'%s
  Data format: %s
    channel layout: %s
set, %d bytes
not set
    magic cookie: %s
    maximum output packet size: %d
  Decode buffer: %d frames
  Parameters:
    Volume:                %7.3f
  Buffers:
    [%3d] : %d bytes (capacity %d) @ %p
; %d packets (capacity %d) @%p
; enqueue count=%d
  Commands:
    [%d] : 
    [%d] : %s
    (empty)
buffer %d; %d bytes; %d frames; %d packets
%s; %d frames; %d packets
        sample time %ld
        host time %qd
AudioQueueObject::mConverterResetMutex
AudioQueueObject::mIOResetMutex
AudioQueueObject::mTrimQueueMutex
AQ::WorkQueue::mLock
AudioQueue
aq_verbose
aq_nopausefade
aq_logunderruns
AQConverterManager.mConverterThreadStartStopLock
Queue's converter/codec (adapted):
disabled
enabled
AQ.mPropertyListenerMutex
, user
primed
running
paused
mTimelineMutex
GetCurrentQueueTime
BeginPause
audiocontrol_priority
AudioControl WL
AudioControl
MEOutputStreamClient @ %p : %s : %d running clients
  HW format:     %s
  Client format: %s
((inOutputTime).mFlags & (kAudioTimeStampHostTimeValid|kAudioTimeStampSampleTimeValid)) == ((kAudioTimeStampHostTimeValid|kAudioTimeStampSampleTimeValid))
 MEInputStreamClient @ %p : %s : %d running clients
((inputTime).mFlags & (kAudioTimeStampHostTimeValid|kAudioTimeStampSampleTimeValid)) == ((kAudioTimeStampHostTimeValid|kAudioTimeStampSampleTimeValid))
%s-%s
Following failed start
Client(%p) did not see 20 I/O cycles; giving up (%d susp)
After AddRunningClient
mRunningClientCount > 0
 after failed start
After RemoveRunningClient
mRunningClientCount >= 0
v12@?0C8
FALSE
TRUE
AudioUnitGraph 0x%lX:
  Member Nodes:
node %d: %s %s %s, instance %p %c %c
  Connections:
node %3d bus %3d => node %3d bus %3d
  [%s]
  Input Callbacks:
{%p, %p} => node %3d bus %3d
  [%d ch, %d Hz]
  Events to be updated:
  Problem Events when updated:
  CurrentState:
mLastUpdateError=%d, eventsToProcess=%c, isInitialized=%c, isRunning=%c
 (%d)
connect:source=%d,bus=%d,dest=%d,bus=%d
disconnect:dest=%d,bus=%d
clear all connections
remove node=%d
input callback:dest=%d,bus=%d
unknown event
RemoveRunningNotifications
/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1180.12/Source/CAServices/Sequencer/AudioUnitGraph.cpp
IsGraphOpen()
IsGraphInitialized()
DoMakeDisconnection
GetComponentFromNode
SetInputCallback
result = destInfo->Initialize(this)
gohome
ConnectAudioUnit
result = sourceInfo->Initialize(this)
InstallRunningNotifications
Open
AUGraph::AUNode List Guard
augraph
augraph_verbose
RemoveNode
Initialize
result = destInfo->Initialize (this)
result = sourceInfo->Initialize (this)
result = node.Initialize(this)
NewDefaultAUGraphV2
lyrics
key signature
G##m
title
copyright
time signature
%d/%d
tempo
/System/Library/Frameworks/CoreMIDI.framework/CoreMIDI
/System/Library/PrivateFrameworks/CoreMIDI.framework/CoreMIDI
/AppleInternal/Library/Frameworks/CoreMIDI.framework/CoreMIDI
void *CoreMIDILibrary()
ATCoreMIDIGlue.mm
MIDIPacketListInit
MIDIPacket *MIDIPacketListInit(MIDIPacketList * _Nonnull)
MIDIPacketListAdd
MIDIPacket *MIDIPacketListAdd(MIDIPacketList * _Nonnull, ByteCount, MIDIPacket * _Nonnull, MIDITimeStamp, ByteCount, const Byte * _Nonnull)
MIDISend
OSStatus MIDISend(MIDIPortRef, MIDIEndpointRef, const MIDIPacketList * _Nonnull)
MIDISendSysex
OSStatus MIDISendSysex(MIDISysexSendRequest * _Nonnull)
MIDIClientCreate
OSStatus MIDIClientCreate(CFStringRef _Nonnull, MIDINotifyProc _Nullable, void * _Nullable, MIDIClientRef * _Nonnull)
MIDIOutputPortCreate
OSStatus MIDIOutputPortCreate(MIDIClientRef, CFStringRef _Nonnull, MIDIPortRef * _Nonnull)
MIDIPortDispose
OSStatus MIDIPortDispose(MIDIPortRef)
AQProcessingTap@%p
AQInputChunker
GetTapQueueTime
Td,R,V_time
Td,R,V_duration
TQ,R,V_eventCategory
Tf,R,V_value
fixedParams
T^{AVHapticPlayerFixedParameter=Qf},R
T@"AVHapticPlayerParameterCurve",R
Tq,R,V_fixedParamCount
supportsSecureCoding
parameterCurve
type
TQ,V_type
Td,V_time
shape
TQ,V_shape
T@"NSArray",R
controlPoints
paramCurveTime
paramCurveType
Tf,V_value
value
paramType
fixedParam%dValue
fixedParam%dType
fixedParamCount
eventType
duration
eventCategory
time
chanID
TQ,V_chanID
client
T@"AVHapticClient",W,V_client
eventBehavior
self.client != nil
self.client.clientID != kInvalidClientID
self.client.running
[self.client resetChannel:self.chanID atTime:time]
com.apple.coreaudio.haptic
error %d
Error 
[self.client scheduleParameterCurve:type curve:parameterCurve atTime:time channel:self.chanID error:outError]
[self.client setParameter:type atTime:time value:value channel:self.chanID]
[self.client clearEventsFromTime:fromTime channel:self.chanID]
[self.client stopEventWithToken:eventToken atTime:time channel:self.chanID]
[self.client sendEvents:events atTime:time channel:self.chanID outToken:nil error:outError]
[self.client startEventAndReturnToken:eventType type:(NSUInteger)self.eventBehavior atTime:time channel:self.chanID eventToken:returnedToken]
T@"AVHapticClient",R,V_client
resourcesAllocated
TB,R,V_resourcesAllocated
stopRunningHandler
T@?,C,V_stopRunningHandler
behavior
TQ,N,V_behavior
channels
T@"NSArray",R,N
currentMediaTime
connectionErrorHandler
T@?,C
v16@?0q8
v16@?0@"NSError"8
clientID invalid
v24@?0@"NSDictionary"8@"NSError"16
AudioSessionIsShared
AudioSessionID
player
T@"AVHapticPlayer",W,V_player
seqID
TQ,V_seqID
Td,V_duration
lastStartTime
Td,V_lastStartTime
activeChannel
TQ,V_activeChannel
loopingEnabled
playbackRate
channelCount
TQ,R,V_channelCount
completionHandler
self.player.resourcesAllocated
self.player.client.clientID != kInvalidClientID
_seqID != kInvalidSequenceID
index < self.channelCount
self.player.client.running
channelIndex < self.channelCount
Volume
Rate
Pitch
VolumeRampTime
Volume2
Volume2RampTime
EQPreset
DuckOthers
Volume3
Volume3RampTime
Volume4
Volume4RampTime
VolumeProcessMute
Volume1Curve
Volume2Curve
Volume3Curve
Volume4Curve
LoudnessAdj
PauseFade
Rate2
(null)
GetStateLock().IsOwnedByCurrentThread()
After AdaptToDevice
[%d:%d]
============================ AQMixEngine(%p) %s ============================
+++ AQMEDevice @ %p, %s - inactive
+++ AQMEDevice @ %p, %s:
AQMEMessenger
aqme
aqme_verbose
aqme_rampfactor
aqme_stoptimeout
aqme_starttimeout
aqme_showgraph
/tmp/aqmeGraph
com.apple.mobileipod-prefsChanged
MusicSoundCheckEnabledSetting
com.apple.mobileipod
aqme_nodither
After AddIOClient
After RemoveIOClient
============================ AQAC3IONode(%p) ============================
  mIONodeClient %p
  mIOUnit NULL
============================
ac3out
AQAC3
aqac3_verbose
com.apple.AQClientRunLoopMode
mGlobalLock
   *** removed, skipping
AQClient
mCallbackGuard
com.apple.coreaudio.AQClient
aqclient_verbose
aqclient_captureofflinerender
aqclient_captureoutput
aqclient_captureinput
async
immediate
aqout-0x%x
AudioCapture/AudioToolbox
NewAudioCapturerImpl
aqor
AudioQueueOfflineRender
inTimestamp == NULL
ioBuffer == NULL
cq == NULL
AudioToolbox
<ClientAQOfflineMixer@%p>
AQOfflineMixerRender
inMixer == NULL
ioOutputData == NULL
ioOutputData->mBuffers[0].mDataByteSize == 0
AQDisposalListener
v32@?0r^{AudioStreamBasicDescription=dIIIIIIII}8r^{AudioChannelLayout=III[1{AudioChannelDescription=II[3f]}]}16@?<v@?>24
v28@?0r^{AudioTimeStamp=dQdQ{SMPTETime=ssIIIssss}II}8I16r^{AudioBufferList=I[1{AudioBuffer=II^v}]}20
%s%s %s; 
no layout
(%s, init=%d maxFrames=%d, bypass=%d)
(invalid)
%s%-24.24s %s
v8@?0
com.apple.coreaudio
sequencer_verbose
TrackIterator
Task
%s (%d): trying to read past end of input buffer list
%s (%d): input stream %d: format has %d channels, buffer has %d channels
%s (%d): input stream %d: null buffer
thrown
%s (%d): too many flattened input buffers (%d >= %d)
%s (%d): skipping output stream %d %d %p
%s (%d): trying to read past end of output buffer list
%s (%d): output stream %d: format has %d channels, buffer has %d channels
%s (%d): output stream %d: null buffer
%s (%d): too many flattened output buffers (%d >= %d)
input
output
DeviceConfig
Input
Output
UpdateStreamUsage
/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-1180.12/Source/CAServices/AQME/AQMEIO_HAL.cpp
isInput
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
 (%s)
AQMEIO_HAL @ %p:
  device %u, uid %s, device running %d
  %-6s scope: flattening streams to format: %s; %s
  %s device latency: %d, safety offset: %d
 *** high-quality ***
client %p
  %-6s stream[%d] %u %23s %17s : %s%s
  err %s; HAL virtual format: %s
    UID: %s
                          
    incompatible client format: %s
DisconnectClientFromAllStreams
ConnectClientToStream
HandleDefaultDeviceChange
%25s:%-5d couldn't find AudioDevice with UID %@
%25s:%-5d couldn't get device %d's %s stream configuration: %d
%25s:%-5d error fetching default pair
%25s:%-5d device %d scope %s: streamChannelCounts %s, totalChannelCount %d, defaultPair (%d, %d)
%25s:%-5d can't fetch device %d's name: %d
%25s:%-5d Failed expectation of constructed aggregate (%d): %s
%25s:%-5d %s: index %d >= originalLayout size %d
%25s:%-5d %s: index %d >= allChannelDescs size %d
%25s:%-5d %s: index %d >= aggScope channel map size %d
%25s:%-5d %s stereo pair: expected %d %d, got %d %d
%25s:%-5d Error setting %s preferred stereo pair on aggregate: %d
%25s:%-5d Error setting %s preferred channel layout on aggregate: %d
%25s:%-5d Error destroying aggregate audio device %d: %d
%25s:%-5d Destroyed aggregate %d
dropped continuation arriving after executor destroyed
%25s:%-5d Aggregate %d did not validate; racing against config change? Will retry (%d/%d).
%25s:%-5d Built valid aggregate %d
%25s:%-5d Unable to build a valid aggregate after %d tries
%25s:%-5d New aggregate device dictionary (%s):
%25s:%-5d Error creating aggregate audio device: %d
%25s:%-5d Error updating aggregate audio device: %d
%25s:%-5d Creating DefaultDeviceAggregate
%25s:%-5d Error finding valid input or output devices!
%25s:%-5d Constructed aggregate isn't usable; %u %s channels. Will retry.
%25s:%-5d Retrying aggregate construction
%25s:%-5d couldn't get default %s device, ID = %d, err = %d!
%25s:%-5d fetched default %s device, ID = %d
%25s:%-5d HAL notification: default %s device changed
%d: Client-side call for client 0x%x with disconnect reason %d
%d: Client-side (async) stop callback for client 0x%x, reason %d
%d: Client thinks it is not running.  Did we just get a call to stop?
%d: Client-side (async) stop callback done for client 0x%x
%d: Client-side finish completionCallback done for client 0x%x
%d: Client-side finish completionCallback for client 0x%x
%d: Calling completionCallback %p
%d: CompletionCallback is nil
%d: Client-side sequence finish callback for client 0x%x, seq %u
%d: Deleting finished handler block for detached sequence
%d: Calling cached sequence finished handler block %p
%d: Client-side sequence finish callback done for client 0x%x
%d: No cached sequence finished handler block for seq %u
%d: [xpc] Entered (due to connection invalidation) for client ID 0x%x
%d: [xpc] Entered (due to client disconnect) for client ID 0x%x
%d: [xpc] done handling disconnect for client ID 0x%x
%d: [xpc] Entered (due to connection interruption) for client ID 0x%x
%d: We were running, so call async stopped callback
%d: [xpc] done handling crash for client ID 0x%x
%d: We were waiting for a completion callback, so call it now
%d: Calling server with request to remove channelID %u
%d: done removing channel
%d: Calling server with request for %u channels
%d: done requesting channels
%d: Server returned count of %u
%d: Calling server with player behavior %u
%d: Exited
%d: Got error from server: %@
%d: [xpc] Invalidating...
%d: [xpc] done disconnecting
%d: ERROR: Sync XPC call for '%@' (client ID 0x%x) failed: %@
%d: ERROR: Async XPC call for '%@' (client ID 0x%x) failed: %@
%d: [xpc] Connecting...
%d: [xpc] Connection: %@
%d: Calling configureWithOptions:reply on server with dictionary: '%@'
%d: Initial XPC call to server timed out
%d: [xpc] Server connection: %@, PID: %d
%d: [xpc] Got error during transaction: %@
%d: [xpc] Error retrieving client ID
%d: Client ID: 0x%lx
%d: [xpc] done connecting
%d: Error setting options / retrieving client ID from server
%d: releasing resources
%d: done releasing
%d: Client 0x%x detaching sequenceID %u
%d: Writing command: time: %.3f cmd type: %hu sequenceID: %u
%d: Cannot write to shared ring buffer (already deallocated?)!
%d: WARNING: Command block size (%u) is larger than entire ring buffer (%u)
%d: WARNING: Unable to wait for enough write space in ring buffer
%d: WARNING: Not enough space in ring buffer
%d: Writing command: time: %.3f type: %hu sequenceID: %u channel: %u param: %u value: %.3f
%d: Writing command: time: %.3f seq cmd type: %hu sequenceID: %u
%d: Writing command: time: %.3f type: %hu sequenceID: %u offset: %f
%d: Writing command: (time 0) type: %hu sequenceID: %u rate: %f
%d: Writing command: (time 0) type: %hu sequenceID: %u loop length: %f
%d: Writing command: (time 0) type: %hu sequenceID: %u looping: %d
%d: Client 0x%x preparing sequenceID: %u
%d: done preparing
%d: prepareHapticSequence:error: top of [serverDelegate prepareHapticSequence] reply block
%d: Got error from server: %p
%d: Sequence %u is running - setting entry to detached
%d: Sequence %u is not running - deleting entry
%d: Calling completion handlers on any active sequences
%d: Caching sequence finished handler block %p for seqID %u
%d: Client 0x%x, seqID %u, behavior %u
%d: Client 0x%x loading pattern: %p
%d: done loading pattern
%d: loadAndPrepareHapticSequenceFromVibePattern:reply: top of [serverDelegate loadVibePattern] reply block
%d: Client 0x%x loading sequence from event array
%d: loadAndPrepareHapticSequenceFromEvents:reply: top of [serverDelegate loadHapticSequenceFromEvents] reply block
%d: Client 0x%x loading sequence: %p
%d: Got error during transaction: %p
%d: done loading sequence
%d: loadAndPrepareHapticSequenceFromData:reply: top of [serverDelegate loadHapticSequenceFromData] reply block
%d: Client 0x%x: doScheduleParamCurve failed!
%d: ASSERTION FAILURE: 
%d: Client 0x%x writing command: time: %.3f type: %hu ID: %u, value: %f
%d: Client 0x%x writing command: time: %.3f type: %hu
%d: Client 0x%x writing command: time: %.3f type: %hu token: %u
%d: => StartParamCurveList (paramID %u) at (relative-to-event-list) time %.3f
%d: %u curve points
%d: Point for synth param[%u]: rel time: %.3f, converted value: %f
%d: == AddParamCurve (paramID %u) rel time %.3f
%d: <= EndParamCurveList (paramID %u) at time %f
%d: Client 0x%x writing %u param curve control points from passed-in param curve array at time: %.3f
%d: Splitting length-%u array at index %u (delta from previous event: %f seconds)
%d: Force-splitting length-%u array at index %u (delta from previous event: %f seconds)
%d: No good split point found - returning midpoint %u
%d: Client 0x%x writing %u events from passed-in event array at time: %.3f
%d: Bailing out on recursion (availableSize = %u)
%d: Bailing out on recursion because event array cannot be split further
%d: ====>> StartEventList at time: %f
%d: Start event: relative time %f
%d: Stop event added: relative time %f
%d: Memory write failed
%d: Param event: relative time %f
%d: Param curve: relative time %f
%d: ERROR: Event is none of haptic/audio event, parameter, or parameter curve. returning
%d: <<==== EndEventList at time: %f
%d: Copied fixed param[%d]: ID %d, normalized value %f, for start event
%d: Creating start event at relative time %f for eventID: %u
%d: Client 0x%x writing command: time: %.3f type: %hu eventID: %u
%d: <Posting trace point %.4x>
%d: Client 0x%x writing reset event: time: %.3f channelID: %u
%d: Client 0x%x, behavior %u
%d: done setting behavior
%d: Client 0x%x finishing
%d: Writing FinalEvent with time %f [host time was %llu]
%d: Attempt to write FinalEvent failed - bailing with error %@ for client 0x%x
%d: Player was not running - bailing with error %@ for client 0x%x
%d: Client 0x%x done with finish
%d: completionCallback set to %p
%d: Client 0x%x done with stopRunning:
%d: Client 0x%x stopping
%d: Unable to stop running: %@
%d: Client 0x%x starting
%d: Client 0x%x done with startRunning:
%d: Client 0x%x stopping prewarm
%d: Unable to stop prewarm: %@
%d: Client 0x%x starting prewarm
%d: Server called client-side prewarm completionCallback
%d: done releasing event
%d: done referencing event
%d: done copying event
%d: done creating event
%d: Client 0x%x loading dictionary: %p
%d: Got error during transaction: %@
%d: done loading event
%d: Client 0x%x allocating
%d: done allocating
%d: Unable to set up client: %@
%d: Server returned shared buffer of size %u
%d: Setting up shared memory on client
%d: Unable to access shared memory: error %d
%d: Notifying caller via completion callback
%d: Unable to get latency: %@
%d: Unable to get server capabilities: %@
%d: Deallocating HapticClient 0x%x
%d: dealloc of HapticClient exited
%d: initializing with options
%d: Init calling disconnect on self
%d: Init exited
%d: (Client 0x%x returning EngineState %d)
%d: Client 0x%x EngineState -> %d
%d: InputDispatcher(%p, client %p)::AdaptToIOFormat: %s
%d: InputConverter: Couldn't create converter (%{audio:4CC}d), formats:
from: %s
to:   %s
%d: InputConverter: %s
%d: MEInputManager(%p)::AddInputClient %p
%d: MEInputManager::AddInputClient %p
%d: MEInputManager(%p)::RemoveInputClient %p
%d: MEInputManager::RemoveInputClient %p, disposed
%d: CAListenerProxy: destructor with %d unremoved listeners. We're lucky we haven't crashed.
%d: -> msgSeqNum: %d
%d: %p with changeFlags 0x%x
%d: %p: seq %d, 0x%x
%d: %p: processing delayed format change notification input: %s output: %s
%d: %p: seq %d%s; mRunning=%d
%d: RemoteIOServer::ClientDied
%d: RemoteIOClient::PerformIO: quitting because mRunning=%d || mFormatChangePending=%d
%d: RemoteIOClient::PerformIO: %d/%d fr
%d: RemoteIOClient::PerformIO: skipping first I/O cycle
%d: connecting %p, enables %d
%d: mOutput client format: %s
%d: mOutput I/O format:    %s
%d: mInput I/O format:     %s
%d: mInput client format:  %s
%d: Error %{audio:4CC}d initializing RemoteIOClient
%d: RemoteIOClient(%p)::FormatChangeAcknowledged: seq %d, more pending %d
%d: null ionode! %d %d %d %d %d
%d: AUIOServer_NewClient; personality=%d
%d: AUIOServer_DisposeInstance
%d: workgroup 0x%x
%d: ->AUIOServer_StartIO 0x%x
%d: <-AUIOServer_StartIO 0x%x err %d
%d: ->AUIOServer_StopIO 0x%x
%d: <-AUIOServer_StopIO 0x%x
%d: AUIOServer_BypassIO %d %d
%d: Client audit token set with pid %d
%d: null mixmap from %s | %s
%d: error: AQIONodeClient being destroyed while running
%d:   ionode anchor %s
%d: Corrected out-of-bounds rate scalar: %g
%d: Corrected out-of-bounds sample rate: %g
%d: Ignoring haptic command of type %u
%d: inBeats: %.2f.  Current adjusted beat %.f past or at loop region end (%.2f): Seek to beat %.2f
%d: this=%p curLoop %d, mCurrentLoopOffset now %.2f
 Temp track should exist during edit!
 Temp track should not already exist!
%d: this=%p Edit seed changed -- seek to beat %.2f
%d: this=%p ---> inBeats = %f
%d: 
loopLength %f, loopEnd is %f
%d: 
inBeats < loopEnd -- curloop set to 0
%d: 
inBeats >= loopEnd -- curloop set to %d
%d: 
loopLength %f, lastEventTime is %f
%d: 
inBeats < lastEventTime -- curloop set to 0
%d: 
inBeats >= lastEventTime -- curloop set to %d
%d: <--- inBeats: %.2f, loop count: %d
%d: this=%p Next event time (%.3f) past loop region end (%.3f): Seeking to beat %.3f
%d: this=%p EOT (inEndBeat = %.3f)
%d: Current adjusted beat %.3f past or at loop region end (%.3f): Seeking to beat %.3f
%d: adjusted beat %.3f is less than loop region end (%.3f)
%d: Legacy loop endpoint: Seeking to beat %.3f
%d: <--- this=%p: mDestinationAU: %p
%d: <--- this=%p: inNode: %d, mDestinationAU: %p
%d: Invalid beat range or track is empty
%d: Invalid beat range
%d: Invalid beat range or source track is empty
%d: Adding block for: clientPID = %d, actionID = %d; clientCompletionToken = %d
%d: Incrementing pending completion count for: clientPID = %d, actionID = %d; clientCompletionToken = %d
%d: Calling client's completion proc now: clientPID = %d, actionID = %d
%d: No client's completion proc for clientPID = %d, actionID = %d
%d: Calling client's completion block now: clientPID = %d, actionID = %d
%d: No client's completion block for clientPID = %d, actionID = %d
%d: ---> graph=%p
%d: Cannot stop external engine graph
%d: Failed to stop audio graph: error %d
%d: inSequence: %p
%d: ---> sequence = %p startBeat = %.2f
%d: Sequence is already playing
%d: Cannot preroll while tracks are being edited
%d: No destination AU for track %d
%d: <--- graph = %p
%d: ---> inBeats=%f
%d: <---
%d: --->
%d: ---> inBeats=%f, mIsPlaying=%d, graph=%p
%d: ---> mIsPrerolled=%d, mIsPlaying=%d, sequence=%p, startBeat=%.2f
%d: Start(): Cannot play while tracks are being edited
%d: midi: %d au: %d md: %d preset: %d prep: %d
%d: DispatchEvent failed with %d
%d: ---> this=%p
%d: <--- this=%p
%d: Storing bank selects msb 0x%x lsb 0x%x plus program change %d into chaseEventList
%d: ---> this=%p, inPrerollTime = %.2f
%d: AU does not handle preroll -- no-op
%d: this=%p ---> (SequenceTrack %p)
%d: <--- this= %p (SequenceTrack %p)
%d: ionc@%p: Resetting processors (%sdisconnecting)
%d: ionc@%p: Finished resetting processors
%d: ionc@%p: startingTimeline %d
%d: error %d setting kAudioUnitProperty_SpatialMixerSourceMode
%d: error %d getting kAudioFormatProperty_ChannelLayoutForTag
%d: error %d setting mSpatializationUnit input kAudioUnitProperty_AudioChannelLayout
%d: error %d setting mSpatializationUnit input format
%d: error %d setting kAudioUnitProperty_SpatialMixerOutputType
%d: error %d setting kAudioUnitProperty_SpatialMixerOnlyFrequencyDomainFiltering
%d: error %d setting kAudioUnitProperty_SpatializationAlgorithm
%d: error %d setting mSpatializationUnit output format
%d: error %d setting AUSM output kAudioUnitProperty_AudioChannelLayout
%d: error %d setting AUSM output kAudioUnitProperty_ClassInfo
 ChangeNumberChannels only works for uncompressed formats
%d: AQMEDevice: couldn't reset processor (%{audio:4CC}d)
%d: ionc@%p TimePitchReset
%d: mForceSoundCheck %d, mLoudnessDict %s
%d: kMETimePitchProperty_RemSamples: EOS state %d, EOS sample %.2f, last input end st %d, num consumed %d (%d + %d), unflushed = %d, final rem samples = %d
%d: ionc@%p TimePitchRate(zlps) %.3f -> %.3f
%d: kMETimePitchProperty_ZeroLatencyPullSize: got input %d for output %d frames, err %d
%d: %s %{audio:4CC}d; err %d
%d: MEMixerChannel AUDeferredRenderer: couldn't get kAudioUnitProperty_DeferredRendererPullSize (%{audio:4CC}d)
%d: AQMEDevice: couldn't initialize processor (%{audio:4CC}d)
%d: ASSERTION FAILURE (error %d): 
%d: error %d setting AUFixedGain input format
%d: error %d setting AUFixedGain output format
%d: st %.f, last %.f
%d: ionc@%p in st %.f, expectedNextUp %lld, preflightedUp %.f, anchored %d %lld
%d: ionc@%p SchedTimePitchUnanchored preflightedUpstream %.f
%d: ionc@%p SchedTimePitchSetAnchor preflightedUpstream %.f, origins %.f %.f
%d: assertion failure: %s
%d: ionc@%p TimePitchRate(dirty) %.3f
%d: ionc@%p TimePitchDownstream %d fr, %016llX, ht %.6f st %.f
%d: ionc@%p: pos %d: set vol %d time %g value %g
%d: ionc@%p: pos %d: set vol %d time %g
%d: ionc@%p: pos %d: ramp end
%d: ionc@%p: aupe offset %d  ramp      %5.3f - %5.3f   %d fr
%d: ionc@%p: aupe offset %d  immediate %5.3f
%d: ionc@%p: currentVolume %5.3f, mVolume[%d] %5.3f, outAnyRamping %d
%d: %p PerformForSampleTimeRange %lld:%lld, first event at %lld
%d: %p %lld:%lld, clamping event %lld->%lld
%d: %p [%d] %d(%s):%.3f
%d: ionc@%p SchedTimePitchTrackedRateChange %.3f %lld %lld
%d: %p AddEvent %p immediate
%d: %p AddEvent %p ht %.6f
%d: %p AddEvent %p st %lld
%d: Superceding param %d(%s), val %.3f, in event %p, from event %p
%d: error %d setting mDownmixUnit input format
%d: error %d setting mDownmixUnit input kAudioUnitProperty_AudioChannelLayout
%d: error %d setting mDownmixUnit output format
%d: error %d getting mDownmixUnit kAudioFormatProperty_ChannelLayoutForTag
%d: error %d setting mDownmixUnit output kAudioUnitProperty_AudioChannelLayout
%d: error %d setting mUpmixUnit input format
%d: error %d setting mUpmixUnit input kAudioUnitProperty_AudioChannelLayout
%d: error %d setting mUpmixUnit output format
%d: error %d getting mUpmixUnit kAudioFormatProperty_ChannelLayoutForTag
%d: error %d setting mUpmixUnit output kAudioUnitProperty_AudioChannelLayout
%d: error %d setting mLimiterUnit input format
%d: error %d setting mLimiterUnit output format
%d: error %d setting mNormalizerUnit input format
%d: error %d setting mNormalizerUnit output format
%d: mInLateNightMode = %d
%d: error %d setting mLoudnessNormalizerUnit input format
%d: error %d setting mLoudnessNormalizerUnit output format
%d: error %d setting mLoudnessNormalizerUnit kAudioUnitProperty_AudioChannelLayout
%d: error %d setting mLoudnessNormalizerUnit ParameterID %d with ParameterValue %f
%d: ionc@%p TimePitchUpstream %d fr, %016llX, ht %.6f st %.f (%.f)
%d: ionc@%p: EndOfStream %d @ host time %llu
 Tried to modify XConverterInput format!
%d: ionc@%p MixInputProc t=%.f
%d: ionc@%p t=%lld, %d fr, data: %016llX
%d: AQME: ZeroSlice: buf %p has %d bytes; zeroing %d fr / %d bytes at offset %d fr / %d bytes (%d bytes/fr)
%d: ionc@%p ZeroSilentClient
%d: AQMEDevice: couldn't uninitialize processor (%{audio:4CC}d)
%d: ionc@%p: %d
%d: %p mixer bus %d balance mode=%d
%d: err %d
%d: ionc@%p offline %s, SC %s%s, flags 0x%x, err %d, scalar %.3f
%d: EQ not supported for %.g Hz
%d: EQ not supported for %d channels
%d: MEMixerChannel::EnableProcessor: failed to open processor type 0x%x
%d: enabling processor type %{audio:4CC}d
%d: MEMixerChannel::EnableProcessor: failed to set kAudioUnitProperty_InputSamplesInOutput (%d)
%d: MEMixerChannel::EnableProcessor: failed to set kAudioUnitProperty_OfflineRender on '%{audio:4CC}d' (err %d)
%d: MEMixerChannel::EnableProcessor: set kAudioUnitProperty_OfflineRender on '%{audio:4CC}d'
%d: ionc@%p TimePitchTimes: %lld:%lld => %lld ; client %lld:%.f
%d: GetParameters unimplemented for param %d
%d: ionc@%p
%d: ionc@%p %s, time %s, params %s, event %p
%d: Set EQ preset %g
%d: Set %s
%d: ionc@%p SchedTimePitchAddRateChange %.3f @ %lld
%d: EXCEPTION %s (%{audio:4CC}d): error != 0
%d: ionc@%p: %s, %s, buffer pos %d
%d: ionc@%p TimePitchRate(immediate) %.3f
%d: %p mixer bus %d pan=%g
%d: Creating a new connection to system sound server
%d: Unknown message action!! %d
%d: Couldn't connect to system sound server
%d: XPC_ERROR_TERMINATION_IMMINENT
%d: this = %p, remove reporterID: %lld for SSID %u, token %u
%d: this = %p, No CAReporter ID to remove for token %u!
%d: this = %p, add reporterID: %lld for SSID %u, token %u
%d: this = %p, isPlaying: %d
%d: * * * CA_UISoundClientBase::StartPlaying: mIsPlaying is true, but IsRunning() is false!!! * * *
%d: CA_UISoundClientBase::StartPlaying: AddRunningClient failed (status = %d).
%d: Apply Parameters
%d: Hardware format changed
%d: Can't Make Converter: %d
%d: isPlaying: %d
%d: this %p, isPlaying %d
%d: Ramp size clamped to %f ms at sample rate of %f
%d: mIsPlaying is true, but IsRunning() is false!!! * * *
%d: AddRunningClient failed (status = %d).
%d: vol: %.2f
%d: pan: %.2f
%d: duck: %.3f
%d: ***** Beginning render *****, ST: %.0f
%d: First render, this %p, inNumberFrames %d, sampleRate %f, activeSoundToken %d, ST: %.0f
%d: synchronizer is NOT YET ready to play, %p
%d: synchronizer is ready to play: %p, start offset = %lld. Starting ST: %.0f
%d: Anchor mStartTime ST: %.0f
%d: Renderer is out of data
%d: Renderer has less data: packetCount = %d, inNumberFrames = %d
%d: Finished a loop. Calling SSPlayerSynchronizer_PlayerReachedLoopPoint
%d: Now adding 1 IO buffer of silence + device latency(%d + %u)
%d: Filling render buffer with silence, numSilenceFrames = %d
%d: Remaining num frames of silence: %d
%d: Finished playing sound: %p
%d: ***** End of render *****
%d: Time elapsed since audio started: %.3fs
%d: ~CA_UISoundClient
%d: CA_UISoundClient
%d: Latency: %u samples
%d: * * * NULL AQIONode object
%d: Device = %d
%d: Disposing device
%d: Creating new renderer for device, %p
%d: Can't make UISound Renderer
%d: Disposing renderer, renderer = %p
%d: Finished playing, renderer = %p
%d: renderer = %p, synchronizer: %p, repeat: %d, vol: %.2f
%d: renderer = %p, immed: %d
%d: AQOfflineMixer(%p): ->construct %s
%d: AQOfflineMixer(%p): <-construct
%d: AQOfflineMixer::ScheduleQueueStart: aq 0x%x, t=0x%qx
%d: Error: requested %u packets in %u bytes, but need %u bytes for 1 packet
%d: AQOfflineMixer::Render: req %u bytes, %u packets
%d: AQOfflineMixer::Render: produced %u bytes, %u packets
%d: ->AQOfflineMixer::RenderPCM t=%lld
%d: AQInternalPreflightOfflineRender(0x%x): t=%lld, %u fr req, %u fr avail, running %d, EOS %d, err %d
%d: AQOfflineMixer::RenderPCM: t=%lld, %d frames to render
%d: <-AQOfflineMixer::RenderPCM: kNeedMoreInput
%d: AQOfflineMixer::RenderPCM: reduced to %d frames to render (end=%qd, nextStart=%qd)
%d: <-AQOfflineMixer::RenderPCM: 0 frames, end-of-stream
%d: <-AQOfflineMixer::RenderPCM: %d frames, err %d
%d: ->AQOfflineMixer::Reset t=0x%llx
%d: <-AQOfflineMixer::Reset
%d: AQOfflineMixer: set current sample time t=0x%llx
%d: -> %p
%d: deleting mixer channels %p as part of graph destruction. why?
%d: %s %p mixer bus %d enable=%d
%d: %p mixer bus %d volume=%g
%d: Error %d setting kAudioUnitProperty_ElementCount on mixer
%d: mixer=%p, fmt=%s
%d: Discrete Multichannel detected!
%d: client %s has a valid layout; setting: %s
%d: client %s is not mono; diagonal mixmap: %s
%d: (%p): scope %d, element %d, %s: error %d
%d: EXCEPTION %s (%{audio:4CC}d): channel == NULL
%d: mixer %p state:
%d: Ignoring attempt to set non-PCM (%{audio:4CC}u) output format on a mixer.
%d: Expected %@, but got %@ instead!
%d: %s returning %{audio:4CC}d, benign
%d: Exception caught in %s - error %{audio:4CC}d
%d: AQServer: deleting remote client %p %s
%d: AQServer::QueueDisposed client=%p queueOwner=%p
%d: AQServer::QueueDisposed deleting unused rcp %p
%d: paused; waiting %.3fs for fades on %d queues
%d: %s: operated on %d queues
%d: AQServer: Reusing existing remote client %p %s
%d: AQServer creating a new remote client %p %s
%d: client=%p queueOwner=%p, newState=%d
%d: scaled %.f = unscaled %lld
%d: unscaled %lld = scaled %.f
%d: aq@%p: ConnectToOfflineMixer %p
%d: Latency changed from %.6f to %.6f
%d: GetCodecOutput: AudioCodecAppendInputData returned %{audio:4CC}d
%d: %s: AudioCodec %p
  from %s
  to   %s
%d: Cannot locate requested codec: %{audio:AudioComponentDescription}.*P
%d: Could not instantiate requested codec: %{audio:AudioComponentDescription}.*P; error %{audio:4CC}d
%d: kAudioCodecPropertySupportedOutputFormats getinfo failed
%d: no matching codec output format
%d: error %{audio:4CC}d setting kAudioCodecPropertyCurrentOutputFormat to %s
%d: deviceUID = %@
%d: Audio route is built-in speakers.
%d: Spatial capabilities: routeCanSpatialize=%d, maxChannels=%u, routeWantsSpatializedStereo=%d
%d: Current route does not support spatialization
%d: No AQIONode
%d: Loaded preset file %s
%d: Could not load preset file %s (%s)
 caught bad_alloc error
 caught error %d
 caught error %d: '%s'
 caught unspecified error
%d: %s: called but not implemented
 ASSERTION FAILED: %s, line %d: %s
%d: AQMEIO %s: restarting (after route change?)
%d: error %{audio:4CC}d
%d: Audio device started by mix engine
%d: failed; I/O was terminated from below
%d: timed out after %.3fs (%d %d); suspension count=%d (%s)
%d: Multiple waiters on flags 0x%x
%d: DevTimeReset
%d: error %s finding/initializing %s
%d: TimestampSanitizer: first time
%d: isnan(sanitizedTS->mSampleTime), %s - basis %c %s, sr %g
%d: isnan(halTS->mSampleTime)
%d: TimestampSanitizer: %s: %.f sample frame jump (%.f -> %.f). Offset now %.f.
%d: TimestampSanitizer: got first valid output time???
%d: the server just died :(
%d: Setting activation property %d for ssid %d
%d: AudioServicesSetProperty id = %d
%d: kAudioServicesPropertyActivate called for pid(%d), ssid %d, value = %d
%d: kAudioServicesPropertyActivateWithTimeout called for pid(%d), ssid %d, value = %d
%d: AudioServicesGetPropertyInfo id = %d
%d: kAudioServicesPropertyAlertSoundURL: %s
%d: kAudioServicesPropertyAlertAudioOn: %d
%d: kAudioServicesPropertyAlertVisualOn: %d
%d: kAudioServicesPropertySystemSoundUIAudioOn: %d
%d: kAudioServicesPropertySystemSoundUIAudioOn: %f
%d: Unknown property, %d
%d: ----> ActionDataToServer
%d: actionID: %d
%d: Couldn't load file at url
%d: Fail URL
%d: result: %d
%d: <---- ActionDataToServer
%d: Error: open returned %d
%d: Error: fstat returned %d
%d: Error: file length is greater than 32 bits
%d: Error mmap'ing the file
%d: Error returned from AudioFileOpenWithCallbacks, %d
%d: Sound length %fs exceeded the %.1f-second limit
%d: Error returned while loading file, %d
%d: Unexpected error returned while loading file
%d: Client Prefs: volume = %f, alertVisualOn = %d, uiAudioOn = %d, alertAudioOn = %d
%d: clientPID = %d, systemSoundID = %d, behavior = %d, flags = %u, loop = %d, loopPeriod = %f, volume = %f, pan = %f, customVibePattern = %d
%d: Support long form media: %u
%d: Alert sound URL has changed, re-sending data
%d: <---- PlaySound
%d: AlertSoundDataToServer failed: %d
%d: ActionDataToServer failed: %d
%d: unknown action id: %d
%d: CreateBuiltInInfo failed: %d
%d: GetInfo (again)
%d: Failure to setup sound, err = %d
%d: clientPID = %d
%d: clientPID = %d :  inSystemSoundID = %d, stopNow = %d
%d: ----> %s
%d: <---- %s, result = %d
%d: AudioServicesCreateSystemSoundID id = %d
%d: clientPID = %d, inSSID = %d, inDesiredNumberofIDs = %d
%d: clientPID/id = %d/%d
%d: AudioServicesGetProperty id = %d
%d: clientPID/id = %d/%d, runloop %p
%d: Couldn't find info for system sound ID, %d
%d: clientPID = %d :  inSystemSoundID = %d, inBehavior = %d, inIsRepeating = %d, inLoopPeriod = %f, inFlags = %u
%d: Re-sending play message for ID %d
%d: WILL NOT re-send play message for ID %d as the client has already stopped the sound
%d: CoreSimulator failed to supply SIMULATOR_AUDIO_SETTINGS_PATH; volume and mute will not work.
%d: Failed to open audio settings path fd. Error: (%d) %s
%d: Failed to open audio settings plist!
%d: Failed to read audiosettings.plist: %s
%d: Failed to get sim_ringer_state from audio settings.
%d: Failed to get sim_volume from audio settings.
%d: Failed to get sim_input_device_uid from audio settings.
%d: Failed to get sim_output_device_uid from audio settings.
%d: Received simulator settings update: inputDeviceUID=%s, inputDeviceID=%u, outputDeviceUID=%s, outputDevice=%u, ringerMuted=%s, volume=%.2f
%d: Unexpected error %d attempting to lookup device by UID
%d: Unknown file type
%d: Invalid time resolution: %d
%d: Unknown format type: %u
%d: File has no tracks
%d: Invalid track length
%d: Invalid load flag
%d: Invalid event type in track: %d
 Called without a sequence
%d: Invalid message byte: 0x%2x
%d: MIDI File: Data1 byte invalid
%d: MIDI File: Note On data2 byte invalid
%d: MIDI File: Note Off data2 byte invalid
 Zero-velocity note on should not be here
%d: MIDI File: Data2 byte invalid
%d: Invalid event in track
%d: Invalid meta event
%d: Invalid sysex length
%d: Sysex length exceeds capacity
%d: Invalid event status: 0x%2x
 STACK_ABL: invalid number of buffers
%d: ScheduledSlicePlayer::ClearSchedule: %d frame imbalance
%d: SSP::Render: CopySlice returned %d
%d: AQ underrun: current sample time %lld; dropping buffer spanning sample times %lld - %lld
CARP violation: using HAL semantics (%s)
%d: Unknown property ID:%{audio:4CC}d
%d: %s %{audio:4CC}d/%{audio:4CC}d
%d: aq@%p: Deleting
%d: AudioQueue content sample rate %g; I/O sample rate %g; internal logic error
%d: AudioQueue codec policy %d: failed to find a codec of the requested type
%d: aq@%p: %{audio:4CC}d %{audio:4CC}d, preferred manuf %{audio:4CC}d; found hw=%{audio:4CC}d, sw=%{audio:4CC}d; policy %d, chose %{audio:4CC}d
%d: Querying output formats for %s, using codec %s
%d: *** AudioQueue ignoring hardware codecs (aq_ignorehwcodecs pref set) ***
%d: Signaling ConverterThread (scheduled priority=%u)
%d: aq@%p: %s
%d: Tap process not set
%d: conv = %p, lid = %@, err = %d
%d: aq@%p: ionode@%p, enqueueing %d samples of silence
%d: aq@%p: Stopping (wasStarted=%d)
%d: aq@%p: %{audio:4CC}d (mDisposalPending=%d)
%d: starting
%d: sleep (%d work units performed, pri %d)
%d: wake (pri %d)
%d: exiting
%d: Overriding max frames from prime to %d
%d: Couldn't get mConverterResetMutex
%d: maxProducePackets = sr %.f / %d frames per packet = %d packets
%d: bufid %d 0x%x/0x%x bytes, %d/%d packets, mNumPacketDescriptions=%d
%d: aq@%p: AudioConverterFillComplexBuffer returned %d, packetCount %d
%d: <-0x%x/0x%x packets, 0x%x/0x%x bytes%s [buffer %d]
%d: aq@%p: buf %d@%p, buf->data=%p, len=0x%x, %s
%d: aq@%p: %s using invalid anchor time
%d: end of flushing input
%d: ->%d fr, %d bytes @ t=%lld fr
%d: no samples
%d: too far ahead
%d: flushing; reducing read
%d: silentFrames <= 0
%d: Input ring buffer returning 0x%x frames of silence (trying to read: %u - %u; current bounds %u - %u) (%d previous warnings suppressed)
%d: %u silentFrames
%d: Input ring buffer returning 0x%x frames, t: 0x%x - 0x%x
%d: aq@%p: maxFramesToConvert=%d
%d: aq@%p: No ring buffer range available in sizes %d-%d
%d: aq@%p: *** inserting %d-frame alignment adjustment
%d: aq@%p: First buffer, will start in 2 I/O cycles (t = 0x%x)
%d: set mEnqueueAnchorTime.mSampleTime to 0x%x
%d: aq@%p: scheduling rationale %d: %s
%d: aq@%p / bcmd@%p: %s %u of %u frames (status=%s) to offset 0x%x (%p), %d bytes, t=0x%x (0x%x + 0x%x)
%d: aq@%p / bcmd@%p: %s %u of %u frames (status=%s) to offset 0x%x (%p), %d bytes, t=0x%x (0x%x + 0x%x) [%s]
%d: ConvertOutput/SlicePlayer: MarkEndOfStream
%d: aq@%p: *** slice %p ringRange=0x%x:0x%x t=%lld:%lld complete ***
%d: aq@%p: *** slice %p t=%lld:%lld complete (buf %d@%p) ***
%d: aq@%p: ***** end of stream at t=%lld *****
%d: AudioQueue: cannot trim silence
%d:   aq@%p: FlushPending, end of stream
%d:   aq@%p: no more buffers
%d:   aq@%p: done with buffer cmd %p
%d:   mFirstPostFlushBufferTimestamp %s
%d:   aq@%p: supplied %d packets, 0x%x bytes @ %p
%d: Considering async stop: recentRenderTime %lld, recentBufferRenderTime %lld, endOfTimeline %lld (latency %d, srScalar %.3f)
%d: aq@%p: About to perform async command: %s
%d: conv = %p, isoe = %@, err = %d
%d: %p, err=%{audio:4CC}d
%d: (%d bytes @ %p), err=%{audio:4CC}d
%d: aq@%p: ionode %p
%d:   ->flushing pending input
%d:   <-done flushing pending input: no more buffers (%d frames in ring buffer)
%d:   flushing pending input terminated - error %{audio:4CC}d
%d:   <-done flushing pending input: 0 packets produced
%d:   flushing input: %d packets produced
%d: aq@%p: cmd %p, flags=%d, t=%lld
%d: aq@%p: st=%d
%d: aq@%p paused
%d: aq@%p ioNodeSampleTime %lld < mRestartIOSampleTime %lld
%d: aq@%p not anchored
%d: aq@%p volume %.3f %.3f %.3f %.3f %.3f
%d: aq@%p
%d: failed (%{audio:4CC}d)
%d: %s
%d:   changed existing slice player output format
%d:   created new slice allocator %p for PCM format: %s
%d:   ScheduledSliceAllocator %p: sliceFormat %s
%d: ScheduledSliceAllocator %p's AudioConverter:
%d: AudioConverterNew returned %{audio:4CC}d
%d: Couldn't configure AC-3 conversion: %{audio:4CC}d
%d: Failed to set downmix channel layout: %{audio:4CC}d
%d: failure when %s: %d
%d: *** Queue needs no converter ***
%d: conv = %p, property = %s, size = %u, err = %d
%d: %s
%d: aq@%p: 0x%x
%d: incoming buffer is %.3f seconds / %d samples in the past
%d: aq@%p: * * * * * Timeline discontinuity * * * * * (expected %lld, got %lld)
%d: CheckIOTime %p: mAnchorIOSampleTime=%lld
%d: aq@%p PlayPaused, device %lld, queue %lld, %d fr
%d: aq@%p Play device %lld, queue %lld, %d fr, buffer %d
%d: no codec output formats!
%d: mixing to %d bits, %s quality
%d:   [%d] %s
%d: AudioConverterNew from AudioQueueNew returned %{audio:4CC}d
io:    %s
client:   %s
%d: mClientMaxPacketSize = %d
%d: Invalid format (%s) would overflow integer buffer size
%d: aq@%p: New %s; format %s
%d: aq@%p: %d fr
%d: aq@%p: conn %p RunsOnAP %d
%d: aq@%p: decode buffer sizes: %u frames, low-water %u, max-decode %u
%d: ### aq@%p: hardware bit depth was %d; now %d ###
%d: aq@%p: unable to dynamically change converter %s format (%{audio:4CC}d)
%d: Queue's formats:
  i/o format     %s
  PCM format     %s
  client format  %s
%d: aq@%p: Entering (0x%x frames requested)
%d: Exiting because 0x%x frames were primed (0x%x were requested)
%d: Exiting because mPrimeComplete is true (0x%x req, 0x%x primed)
%d: Exiting because mConverterError is %{audio:4CC}d (0x%x req, 0x%x primed)
%d: Prime: Exiting because the work queue has reached a %s command (0x%x req, 0x%x primed)
%d: failed (%{audio:4CC}d); will stop (%d/%d frames)
%d: aq@%p: [1] start host time is %lld; %.3fs from now
%d: aq@%p: Starting
%d: aq@%p: [2] start host time is %lld; %.3fs from now
%d: aq@%p: mInterrupted %d
%d: ***** unpausing after being paused %lld - %lld = %lld sample frames *****
%d: aq@%p resumeTime %s, restartIOSampleTime %lld, mLastIOSampleTime %lld, mPauseSampleTime %lld, anchorSampleTime %lld
%d: AudioQueueObject(%p, %d)::StartRunning: warning: last sample time not set for the audio tap
%d: AudioQueueObject(%p, %d)::StartRunning: ERROR: last sample time not set
%d: scheduling rate change at unscaled t=%lld, but we previously did a conversion for t=%lld
%d: last rate change at %lld, ignoring out-of-order new one at %lld
%d: rate change: %lld = %lld scaled, rate %.3f
%d: AudioQueueSetProperty: %{audio:4CC}d not supported for %{audio:4CC}d
%d: attempt to set %u channels with IOFormat: %s (kAudioQueueErr_InvalidPropertySize)
%d: aq@%p: cannot enable kAudioQueueProperty_EnableSpatialization.  deviceCanSpatialize=%d, routeCanSpatialize=%d, err=%d
%d: aq@%p: cannot enable spatialization.  IO channels (%d) != client channels (%d)
%d: aq@%p: spatialization %s.  Format %s
%d: TimePitchProperty accessed; error %{audio:4CC}d
%d: aq@%p: %d
%d: aq@%p: %s %d=%g
%d: Rate1 cannot be set immediately after Rate2 has been committed (current, new rate1: %.2f, %.2f).
%d: aq@%p: rate2 scheduling not enabled; ignoring event
%d: aq@%p: ptr %p, size 0x%x%s => ID %d
%d: AQBuffer * %p has enqueue count of %d
%d: aq@%p: ptr %p, size 0x%x, ID %d
%d: AudioQueueEnqueueBuffer: invalid attempt to enqueue buffer %d a second time (%d)
%d: eqb: Anchored, %s -> %s
%d: eqb: Floating, anchor %s -> %s
%d: eqb: floatingFirstBuffer
%d: aq@%p: bufid %d, cmd %p, data %p: %u bytes, %d frames (trim %d/%d), %d packets, %s, outActualStartTime %p
%d: eqb: after prime %s
%d: ^^^ actual start time %s
%d: AudioQueue: request to trim %u + %u = %u frames from buffer containing %u frames
%d: aq@%p: queue must be stopped before switching to offline mode, is currently %s!
%d: aq@%p: %s, mixer %p
%d: aq@%p: t=%lld, reqFrames=%u, actualBytes=%d, actualFrames=%d
%d: -> aq@%p
%d: framesAvailable after decoding %d
%d: inCurrentSampleTime = %lld, mOfflineEndOfStreamSampleTime = %lld
%d: <-aq@%p: %d (raw) %d (scaled) fr avail, running=%d, EOS=%d
%d: ->AudioQueueObject::GetCurrentQueueTime %p
%d: <-AudioQueueObject::GetCurrentQueueTime - paused; result is mPauseSampleTime(%lld)
%d:   ionode now    %s (%.3f); qrate = %.3f
%d:   queue anchor  %lld fr
%d:   queue now     %s (%.3f)
%d: <-AudioQueueObject::GetCurrentQueueTime success
%d: aq@%p: beingInterrupted %d
%d: mNextIOSampleTime %lld, mAnchorIOSampleTime %lld, mPauseSampleTime %lld
%d: aq@%p: activating=%d, started=%d, paused=%d, interrupted=%d, wasPausedWhenInterrupted=%d, fadeTime=%g, isFading=%d
%d: Failed to set processVolumeScalar on device. Error: %d
%d: Set processVolumeScalar on device %u to %.2f
%d: HW output:    %s
%d: ioFormat:     %s
%d: output:       %s
%d: mixer format: %s
%d:   stream channel layout: %s
%d: EXCEPTION %s (%{audio:4CC}d): mIOUnitChannelLayout.NumberChannels() != mHWFormat.mChannelsPerFrame
%d: PostMasterMixer %d
%d: err %d, nfr %d
%d: inputA:       %s
%d: inputB:       %s
%d:   %-6.6s stream format: %s
%d:   %6s client format: %s
%d: not connected
%d: not connected due to invalid format:%s
%d: already running
%d: AQME %s: client starting: %s; running count now %d
%d: Client(%p) did not see an I/O cycle; waiting again
%d: <-AQMEDevice(%p)::AddRunningClient %p
%d: -> %p %s
%d: AQME %s: client stopping%s: %s; running count now %d
%d: <- %p %p
%d: %p: %d / %d running clients' connectors detached (%s)
%d: %p: %d running clients' connectors attached (%s)
%d: %p: IO unit client: %s
%d: Permission already granted
%d: Permission already refused
%d: Beginning asynch query
%d: Got async value %s
 ca_require_noerr: [%s, %d] (goto %s;)
%d: %s failed with error %d
 New graph creation should not fail
%d: LazyInitializeGraph: Not using AUGraph
%d: Status for AU %p changing to %d
%d: AU was initialized
%d: AU will be uninitialized -- stopping sequence player
%d: AU will be destroyed -- stopping sequence player and un-setting destination AU
%d: Searching for alternate default AU
 ASSERTION FAILED: default AU still set to one that will be destroyed
%d: Uh-oh -- no default!
%d: New Music Device is available
%d: Track index out of range
%d: Track is not owned by this sequence
 Old track to be replaced not found in sequence
%d: sending reset event: clientID: 0x%lx time: %.3f
%d: %s: (%s) != true - error %d
%d: setting param: clientID: 0x%lx type: %u value: %.2f atTime: %.3f
%d: clearing events: clientID: 0x%lx fromTime: %.3f
%d: stopping event: clientID: 0x%lx eventToken: %u atTime: %.3f
%d: sending event array: clientID: 0x%lx atTime: %.3f
%d: starting event: clientID: 0x%lx eventType: %u atTime: %.3f
%d: clientID: 0x%lx channelID: %u behavior: %u
%d: Illegal event behavior: %u
%d: finish with comp handler: clientID: 0x%lx
%d: Client was not running - calling completion handler immediately
%d: reply block for _client stopRunning: replyError: %@
%d: stop running: clientID: 0x%lx
%d: start running: clientID: 0x%lx
%d: Cannot start without allocating resources
%d: reply block for _client startRunning: replyError: %@
%d: Client 0x%lx asynchronously stopped for reason %d
%d: stop prewarm: clientID: 0x%lx
%d: prewarm: clientID: 0x%lx
%d: reply block for _client prewarm: replyError: %@
%d: set sequence playback rate: entered
%d: set sequence loop length: entered
%d: enable sequence looping: entered
%d: sequence %u already prepared for clientID: 0x%lx - NOOP
%d: loading and preparing haptic pattern: clientID: 0x%lx
%d: loading and preparing haptic sequence from NSArray: clientID: 0x%lx
%d: loading haptic sequence from NSData: clientID: 0x%lx
%d: releasing custom audio event: clientID: 0x%lx
%d: referencing custom audio event: clientID: 0x%lx
%d: copying custom audio event: clientID: 0x%lx, eventID: %u
%d: creating custom audio event: clientID: 0x%lx, frameCount: %lu
%d: loading haptic event: clientID: 0x%lx
%d: deallocating resources: clientID: 0x%lx
%d: Resources already deallocated -- noop
%d: allocating resources: clientID: 0x%lx
%d: Resources already allocated -- just call completion handler
%d: player %p, clientID: 0x%lx channel %p (ID %u)
%d: Channel not found on player
%d: player %p, clientID: 0x%lx
%d: Total channels was %u, now %u
%d: Adding new AVHapticPlayerChannel %p to end of array with channel ID %u
%d: Returning channel %p (ID %u)
%d: clientID: 0x%lx numberOfChannels: %u
%d: Can't set channel count while player is running
%d: clientID: 0x%lx behavior: %u
%d: clientID: 0x%lx
%d: clientID: 0x%lx: call failed
%d: dealloc entered for player %p
%d: dealloc exited
%d: initWithOptions entered
%d: initWithOptions exited
%d: initWithInternalSessionID entered
%d: initWithSessionID entered
%d: initAndReturnError entered
%d: Haptic Server is not supported on this platform
%d: exited with nil
%d: Connection error
%d: set volume on seq: clientID: 0x%lx time: %.3f volume: %.3f
%d: activating seq track index: clientID: 0x%lx time: %.3f index: %u
%d: request pushed out to pending play request at time %.3f
%d: Associated player is not running - action delayed until sequence start
%d: cancel seq: clientID: 0x%lx
%d: set param on seq: clientID: 0x%lx type: %u value: %.2f channelIndex: %u atTime: %.3f
%d: seek seq: clientID: 0x%lx time: NOW
%d: resume seq: clientID: 0x%lx time: %.3f
%d: pause seq: clientID: 0x%lx time: %.3f
%d: stop seq: clientID: 0x%lx time: %.3f
%d: play seq: clientID: 0x%lx time: %.3f offsetTime: %.3f playback rate: %.1f
%d: soloing sequence track %u
%d: prepare to play seq: clientID: 0x%lx
%d: clientID: 0x%lx seqID: %u behavior: %u
%d: dealloc seq %p, clientID: 0x%lx
%d: Destroying a sequence that is still looping!  Disabling loop.
%d: starting init with dictionary
%d: initWithDictionary: reply block for hapticPlayer loadAndPrepareHapticSequenceFromVibePattern: replyID: %u, replyError: %@
%d: starting init with event array
%d: initWithEvents: reply block for hapticPlayer loadAndPrepareHapticSequenceFromEvents: replyID: %u, replyChannelCount: %u, replyError: %@
%d: starting init with data %p, player %p
%d: initWithData: reply block for hapticPlayer loadAndPrepareHapticSequenceFromData: replyID: %u, replyChannelCount: %u, replyError: %@
%d: New AQMEDevice %p for %s
%d: CAUTION: AddRunningClient being called with AQIONode lock taken; watch out for -66665 errors.
%d: Trying to start a client without connecting it
%d: ->AQMEDevice(%p)::AddRunningClient %s count %d
%d: Destroyed AQMEDevice %p for %s
%d: %p
%d: * * * * * AdaptToDevice %s: mDeviceSampleRate=%g * * * * *
%d: Moving %d mixer channels from %s to %s
%d: New output stream with no clients: %s
%d: Moving %d inputs from %s to %s
%d: New input stream with no clients: %s
%d: AQMEDevice(%p): logged signal chain entry %s
%d: aqme_starttimeout: %d ms
%d: aqme_stoptimeout: %d ms
%d: 
%d: SoundCheck: %d
%d: ->AQMEDevice(%p)::AddIOClient %s
%d: <-AQMEDevice(%p)::AddIOClient %p
%d: <-AQMEDevice(%p)::AddIOClient %p err %{audio:4CC}d
%d: ->AQMEDevice(%p)::RemoveIOClient %s
%d: <-AQMEDevice(%p)::RemoveIOClient %p
%d: AQMEDevice(%p)::SetChannelMap %s
%d: AQMEDevice(%p)::RestartIOFollowingRouteChange
%d: AQMEDevice(%p)::RestartIOFollowingRouteChange: error %d
%d: AQMEDevice(%p): removing ducking channel - subgraph %p bus %d
%d: AQMEDevice(%p): adding ducking channel - subgraph %p bus %d
%d: AQMEDevice(%p): applying duck factor %.3f
%d: AQAC3IONode(%p): destruct
%d: AQAC3IONode(%p): IO_AdaptToDevice
%d: AQAC3IONode::RestartIOFollowingRouteChange: DoStartIO failed (%d)
%d: AQAC3IONode(%p): RemoveRunningClient %p
%d: AQAC3IONode(%p): AddRunningClient %p
%d: AQAC3IONode::AddRunningClient: DoStartIO failed (%d)
%d: AQAC3IONode(%p): RemoveIOClient %p
%d: AQAC3IONode(%p): AddIOClient %p
%d: AQAC3IONode(%p): construct
%d: ClientAudioQueue %p 0x%x: destructing
%d: Client has called AudioQueueDispose while a property listener is in flight. Sleeping briefly.
%d: %{audio:4CC}d %p/%p%s
%d: we are on the client run loop, running it
%d: ...run loop handled a source
%d: already in a callback on the client run loop
%d: timed out!
%d: waiting for %d callbacks
%d: %p: done
%d: ->0x%x: buffer %d, ptr %p, size %d, %d packets
%d: <-buffer %d; enqueue count=%d
%d: ->0x%x: buffer %d
%d: ->AudioQueueNew%s %s 0x%x
%d: <-AudioQueueNew failed %d
%d: <-AudioQueueNew%s serverQueue=0x%x, serverQueueObj=%p, clientQueue=%p
%d: ->%s serverQueue=0x%x, clientQueue=%p
%d: <-
%d: ->0x%x %s (now: 0x%llx)
%d: <-(%.6f s)
%d: ->0x%x %u bytes, %u packets
%d: <-err=%d, buffer=%d
%d: <->0x%x buffer %d
%d: ->0x%x buffer %d; %d bytes, %d packets; trim %d/%d; new enqueue count=%d; %s
%d: ->0x%x buffer %d; %d bytes, %d packets; trim %d/%d; new enqueue count=%d; %s; %s
%d: <-failed (%d); enqueue count=%d
%d: <-%s
%d: ->0x%x time: %s (now: %.6f)
%d: <-(err=%d, %.6f s)
%d: ->0x%x %d fr
%d: <-%d fr, err %d
%d: ->0x%x
%d: <- pauseSampleTime %lld
%d: ->0x%x %s
%d: <-(%d)
%d: ->0x%x %{audio:4CC}d %d
%d: <-(%{audio:4CC}d)
%d: ->0x%x %{audio:4CC}d %d %08x
%d: <-%s; err=%d
%d: 0x%x: complete buffer %d %p
%d: <-(err %d) %d bytes
%d: ->0x%x %s, %s
%d: ->0x%x flags=0x%x, t=%lld
 %s: %s
%d: ->%p %d
%d: <-%p %d fr, %d
%d: ->%p %{audio:4CC}d %d %08x
%d: <-%{audio:4CC}d
%d: ->%p %lld
%d: ->
%d: <-%p (%{audio:4CC}d)
%d: ->%p %p
%d: t=%.f, n=%d
%d: t=%.f, n=%d, st=%.f, sn=%d
%d: Stopping AQTapIONode %p, client %p
%d: Starting AQTapIONode %p, client %p
%d: No process to tap specified
%d: Configuring AQTapIONode %p client %p
%d: Invalid track loop duration
%d: Invalid track loop points
%d: Unknown track property: %d
%d: stopping on destructor
%d: aqmeio@%p ->IO rs=%.3f, in ht %.6f st %lld, out ht %.6f st %lld
%d: %s: Abandoning I/O cycle because reconfig pending (%d).
%d: aqmeio@%p sanitized in ht %.6f st %lld, out ht %.6f st %lld
%d: %p stopping after freewheeling
%d: aqmeio@%p <-IO
%d: AQMEIO: %s stream %d: %u b, %u b/fr => %u fr
%d: aqmeio@%p IsRunning %d
%d: aqmeio@%p * * * * * kAudioDevicePropertyIOStoppedAbnormally fired * * * * *
%d: aqmeio@%p * * * * * OVERLOAD * * * * *
%d: %p * * * * * Audio device processor overload * * * * *
%d: %p (%s): lock contended, setting stream format change pending
%d: %p: * * * * * Preferred stereo channels changed * * * * *
%d: %p: * * * * * Preferred channel layout changed * * * * *
%d: %p (%s): %s stream format changed
%d: %p: * * * * * %s stream list changed * * * * *
%d: Caught exception in UpdateStreams; device is probably going away
%d: %p: Finished reconfig
%d: kAudioDevicePropertyVolumeScalarToDecibels returned err %d
%d: aqmeio@%p Stop id=%d
%d: aqmeio@%p Start id=%d
%d: major change pending, returning kAudioQueueErr_CannotStartYet (%s)
%d: aqmeio@%p, device %u (%s), AudioDeviceStartAtTime (err %{audio:4CC}d)
%d: aqmeio@%p, device %u (%s), AudioDeviceStart (err %{audio:4CC}d)
%d: aqmeio@%p: cannot set %s stream usage on device %u because IOProcID is null
%d: aqmeio@%p: device %u has no %s streams
%d: aqmeio@%p: no change in %s stream usage on device %u, usage = %d
%d: aqmeio@%p: set %s stream usage to %d on device %u, err = %d
%d: aqmeio@%p: could not get device UID error = %s
%d: %@: Clearing pending notification %s
%d: aqmeio@%p %s (%.6f from now)
%d: Audio device stopped by mix engine, on I/O thread
%d: Audio device already stopped; just removed I/O proc to be sure.
%d: timeout
%d: Audio device stopped by mix engine, after waiting on state guard
%d:   stream %u, UID %@
%d:   at channel %d, %d / %d
%d: Port UID %@, ch %u => device ch %d
%d: aqmeio@%p: set clock device %@ on audio device %u
%d: error fetching 'oswg': %s
%d: fetched workgroup %p
%d: note: possibly calling HAL from IO thread?
%d: rate: %.f, onUnderlyingPhysicalDevice: %d, device: %u, err: %d
%d: Audio device %u: error %{audio:4CC}d fetching sample rate, or sample rate is 0. Defaulting to 44100.
%d: * * * * * Default %s device is now %u * * * * *
%d: Error selecting new default device (%s)
softlink:o:path:/System/Library/PrivateFrameworks/MediaSafetyNet.framework/MediaSafetyNet
softlink:r:fw:CoreMIDI
AVHapticSequenceEntry
AVHapticClient
CHHapticClientInterface
NSXPCListenerDelegate
NSObject
CHHapticServerInterface
ATDefaultDeviceAggregate
AVHapticEvent
NSSecureCoding
NSCoding
AVHapticPlayerParameterCurve
AVHapticPlayerParameterCurveControlPoint
AVHapticPlayerChannel
AVHapticPlayer
AVHapticSequence
AVHapticParameterCurveValue
objectForKeyedSubscript:
setObject:forKeyedSubscript:
numberWithUnsignedInt:
boolValue
UTF8String
addObject:
stringWithFormat:
countByEnumeratingWithState:objects:count:
_handler
_running
_detached
initWithHandler:
handler
setHandler:
running
setRunning:
detached
setDetached:
.cxx_destruct
init
_connection
_sharedBuffer
_uniqueID
_serverTimeout
_completionCallback
_connectionCallback
_mapMutex
_sequenceEntryMap
_completionQueue
_state
_disconnecting
_prewarmed
_connected
_serverProcessID
_clientID
_channelKeys
_asyncStopCallback
sequenceFinished:error:
clientCompletedWithError:
clientStoppedForReason:error:
clientDisconnectingForReason:error:
listener:shouldAcceptNewConnection:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
setState:
state
initWithOptions:error:
dealloc
queryServerCapabilities:reply:
hapticLatency
allocateResources:
loadHapticEvent:reply:
createCustomAudioEvent:format:frames:options:reply:
copyCustomAudioEvent:options:reply:
referenceCustomAudioEvent:reply:
releaseCustomAudioEvent:reply:
prewarm:
stopPrewarm
startRunning:
stopRunning
stopRunning:
finish:
expectNotifyAfter:
setChannelEventBehavior:channel:
resetChannel:atTime:
startEventAndReturnToken:type:atTime:channel:eventToken:
doSendEvents:atTime:channel:sorted:outToken:error:
doScheduleParamCurve:atTime:channel:paramCurve:error:
doScheduleParamCurveWithMemoryReserve:atTime:channel:memoryReserve:paramCurve:error:
sendEvents:atTime:channel:outToken:error:
stopEventWithToken:atTime:channel:
clearEventsFromTime:channel:
setParameter:atTime:value:channel:
scheduleParameterCurve:curve:atTime:channel:error:
loadAndPrepareHapticSequenceFromData:reply:
loadAndPrepareHapticSequenceFromEvents:reply:
loadAndPrepareHapticSequenceFromVibePattern:reply:
setSequenceEventBehavior:behavior:channel:
setSequenceFinishedHandlerForID:finishedHandler:
getSequenceFinishedHandlerForID:
callSequenceFinishedHandlersWithError:
setRunStateForSequenceEntryWithID:running:
detachSequenceEntryforID:
prepareHapticSequence:error:
enableSequenceLooping:enable:error:
setSequenceLoopLength:length:error:
setSequencePlaybackRate:rate:error:
startHapticSequence:atTime:withOffset:
stopHapticSequence:atTime:
pauseHapticSequence:atTime:
resumeHapticSequence:atTime:
seekHapticSequence:toTime:
setSequenceChannelParameter:atTime:value:sequenceID:channel:
clearSequenceEvents:atTime:
detachHapticSequence:
releaseResources
doInit
setupConnectionWithOptions:error:
getAsyncDelegateForMethod:errorHandler:
getSyncDelegateForMethod:errorHandler:
disconnect
setChannelKeys:
setPlayerBehavior:error:
clearAssignedChannels
requestAssignedChannels:error:
removeAssignedChannelID:error:
handleServerConnectionInterruption
handleServerConnectionInvalidation
setupSharedMemory:size:
calculateHapticCommandParamCurveMemorySize:
destroySharedMemory
clientID
channelKeys
prewarmed
connected
setConnected:
completionCallback
setCompletionCallback:
connectionCallback
setConnectionCallback:
disconnecting
serverProcessID
setServerProcessID:
asyncStopCallback
setAsyncStopCallback:
.cxx_construct
errorWithDomain:code:userInfo:
removeChannel:reply:
requestChannels:reply:
count
releaseChannels
setPlayerBehavior:reply:
initWithArray:copyItems:
invalidate
synchronousRemoteObjectProxyWithErrorHandler:
localizedDescription
remoteObjectProxyWithErrorHandler:
processIdentifier
configureWithOptions:reply:
resume
setInvalidationHandler:
setInterruptionHandler:
setXPCType:forSelector:argumentIndex:ofReply:
allocateClientResources:
remoteObjectInterface
setRemoteObjectInterface:
queryCapabilities:reply:
releaseClientResources
getHapticLatency:
setChannelEventBehavior:behavior:reply:
loadHapticSequenceFromData:reply:
loadHapticSequenceFromEvents:reply:
loadVibePattern:reply:
setSequenceEventBehavior:behavior:channelIndex:reply:
prepareHapticSequence:reply:
detachSequence:
debugExpectNotifyOnFinishAfter:reply:
setExportedObject:
setExportedInterface:
interfaceWithProtocol:
initWithMachServiceName:options:
objectForKey:
value
time
objectAtIndexedSubscript:
subarrayWithRange:
sortedArrayUsingComparator:
eventType
fixedParams
fixedParamCount
paramType
duration
controlPoints
parameterCurve
eventCategory
setMaxConcurrentOperationCount:
orientation
activeInterfaceOrientationWithCompletion:
startDeviceOrientationUpdatesToQueue:withHandler:
deviceOrientationBlocking
stopDeviceOrientationUpdates
initWithInteger:
initWithDouble:
rotationDirection
initWithObjectsAndKeys:
_impl
deviceID
deviceUID
addObserver:
removeObserver:
_streamsToUse:
inputChannelCount
outputChannelCount
sampleRate
inputStreamsToUse
outputStreamsToUse
impl
primarySessionIsActivatingWithInputCategory:
primarySessionIsDeactivating
addIndex:
sharedDefaultDeviceAggregate
sharedDefaultDeviceAggregateNoInit
currentHandler
handleFailureInFunction:file:lineNumber:description:
stringWithUTF8String:
_time
_duration
_eventCategory
_fixedParams
_paramCurve
_fixedParamCount
_value
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithEventType:time:duration:
initWithEventType:time:parameters:count:duration:
initWithParameter:value:time:
initWithParameterCurve:
decodeObjectOfClass:forKey:
_type
_shape
_controlPoints
initWithType:relativeTime:shape:controlPoints:
type
setType:
setTime:
shape
setShape:
decodeObjectOfClasses:forKey:
initWithObjects:
initWithTime:value:
setValue:
encodeFloat:forKey:
encodeDouble:forKey:
encodeObject:forKey:
encodeInteger:forKey:
copy
decodeFloatForKey:
decodeIntegerForKey:
decodeInt32ForKey:
decodeDoubleForKey:
encodeInt32:forKey:
eventWithEventType:time:
eventWithEventType:time:duration:
eventWithEventType:time:parameters:count:
eventWithEventType:time:parameters:count:duration:
eventWithParameter:value:time:
eventWithParameterCurve:
_chanID
_behavior
_client
initWithChannelID:client:
eventBehavior
setEventBehavior:
startEvent:atTime:token:error:
startEvent:atTime:parameters:count:token:error:
sendEvents:atTime:error:
stopEvent:atTime:error:
clearEvents:error:
setParameter:value:atTime:error:
scheduleParameterCurve:curve:atTime:error:
resetAtTime:error:
chanID
setChanID:
client
setClient:
raise:format:arguments:
dictionaryWithObjectsAndKeys:
arrayWithObjects:count:
unsignedIntegerValue
_resourcesAllocated
_channelArray
_connectionErrorHandler
_stopRunningHandler
createOptionsFromAudioSessionID:shared:
doInitWithOptions:error:
initAndReturnError:
initWithSessionID:error:
initWithSessionID:sessionIsShared:error:
setBehavior:
getBehavior
setNumberOfChannels:error:
addChannel:
removeChannel:error:
channels
currentMediaTime
setConnectionErrorHandler:
connectionErrorHandler
invalidateChannels
allocateRenderResourcesWithCompletionHandler:
deallocateRenderResources
prewarmWithCompletionHandler:
startRunningWithCompletionHandler:
stopRunningWithCompletionHandler:
finishWithCompletionHandler:
playHapticSequence:atTime:offset:
setSequenceChannelParam:atTime:channel:param:value:error:
stopRunningHandler
setStopRunningHandler:
resourcesAllocated
behavior
arrayWithArray:
removeObject:
indexOfObject:
objectAtIndex:
numberWithBool:
isSupported
_player
_seqID
_lastStartTime
_eventBehavior
_loopIsEnabled
_loopLength
_playbackRate
_channelCount
_activeChannel
initWithData:player:error:
initWithEvents:player:error:
initWithDictionary:player:error:
setLoopingEnabled:error:
setCompletionHandler:
completionHandler
getChannelCount
loopingEnabled
setLoopingEnabled:
setLoopLength:error:
playbackRate
setPlaybackRate:
prepareToPlayAndReturnError:
playAtTime:offset:error:
stopAtTime:error:
pauseAtTime:error:
resumeAtTime:error:
seekToTime:error:
setParameter:value:channel:atTime:error:
cancelAndReturnError:
activateChannelByIndex:atTime:error:
setVolume:atTime:error:
player
setPlayer:
seqID
setSeqID:
setDuration:
lastStartTime
setLastStartTime:
activeChannel
setActiveChannel:
channelCount
@24@0:8@?16
@?16@0:8
v24@0:8@?16
B16@0:8
v20@0:8B16
v16@0:8
@"NSXPCConnection"
{HapticSharedMemory="_vptr$SharableMemoryBase"^^?"mIsOwner"B"mWasMapped"B"mSize"Q"mBuffer"^v"mPort"I"mFileDesc"i"mSerial"i"mXPCObject"@"NSObject<OS_xpc_object>"}
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{map<unsigned long, AVHapticSequenceEntry *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, AVHapticSequenceEntry *> > >="__tree_"{__tree<std::__1::__value_type<unsigned long, AVHapticSequenceEntry *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, AVHapticSequenceEntry *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, AVHapticSequenceEntry *> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, AVHapticSequenceEntry *>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, AVHapticSequenceEntry *>, std::__1::less<unsigned long>, true> >="__value_"Q}}}
@"NSObject<OS_dispatch_queue>"
@"NSArray"
v32@0:8Q16@"NSError"24
v24@0:8@"NSError"16
v32@0:8Q16@24
v24@0:8@16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B32@0:8@16@24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v20@0:8i16
i16@0:8
@32@0:8@16^@24
v32@0:8@16@?24
d16@0:8
B32@0:8@16@?24
B56@0:8@16@24Q32@40@?48
B40@0:8Q16@24@?32
B32@0:8Q16@?24
B24@0:8@?16
v24@0:8d16
B32@0:8Q16Q24
B32@0:8Q16d24
B56@0:8Q16Q24d32Q40^Q48
B60@0:8@16d24Q32B40^Q44^@52
B56@0:8Q16d24Q32@40^@48
B64@0:8Q16d24Q32^{AddressReserve=^vI^vIi}40@48^@56
B56@0:8@16d24Q32^Q40^@48
B40@0:8Q16d24Q32
B32@0:8d16Q24
B44@0:8Q16d24f32Q36
B56@0:8Q16@24d32Q40^@48
B40@0:8Q16Q24Q32
v32@0:8Q16@?24
@?24@0:8Q16
v28@0:8Q16B24
v24@0:8Q16
B32@0:8Q16^@24
B36@0:8Q16B24^@28
B36@0:8Q16f24^@28
B40@0:8Q16d24d32
B52@0:8Q16d24f32Q36Q44
B32@0:8@16^@24
@32@0:8:16@?24
i28@0:8{object=@}16I24
I20@0:8I16
v32@0:8@"NSDictionary"16@?<v@?Q>24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSObject<OS_xpc_object>"I@"NSError">16
v24@0:8@?<v@?d@"NSError">16
v32@0:8Q16@?<v@?@"NSError">24
v32@0:8Q16@?<v@?@"NSArray"@"NSError">24
v40@0:8Q16Q24@?<v@?@"NSError">32
v32@0:8@"NSDictionary"16@?<v@?Q@"NSError">24
v32@0:8@"NSData"16@?<v@?QdQ@"NSError">24
v32@0:8@"NSArray"16@?<v@?QdQ@"NSError">24
v48@0:8Q16Q24Q32@?<v@?@"NSError">40
v56@0:8@"NSData"16@"AVAudioFormat"24Q32@"NSDictionary"40@?<v@?Q@"NSError">48
v40@0:8Q16@"NSDictionary"24@?<v@?Q@"NSError">32
v24@0:8@?<v@?@"NSError">16
v32@0:8d16@?<v@?>24
v40@0:8Q16Q24@?32
v48@0:8Q16Q24Q32@?40
v56@0:8@16@24Q32@40@?48
v40@0:8Q16@24@?32
v32@0:8d16@?24
{shared_ptr<caulk::reactor<DefaultDeviceAggregate> >="__ptr_"^{reactor<DefaultDeviceAggregate>}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<const AggregateState>=^{AggregateState}^{__shared_weak_count}}16@0:8
I16@0:8
i24@0:8@?16
@20@0:8B16
{shared_ptr<caulk::reactor<DefaultDeviceAggregate> >=^{reactor<DefaultDeviceAggregate>}^{__shared_weak_count}}16@0:8
(?="_eventType"Q"_paramType"Q)
[8{AVHapticPlayerFixedParameter="type"Q"value"f}]
@"AVHapticPlayerParameterCurve"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8@16
@40@0:8Q16d24d32
@56@0:8Q16d24r^{AVHapticPlayerFixedParameter=Qf}32q40d48
@36@0:8Q16f24d28
^{AVHapticPlayerFixedParameter=Qf}16@0:8
q16@0:8
f16@0:8
@48@0:8Q16d24Q32@40
@28@0:8d16f24
v20@0:8f16
@32@0:8Q16d24
@48@0:8Q16d24r^{AVHapticPlayerFixedParameter=Qf}32q40
@"AVHapticClient"
@32@0:8@16@24
B48@0:8Q16d24^Q32^@40
B64@0:8Q16d24r^{AVHapticPlayerFixedParameter=Qf}32q40^Q48^@56
B40@0:8@16d24^@32
B40@0:8Q16d24^@32
B32@0:8d16^@24
B44@0:8Q16f24d28^@36
B48@0:8Q16@24d32^@40
@"NSMutableArray"
@24@0:8I16B20
@24@0:8^@16
@28@0:8I16^@20
@32@0:8I16B20^@24
B60@0:8Q16d24Q32Q40f48^@52
@"AVHapticPlayer"
@40@0:8@16@24^@32
B28@0:8B16^@20
B28@0:8f16^@20
B24@0:8^@16
B40@0:8d16d24^@32
B52@0:8Q16f24Q28d36^@44
B36@0:8f16d20^@28
#mtsptuo
#mtstpni
tmfs****
2hcdptuo
2hcdtpni
dnrsptuo
niogbolg
dptsbolg
revobolg
