contact
show
search
v8@?0
com.apple.contactsui
ContactsURLParser
T@"NSObject<OS_os_log>",R,N
T@"NSURL",R,N,V_url
dataSource
T@"<CNContactDataSource_Internal>",R,W,N,V_dataSource
identifier
T@"NSString",&,N,V_identifier
legacyIdenifier
T@"NSNumber",&,N,V_legacyIdenifier
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
contactsSplitViewController
T@"ContactsSplitViewController",W,N,V_contactsSplitViewController
animate
searchQueries
search for "%@"
testName
extraResults
T@"NSMutableDictionary",&,N,V_extraResults
currentDirectoryIndex
TQ,N,V_currentDirectoryIndex
TB,N,V_animate
allSearchQueries
T@"NSArray",&,N,V_allSearchQueries
currentQueryIndex
TQ,N,V_currentQueryIndex
lastSearchBeginTime
Td,N,V_lastSearchBeginTime
B16@?0@"UIScene"8
window
T@"UIWindow",&,N
capabilitiesManager
T@"CNCapabilitiesManager",R,N,V_capabilitiesManager
mainBundle
T@"NSBundle",R,N,V_mainBundle
schedulerProvider
T@"<CNSchedulerProvider>",R,N,V_schedulerProvider
mainSceneDelegate
T@"ContactsSceneDelegate",R,N
T@"UIWindow",&,N,V_window
iterations
Create New Contact
time
Tq,N,V_iterations
totalIterations
Tq,N,V_totalIterations
v16@?0@"UIViewController"8
scrollMemberAtIndex
delta
navControllerDelegate
T@"CNTestNavigationControllerDelegate",&,N,V_navControllerDelegate
ContactsCardNavigationController
com.apple.Contacts.ResourcesPrewarming
UISplitViewControllerSubclassInitializationProblemIsFixed
ADD_CONTACT_KEYBOARD_DISCOVERY
Localized
BEGIN_SEARCH_KEYBOARD_DISCOVERY
SELECT_PREVIOUS_CONTACT_KEYBOARD_DISCOVERY
SELECT_NEXT_CONTACT_KEYBOARD_DISCOVERY
ContactsSplitViewController
@8@?0
@"NSArray"16@?0@"UIViewController"8
B16@?0@"UIViewController"8
v16@?0@"CNContactContentViewController"8
contactNavigationController
T@"CNContactNavigationController",&,N,V_contactNavigationController
T@"CNContactStoreDataSource",R,N
contactContainer
T@"ContactsCardNavigationController",&,N,V_contactContainer
groupsViewControllerContainer
T@"UIViewController",&,N,V_groupsViewControllerContainer
contactsList
T@"UITableView",R,N
displayedContact
T@"CNContact",&,N,V_displayedContact
selectedIndexPath
T@"NSIndexPath",&,N,V_selectedIndexPath
isSetupFinished
TB,N,V_isSetupFinished
potentiallyPresentedDetailViewController
T@"UINavigationController",&,N,V_potentiallyPresentedDetailViewController
presentedContactViewController
T@"CNContactViewController",R,N
unsavedContact
T@"CNContact",R,N
restoredContact
T@"CNContact",&,N,V_restoredContact
store
T@"CNContactStore",R,N
recap
v16@?0@8
testOptions
T@"NSDictionary",&,N,V_testOptions
contactSplitViewController
T@"ContactsSplitViewController",&,N,V_contactSplitViewController
isIPad
TB,N,V_isIPad
offset
contactsExtendedLaunch
delegate
T@"<UINavigationControllerDelegate>",&,N,V_delegate
willShow
T@?,C,N,V_willShow
didShow
T@?,C,N,V_didShow
Open Contact
Close Contact
nextContactIndex
Ti,N,V_nextContactIndex
maxContactIndex
Ti,N,V_maxContactIndex
com.apple.contacts.show-me
com.apple.contacts.create-new-contact
scene
B16@?0@"NSUserActivity"8
v16@?0@?<v@?>8
QUICKACTION_TITLE_SHOW_ME
InfoPlist
contact passed to showContact is nil
identifier passed to showContactWithIdentifier is empty
legacyIdentifier cannot be negative
splitViewController
T@"ContactsSplitViewController",R,N,V_splitViewController
activityRestorer
T@"CNUIUserActivityRestorer",R,N,V_activityRestorer
activityRestorerDelegate
T@"CNUserActivityRestorerDelegate",R,N,V_activityRestorerDelegate
vCardImportController
T@"CNVCardImportController",R,N,V_vCardImportController
bundle
T@"NSBundle",R,N,V_bundle
viewingContactActivityForRestoration
T@"NSUserActivity",&,N,V_viewingContactActivityForRestoration
sceneWindow
T@"UIWindow",&,N,V_sceneWindow
didExecuteSceneInitializationTasks
TB,N,V_didExecuteSceneInitializationTasks
actionsDelayedUntilSceneInitialization
T@"NSMutableArray",R,N,V_actionsDelayedUntilSceneInitialization
CSQueryContinuationActionType
/System/Library/PrivateFrameworks/CoreSpotlight.framework/CoreSpotlight
testType
searchQuery
v16@?0@"NSDictionary"8
queryString
T@"NSString",&,N,V_queryString
%@Test
LaunchToCard
com.apple.PeoplePicker
ContactToShow
currentTest
T@,&,N,V_currentTest
CNApplication
Edit Contact Transition
iteration
TQ,N,V_iteration
maxIterations
TQ,N,V_maxIterations
init
readURL:
scheme
isEqualToString:
searchResultIdentifier
setLegacyIdenifier:
host
identifierFromShowCommandURL:
setIdentifier:
query
rangeOfString:
length
substringToIndex:
substringFromIndex:
dataSource
preferredForNameMeContactIdentifier
identifier
legacyIdenifier
initWithURL:dataSource:
identifierFound
legacyIdentifierFound
.cxx_destruct
_url
_dataSource
_identifier
_legacyIdenifier
contactsSplitViewController
createNewContact
showCardForContact:fallbackToFirstContact:
showEditingCardForContact:
searchForString:
arrayWithObjects:count:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
userActivityRestorer:restoreViewContact:activity:
userActivityRestorer:restoreCreateContact:activity:
userActivityRestorer:restoreEditContact:activity:
userActivityRestorer:restoreSearch:activity:
userActivityRestorer:keysToFetchWhenRestoringViewContactActivity:
userActivityRestorer:keysToFetchWhenRestoringEditContactContactActivity:
initWithContactsSplitViewController:
setContactsSplitViewController:
_contactsSplitViewController
prepareForTestWithOptions:
dictionary
setExtraResults:
objectForKey:
boolValue
setAnimate:
componentsSeparatedByString:
setAllSearchQueries:
setCurrentQueryIndex:
willStartTest
startSearchQuery
showContactListWithCompletionBlock:
allSearchQueries
currentQueryIndex
objectAtIndex:
setLastSearchBeginTime:
contactNavigationController
contactListViewController
animate
stringWithFormat:
lastSearchBeginTime
numberWithDouble:
extraResults
setValue:forKey:
count
testOptions
objectForKeyedSubscript:
finishedTest:extraResults:
cancelSearch:
searchForString:animated:completionBlock:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
currentDirectoryIndex
setCurrentDirectoryIndex:
_animate
_extraResults
_currentDirectoryIndex
_allSearchQueries
_currentQueryIndex
_lastSearchBeginTime
defaultCapabilitiesManager
mainBundle
currentEnvironment
defaultSchedulerProvider
initWithCapabilitiesManager:mainBundle:schedulerProvider:
sharedApplication
connectedScenes
allObjects
firstObject
_isKeyWindowScene
activationState
_cn_firstObjectPassingTest:
delegate
mainSceneDelegate
showContactWithIdentifier:
shouldMakeUIForDefaultPNG
statusBar
setAlpha:
configuration
runTest:options:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
window
setWindow:
application:runTest:options:
application:didFinishLaunchingSuspendedWithOptions:
_application:statusBarTouchesEnded:
_application:didReceiveViewServiceRequestForViewControllerClassName:
_application:handleSiriTask:
application:userAcceptedCloudKitShareWithMetadata:
_application:willConnectCanvas:
_application:willCreateCanvasWithDefinition:withOptions:
_application:didDiscardCanvasDefinitions:
capabilitiesManager
schedulerProvider
_window
_capabilitiesManager
_mainBundle
_schedulerProvider
intValue
setTotalIterations:
performTest
iterations
totalIterations
setIterations:
arrayWithObject:
startedSubTest:forTest:withMetrics:
finishedSubTest:forTest:
contactSplitViewController
performSelector:withObject:afterDelay:
dismissViewControllerAnimated:completion:
installCACommitCompletionBlock:
addContact:animated:
finishedTest:
_iterations
_totalIterations
navigationControllerForPPT
didShow:
delegateWithDelegate:willShowViewControllerHandler:didShowViewControllerHandler:
setNavControllerDelegate:
navControllerDelegate
setDelegate:
contacts
objectAtIndexedSubscript:
showCardForContact:animated:
isIPad
presentedContactViewController
editAndScrollContactViewController:
resetDelegate
prepareForNextTest
topViewController
contentViewController
toggleEditing:
contactView
contentSize
_performScrollTest:iterations:delta:length:
contactViewController:shouldPerformDefaultActionForContactProperty:
contactViewController:didCompleteWithContact:
contactViewController:shouldPerformDefaultActionForContact:propertyKey:propertyIdentifier:
contactViewController:didChangeToEditMode:
contactViewController:didDeleteContact:
contactPresentedViewController:
_navControllerDelegate
scrollContactViewController:
initWithNibName:bundle:
setRestorationIdentifier:
viewDidLoad
contactStyleDefaultBackgroundColor
view
setBackgroundColor:
suggestionsEnabled
storeWithOptions:
initWithStore:
newContactStoreDataSourceForSplitViewController
newContactFormatter
setContactFormatter:
store
contactStoreFilterFromPreferencesWithContactStore:
setFilter:
currentSnapshot
descriptorForRequiredKeysForPreferredForNameMeContact
preferredForNameMeContactWithKeysToFetch:
resourcesPrewarmingQueue
standardUserDefaults
registerDefaults:
disableCompatiblityWorkaround
initWithStyle:
setup
isSetupFinished
setupNavigationController
setupContainerController
setupKeyCommands
setupSplitViewControllerProperties
setupColumns
setIsSetupFinished:
prewarmedContactStoreDataSource
contactFormatter
initWithDataSource:contactFormatter:applyGroupFilterFromPreferences:environment:allowsLargeTitles:
initWithDataSource:environment:allowsLargeTitles:
setAllowsCardEditing:
setAllowsCardDeletion:
setShouldDisplayMeContactBanner:
setShouldAutoHideMeContactBanner:
initWithRootViewController:
addContact:
keyCommandWithInput:modifierFlags:action:
localizedStringForKey:value:table:
setDiscoverabilityTitle:
addKeyCommand:
beginSearch:
selectPreviousContact:
selectNextContact:
setPreferredDisplayMode:
setPreferredPrimaryColumnWidth:
setupPrimaryColumnViewController
setViewController:forColumn:
setPreferredSupplementaryColumnWidth:
viewControllerForColumn:
shouldShowAccountsAndGroups
contactContainer
canPerformAction:withSender:
accountsAndGroupsViewController
parentViewController
groupsViewControllerContainer
moveViewController:toParent:
navigationController
navigationBar
setPrefersLargeTitles:
isCollapsed
popViewControllerAnimated:
popToRootViewControllerAnimated:
showCardForContact:resetFilter:resetSearch:fallbackToFirstContact:scrollToContact:animated:
startEditingPresentedContact
_cancelOutstandingSearch
isSearching
tableView
saveModelChangesToContact
contact
_isCollapsed
setModalPresentationStyle:
presentViewController:animated:completion:
setPresentsWithGesture:
setHideGroupsButton:
setupPrimaryColumnForExpandedViewing
updateModeOnSplitViewControllerForDisplayMode:
displayMode
contactsList
selectRowAtIndexPath:animated:scrollPosition:
selectedIndexPath
displayedContact
_allowingMutationsInDelegateCallback:
presentedViewController
saveEditingViewControllersAndDismissViewController:
setPotentiallyPresentedDetailViewController:
potentiallyPresentedDetailViewController
showDetailViewController:sender:
performWithoutAnimation:
childViewControllers
arrayByAddingObjectsFromArray:
_cn_flatMap:
_cn_filter:
isEditing
clearMapsDataIfEdited
saveChanges
_cn_each:
setEditing:animated:
setDisplayedContact:
indexPathForContact:
setSelectedIndexPath:
removeContactViewController
showContactDetailViewController:sender:animated:
hideColumn:
deselectContactAndSelectNext:
globalRowForRowAtIndexPath:
section
indexPathForRow:inSection:
deselectRowAtIndexPath:animated:
showColumn:
navigationControllerForPotentiallyWrappedViewController:
prewarmContactStoreDataSourceBlock
splitViewController:willChangeToDisplayMode:
targetDisplayModeForActionInSplitViewController:
splitViewController:showViewController:sender:
splitViewController:showDetailViewController:sender:
primaryViewControllerForCollapsingSplitViewController:
primaryViewControllerForExpandingSplitViewController:
splitViewController:collapseSecondaryViewController:ontoPrimaryViewController:
splitViewController:separateSecondaryViewControllerFromPrimaryViewController:
splitViewControllerSupportedInterfaceOrientations:
splitViewControllerPreferredInterfaceOrientationForPresentation:
splitViewController:willHideViewController:withBarButtonItem:forPopoverController:
splitViewController:willShowViewController:invalidatingBarButtonItem:
splitViewController:popoverController:willPresentViewController:
splitViewController:shouldHideViewController:inOrientation:
splitViewController:topColumnForCollapsingToProposedTopColumn:
splitViewController:displayModeForExpandingToProposedDisplayMode:
splitViewControllerDidCollapse:
splitViewControllerDidExpand:
splitViewController:willShowColumn:
splitViewController:willHideColumn:
splitViewControllerInteractivePresentationGestureWillBegin:
splitViewControllerInteractivePresentationGestureDidEnd:
contactNavigationControllerDidCancel:
contactNavigationControllerDidComplete:
contactNavigationControllerShouldAddNewContact:
contactNavigationController:canSelectContact:
contactNavigationController:shouldSelectContact:atIndexPath:
contactNavigationController:shouldShowCardForContact:
contactNavigationController:shouldPerformDefaultActionForContactProperty:
contactNavigationController:didDeleteContact:
contactNavigationControllerShouldShowContactsOnKeyCommands:
contactNavigationControllerClearContactSelection:
contactNavigationControllerShouldShowGroupsViewController:
contactNavigationController:contactViewControllerForContact:preferredMode:
contactNavigationController:presentViewController:animated:
contactNavigationControllerDidUpdateAccountsAndGroupsState:
presentAddContactViewController:animated:
contactCardNavigationController
canBecomeFirstResponder
unsavedContact
setRestoredContact:
cancelSearch
setContactNavigationController:
restoredContact
setContactContainer:
setGroupsViewControllerContainer:
_isSetupFinished
_contactNavigationController
_restoredContact
_contactContainer
_groupsViewControllerContainer
_displayedContact
_selectedIndexPath
_potentiallyPresentedDetailViewController
setContactSplitViewController:
currentDevice
userInterfaceIdiom
setIsIPad:
setTestOptions:
startedTest:
transitionCoordinator
animateAlongsideTransition:completion:
testWithSplitViewController:
_isIPad
_testOptions
_contactSplitViewController
visibleViewController
_performScrollTest:iterations:delta:
setLaunchCheckinRegistrar:
defaultWorkspace
openSensitiveURL:withOptions:
openURL:
areAllLaunchTasksComplete
_launchTestName
checkInLaunchTasks:
prewarmResourcesForLaunch
_extendLaunchTest
_launchTaskCompletionMask
_extendedLaunchFinished
setWillShow:
setDidShow:
willShow
didShow
_selfReallyRespondsToSelector:
forwardingTargetForSelector:
_delegate
_willShow
_didShow
setNextContactIndex:
setMaxContactIndex:
showNextContact
iterateContact
showContactsListForIPhone
nextContactIndex
maxContactIndex
_nextContactIndex
_maxContactIndex
splitViewController
initWithContactStore:presentationDelegate:
bundleForClass:
initWithContactStore:
activityRestorerDelegate
array
coordinateSpace
bounds
initWithWindowScene:
setSceneWindow:
sceneWindow
setRootViewController:
contactsApplicationTintColor
setTintColor:
makeKeyAndVisible
userActivities
anyObject
_cn_addNonNilObject:
stateRestorationActivity
shortcutItem
executeShortcutIfNecessary:completionHandler:
URLContexts
openContactsURL:
setViewingContactActivityForRestoration:
setWithArray:
activityType
containsObject:
type
showNewContact
showMeContact
setHidden:
defaultProvider
backgroundScheduler
sharedCollector
logPresentation
afterDelay:performBlock:
checkInLaunchTasksIfNecessary
displayContactIfNecessary
performMigrationOfFacebookContactsToLocalStoreIfNecessary
createShowMeCardApplicationShortcutIfNecessary
executeAllDelayedActions
executeSceneInitializationTasksOnce:
didExecuteSceneInitializationTasks
setDidExecuteSceneInitializationTasks:
launchCheckinRegistrar
viewingContactActivityForRestoration
splitViewControllerIsDisplayingList
traitCollection
horizontalSizeClass
activityRestorer
restoreUserActivity:
checkForFacebookContactsWithDelay:allowAlert:
hasForceTouchCapability
showMeCardShortcutItem
setShortcutItems:
actionsDelayedUntilSceneInitialization
removeAllObjects
copy
addObject:
inProcessActivityManager
makeActivityAdvertisingViewingList
userActivityRepresentingCurrentlyDisplayedContact
shouldEnableActivityIndicatorWhenRestoringUserActivityWithType:
setNetworkActivityIndicatorVisible:
isFileURL
vCardImportController
enqueueContactsAtURL:
showContactWithLegacyIdentifier:
preferredForNameMeContact
bundle
initWithType:localizedTitle:
iconWithContact:
setIcon:
defaultTestingManager
runTest:options:splitViewController:
executeActionDelayedUntilSceneInitialization:
exceptionWithName:reason:userInfo:
descriptorForRequiredKeys
unifiedContactWithIdentifier:keysToFetch:error:
showContact:
predicateForLegacyIdentifier:
unifiedContactsMatchingPredicate:keysToFetch:error:
vCardImportController:didSaveContacts:
vCardImportControllerDidCompleteQueue:
vCardImportController:presentViewController:animated:
scene:willConnectToSession:options:
sceneDidDisconnect:
sceneDidBecomeActive:
sceneWillResignActive:
sceneWillEnterForeground:
sceneDidEnterBackground:
scene:openURLContexts:
stateRestorationActivityForScene:
scene:willContinueUserActivityWithType:
scene:continueUserActivity:
scene:didFailToContinueUserActivityWithType:error:
scene:didUpdateUserActivity:
windowScene:didUpdateCoordinateSpace:interfaceOrientation:traitCollection:
windowScene:performActionForShortcutItem:completionHandler:
windowScene:userDidAcceptCloudKitShareWithMetadata:
_didExecuteSceneInitializationTasks
_splitViewController
_activityRestorer
_activityRestorerDelegate
_vCardImportController
_bundle
_viewingContactActivityForRestoration
_sceneWindow
_actionsDelayedUntilSceneInitialization
contactHeaderView
editButtonPressed
photoView
photoPicker
collectionView
isRecapAvailable
runRecapTestWithName:scrollView:currentIteration:totalIterations:completion:
newWithTestName:scrollView:completionHandler:
adjustedContentInset
setDirection:
setPreventSheetDismissal:
setAmplitude:
setIterationDurationFactor:
setScrollingBounds:
runTestWithParameters:
showPseudoContactsListForIPhone
setQueryString:
startSearchQueryWithOptions:
queryString
searchResultsController
_performScrollTest:iterations:delta:length:scrollAxis:extraResultsBlock:completionBlock:
_queryString
currentTest
setCurrentTest:
contactToShowForLaunchTestWithStore:
_currentTest
setMaxIterations:
iteration
maxIterations
setIteration:
measureEditingTransitionOnController:
_iteration
_maxIterations
startSearchQueryWithCompletionBlock:
Error: Unexpected scheme '%@' sent in URL %@.
Unknown reference '%@' sent in URL %@.
Unknown type '%@' sent in URL %@.
Invalid query '%@' for command '%@' in URL %@.
During -[AppDelegate application:willFinishLaunchingWithOptions:], the value for UIApplicationLaunchOptionsSearchResultIdentifierKey was expected to be an NSString representating a contact's identifier, but instead it is %@
scene:%@ willConnectToSession: with bounds: %@
received unknown shortcut item type: %@
error fetching contact with identifier %@: %@
error fetching contact with legacy identifier %d: %@
Failed to Soft Link: /System/Library/PrivateFrameworks/CoreSpotlight.framework/CoreSpotlight (%d)
Error in Recap Test: Recap is not available
Running Recap Test: iteration %ld
Finnished Recap Test: total iterations %ld
ContactsURLParser
CNUserActivityRestorerDelegate
CNUIUserActivityRestorerDelegate
NSObject
SearchPseudoContactsTest
UINavigationControllerDelegate
ContactsAppDelegate
UIApplicationTestingDelegate
UIApplicationDelegate
UIApplicationDelegatePrivate
CreateNewContactTest
ScrollEditingContactTest
CNContactContentViewControllerDelegate
CNContactViewControllerDelegate
ScrollContactTest
SearchByNameTest
ContactsCardNavigationController
ContactsSplitViewController
UISplitViewControllerDelegate
CNContactNavigationControllerDelegate
CNContactViewControllerAddContactPresenter
ContactsTest
ScrollNewContactTest
ScrollMemberListTest
CNApplication
CNUIApplicationLaunchCheckin
CNTestNavigationControllerDelegate
ShowContactsTest
ContactsSceneDelegate
CNVCardImportControllerDelegate
CNVCardImportControllerPresentationDelegate
UIWindowSceneDelegate
UISceneDelegate
ScrollPhotoPickerTest
ShowPseudoContactsTest
ScrollSearchByNameTest
ContactsTestingManager
EditContactTransitionTest
ScrollPseudoContactListTest
@16@0:8
@32@0:8@16@24
v24@0:8@16
@24@0:8@16
v16@0:8
@"NSURL"
@"<CNContactDataSource_Internal>"
@"NSString"
@"NSNumber"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B40@0:8@16@24@32
B40@0:8@"CNUIUserActivityRestorer"16@"CNContact"24@"NSUserActivity"32
B40@0:8@"CNUIUserActivityRestorer"16@"NSString"24@"NSUserActivity"32
@"NSArray"32@0:8@"CNUIUserActivityRestorer"16@"NSUserActivity"24
@"ContactsSplitViewController"
v36@0:8@16@24B32
Q24@0:8@16
q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v24@0:8Q16
v20@0:8B16
d16@0:8
v24@0:8d16
@"NSMutableDictionary"
@"NSArray"
B32@0:8@16@24
B48@0:8@16@24@32@40
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@16@24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
B40@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32
v32@0:8@"UIApplication"16@"UIEvent"24
v32@0:8@"UIApplication"16@"NSString"24
v32@0:8@"UIApplication"16@"AFSiriTask"24
v32@0:8@"UIApplication"16@"UICanvas"24
@"_UICanvasDefinition"40@0:8@"UIApplication"16@"_UICanvasDefinition"24@"NSDictionary"32
@"UIWindow"
@"CNCapabilitiesManager"
@"NSBundle"
@"<CNSchedulerProvider>"
q16@0:8
v24@0:8q16
B32@0:8@"CNContactViewController"16@"CNContactProperty"24
v32@0:8@"CNContactViewController"16@"CNContact"24
v28@0:8@16B24
B48@0:8@"CNContactContentViewController"16@"CNContact"24@"NSString"32@"NSString"40
v28@0:8@"CNContactContentViewController"16B24
v32@0:8@"CNContactContentViewController"16@"CNContact"24
@"UIViewController"24@0:8@"CNContactViewController"16
@"CNTestNavigationControllerDelegate"
@?16@0:8
v48@0:8@16@24@32@40
B40@0:8@16@24q32
q32@0:8@16q24
v32@0:8@"UISplitViewController"16q24
q24@0:8@"UISplitViewController"16
B40@0:8@"UISplitViewController"16@"UIViewController"24@32
@"UIViewController"24@0:8@"UISplitViewController"16
B40@0:8@"UISplitViewController"16@"UIViewController"24@"UIViewController"32
@"UIViewController"32@0:8@"UISplitViewController"16@"UIViewController"24
Q24@0:8@"UISplitViewController"16
v48@0:8@"UISplitViewController"16@"UIViewController"24@"UIBarButtonItem"32@"UIPopoverController"40
v40@0:8@"UISplitViewController"16@"UIViewController"24@"UIBarButtonItem"32
v40@0:8@"UISplitViewController"16@"UIPopoverController"24@"UIViewController"32
B40@0:8@"UISplitViewController"16@"UIViewController"24q32
q32@0:8@"UISplitViewController"16q24
v24@0:8@"UISplitViewController"16
@40@0:8@16@24q32
B36@0:8@16@24B32
v24@0:8@"CNContactNavigationController"16
B24@0:8@"CNContactNavigationController"16
B32@0:8@"CNContactNavigationController"16@"CNContact"24
B40@0:8@"CNContactNavigationController"16@"CNContact"24@"NSIndexPath"32
B32@0:8@"CNContactNavigationController"16@"CNContactProperty"24
v32@0:8@"CNContactNavigationController"16@"CNContact"24
@"CNContactViewController"40@0:8@"CNContactNavigationController"16@"CNContact"24q32
B36@0:8@"CNContactNavigationController"16@"UIViewController"24B32
v28@0:8@"UIViewController"16B24
@24@0:8q16
B32@0:8:16@24
@"CNContactNavigationController"
@"CNContact"
@"ContactsCardNavigationController"
@"UIViewController"
@"NSIndexPath"
@"UINavigationController"
v24@0:8@?16
@"NSDictionary"
@40@0:8@16@?24@?32
@"<UINavigationControllerDelegate>"
i16@0:8
v20@0:8i16
v32@0:8@"CNVCardImportController"16@"NSArray"24
v24@0:8@"CNVCardImportController"16
v36@0:8@"CNVCardImportController"16@"UIViewController"24B32
v40@0:8@"UIScene"16@"UISceneSession"24@"UISceneConnectionOptions"32
v24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSSet"24
@"NSUserActivity"24@0:8@"UIScene"16
v32@0:8@"UIScene"16@"NSString"24
v32@0:8@"UIScene"16@"NSUserActivity"24
v40@0:8@"UIScene"16@"NSString"24@"NSError"32
v48@0:8@16@24q32@40
v48@0:8@"UIWindowScene"16@"<UICoordinateSpace>"24q32@"UITraitCollection"40
v40@0:8@"UIWindowScene"16@"UIApplicationShortcutItem"24@?<v@?B>32
v32@0:8@"UIWindowScene"16@"CKShareMetadata"24
B20@0:8i16
@"CNUIUserActivityRestorer"
@"CNUserActivityRestorerDelegate"
@"CNVCardImportController"
@"NSUserActivity"
@"NSMutableArray"
v56@0:8@16@24q32q40@?48
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.MobileAddressBook</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>cellular-plan</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.CoreRoutine.Application</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.developer.healthkit</key>
<true/>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.icloud.fmfd.access</key>
<true/>
<key>com.apple.media.ringtones.read-only</key>
<true/>
<key>com.apple.messages.supportsattachments</key>
<true/>
<key>com.apple.photos.bourgeoisie</key>
<true/>
<key>com.apple.private.CallHistory.read</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.avatar.store</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.canModifyAppLinkPermissions</key>
<true/>
<key>com.apple.private.contacts</key>
<true/>
<key>com.apple.private.contactsui</key>
<true/>
<key>com.apple.private.contactsui.channel-in-process-override</key>
<true/>
<key>com.apple.private.corerecents</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.coreservices.canopenactivity</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.corespotlight.search.internal</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.dprivacyd.allow</key>
<true/>
<key>com.apple.private.healthkit.medicaliddata</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch.internal</key>
<true/>
<key>com.apple.private.imcore.spi.database-access</key>
<true/>
<key>com.apple.private.persona.read</key>
<true/>
<key>com.apple.private.persona.write</key>
<true/>
<key>com.apple.private.screen-time</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.security.storage.CallHistory</key>
<true/>
<key>com.apple.private.security.storage.Photos</key>
<true/>
<key>com.apple.private.security.system-application</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceCamera</string>
<string>kTCCServicePhotos</string>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServicePhotos</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Media/PhotoData/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Avatar/</string>
<string>/Library/Preferences/com.apple.mobilephone.speeddial.plist</string>
<string>/Library/CallHistoryDB/</string>
<string>/Library/ContactsMetadata/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.contacts.donation.agent</string>
<string>com.apple.icloud.fmfd</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.coreduetd.people</string>
<string>com.apple.routined.registration</string>
<string>com.apple.CellularPlanDaemon.xpc</string>
<string>com.apple.dprivacyd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.suggestions</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.PeoplePicker</string>
<string>com.apple.SOS</string>
</array>
<key>com.apple.springboard.allowallcallurls</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-call-providers</string>
</array>
<key>com.apple.visualvoicemail.client</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
