WBSAutoFillQuirks
plist
AutoFillQuirks
SafariServices.wkbundle
Passwords
AutoFill
v8@?0
v24@?0B8B12@"NSError"16
Touch ID to View Saved Passwords
No Results
AutoFill Passwords
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
authenticationPrompt
T@"NSString",R,C,N
showsAuthenticationPromptAsTitle
TB,R,N
hasBeenAuthenticated
TB,N
TB,N,V_hasBeenAuthenticated
SafariDateFormatter
SafariShouldChangeCharacters
Month
MM/yy
Cardholder
John Appleseed
Number
0000 0000 0000 0000
v16@?0@"UITextField"8
B40@?0@"UITextField"8{_NSRange=QQ}16@"NSString"32
Expires
MM/YY
Description
My Credit Card
Delete Credit Card
Use Camera
Are you sure you want to delete this credit card?
Delete
v16@?0@"UIAlertAction"8
Cancel
B16@?0@"UIMenuItem"8
Copy
Use Contact Info
My Info
None
Turn On Passcode Lock
Use Without Passcode
DevicePINController
mode
Passcode Lock Suggested
v12@?0B8
v16@?0q8
DeviceClassNumber
When you turn on AutoFill, anyone who has access to your iPod touch can view and use your saved credit cards. Using a passcode lock on your iPod touch can protect your saved credit cards.
When you turn on AutoFill, anyone who has access to your iPad can view and use your saved credit cards. Using a passcode lock on your iPad can protect your saved credit cards.
When you turn on AutoFill, anyone who has access to your iPhone can view and use your saved credit cards. Using a passcode lock on your iPhone can protect your saved credit cards.
Automatically fill out web forms using your contact info.
CreditCardGroup
CreditCardEnableSwitch
CreditCardList
Automatically fill out web forms using your contact or credit card info.
AutoFillSettingsHeaderGroupCell
footerText
From Wallet
SafariSecretSummer2019
en_US
Ending in %@, expires %@
Ending in %@
VirtualCardGroupSpecifier
0dnM19zBqLw5ZPhIo4GEkg
Wallet
Details for your Apple Card are available in %@.
_viewVirtualCardInWallet:
Details for your Apple Card are available in Wallet on devices that support Apple Pay.
v16@?0@"NSArray"8
Credit Cards
q24@?0@"PSSpecifier"8@"PSSpecifier"16
Add Credit Card
Delete Credit Cards
Are you sure you want to delete the selected credit card? It will be deleted from iCloud Keychain on all your devices.
Are you sure you want to delete the selected credit card?
Are you sure you want to delete the selected credit cards? They will be deleted from iCloud Keychain on all your devices.
Are you sure you want to delete the selected credit cards?
Edit
@"PSSpecifier"16@?0@"NSIndexPath"8
View Credit Cards
CreditCardVisa
CreditCardDiscover
CreditCardMasterCard
CreditCardAmex
CreditCardJCB
GenericNoAppleLogoCreditCard
com.apple.mobilesafari
Downloads
Keychain
WebsiteData
FolderPickerItem
Favorites
Safari
Favorites Explanation Header
folder
Bookmarks are being synced
providerItem
providerDomain
DOWNLOADS_EXPIRATION_INTERVAL
Downloads Folder Setting Header
Other Button Title
v24@?0@"NSArray"8@"NSError"16
v24@?0@"FPItem"8@"NSError"16
iCloud Footer Text
Local Footer Text
Other Provider Footer Text
v20@?0B8@"NSError"12
v24@?0@"NSURL"8@"NSError"16
DownloadExpirationIntervalGroup
Downloads Expiration Interval Title
Downloads Expiration Interval - 1 Day
Downloads Expiration Interval - Upon Successful Download
Downloads Expiration Interval - Manually
History
iconData
keyColor
fetchedIconData
sharedController
T@"FrequentlyVisitedSitesController",R,N
CONFIGURED_WEBSITES
OTHER_WEBSITES_GROUP
CLEAR_ALL_SETTINGS_GROUP
q24@?0@"NSString"8@"NSString"16
v16@?0@"NSSet"8
v20@?0@8B16
v16@?0@8
Other Websites
All Websites
Clear All Settings
Clear
preferenceManager
T@"<WBSPerSitePreferenceManager>",R,N
preference
T@"WBSPerSitePreference",R,N
USE_SITE_SPECIFIC_SEARCH
Quick Website Search Switch Explanatory Footer
Quick Website Search (Switch Label)
Website shortcuts
Quick website search shortcuts are added automatically by searching within a website.
@16@?0@"PSSpecifier"8
Developer
com.apple.webinspectord
RemoteInspectorEnabled
REMOTE_AUTOMATION_ENABLED
com.apple.webinspectord.disabled
com.apple.webinspectord.enabled
@"NSNumber"8@?0
com.apple.mobilesafari.settings.SafariSettingsTaskHandler
Library
SuspendState.plist
RecentSearches.plist
History.plist
FrequentlyVisitedSitesBannedURLStore.plist
NSString *__SFSafariContainerPath(void)
SafariPathUtilities.m
_SFSafariContainerPath
void *SafariServicesLibrary(void)
/System/Library/Frameworks/SafariServices.framework/SafariServices
/System/Library/Frameworks/SafariServices.framework/Contents/MacOS/SafariServices
SafariEditing
SafariTextChangeHandler
SafariShowsSecureTextInTheClear
SafariUsesHighLegibilityAlternateFont
SafariCanPerformSharePasswordActionHandler
SafariSharePasswordHandler
CLEAR_HISTORY_AND_DATA
FAVORITES_FOLDER
TRACKER_PROTECTION
BLOCK_ALL_NEW_COOKIES
ADVANCED
SAFARI_INTERNAL
SIRI_SUGGESTIONS
SIRI_AND_SEARCH
com.apple.onboarding.safari
com.apple.onboarding.safarisearch
SEARCH_ENGINE_SETTING
SEARCH
showSearchExplanationSheet:
PRIVACY
Privacy Explanation Footer Description
showPrivacyExplanationSheet:
TABS
Tabs Group Footer Text
DOWNLOADS
DebugIncludeSafariInternalSettingsShortcut
Safari Internal
MobileSafariInternalSettings.bundle
WebKit Internal
WebKitInternalSettings.bundle
AppleInternal
PreferenceBundles
SITE_SPECIFIC_SEARCH
Failed to copy Default Safari image file '%@' to '%@', with error: %@
Websites Group Title
Page Zoom
Request Desktop Website
Reader
Content Blockers
Camera
Microphone
Location
Close Tabs
Clear History and Data Prompt iCloud Enabled
Clear History and Data Prompt
Clear History and Data Prompt Button Title
v16@?0@"NSError"8
com.apple.mobilesafari.ClearAllStatistics
Are You Sure You Want to Block All Cookies?
Websites may not work if you do this. Existing cookies and website data will also be removed.
Block All
s+gaKNe68Gs3PfqKrZhi1w
AppCanShowSiriSuggestionsBlacklist
com.apple.suggestions
MobileSafari
SafariViewService
apple-internal-install
websiteDataRecordKey
DELETE_BUTTON
DISK_USAGE
Website Data Title
Storage
Remove All Website Data Destructive Button Title
Website Data
PSUsageSizeHeader
SPINNER_CELL
SHOW_ALL_BUTTON
com.apple.mobilesafari.settings.DeleteAllDataAndCachesTask
v32@?0@"NSString"8Q16^B24
v24@?0@"NSString"8@"NSString"16
BrowserState.db
com.apple.WebSheet
B16@?0@"PSSpecifier"8
Show All Sites Button Title
Remove Website Data
Remove Website Data Message
Remove Button Title
Remove Now Button Title
Cancel Button Title
CloudTabServices
Class getCloudTabServicesClass(void)_block_invoke
SafariStorageSettingsController.m
Unable to find class %s
void *WebBookmarksLibrary(void)
/System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks
/System/Library/PrivateFrameworks/WebBookmarks.framework/Contents/MacOS/WebBookmarks
Loading Spinner Label Title
keychainCell
PasswordAutoFill
iCloud Keychain
PasswordManagerHeaderSpecifier
Password provider list header
KeyIcon
q24@?0@"NSExtension"8@"NSExtension"16
v16@?0@"NSTimer"8
ContentFilterHeaderSpecifier
Allow these content blockers:
ContentFilter
Content blockers affect what content is loaded while using Safari. They cannot send any information about what was blocked back to the app.
No Content Blockers
Content blockers affect what content is loaded while using Safari.
safariAvailable
safariRestricted
reusedPasswords
savedPassword
passwordEvaluation
Website
example.com
User Name
Password
password
v24@?0@8@"UITableViewCell"16
changePassword
Change Password on Website
Websites
@"NSString"16@?0@"WBSSavedPassword"8
Single Password Reuse Footer
Double Password Reuse Footer
Triple Password Reuse Footer
Add Password
user
v36@?0@"NSString"8B16@"NSArray"20@"NSError"28
showsChangePasswordControllerOnAppearance
TB,N,V_showsChangePasswordControllerOnAppearance
SafariPINPromptTitle
isKeychainSyncEnabled
WebKitExperimentalFeatures
WebKitExperimental%@
experimentalFeatures
No experimental features
B16@?0@"_WKExperimentalFeature"8
localized string not found
DisableWebsiteSpecificSearch
com.apple.mobilesafari.ClearHistory
com.apple.mobilesafari.QuickWebsiteSearchProvidersDidChange
com.apple.mobilesafari.HideFrequentlyVisitedSitesDidChange
com.apple.mobilesafari.WebKitExperimentalFeaturesPrefsChanged
Failed to open to virtual card URL with error: %{public}@
Fetching file provider domains failed: %{public}@
Failed to fetch default downloads location item: %{public}@
Setting default downloads location item failed: %{public}@
Document picker did not return a URL
Could not fetch FPItem for URL %{private}@: %{public}@
Failed to determine provider domain for downloads folder: %{public}@
Failed to delete CoreSpotlight donations with error:%{public}@
Clearing OCSP cache failed with error: %{public}@
Background task expired while performing data maintenance
Ignoring non-string %@ property on specifier with id %@
Ignoring invalid %@ property on specifier with id %@. Could not find a method named %@ in class %@
Failed to read keychain sync status with error: %{public}@
softlink:r:path:/System/Library/Frameworks/SafariServices.framework/SafariServices
softlink:r:path:/System/Library/PrivateFrameworks/WebBookmarks.framework/WebBookmarks
SafariMediaCapturePerSitePreferenceSettingsController
SafariSavedPasswordsController
_SFEditablePasswordTableViewControllerDelegate
NSObject
PSListControllerURLHandler
_SFSettingsAuthenticationRequiring
SafariSavedCreditCardEditableTableCell
SafariSavedCreditCardExpirationDateTableCell
UIPickerViewDataSource
UIPickerViewDelegate
UIPopoverControllerDelegate
SafariSavedCreditCardDetailController
_SFCreditCardCaptureViewControllerDelegate
UINavigationControllerDelegate
SafariCNContactPickerViewController
SafariAutoFillSettingsController
CNContactPickerDelegate
DevicePINControllerDelegate
SafariCreditCardTableCell
SafariSavedCreditCardsController
SafariMicrophonePerSitePreferenceSettingsController
SafariReaderPerSitePreferenceSettingsController
SafariFavoritesFolderPickerContoller
SafariPageZoomPerSitePreferenceSettingsController
SafariRequestDesktopSitePerSitePreferenceSettingsController
SafariDownloadsTableCell
SafariDownloadsSettingsController
UIDocumentPickerDelegate
FrequentlyVisitedSitesController
SafariPerSitePreferenceSettingsController
SafariQuickWebsiteSearchSettingsController
SafariDeveloperSettingsController
SafariSettingsTaskHandler
SafariSettingsEditableTableCell
SafariSettingsController
MCProfileConnectionObserver
FrequentlyVisitedSitesBannedURLStore
NonTruncatingUsageCell
StorageSettings
SafariStorageSettingsController
UISearchControllerDelegate
UISearchResultsUpdating
SafariSettingsFeatureManager
SettingsSpinnerCell
SafariPasswordManagersController
SFCredentialProviderExtensionManagerObserver
_ASCredentialProviderExtensionConfigurationViewControllerDelegate
SafariContentBlockersSettingsController
SFContentBlockerManagerObserver
SafariSettingsListController
SafariSavedPasswordDetailController
SFSafariViewControllerDelegate
SafariCameraPerSitePreferenceSettingsController
SafariSavedAutoFillItemsPINController
SafariAutoFillListController
SafariLocationPerSitePreferenceSettingsController
SafariWebKitExperimentalFeaturesSettingsController
SafariContentBlockersPerSitePreferenceSettingsController
SafariSettingsClass
sharedController
reloadPreferences
perSitePreferenceValueDidChange
savePendingChanges
preferenceManager
preference
notifyPerSitePreferenceValueDidChange
.cxx_destruct
_userMediaPermissionController
initWithNibName:bundle:
_setUpAutoFillQuirksManager
defaultCenter
_applicationDidEnterBackground:
addObserver:selector:name:object:
_applicationDidEnterForeground:
safari_safariCoreBundle
URLForResource:withExtension:
defaultManager
safari_autoFillQuirksDownloadDirectoryURL
initWithBuiltInQuirksURL:downloadsDirectoryURL:resourceName:resourceVersion:updateDateDefaultsKey:updateInterval:
setShouldAttemptToDownloadConfiguration:
beginLoadingQuirksFromDisk
removeObserver:
dealloc
tableView
viewDidLoad
bundleForClass:
builtInPlugInsURL
URLByAppendingPathComponent:isDirectory:
fileURLWithPath:isDirectory:
initWithInjectedBundleURL:imageCacheDirectoryURL:cacheIsReadOnly:metadataType:
initWithSiteMetadataManager:autoFillQuirksManager:persona:
setDelegate:
addChildViewController:
view
addSubview:
bounds
setFrame:
backgroundColor
setBackgroundColor:
setAutoresizingMask:
didMoveToParentViewController:
viewWillAppear:
authenticationRequiresPasscode
updateUserAuthenticationState:
viewDidAppear:
_authenticateSoon
showConflictAlertForSharablePasswordIfNecessary
navigationController
topViewController
initWithFrame:
navigationItem
title
setTitle:
sharedApplication
_updateSnapshotForBackgroundApplication:
viewControllers
containsObject:
safari_stringForKey:
isEqualToString:
popRecursivelyToRootController
removeFromSuperview
_processInitialResourceDictionary
authenticateForSettings:allowAuthenticationReuse:completionHandler:
additionalViewControllersToPushHandlingURLResourceDictionary:didAuthenticate:
count
arrayByAddingObjectsFromArray:
setViewControllers:animated:
viewWillDisappear:
safari_dismissPresentedAlert
handleURL:withCompletion:
length
initWithFrame:title:style:
setHidden:
stringWithFormat:
setMessage:
showController:animate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
editablePasswordTableViewController:showContentUnavailableViewForSearchQuery:
hideContentUnavailableViewForEditablePasswordTableViewController:
editablePasswordTableViewControllerShouldShowAutoFillItem:
editablePasswordTableViewControllerShouldShowSecurityRecommendationsItem:
handleAutoFillDrillInForEditablePasswordTableViewController:
handleResourceDictionaryWhenAlreadyPresented:
authenticationPrompt
showsAuthenticationPromptAsTitle
hasBeenAuthenticated
setHasBeenAuthenticated:
canBeShownFromSuspendedState
contentScrollView
_editablePasswordTableViewController
_initialResourceDictionary
_siteMetadataManager
_autoFillQuirksManager
_contentUnavailableView
_lockedTopViewController
_passwordManagerLockedView
_lockedViewControllerTitle
_hasBeenAuthenticated
instancesRespondToSelector:
textField:shouldChangeCharactersInRange:replacementString:
specifier
propertyForKey:
detailTextLabel
value
setNeedsLayout
tertiaryLabelColor
setTextColor:
placeholder
setText:
canBecomeFirstResponder
tableCellBlueTextColor
secondaryLabelColor
stringFromDate:
refreshCellContentsWithSpecifier:
_updateDetailTextLabel
setDataSource:
initWithCalendarIdentifier:
components:fromDate:
month
selectRow:inComponent:animated:
year
date
setValue:
inputView
_pickerView
boolValue
becomeFirstResponder
isPopoverVisible
setView:
initWithContentViewController:
sizeThatFits:
setPopoverContentSize:
presentPopoverFromRect:inView:permittedArrowDirections:animated:
contentViewController
boldSystemFontOfSize:
localizedStringFromNumber:numberStyle:
_pickerTitleFont
dictionaryWithObjects:forKeys:count:
sizeWithAttributes:
setNumberStyle:
setMinimumIntegerDigits:
defaultParagraphStyle
mutableCopy
_monthNumberFormatter
numberWithInteger:
stringFromNumber:
labelColor
setAlignment:
numberWithLong:
initWithString:attributes:
selectedRowInComponent:
setCalendar:
setMonth:
setYear:
target
numberOfComponentsInPickerView:
pickerView:numberOfRowsInComponent:
pickerView:widthForComponent:
pickerView:rowHeightForComponent:
pickerView:titleForRow:forComponent:
pickerView:attributedTitleForRow:forComponent:
pickerView:viewForRow:forComponent:reusingView:
pickerView:didSelectRow:inComponent:
popoverControllerShouldDismissPopover:
popoverControllerDidDismissPopover:
popoverController:willRepositionPopoverToRect:inView:
_popoverController
init
setShowCreditCardNumber:
setAllowsUnknownCardTypes:
setDateFormat:
_specifierWithName:
setPlaceholder:
setKeyboardType:autoCaps:autoCorrection:
text
_updateDoneButtonForCardNumberString:
copy
setProperty:forKey:
stringByReplacingCharactersInRange:withString:
isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:
setSelectionRange:
postNotificationName:object:
_willHideUIMenuController:
removeObserver:name:object:
shouldSelectResponderOnAppearance
rightBarButtonItem
getObjectValue:forString:errorDescription:
setEnabled:
sharedCreditCardDataController
defaultNameForCardOfType:cardholderName:
reloadSpecifier:
_setValue:forSpecifier:
_valueOfSpecifier:
preferenceSpecifierNamed:target:set:get:detail:cell:edit:
_updateSpecifiersFromCreditCardData:
cardholderName
cardNumber
stringForObjectValue:
expirationDate
removePropertyForKey:
cardName
setSpecifier:
userInfo
_setEditing:
_updateSpecifiers
arrayWithObjects:count:
canCapture
_useCameraSpecifiers
_updateRightBarButtonItem
groupSpecifierWithName:
_deleteCreditCard:
deleteButtonSpecifierWithName:target:action:
_useCamera:
setButtonAction:
_endEditing:
initWithBarButtonSystemItem:target:action:
_edit:
setRightBarButtonItem:animated:
setHidesBackButton:animated:
_cancelEditing:
setLeftBarButtonItem:animated:
_deleteButtonSpecifiers
addSpecifiersFromArray:animated:
removeContiguousSpecifiers:animated:
numberWithBool:
table
indexPathForSelectedRow
deselectRowAtIndexPath:animated:
firstResponder
resignFirstResponder
initWithCardName:number:cardholderName:expirationDate:
replaceCreditCardData:withCard:
saveCreditCardData:
rootController
parentController
reloadSpecifiers
dismiss
alertControllerWithTitle:message:preferredStyle:
_removeCreditCardDataAndPopViewController
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
removeCreditCardData:
creditCardData
clearCreditCardData
popViewControllerAnimated:
dismissViewControllerAnimated:completion:
sharedMenuController
menuItems
action
_isActionACopyMethod:
safari_filterObjectsUsingBlock:
setMenuItems:
tableView:cellForRowAtIndexPath:
indexForIndexPath:
objectAtIndex:
_isSpecifierACreditCardInfoField:
_isThereDefaultCreditCardInfoAtIndexPath:
setSelectionStyle:
isEditing
cellForRowAtIndexPath:
safari_copyCreditCardholderName:
initWithTitle:action:
safari_copyCreditCardNumber:
safari_copyCreditCardExpirationDate:
safari_copyCreditCardName:
tableView:didSelectRowAtIndexPath:
frame
showMenuFromView:rect:
generalPasteboard
safari_setSensitiveString:
navigationController:willShowViewController:animated:
navigationController:didShowViewController:animated:
navigationControllerSupportedInterfaceOrientations:
navigationControllerPreferredInterfaceOrientationForPresentation:
navigationController:interactionControllerForAnimationController:
navigationController:animationControllerForOperation:fromViewController:toViewController:
creditCardCaptureViewController:didCaptureCreditCard:
creditCardCaptureViewControllerDidCancel:
specifiers
tableView:shouldShowMenuForRowAtIndexPath:
canPerformAction:withSender:
_creditCardData
_creditCardFormatter
_expirationDateFormatter
_cardholderSpecifier
_numberSpecifier
_expirationDateSpecifier
_descriptionSpecifier
_hasDefaultDescription
_editing
supportedInterfaceOrientations
updateUseContactInfoSpecifiers
_contactStoreChanged:
didCancelEnteringPIN
contactStoreHasMeCard:
specifierForID:
setPreferenceValue:specifier:
setOn:animated:
reloadSpecifierID:
descriptorForRequiredKeysForStyle:
_ios_meContactWithKeysToFetch:error:
stringFromContact:style:
_formDataController
shouldAutoFillFromAddressBook
setShouldAutoFillFromAddressBook:
readPreferenceValue:
meCardName
_enablingAutoFillWithoutPasscodePromptEndedWithResult:
setProperties:
showPINSheet:
settingEnabled
reloadSpecifier:animated:
_showPasscodeSetupSheetWithCompletionHandler:
_promptForEnablingAutoFillWithoutPasscodeWithTitle:message:allowAnyway:completionHandler:
shouldAutoFillFromCreditCardData
setShouldAutoFillFromCreditCardData:
_setShouldAutoFill:specifier:message:setter:
_setupMeCardPicker
dismissPopoverAnimated:
loadSpecifiersFromPlistName:target:
sharedFeatureManager
isCreditCardStorageAvailable
removeObject:
rectForRowAtIndexPath:
intValue
showMeCardPicker
cachedCellForSpecifierID:
indexPathForCell:
presentPopoverContactListInTable:index:specifier:
reloadSpecifierID:animated:
identifier
_dismissMeCardPicker
setMeContact:error:
contactPickerDidCancel:
contactPicker:didSelectContact:
contactPicker:didSelectContactProperty:
contactPicker:didSelectContacts:
contactPicker:didSelectContactProperties:
willAcceptEnteredPIN
didAcceptEnteredPIN
didAcceptEnteredPIN:
willCancelEnteringPIN
didAcceptChangedPIN
didAcceptRemovePIN
didAcceptSetPIN
devicePINController:shouldAcceptPIN:withCompletion:
devicePINController:didAcceptSetPIN:
devicePINController:didFailToSetPinWithError:
devicePINController:didAcceptChangedPIN:
devicePINController:didFailToChangePinWithError:
devicePINControllerDidDismissPINPane:
showWeakWarningAlertForController:offerUseAnyway:withCompletion:
willResignActive
useContactInfo:
myInfo:
shouldAutoFillCreditCards:
setShouldAutoFillCreditCards:specifier:
setUseContactInfo:forSpecifier:
willRotateToInterfaceOrientation:duration:
didRotateFromInterfaceOrientation:
_passcodeEntryCompletionHandler
_promptCompletionHandler
_passcodeSetupCompletionHandler
_autoFillContactController
_autoFillContactIndex
_isMeCardSet
_contactStore
_meCardPicker
layoutSubviews
titleLabel
valueLabel
iconImageView
virtualCard
setUserInteractionEnabled:
substringFromIndex:
localeWithLocaleIdentifier:
setLocale:
cellStyle
groupSpecifierWithID:
addObject:
countByEnumeratingWithState:objects:count:
virtualCardIcon
setUserInfo:
rangeOfString:
valueWithNonretainedObject:
beginUpdates
_specifiersForVirtualCardSection
lastObject
insertContiguousSpecifiers:afterSpecifier:animated:
endUpdates
getVirtualCardsWithCompletionHandler:
firstObject
urlForVirtualCard:
defaultWorkspace
openSensitiveURL:withOptions:error:
safari_privacyPreservingDescription
titleForAddItem
controllerClassForAddItem
_addItem:
setParentController:
array
addObjectsFromArray:
invalidateCreditCardData
name
compare:
sortWithOptions:usingComparator:
insertObject:atIndex:
_specifiersForAddItem
_createVirtualCardSectionSpecifiers
isMovingToParentViewController
selectRowAtIndexPath:animated:scrollPosition:
_showEditBarButtonItemAnimated:
_updateEditButton
indexPathsForSelectedRows
isKeychainSyncEnabled
detailControllerClass
setEditing:animated:
_updateDeleteButton
_deleteBarButtonItem
_cancelBarButtonItem
setRightBarButtonItems:animated:
setAllowsMultipleSelectionDuringEditing:
_specifiersToAddOrRemoveWhenTogglingEditButton
_editBarButtonItem
_deleteButtonTapped
initWithTitle:style:target:action:
_cancelEditing
_toggleEditing
_autoFillItemCount
deleteConfirmationTitle
deleteConfirmationMessage
_deleteSelectedItems
specifierAtIndex:
safari_mapObjectsUsingBlock:
removeSpecifier:animated:
deleteItemsForSpecifiers:
isSpecifierForAutoFillItem:
_viewVirtualCardInWallet:
tableView:didDeselectRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:commitEditingStyle:forRowAtIndexPath:
_virtualCards
imageNamed:inBundle:
microphoneMediaCapturePreference
sharedStore
initWithPerSitePreferencesStore:
readerPreference
_automaticReaderActivationManager
safariBookmarkCollection
_webBookmarksDidReload:
emptyGroupSpecifier
favoritesFolder
initWithBookmarkCollection:style:
folderListItemsIgnoringIdentifiers:
systemImageNamed:
bookmark
setLayoutManager:
indentationWidth
setIndentationWidth:
depth
setIndentationLevel:
favoritesFolderSelectionShouldSync
lockSync
_showBookmarksBeingSyncedAlert
setFavoritesFolder:localOnly:
_postBookmarksChangedSyncNotification
unlockSync
setupWithDictionary:
showConfirmationViewForSpecifier:
willBecomeActive
tableView:willDisplayCell:forRowAtIndexPath:
_bookmarkCollection
_cellLayoutManager
sharedManager
pageZoomPreference
initWithPerSitePreferencesStore:quirksManager:
requestDesktopSitePreference
_requestDesktopSitePreferenceManager
objectForKeyedSubscript:
itemID
rootItemIDWithProviderDomainID:
displayName
textLabel
setIcon:
reload
_downloadSettings
_updateSpecifiersWithProviderDomains:
fetchProvidersSuitableForDownloads:
providerDisplayName
indexOfSpecifier:
insertContiguousSpecifiers:atIndex:animated:
_updateSelectedFolder
providerDomainID
setObject:forKeyedSubscript:
_updateFooterWithProviderDomain:
fetchDefaultDownloadsLocationItem:
providerID
isiCloudDriveProvider
sharedLogger
didSetDownloadFolderToProviderWithIdentifier:isDefaultFolder:
setDefaultDownloadsItemForProviderDomain:completionHandler:
folderType
setDefaultDownloadsLocationItem:completionHandler:
initWithDocumentTypes:inMode:
setAllowsMultipleSelection:
_setForPickingDownloadsFolder:
_itemManager
setDirectoryURL:
fetchURLForItem:completionHandler:
specifierAtIndexPath:
properties
setNumberOfLines:
_showFolderPicker
_setDownloadsLocationForProviderDomain:
_setDefaultDownloadsLocationItem:
fetchItemForURL:completionHandler:
documentPicker:didPickDocumentsAtURLs:
documentPickerWasCancelled:
documentPicker:didPickDocumentAtURL:
_downloadsFolderGroupSpecifier
_selectOtherFolderSpecifier
_defaultDownloadsLocationSpecifier
_providerSpecifiers
_cachedDownloadsLocationItem
setValues:titles:
mainBookmarkCollection
initWithBookmarkCollection:
sharedHistory
initWithHistory:bannedURLStore:
_receivedBookmarksFolderContentChangedNotification:
frequentlyVisitedSitesList
bookmarkArray
arrayWithArray:
_clearFrequentlyVisitedSitesInBookmarksDB
clearFrequentlyVisitedSites
address
initWithTitle:address:
iconData
setIconData:
fetchedIconData
setFetchedIconData:
isInserted
deleteBookmark:
moveBookmark:toFolderWithID:
saveBookmark:
reorderBookmark:toIndex:
_postFrequentlyVisitedSitesDidChangeNotification
isLockedSync
addURLString:
deleteBookmarkInMemory:
valueForKey:
frequentlyVisitedSitesFolderBookmarkID
isEqualToNumber:
recomputeFrequentlyVisitedSitesIfNecessary
clearFrequentlyVisitedSitesFolder
bookmarksInFavoritesList
initWithCapacity:
safari_canonicalURLStringForFrequentlyVisitedSites
frequentlyVisitedSitesFolderCreatingIfNeeded:
reverseObjectEnumerator
allObjects
saveBookmarks:postNotification:
_sf_iconKeyColor
setObject:forKey:
arrayWithCapacity:
dictionaryWithCapacity:
historyItem
titleForHistoryItem:
urlString
initFrequentlyVisitedSiteWithWebBookmark:title:
initWithTitle:address:parentID:
sharedSiteMetadataManager
scheduleLowPriorityRequestForBookmarks:
_updateCachedFrequentlyVisitedSitesWithCandidates:
frequentlyVisitedSites
promoteFrequentlyVisitedSite:toFavoriteAtIndex:
banFrequentlyVisitedSite:inMemoryBookmarkChangeTrackingAvailable:
_canonicalizedFavoritesURLStringSet
saveFrequentlyVisitedSitesToBookmarksDBWithCompletion:
_existingIconsDataFromBookmarksDB
_saveFrequentlyVisitedSites:
_bookmarksNeedToSave
_cachedFrequentlyVisitedBookmarks
_ignoreBookmarksFolderChangeNotifications
_setUpSpecifiersCachesIfNeeded
_specifiersForDomains:
_editableSpecifiersForDomains:
editButtonItem
setRightBarButtonItem:
_loadDomains
_updateDeleteButtonEnabled
replaceContiguousSpecifiers:withSpecifiers:animated:
dictionary
initWithSet:
sortUsingComparator:
getAllDomainsConfiguredForPreference:usingBlock:
_setPreferenceValue:forSpecifier:
_preferenceValueForSpecifier:
_preferenceSpecifierNamed:set:get:
_displayInformation
displayOption
_preferenceValues
localizedStringForValue:inPreference:
preferenceValueForPSSpecifierValue:specifier:preference:preferenceManager:
didModifyPerSitePreferenceWithIdentifier:modificationLevel:type:method:
setValue:ofPreference:forDomain:completionHandler:
specifierValueForSpecifier:preferenceValue:preference:preferenceManager:
_didRetrieveValue:forSpecifier:
getValueOfPreference:forDomain:withTimeout:usingBlock:
_fallbackPreferenceValue
setDefaultValue:ofPreference:completionHandler:
getDefaultPreferenceValueForPreference:completionHandler:
indexPathForSpecifier:
reloadRowsAtIndexPaths:withRowAnimation:
_clearSettingsForDomains:
removePreferenceValuesForDomains:fromPreference:completionHandler:
valuesForPreference:
displayInformationForPerSitePreference:
indexOfObject:
objectAtIndexedSubscript:
_setUpConstantSpecifiers
localizedSiteSpecificSettingsTitle
_setDefaultPreferenceValue:forSpecifier:
_getDefaultPreferenceValueForSpecifier:
groupSpecifierWithID:name:
localizedAllWebsiteSettingsTitle
localizedClearAllSettingsPrompt
setPrompt:
setOkButton:
setCancelButton:
_clearAllSettings:
setConfirmationAction:
_clearSelectedDomains:
systemRedColor
setTintColor:
_defaultPreferenceValueForMultipleOptionSpecifier:
setChecked:
_otherWebsitesSpecifier
_clearAllSettingsSpecifier
loadSpecifiersFromPlistName:target:bundle:
tableView:canEditRowAtIndexPath:
_configuredWebsites
_websiteSpecifiers
_editableSpecifiers
_didSetUpSpecifierCaches
_hadConfiguredWebsites
_cachedWebsiteSectionHeaderSpecifier
_cachedOtherWebsitesSpecifier
_cachedClearAllSettingsSpecifier
_cachedOtherWebsitesMultipleChoiceSpecifiers
_cachedOtherWebsitesSectionSpecifiers
_cachedClearAllSettingsSectionSpecifiers
_specifierToPreferenceValueCache
_cachedPreferenceValues
_cachedFallbackPreferenceValue
_cachedDisplayInformation
_cachedCancelBarButtonItem
_cachedDeleteBarButtonItem
beginLoadingFromDiskIfNeeded
_quickWebsiteSearchControllerDidFinishLoading:
setAllowsSelection:
noteProvidersAreStale
_setUseSiteSpecificSearch:specifier:
_hasSearchProviders
quickWebsiteSearchHosts
_deleteItemsForSpecifiers:
_deleteSelectedItems:
removeProvidersWithHosts:
postDistributedNotificationNamed:
tableView:willSelectRowAtIndexPath:
_setRemoteInspectorEnabled:
updateRestrictionsForSpecifiers:
sharedConnection
isBoolSettingLockedDownByRestrictions:
_sf_safariDefaults
_sf_javaScriptEnabled
initWithSuiteName:
boolForKey:
_setRemoteAutomationEnabled:
setRemoteAutomationEnabled:specifier:
setBool:forKey:
_automationController
allowsRemoteAutomation
isJavaScriptRestricted:
isJavaScriptEnabled:
remoteInspectorEnabled:
setRemoteInspectorEnabled:specifier:
_remoteAutomationEnabled:
endBackgroundTask:
beginBackgroundTaskWithName:expirationHandler:
numberWithUnsignedInteger:
setStartBackgroundTaskAssertionBlock:
unsignedIntegerValue
setFinishBackgroundTaskAssertionBlock:
sharedHandler
stringByAppendingPathComponent:
_web_createDirectoryAtPathWithIntermediateDirectories:attributes:
stringByResolvingSymlinksInPath
userCachesDirectory
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
initWithStyle:reuseIdentifier:specifier:
textField
_textFieldChanged:
addTarget:action:forControlEvents:
removeTarget:action:forControlEvents:
safari_sharePassword:
cellType
setString:
setDisplaySecureTextUsingPlainText:
_sf_usesLeftToRightLayout
setTextAlignment:
font
setFont:
copy:
_sf_registerSafariDefaults
addObserver:
_bookmarksDidReload:
loadSystemLanguageProperties
searchEngineNames
defaultSearchEngineName
safariDefaultsValueForKey:
setSafariDefaultsValue:forKey:
synchronizeSafariDefaults
indexOfSpecifierWithID:
_specifiersForPerSitePreferences
indexSetWithIndexesInRange:
insertObjects:atIndexes:
_specifierForClosingTabsAutomatically
_downloadsFolderTitle
_updateDownloadsFolderTitle
fileURLWithPathComponents:
bundleWithURL:
principalClass
setSearchEngineInSpecifiers:
initWithBundleIdentifier:
specifiersForPolicyOptions:force:
providerDomainForItem:error:
sharedWebFilterSettings
isWebFilterWhiteListOnlyModeEnabled
localizedTitle
domain
code
beginMatchingExtensionsWithAttributes:completion:
determineIfPrivateBrowsingIsAvailableWithCompletionHandler:
viewDidDisappear:
endMatchingExtensions:
suspend
_sf_warnAboutFraudulentWebsites
_sf_safeBrowsingPreferencesPlistPath
_synchronizeNanoUserDefaults
_web_removeFileOnlyAtPath:
copyItemAtPath:toPath:error:
setWithObjects:
synchronizeUserDefaultsDomain:keys:container:
mainScreen
isTabBarAvailableForScreenSize:
_enabledContentBlockerCount
_setValueForClosingTabsAutomatically:
_valueForClosingTabsAutomatically
settingsTitleForAutomaticTabClosingInterval:
automaticTabClosingInterval
setAutomaticTabClosingInterval:
isOfflineReadingListAvailable
isPrivateBrowsingAvailable
_isCloudHistoryEnabled
safariClearHistoryAndData
deleteSnapshotsForApplicationIdentifier:
invalidate
initWithPathToLegacySearchesFile:
clearRecentSearches
taskWithType:
enqueueTask:
sharedBrowserSavedState
clearAllSavedStatesAndCloseDatabase
deleteAllData
removeAllURLStrings
clear
defaultSearchableIndex
deleteAllSearchableItemsWithProtectionClass:forBundleID:options:completionHandler:
distantPast
removeSubscriptionsAddedAfterDate:
deleteAllUsageHistory
clearStoreSynchronously
clearSavedSettings
removeAllTemporaryPermissions
standardStore
closeDatabase
clearAllStatisticsWithCompletionHandler:
emptyProviderCaches
initAsReadonly:
removeDownloadsStartedAfterDate:
downloadsRootURL
removeItemAtURL:error:
getDownloadsWithCompletionHandler:
initWithBrowserDefaults:
clearAllLegacyTLSHosts
clearAllLocalAuthenticatorCredentials
sharedPolicyDecider
clearSafariCache
isRunningInStoreDemoMode
isAutoFillAvailable
isCloudHistorySyncAvailable
aa_primaryAppleAccount
isEnabledForDataclass:
safari_safariApplicationPlatformBundleIdentifier
_sf_javaScriptCanOpenWindowsAutomatically
numberWithInt:
sharedHTTPCookieStorage
webui_safariCookieAcceptPolicyEnumValue
valueRestrictionForFeature:
floatValue
webui_trackerProtectionEnabled
_setSafariAcceptCookiesForPolicy:
webui_applySafariCookieAcceptPolicy
setCookieStoragePolicy:andNotifySpecifierWithID:
_updateBlockAllNewWebsiteDataPolicyToBlockAllWebsiteData:
_confirmBlockAllCookies:
_cancelBlockAllCookiesPrompt:
setConfirmationCancelAction:
showConfirmationViewForSpecifier:useAlert:
numberWithFloat:
setValue:forSetting:
extensionIsEnabled:
_presentPrivacyFlowWithBundleIdentifier:
presenterForPrivacySplashWithIdentifier:
setPresentingViewController:
present
bundleWithIdentifier:
privacyFlow
localizedButtonTitle
areSiriSuggestionsSupported
accessoryView
setOn:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
setIconsInTabEnabled:forSpecifier:
isFavoritesFolderRestricted:
favoritesFolderTitle
isSafariFraudWarningRestricted:
isSafariFraudWarningEnabled:
safariFraudWarningsToggled:forSpecifier:
_copyFile:toFile:
safariToggleHideFrequentlyVisitedSites:forSpecifier:
isTabBarAvailable:
safariToggleApplePayDisclosureAllowed:forSpecifier:
_valueForAutomaticallyDownloadReadingListItems
_setSafariAutomaticallyDownloadReadingListItems:forSpecifier:
isOfflineReadingListAvailable:
isClearHistoryRestricted:
showClearHistoryAndDataConfirmation:
isAutoFillAvailable:
isAutoFillRestricted:
siteSpecificSearchSettingsEnabledString
isBlockPopUpsRestricted:
isBlockPopUpsEnabled:
isTrackerProtectionRestricted:
trackerProtectionEnabled
safariToggleTrackerProtection:forSpecifier:
isBlockAllNewWebsiteDataRestricted:
blockAllNewWebsiteDataEnabled
safariToggleBlockAllNewWebsiteData:forSpecifier:
isContentBlockersAvailable:
enabledContentBlockerCountString
showPrivacyExplanationSheet:
showSearchExplanationSheet:
_profileConnection
_systemPolicyForApp
_featureManager
_contentBlockerExtensions
_contentBlockerMatchingContext
_recentlyClearedHistoryAndWebSiteData
_defaultDownloadsFolderTitle
_downloadsSettingsSpecifier
initWithStoreURL:history:
UTF8String
setAdjustsFontSizeToFitWidth:
contentView
scale
numberWithUnsignedLongLong:
arrayWithObject:
setValues:
objectForKey:
unsignedLongLongValue
setUsage:
diskUsage
initWithSearchResultsController:
setSearchResultsUpdater:
setObscuresBackgroundDuringPresentation:
searchBar
setAutocapitalizationType:
setAutocorrectionType:
setKeyboardType:
setSearchController:
setHidesSearchBarWhenScrolling:
setEdgeToEdgeCells:
setDefinesPresentationContext:
setKeyboardDismissMode:
_showDeleteAllOriginsAlert
_updateToolbarItems
_createDomainSpecifiers
setToolbarHidden:animated:
_getSpecifierDiskUsage:
_deleteOriginData:
dictionaryWithObject:forKey:
usage
_addWebsiteDataRecord:toDictionary:
getSafariWebDataUsageWithCompletion:
allValues
_totalUsageString
setSize:
removeSpecifierID:animated:
sortedArrayUsingComparator:
_specifiersForDomainList
_updateTotalUsageSpecifier
subarrayWithRange:
insertContiguousSpecifiers:atEndOfGroup:animated:
_addDomainSpecifiers
_addWebSecurityDomainsToDictionary:withCompletion:
values
clearTabsForCurrentDevice
_web_visibleItemsInDirectoryAtPath:
hasPrefix:
enumerateObjectsUsingBlock:
clearAllWebsitesData
taskForDeletingIndividualWebsiteDataWithRecord:
removeObjectForKey:
caseInsensitiveCompare:
showAllDomainSpecifiers
_specifiersForLoadingSpinner
isActive
_specifiersForSearchResults
_deleteAllOrigins
isToolbarHidden
toolbar
_setContentInset:
setEditable:
setCellEnabled:
_setEnabled:animated:
editable
setToolbarItems:animated:
willPresentSearchController:
didPresentSearchController:
willDismissSearchController:
didDismissSearchController:
presentSearchController:
updateSearchResultsForSearchController:
updateSearchResultsForSearchController:selectingSearchSuggestion:
_searchController
_searchPattern
_hasLoadedDomains
_isShowingAllDomains
_editToolbarItem
_doneToolbarItem
_totalUsageSpecifier
_domainSpecifiers
_sortedDomains
_cancelDomainSpecifierUpdate
initWithStyle:reuseIdentifier:
initWithActivityIndicatorStyle:
setColor:
startAnimating
sizeToFit
clearColor
_spinner
_spinnerLabel
_setValue:forPasswordAutoFillSpecifier:
_valueOfPasswordAutoFillSpecifier:
keychainSyncEnabled
setName:
_keychainAutoFillEnabled
ss_imageNamed:
extensions
displayNameForExtension:
localizedCompare:
_plugIn
uuid
pluginKitProxyForUUID:
_iconForResourceProxy:format:
_valueOfThirdPartyPasswordManagerSpecifier:
_setKeychainAutoFillEnabled:
_setValue:forThirdPartyPasswordManagerSpecifier:
setBoolValue:forSetting:
effectiveBoolValueForSetting:
setShouldAutoFillPasswords:
shouldAutoFillPasswords
section
primaryExtension
setExtension:isEnabled:
shouldShowConfigurationUIForEnablingExtension:
initWithExtension:
beginConfiguringExtension
containingUrl
applicationProxyForBundleURL:
bundleIdentifier
removeCredentialIdentityStoreForApplication:completion:
credentialProviderExtensionManagerExtensionListDidChange:
credentialProviderExtensionConfigurationViewControllerDidFinish:completion:
_extensionConfigurationController
_passwordAutoFillSpecifier
scheduledTimerWithTimeInterval:repeats:block:
isWebFilterEnabled
_showContentUnavailableView
_hideContentUnavailableView
contentBlockerManagerExtensionListDidChange:
_reloadSpecifiersTimer
prepareHandlingURLForSpecifierID:resourceDictionary:animatePush:
controllerForSpecifier:
pushSettingsAfterAuthentication:onBehalfOfViewController:resourceDictionary:completionHandler:
synchronize
_evaluateBoolSelectorWithPropertyKey:specifier:defaultValue:
currentDevice
userInterfaceIdiom
reloadSpecifierAtIndex:animated:
userInterfaceIdiomIsPhone:
userInterfaceIdiomIsPad:
_updateDoneButtonForWebsite:user:password:
_specifierWithName:placeholder:keyboardType:textChangeHandler:
setCellType:
isAirDropPasswordsAvailable
_sharePassword:fromCell:
_refreshSpecifiers
highLevelDomain
safari_bestURLForUserTypedString
safari_wellKnownChangePasswordURL
_setPerformingAccountSecurityUpgrade:
initWithURL:configuration:
setDismissButtonStyle:
setModalPresentationStyle:
reportWeakPasswordWarningEvent:
userIsNeverSaveMarker
initWithObjects:
_warningFooterText
_changePassword:
sites
userVisibleHighLevelDomain
userVisibleSites
localizedStringWithFormat:
userShouldBeShownPassiveWarning
userFeedbackString
componentsJoinedByString:
_sharePasswordMenuItem
_isShowingWeakOrReusedPassword
safari_copyPassword:
safari_copyUserName:
savedPasswords
user
password
containsSpecifier:
insertSpecifier:afterSpecifier:animated:
canChangeSavedPassword:toUser:password:
safari_canSaveUser:password:forUserTypedSite:
_savedUserIsEmpty
_savedPasswordIsEmpty
sharedAutoFillWhiteList
allowsURL:
safari_saveUser:password:forUserTypedSite:
changeSavedPassword:toUser:password:
_isSpecifierForAutoFillItem:
numberOfRowsInSection:
schedulePasswordIconsCleanup
removeSite:fromPassword:withCompletion:
protectionSpaces
initWithUsername:password:displayName:highLevelDomain:protectionSpaces:
urlRepresentationForAirDrop
initWithActivityItems:applicationActivities:
setIncludedActivityTypes:
setExcludedActivityCategories:
popoverPresentationController
setPermittedArrowDirections:
setSourceRect:
setSourceView:
userDidSharePasswordWithOutcome:
setCompletionWithItemsHandler:
safariViewController:activityItemsForURL:title:
safariViewController:excludedActivityTypesForURL:title:
safariViewControllerDidFinish:
safariViewController:didCompleteInitialLoad:
safariViewController:initialLoadDidRedirectToURL:
safariViewControllerWillOpenInBrowser:
tableView:shouldHighlightRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
showsChangePasswordControllerOnAppearance
setShowsChangePasswordControllerOnAppearance:
_websiteSpecifier
_usernameSpecifier
_passwordSpecifier
_changePasswordButtonSpecifier
_changePasswordSafariViewController
_savedPassword
_reusedSavedPasswords
_showsChangePasswordControllerOnAppearance
cameraMediaCapturePreference
setPane:
stringsBundle
setContext:
aa_altDSID
setAltDSID:
initWithContextData:
fetchUserControllableViewsSyncingEnabled:
geolocationPreference
_geolocationPermissionManager
_experimentalFeatures
setExperimentalFeature:specifier:
getExperimentalFeature:
safari_firstObjectPassingTest:
_featureWithName:
defaultValue
contentBlockersPreference
_contentBlockersPreferenceManager
localizedStringForKey:value:table:
@16@0:8
v16@0:8
@"_SFUserMediaPermissionController"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v24@0:8@16
v32@0:8@"_SFEditablePasswordTableViewController"16@"NSString"24
v24@0:8@"_SFEditablePasswordTableViewController"16
B24@0:8@"_SFEditablePasswordTableViewController"16
v24@0:8@"NSDictionary"16
v20@0:8B16
@28@0:8@16B24
@"NSArray"28@0:8@"NSDictionary"16B24
@32@0:8@16@24
v32@0:8@16@?24
@"_SFEditablePasswordTableViewController"
@"NSDictionary"
@"_SFSiteMetadataManager"
@"WBSAutoFillQuirksManager"
@"_UIContentUnavailableView"
@"UIViewController"
@"_SFPasswordManagerLockedView"
@"NSString"
B48@0:8@16{_NSRange=QQ}24@40
q24@0:8@16
q32@0:8@16q24
q24@0:8@"UIPickerView"16
q32@0:8@"UIPickerView"16q24
d32@0:8@16q24
@40@0:8@16q24q32
@48@0:8@16q24q32@40
v40@0:8@16q24q32
d32@0:8@"UIPickerView"16q24
@"NSString"40@0:8@"UIPickerView"16q24q32
@"NSAttributedString"40@0:8@"UIPickerView"16q24q32
@"UIView"48@0:8@"UIPickerView"16q24q32@"UIView"40
v40@0:8@"UIPickerView"16q24q32
v40@0:8@16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
B24@0:8@"UIPopoverController"16
v24@0:8@"UIPopoverController"16
v40@0:8@"UIPopoverController"16N^{CGRect={CGPoint=dd}{CGSize=dd}}24N^@32
@"UIPickerView"
@"UIPopoverController"
@"NSNumberFormatter"
v36@0:8@16@24B32
Q24@0:8@16
@48@0:8@16q24@32@40
v36@0:8@"UINavigationController"16@"UIViewController"24B32
Q24@0:8@"UINavigationController"16
q24@0:8@"UINavigationController"16
@"<UIViewControllerInteractiveTransitioning>"32@0:8@"UINavigationController"16@"<UIViewControllerAnimatedTransitioning>"24
@"<UIViewControllerAnimatedTransitioning>"48@0:8@"UINavigationController"16q24@"UIViewController"32@"UIViewController"40
v32@0:8@"_SFCreditCardCaptureViewController"16@"WBSCreditCardData"24
v24@0:8@"_SFCreditCardCaptureViewController"16
@24@0:8@16
B32@0:8@16@24
B32@0:8:16@24
@"WBSCreditCardData"
@"WBSCreditCardFormatter"
@"NSDateFormatter"
@"PSTextFieldSpecifier"
@"NSArray"
v24@0:8@"CNContactPickerViewController"16
v32@0:8@"CNContactPickerViewController"16@"CNContact"24
v32@0:8@"CNContactPickerViewController"16@"CNContactProperty"24
v32@0:8@"CNContactPickerViewController"16@"NSArray"24
v40@0:8@16@24@?32
v36@0:8@16B24@?28
v24@0:8@"NSString"16
v40@0:8@"DevicePINController"16@"NSString"24@?<v@?B>32
v32@0:8@"DevicePINController"16@"NSString"24
v32@0:8@"DevicePINController"16@"NSError"24
v24@0:8@"DevicePINController"16
v36@0:8@"UIViewController"16B24@?<v@?B>28
v44@0:8@16@24B32@?36
v24@0:8q16
v24@0:8@?16
v44@0:8B16@20@28@?36
v40@0:8@16@24@32
v32@0:8q16d24
@"NSIndexPath"
@"CNContactStore"
@"CNContactPickerViewController"
q16@0:8
v24@0:8B16B20
q32@0:8@16@24
v40@0:8@16q24@32
@"UIBarButtonItem"
@"WBSAutomaticReaderActivationManager"
@"WebBookmarkCollection"
@"_SFFolderPickerTableViewCellLayoutManager"
@"_SFRequestDesktopSitePreferenceManager"
v32@0:8@"UIDocumentPickerViewController"16@"NSArray"24
v24@0:8@"UIDocumentPickerViewController"16
v32@0:8@"UIDocumentPickerViewController"16@"NSURL"24
@"DOCDownloadSettings"
@"FPItemManager"
@"PSSpecifier"
@"NSMutableArray"
@"FPItem"
v32@0:8@16Q24
v28@0:8@16B24
@40@0:8@16@24@32
@40@0:8@16:24:32
@"NSOrderedSet"
@"PSConfirmationSpecifier"
@"NSMutableDictionary"
@"_SFPerSitePreferenceDisplayInformation"
@40@0:8q16@24@32
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v32@0:8Q16@24
v24@0:8Q16
@"MCProfileConnection"
@"PSSystemPolicyForApp"
@"SafariSettingsFeatureManager"
v24@0:8@"UISearchController"16
v32@0:8@"UISearchController"16@"<UISearchSuggestion>"24
v24@0:8d16
@"UISearchController"
@32@0:8q16@24
@"UIActivityIndicatorView"
@"UILabel"
v24@0:8@"SFCredentialProviderExtensionManager"16
v32@0:8@"_ASCredentialProviderExtensionConfigurationViewController"16@?<v@?>24
@"_ASCredentialProviderExtensionConfigurationViewController"
v24@0:8@"SFContentBlockerManager"16
@"NSTimer"
B40@0:8@16@24^B32
v24@0:8^{__CFString=}16
B36@0:8@16@24B32
v28@0:8q16B24
@48@0:8@16@24q32@?40
@"NSArray"40@0:8@"SFSafariViewController"16@"NSURL"24@"NSString"32
v24@0:8@"SFSafariViewController"16
v28@0:8@"SFSafariViewController"16B24
v32@0:8@"SFSafariViewController"16@"NSURL"24
B48@0:8@16:24@32@40
v48@0:8@16:24@32@40
@"SFSafariViewController"
@"WBSSavedPassword"
@"_SFGeolocationPermissionManager"
@"_SFContentBlockersPreferenceManager"
