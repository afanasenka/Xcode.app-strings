%@ %@
value
twoWaySync
timestamp
-[NPSUserDefaultsMsgKey writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-291/nanoprefsyncd-shared/Protocols/NPSUserDefaultsMsgKey.m
nil != self->_key
T@"NSString",&,N,V_key
hasValue
TB,R,N
T@"NSData",&,N,V_value
hasTwoWaySync
TB,N
TB,N,V_twoWaySync
hasTimestamp
Td,N,V_timestamp
kind
feature
setting
restriction
userSettingsAndRestrictions
hasKind
T@"NSString",&,N,V_kind
hasFeature
T@"NSString",&,N,V_feature
hasSetting
T@"NSData",&,N,V_setting
hasRestriction
T@"NSData",&,N,V_restriction
hasUserSettingsAndRestrictions
T@"NSData",&,N,V_userSettingsAndRestrictions
container
domain
-[NPSUserDefaultsBackupMsg writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-291/nanoprefsyncd-shared/Protocols/NPSUserDefaultsBackupMsg.m
nil != self->_domain
hasContainer
T@"NSString",&,N,V_container
T@"NSString",&,N,V_domain
keys
T@"NSMutableArray",&,N,V_keys
com.apple.nanoprefsync
com.apple.private.alloy.preferencessync
com.apple.private.alloy.preferencessync.pairedsync
type
content
com.apple.pairedsync
UserDefaults/
ManagedConfiguration/
UserDefaultsBackup/
FileBackup/
local-device-build-version
last-active-date
paired-device-build-version
mc-data-cache
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.nanoprefsyncd.launchtransaction
com.apple.nanoprefsync.workQueue
Progress Tracker: %@
com.apple.nano
@"NSString"8@?0
v8@?0
com.apple.pairedsync.nanoprefsyncdfirst
com.apple.pairedsync.nanoprefsyncd
com.apple.private.alloy.preferencessync-idswake
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.private.alloy.preferencessync.pairedsync-idswake
com.apple.notifyd.matching
Notification
com.apple.Preferences.ChangedRestrictionsEnabledStateNotification
com.apple.NanoTimeKit
notificationsIndicatorEnabled
customMonogram
v16@?0@"NSString"8
com.apple.nanoprefsyncd.pairedsynctransaction
com.apple.NanoPreferencesSync
com.apple.nanoprefsyncd.groupsynctransaction
v48@?0@"NSString"8@"WhitelistedUserDefaultsDomain"16@"NSString"24@"WhitelistedUserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"WhitelistedUserDefaultsKey"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSString"8@"WhitelistedUserDefaultsDomain"16^B24
v48@?0@"NSString"8@"UserDefaultsDomain"16@"NSString"24@"UserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"UserDefaultsDomain"16^B24
com.apple.nanoprefsyncd.firstlaunchtransaction
B24@?0@"NSString"8@"UserDefaultsKey"16
v32@?0@"NSString"8@"NSMutableSet"16^B24
-[NPSServer checkActiveDeviceChangedVersion]
MessageSendTimeout
PurgeRetryDelay
36A0EB23-E045-4E99-9D71-8FB9A853ADA7
NPS should not try syncing when there is no active device
com.apple.nanoprefsyncd.idstransaction
ids-reset-timeout-transaction
v28@?0@"NSString"8@"NSSet"16B24
v32@?0@"NSString"8@"NSString"16@"NSSet"24
com.apple.nanoprefsyncd.resourcetransaction
User defaults Msg: GUID: %@
<n/a>
Domain: %@
Keys: [
 %@,
Container: %@
Domain: %@
Keys: [
not-nil
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NPSUserDefaultsBackupMsgKey"8Q16^B24
v24@?0Q8@"NSData"16
com.apple.nanoprefsyncd.restorremotesettingsfrombackup
@"NSError"24@?0@"NSString"8@"NSString"16
v32@?0@"NSURL"8@"NSURL"16^B24
-[NPSServer sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:]
v32@?0@"NSString"8@16^B24
%@|%@
F4DCA831-3D30-45BC-BDCC-E99D0E482D94
 | %@
-[NPSServer applyStashedSettingsSyncMessages]
v44@?0@"NSString"8@"NSString"16@"NSData"24B32d36
com.apple.springboard
SBParentalControlsCapabilities
SBParentalControlsEnabled
-[NPSServer debounceOnWorkerQueueWithblock:]_block_invoke
debounceOnWorkerQueueWithblock
-[NPSServer synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizeuserdefaultsdomain
-[NPSServer synchronizeNanoDomain:keys:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizenanodomaindomain
com.apple.mobile.keybagd.first_unlock
enabling
disabling
fileBackupManager
T@"NPSFileBackupManager",R,N,V_fileBackupManager
pairedSyncCoordinatorFirstSync
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorFirstSync
pairedSyncCoordinatorRemainderSync
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorRemainderSync
activeSyncSession
T@"PSYServiceSyncSession",&,N,V_activeSyncSession
totalDataToSyncInBytes
TQ,N,V_totalDataToSyncInBytes
remainingDataToSyncInBytes
TQ,N,V_remainingDataToSyncInBytes
syncSessionProgressDictionary
T@"NSMutableDictionary",R,N,V_syncSessionProgressDictionary
syncTransaction
T@"NSObject<OS_os_transaction>",&,N,V_syncTransaction
syncProgressTracker
T@"NPProgressTracker",&,N,V_syncProgressTracker
dumper
T@"NPSOSLogStateProvider",&,N,V_dumper
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
settings
T@"NPSSettings",&,N,V_settings
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
idsService
T@"IDSService",&,N,V_idsService
idsServiceSyncState
T@"IDSService",&,N,V_idsServiceSyncState
deviceRegistry
T@"NPSDeviceRegistry",&,N,V_deviceRegistry
database
T@"NPSDatabase",&,N,V_database
purgeTimer
T@"NSObject<OS_dispatch_source>",&,N,V_purgeTimer
allowedGroups
T@"NSDictionary",&,N,V_allowedGroups
currentlyUsedDomain
T@"NSString",&,N,V_currentlyUsedDomain
activeDeviceID
T@"NSUUID",&,N,V_activeDeviceID
mcDebounceSource
T@"NSObject<OS_dispatch_source>",&,N,V_mcDebounceSource
NBExclusionListManager
Unable to find class %s
/System/Library/PrivateFrameworks/NanoBackup.framework/NanoBackup
/System/Library/PrivateFrameworks/NanoBackup.framework/Contents/MacOS/NanoBackup
<%@ %p; uuid = (%@); url = (%@)>
uuid
supportsSecureCoding
TB,R
T@"NSUUID",&,N,V_uuid
T@"NSURL",&,N,V_url
-[NPSUserDefaultsMsg writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-291/nanoprefsyncd-shared/Protocols/NPSUserDefaultsMsg.m
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
Domain <%@>
<key: %@; Value: %@>
fileURL
fileData
hasFileURL
T@"NSData",&,N,V_fileURL
hasFileData
T@"NSData",&,N,V_fileData
(nil)
BEGIN EXCLUSIVE TRANSACTION
ROLLBACK TRANSACTION
COMMIT TRANSACTION
meta
SELECT COUNT(*) FROM meta
Unknown Error
PRAGMA journal_mode=WAL;
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp REAL)
CREATE TABLE IF NOT EXISTS sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(domain, key))
CREATE TABLE IF NOT EXISTS backup_msgs (container TEXT NOT NULL DEFAULT (''), domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(container, domain, key))
CREATE TABLE IF NOT EXISTS msgs_type (messageID TEXT NOT NULL PRIMARY KEY, type INTEGER NOT NULL)
CREATE INDEX sync_msgs_messageID_idx ON sync_msgs (messageID ASC)
CREATE INDEX backup_msgs_messageID_idx ON backup_msgs (messageID ASC)
INSERT INTO meta (tstamp) VALUES (datetime('now'))
CREATE TABLE IF NOT EXISTS file_backup_msgs (path TEXT NOT NULL, messageID TEXT, PRIMARY KEY(path))
CREATE INDEX file_backup_msgs_messageID_idx ON file_backup_msgs (messageID ASC)
CREATE TABLE IF NOT EXISTS stashed_sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, data BLOB, two_way_sync INTEGER, timestamp DOUBLE, PRIMARY KEY(domain, key))
ALTER TABLE sync_msgs ADD COLUMN cloudEnabled INTEGER
SELECT type FROM msgs_type WHERE messageID=?
INSERT INTO msgs_type (messageID, type) VALUES (?, ?)
INSERT OR REPLACE INTO sync_msgs (domain, key, messageID, cloudEnabled) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO backup_msgs (container, domain, key, messageID) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO file_backup_msgs (path, messageID) VALUES (?, ?)
DELETE FROM sync_msgs WHERE domain=? AND key=? AND cloudEnabled=?
DELETE FROM backup_msgs WHERE container=? AND domain=? AND key=?
DELETE FROM file_backup_msgs WHERE path=?
DELETE FROM sync_msgs WHERE messageID=?
DELETE FROM backup_msgs WHERE messageID=?
DELETE FROM file_backup_msgs WHERE messageID=?
DELETE FROM msgs_type WHERE messageID=?
UPDATE sync_msgs SET messageID=NULL WHERE messageID=?
UPDATE backup_msgs SET messageID=NULL WHERE messageID=?
UPDATE file_backup_msgs SET messageID=NULL WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID=?
SELECT container, domain, key FROM backup_msgs WHERE messageID=?
SELECT path FROM file_backup_msgs WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID IS NULL
SELECT container, domain, key FROM backup_msgs WHERE messageID IS NULL
SELECT path FROM file_backup_msgs WHERE messageID IS NULL
INSERT OR REPLACE INTO stashed_sync_msgs (domain, key, data) VALUES (?, ?, ?)
SELECT domain, key, data, two_way_sync, timestamp FROM stashed_sync_msgs
DELETE FROM stashed_sync_msgs
DELETE FROM msgs_type
DELETE FROM sync_msgs
DELETE FROM backup_msgs
DELETE FROM file_backup_msgs
path
T@"NSString",&,N,V_path
T^{sqlite3=},N,V_db
getMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_getMessageTypeForMessageID
setMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_setMessageTypeForMessageID
setMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setMessageIDForSettingSync
setMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setMessageIDForSettingBackup
setMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setMessageIDForFileBackup
untrackSettingsSyncMessage
T^{sqlite3_stmt=},N,V_untrackSettingsSyncMessage
untrackSettingsBackupMessage
T^{sqlite3_stmt=},N,V_untrackSettingsBackupMessage
untrackFileBackupMessage
T^{sqlite3_stmt=},N,V_untrackFileBackupMessage
untrackSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsSyncForMessageID
untrackSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsBackupForMessageID
untrackFileBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackFileBackupForMessageID
removeMessageFromMessageTypeTable
T^{sqlite3_stmt=},N,V_removeMessageFromMessageTypeTable
setNullMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingSync
setNullMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingBackup
setNullMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForFileBackup
getSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncForMessageID
getSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupForMessageID
getFileBackupForMessageID
T^{sqlite3_stmt=},N,V_getFileBackupForMessageID
getSettingsSyncWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncWithNullMessageID
getSettingsBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupWithNullMessageID
getFileBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getFileBackupWithNullMessageID
stashSettingsSyncData
T^{sqlite3_stmt=},N,V_stashSettingsSyncData
getStashedSettingSyncData
T^{sqlite3_stmt=},N,V_getStashedSettingSyncData
flushStashedSettingSyncData
T^{sqlite3_stmt=},N,V_flushStashedSettingSyncData
purgeMessageTypeTable
T^{sqlite3_stmt=},N,V_purgeMessageTypeTable
purgeSettingsSyncTable
T^{sqlite3_stmt=},N,V_purgeSettingsSyncTable
purgeSettingsBackupTable
T^{sqlite3_stmt=},N,V_purgeSettingsBackupTable
purgeFileBackupTable
T^{sqlite3_stmt=},N,V_purgeFileBackupTable
version
TQ,R,N,V_version
compressedPath
T@"NSURL",R,N,V_compressedPath
kNPProgressTrackerDomain
kNPProgressTrackerLastBootedKey
kNPProgressTrackerStateKey
kNPProgressTrackerLastProcessingDomainKey
kNPProgressTrackerOversizedDomainsKey
kNPProgressTrackerStateStarted
kNPProgressTrackerStateCompleted
kNPProgressTrackerDomainsKey
start
metadata
crashedDuringLastRun
TB,V_crashedDuringLastRun
problematicOperationList
T@"NSMutableArray",&,V_problematicOperationList
System/Library/PreferencesSyncBundles
NPSDomains
NPSAction
NPSDefaultsDomain
NPSDefaultsKeys
NPSDefaultsKeyPrefixes
NPSChangeNotificationName
NPSContainer
NPSAppGroupContainer
NPSCloudEnabled
NPSSyncGroups
NPSPerGizmo
NPSMirrorableBBDomain
NPSMirrorableDomain
NPSMirrorableKey
OneWaySync
TwoWaySync
Whitelist
Local
Tinker
First
<%@: %p key = "%@" twoWaySync = %d
 isPerGizmoSetting = %d
%@%@>
BPSNanoBulletinShowsCustomSettings
isPrefix
TB,N,V_isPrefix
appGroupContainer
T@"NSString",&,N,V_appGroupContainer
isCloudEnabled
TB,N,V_isCloudEnabled
syncGroups
T@"NSSet",&,N,V_syncGroups
isPerGizmoSetting
TB,N,V_isPerGizmoSetting
mirrorableBBDomain
T@"NSString",&,N,V_mirrorableBBDomain
mirrorableDomain
T@"NSString",&,N,V_mirrorableDomain
mirrorableKey
T@"NSString",&,N,V_mirrorableKey
<%@: %p domain = "%@" _keys = "%@"
keyArrays
T@"NSMutableDictionary",&,N,V_keyArrays
keyPrefixArrays
T@"NSMutableDictionary",&,N,V_keyPrefixArrays
<%@: %p key = "%@" notificationNames = "%@" twoWaySync = %d
notificationNames
T@"NSMutableSet",&,N,V_notificationNames
T@"NSMutableDictionary",&,N,V_keys
keyPrefixes
T@"NSMutableDictionary",&,N,V_keyPrefixes
com.apple.Carousel
DisableWristDetection
NotificationPrivacy
mirrorDNDState
workoutDND
dndState
dndStateDate
dndEffectiveOverrides
dndPrivilegedSenderTypes
self ENDSWITH '.bundle'
B44@?0@"NSBundle"8@"NSString"16B24@"<NSObject>"28#36
Key %@ not found when expected.
Item in container for key %@ expected to be of type %@.
Key %@ expected to be of type %@.
v28@?0@"NSString"8B16@"NSString"20
com.apple.bulletinboard.apps
syncedUserDefaults
T@"NSMutableDictionary",&,N,V_syncedUserDefaults
whitelisedUserDefaults
T@"NSMutableDictionary",&,N,V_whitelisedUserDefaults
SIMULATOR_ROOT
-[NPSUserDefaultsBackupMsgKey writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-291/nanoprefsyncd-shared/Protocols/NPSUserDefaultsBackupMsgKey.m
NanoPreferencesSync
Cache/
Backup/UserDefaults/
Backup/Files/
index
database.db
-[NPSDeviceRegistry startMonitoringPairingEventsWithQueue:]
/Library/Caches/com.apple.xbs/Sources/NanoPreferencesSyncDaemon_Sim/NanoPreferencesSync-291/nanoprefsyncd-shared/NPSDeviceRegistry.m
queue
hasCheckedInWithNanoRegistry
TB,N,V_hasCheckedInWithNanoRegistry
activeDevice
T@"NRDevice",&,N,V_activeDevice
alreadyExistingAssertion
T@"NRActiveDeviceAssertion",W,N,V_alreadyExistingAssertion
pairingDataStore
T@"NSString",&,N,V_pairingDataStore
domainAccessor
T@"NPSDomainAccessor",&,N,V_domainAccessor
perGizmoCacheDirectoryPath
T@"NSString",&,N,V_perGizmoCacheDirectoryPath
globalCacheDirectoryPath
T@"NSString",&,N,V_globalCacheDirectoryPath
userDefaultsBackupDirectoryPath
T@"NSString",&,N,V_userDefaultsBackupDirectoryPath
filesBackupDirectoryPath
T@"NSString",&,N,V_filesBackupDirectoryPath
filesBackupMetadataIndexPath
T@"NSString",&,N,V_filesBackupMetadataIndexPath
databasePath
T@"NSString",&,N,V_databasePath
registryChangedSemaphores
T@"NSMutableArray",&,N,V_registryChangedSemaphores
server
T@"NPSServer",W,N,V_server
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
paired
TB,R,N,GisPaired
isAltAccountDevice
lastActiveDate
T@"NSDate",R,N
shouldRun
TB,R,N,V_shouldRun
com.apple.nanoprefsyncd.dump
%@.%ld
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UserDefaults
NanoSetting
undefined
-[NPSSettingAccessor requiresDeviceUnlockedSinceBoot]
hasChangesToWrite
TB,N,V_hasChangesToWrite
Tq,N,V_type
containerPath
T@"NSString",&,N,V_containerPath
nanoDomainAccessor
T@"NPSDomainAccessor",&,N,V_nanoDomainAccessor
-[NPSFileBackupManager backupFileAtURL:originalFileURL:]
apple-internal-install
nil _deviceRegistry
nil pairedDevice
nil pairingID
nil pairingDataStore
other1
other2
-[NPSFileBackupManager enumerateFileBackupsUsingBlock:]
v32@?0@"NSURL"8@"NPSFileBackupMetadata"16^B24
-[NPSFileBackupManager localFileURLForOriginalFileURL:]
T@"NSUUID",N,V_activeDeviceID
activeDeviceChanged
metadataIndex
T@"NSMutableDictionary",&,N,V_metadataIndex
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithBool:
numberWithDouble:
setKey:
setValue:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
hasValue
setTwoWaySync:
setHasTwoWaySync:
hasTwoWaySync
setTimestamp:
setHasTimestamp:
hasTimestamp
readFrom:
writeTo:
copyTo:
mergeFrom:
value
twoWaySync
timestamp
.cxx_destruct
_timestamp
_key
_value
_twoWaySync
_has
setKind:
setFeature:
setSetting:
setRestriction:
setUserSettingsAndRestrictions:
hasKind
hasFeature
hasSetting
hasRestriction
hasUserSettingsAndRestrictions
kind
feature
setting
restriction
userSettingsAndRestrictions
_feature
_kind
_restriction
_setting
_userSettingsAndRestrictions
removeAllObjects
addObject:
count
objectAtIndex:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addKey:
setContainer:
setDomain:
keysCount
clearKeys
keyAtIndex:
keyType
hasContainer
container
domain
keys
setKeys:
_container
_domain
_keys
dataWithContentsOfFile:options:error:
unarchiveObjectOfClasses:withData:
unarchivedObjectOfClasses:fromData:error:
length
numberWithUnsignedInteger:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchiveObjectOfClasses:withFile:
archiveObject:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithNPSServer:
sharedInstance
dump
appendFormat:
dumpDomain:
initWithName:maxStringLength:block:
initCore:
activeDeviceID
performMigration
loadSettingsBundles
databasePath
initWithPath:
startMonitoringPairingEventsWithQueue:
resetIfActiveDeviceChanged
initWithMachServiceName:
setDelegate:
initWithService:
handleUserDefaultsMsg:
setProtobufAction:forIncomingRequestsOfType:
handleFileBackupMessage:
handleUserDefaultsBackupMsg:
syncCoordinatorWithServiceName:
setDelegate:queue:
resume
addDelegate:queue:
stringWithUTF8String:
isEqualToString:
handleActiveDeviceChangedVersionNotification
handleManagedConfigurationChangedNotification
handleAppChangedRestrictions
hasPerformedInitialSync
activeDevice
setHasPerformedInitialSync:updateBuildVersion:withDevice:
checkIfTinkerLastActiveDateChanged
resendMessagesForMessageID:
checkActiveDeviceChangedVersion
resyncManagedConfigurationIfNeeded
initWithDeviceRegistry:
invalidate
isAltAccountDevice
dictionaryWithObjects:forKeys:count:
mutableCopy
dealloc
objectForKeyedSubscript:
initWithDomain:
synchronize
isPaired
domainAccessor
boolForKey:
valueForProperty:
boolValue
setBool:forKey:
stringForKey:
systemBuildVersion
deviceRegistry
lastActiveDate
timeIntervalSinceReferenceDate
integerForKey:
initWithNanoDomain:
setWithObject:
allowedGroups
sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:
registerSyncMessageWithIdentifier:size:
syncCompletedWithError:withDevice:
_completeActiveSyncSessionWithError:
syncDidFailWithError:
syncDidComplete
pairedDevice
purgePendingOutgoingMessages
syncSessionType
restoreRemoteFilesFromBackup
restoreRemoteSettingsFromBackup
forceResyncManagedConfigurationIsInitialSync:
setObject:forKeyedSubscript:
startPrefsSyncWithGroups:backupWriter:withCompletionHandler:
syncDidCompleteSending
reportProgress:
errorWithDomain:code:userInfo:
numberWithUnsignedLongLong:
appGroupContainer
null
isPrefix
syncGroups
shouldAllowSyncOfItemWithSyncGroups:allowedSyncGroups:
isPerGizmoSetting
initWithUserDefaultsDomain:container:appGroupContainer:
copyKeyList
hasPrefix:
whitelisedUserDefaults
usingPrefsFromDomain:
enumerateKeysAndObjectsUsingBlock:
keyPrefixes
excludedPerGizmoDomains
containsObject:
excludedKeysInDomain:
minusSet:
sendWUDSettingsInDomain:keys:backupFile:allowedGroups:
startedOperations
syncedUserDefaults
keyArrays
isCloudEnabled
keyPrefixArrays
sendSettingsInDomain:keys:cloudEnabled:backupFile:allowedGroups:
completedOperations
objectForKey:
getCachedTimeStampFor:key:usePerGizmoCache:
allObjects
updateCacheForDomain:keys:twoWaySyncTimestamp:isPerGizmo:
clearState
performFirstLaunchIntoNewBuildTasks
sendMessageData:messageType:queueOneIdentifier:identifier:isPairedSyncMessage:cloudEnabled:
initWithUUIDString:
supportsCapability:
initWithProtobufData:type:isResponse:
idsService
doesCurrentDeviceSupportNewIDSServiceForSync
idsServiceSyncState
maxSendTimeout
nps_defaultPairedDeviceIDIncludingTinkerDevices
sendProtobuf:toDestinations:priority:options:identifier:error:
code
unsignedLongLongValue
removeObjectForKey:
messageWasDelivered:
messageWasPurged:
purgeRetryDelay
getSettingsSyncDataForMessage:handler:
sendSettingsBackupInDomain:keys:container:isInitialSync:backupFile:
untrackSettingsBackupMessageForContainer:domain:keys:
getSettingsBackupDataForMessage:handler:
retryFileBackupRestoreForFilePath:
untrackFileBackupMessageForFileAtPath:
getFileBackupDataForMessage:handler:
getMessageType:forMessageID:
removeMessageFromMessageTypeTable:
intValue
handleFileBackupMessage:resourceURL:backupFile:
outgoingResponseIdentifier
handleFullBackupMessage:resourceURL:idsGuid:
context
data
handleUserDefaultsMsgData:backupFile:idsGuid:
initWithData:
_logUserDefaults:idsGuid:
handleWhitelistedUserDefaultsMsg:messageData:overwriteNewerTimestamps:backupFile:
unserializeObject:error:
writeMessage:data:
doubleValue
compare:
arrayWithObjects:count:
notificationNames
unionSet:
synchronizeForWriting
handleUserDefaultsBackupMsgData:backupFile:idsGuid:
_logUserDefaultsBackup:idsGuid:
backupPathForDomain:container:
createDirectoryIfNeeded:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
enumerateObjectsUsingBlock:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
defaultManager
fileExistsAtPath:
removeItemAtPath:error:
fileURL
fileBackupManager
backupFileAtURL:originalFileURL:
initWithPathToLoadBackup:
handleRestoreOfSyncingUserDefaultsMsg:backupFile:
enumerateMessages:
removeItemAtURL:error:
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:
synchronizeNanoDomain:keys:cloudEnabled:
interfaceWithProtocol:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
perGizmoCacheDirectoryPath
globalCacheDirectoryPath
stringByAppendingPathComponent:
stringByStandardizingPath
cachePathForDomain:isPerGizmo:
deleteCacheForDomain:isPerGizmo:
readCacheFromDiskForDomain:isPerGizmo:
writeCache:toDiskForDomain:isPerGizmo:
contentsOfDirectoryAtPath:error:
fileExistsAtPath:isDirectory:
userDefaultsBackupDirectoryPath
restoreFileBackupForLocalFileURL:originalFileURL:isInitialSync:
enumerateFileBackupsUsingBlock:
getResourceValue:forKey:error:
setFileURL:
queueOneIdentifierForFileBackupMsg:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
path
sentFileBackupMessage:forFileAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
synchronizeForReading
serializedObjectForKey:error:
type
queueOneIdentifierForUserDefaultsMsg:
sentSettingsSyncMessage:forDomain:keys:cloudEnabled:
sortedArrayUsingSelector:
initWithString:
appendString:
serializeObject:error:
queueOneIdentifierForUserDefaultsBackupMsg:
sendMessageData:messageType:queueOneIdentifier:identifier:cloudEnabled:
sentSettingsBackupMessage:forContainer:domain:keys:
registerInitialSyncMessage:ofSize:orReportInitialSyncFailureWithError:
newDefaultsMsgWithDomain:
isMirroring
doesCurrentDeviceSupportGroupedTwoWayKeys
typeString
stringByAppendingFormat:
canStartOperation:
beganOperation:
sizeSafeToLoadInMemory
addToProblematicOperationList:
localizedDescription
sendUserDefaultMsg:forDomain:includedKeys:cloudEnabled:backupFile:
numberWithUnsignedLong:
addMetaDataForOperation:metaData:
completedOperation:
getStashedSettingsSyncDataWithHandler:
flushStashedSettingsSyncData
managedConfigurationSettings
setWithObjects:
synchronizeUserDefaultsDomain:keys:cloudEnabled:
debounceOnWorkerQueueWithblock:
sharedConnection
userSettings
effectiveRestrictions
resyncManagedConfigurationIfNeededIsInitialSync:
managedConfigurationData
isEqualToArray:
sendManagedConfigurationSettings:isInitialSync:
objectAtIndexedSubscript:
logManagedConfigurationDictionary:
fileURLWithPath:isDirectory:
localFileURLForOriginalFileURL:
setLaunchNotification:enabled:
UTF8String
isManagedConfigurationSettingWhitelistedForKind:feature:
queueOneIdentifierForManagedConfigurationMsg:
setLaunchNotificationsEnabled:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
listener:shouldAcceptNewConnection:
hasPairedDevice
applyStashedSettingsSyncMessages
pairedSyncCoordinatorFirstSync
setPairedSyncCoordinatorFirstSync:
pairedSyncCoordinatorRemainderSync
setPairedSyncCoordinatorRemainderSync:
activeSyncSession
setActiveSyncSession:
totalDataToSyncInBytes
setTotalDataToSyncInBytes:
remainingDataToSyncInBytes
setRemainingDataToSyncInBytes:
syncSessionProgressDictionary
syncTransaction
setSyncTransaction:
syncProgressTracker
setSyncProgressTracker:
dumper
setDumper:
workQueue
setWorkQueue:
settings
setSettings:
xpcListener
setXpcListener:
setIdsService:
setIdsServiceSyncState:
setDeviceRegistry:
database
setDatabase:
purgeTimer
setPurgeTimer:
setAllowedGroups:
currentlyUsedDomain
setCurrentlyUsedDomain:
setActiveDeviceID:
mcDebounceSource
setMcDebounceSource:
_fileBackupManager
_pairedSyncCoordinatorFirstSync
_pairedSyncCoordinatorRemainderSync
_activeSyncSession
_totalDataToSyncInBytes
_remainingDataToSyncInBytes
_syncSessionProgressDictionary
_syncTransaction
_syncProgressTracker
_dumper
_workQueue
_settings
_xpcListener
_idsService
_idsServiceSyncState
_deviceRegistry
_database
_purgeTimer
_allowedGroups
_currentlyUsedDomain
_activeDeviceID
_mcDebounceSource
UUIDString
encodeObject:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
uuid
setUuid:
setUrl:
_uuid
_url
allValues
setFileData:
hasFileURL
hasFileData
fileData
_fileData
_fileURL
_openDBAtPath:
setMessageType:forMessageID:
fileSystemRepresentation
copy
_getSchemaVersion
untrackSettingsSyncMessagesForDomain:keys:cloudEnabled:
stashSettingsSyncData:forDomain:key:isTwoWaySync:timestamp:
setPath:
version
setDb:
getMessageTypeForMessageID
setGetMessageTypeForMessageID:
setMessageTypeForMessageID
setSetMessageTypeForMessageID:
setMessageIDForSettingSync
setSetMessageIDForSettingSync:
setMessageIDForSettingBackup
setSetMessageIDForSettingBackup:
setMessageIDForFileBackup
setSetMessageIDForFileBackup:
untrackSettingsSyncMessage
setUntrackSettingsSyncMessage:
untrackSettingsBackupMessage
setUntrackSettingsBackupMessage:
untrackFileBackupMessage
setUntrackFileBackupMessage:
untrackSettingsSyncForMessageID
setUntrackSettingsSyncForMessageID:
untrackSettingsBackupForMessageID
setUntrackSettingsBackupForMessageID:
untrackFileBackupForMessageID
setUntrackFileBackupForMessageID:
removeMessageFromMessageTypeTable
setRemoveMessageFromMessageTypeTable:
setNullMessageIDForSettingSync
setSetNullMessageIDForSettingSync:
setNullMessageIDForSettingBackup
setSetNullMessageIDForSettingBackup:
setNullMessageIDForFileBackup
setSetNullMessageIDForFileBackup:
getSettingsSyncForMessageID
setGetSettingsSyncForMessageID:
getSettingsBackupForMessageID
setGetSettingsBackupForMessageID:
getFileBackupForMessageID
setGetFileBackupForMessageID:
getSettingsSyncWithNullMessageID
setGetSettingsSyncWithNullMessageID:
getSettingsBackupWithNullMessageID
setGetSettingsBackupWithNullMessageID:
getFileBackupWithNullMessageID
setGetFileBackupWithNullMessageID:
stashSettingsSyncData
setStashSettingsSyncData:
getStashedSettingSyncData
setGetStashedSettingSyncData:
flushStashedSettingSyncData
setFlushStashedSettingSyncData:
purgeMessageTypeTable
setPurgeMessageTypeTable:
purgeSettingsSyncTable
setPurgeSettingsSyncTable:
purgeSettingsBackupTable
setPurgeSettingsBackupTable:
purgeFileBackupTable
setPurgeFileBackupTable:
_path
_version
_getMessageTypeForMessageID
_setMessageTypeForMessageID
_setMessageIDForSettingSync
_setMessageIDForSettingBackup
_setMessageIDForFileBackup
_untrackSettingsSyncMessage
_untrackSettingsBackupMessage
_untrackFileBackupMessage
_untrackSettingsSyncForMessageID
_untrackSettingsBackupForMessageID
_untrackFileBackupForMessageID
_removeMessageFromMessageTypeTable
_setNullMessageIDForSettingSync
_setNullMessageIDForSettingBackup
_setNullMessageIDForFileBackup
_getSettingsSyncForMessageID
_getSettingsBackupForMessageID
_getFileBackupForMessageID
_getSettingsSyncWithNullMessageID
_getSettingsBackupWithNullMessageID
_getFileBackupWithNullMessageID
_stashSettingsSyncData
_getStashedSettingSyncData
_flushStashedSettingSyncData
_purgeMessageTypeTable
_purgeSettingsSyncTable
_purgeSettingsBackupTable
_purgeFileBackupTable
bytes
dataWithBytes:length:
createFileAtPath:contents:attributes:
fileHandleForWritingToURL:error:
fileHandleForReadingFromURL:error:
writeData:
readDataOfLength:
closeFile
offsetInFile
initWithPathToCreateBlobFile:
initWithPathToLoadBlobFile:
writeBlob:
readBlob
close
isFileGood
_offset
_done
tempFilePath
losslessFileCompressionFrom:to:shouldCompress:
stringByAppendingString:
fileURLWithPath:
dataWithLength:
subdataWithRange:
appendData:
initWithPathToCreateBackup:
doneWriting
compressedPath
_uncompressedPath
_compressedPath
linkedDevicesWithRelationship:
arrayWithCapacity:
addObjectsFromArray:
nps_mineTinkerDevices
nonActiveDeviceForIDSDevice:
nps_nrDevice
_processStateClearIfNeeded
_init
_clearState
_setValue:forKey:
_getOperationDictionary:
date
addEntriesFromDictionary:
_save:forOperation:
_lastBootedTimeFromPref
_saveLastBootedTimeToPref:
_valueForKey:
crashedDuringLastRun
setCrashedDuringLastRun:
problematicOperationList
setProblematicOperationList:
_crashedDuringLastRun
_problematicOperationList
bbAppsSettings
boolForKey:keyExistsAndHasValidFormat:
setIsPrefix:
setAppGroupContainer:
setIsCloudEnabled:
setSyncGroups:
setIsPerGizmoSetting:
mirrorableBBDomain
setMirrorableBBDomain:
mirrorableDomain
setMirrorableDomain:
mirrorableKey
setMirrorableKey:
_isPrefix
_isCloudEnabled
_isPerGizmoSetting
_appGroupContainer
_syncGroups
_mirrorableBBDomain
_mirrorableDomain
_mirrorableKey
setKeyArrays:
setKeyPrefixArrays:
_keyArrays
_keyPrefixArrays
setNotificationNames:
_notificationNames
setKeyPrefixes:
_keyPrefixes
domainShouldSyncFirst:key:
removeObject:
predicateWithFormat:
filteredArrayUsingPredicate:
objectForInfoDictionaryKey:
arrayWithObject:
preprocessItemSyncGroups:forDomain:key:
array
setSyncedUserDefaults:
setWhitelisedUserDefaults:
_syncedUserDefaults
_whitelisedUserDefaults
processInfo
environment
defaultCenter
_registryChanged:
addObserver:selector:name:object:
checkForActiveDeviceChange
waitForActiveOrAltAccountDevice
compatibilityState
initWithDomain:pairingID:pairingDataStore:
filesBackupDirectoryPath
name
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
waitForPairedOrPairingDevice
pairingID
pairingDataStore
pairingDevice
filesBackupMetadataIndexPath
queue
setActiveDevice:
shouldRun
hasCheckedInWithNanoRegistry
setHasCheckedInWithNanoRegistry:
alreadyExistingAssertion
setAlreadyExistingAssertion:
setPairingDataStore:
setDomainAccessor:
setPerGizmoCacheDirectoryPath:
setGlobalCacheDirectoryPath:
setUserDefaultsBackupDirectoryPath:
setFilesBackupDirectoryPath:
setFilesBackupMetadataIndexPath:
setDatabasePath:
registryChangedSemaphores
setRegistryChangedSemaphores:
server
setServer:
_shouldRun
_hasCheckedInWithNanoRegistry
_queue
_activeDevice
_alreadyExistingAssertion
_pairingDataStore
_domainAccessor
_perGizmoCacheDirectoryPath
_globalCacheDirectoryPath
_userDefaultsBackupDirectoryPath
_filesBackupDirectoryPath
_filesBackupMetadataIndexPath
_databasePath
_registryChangedSemaphores
_server
substringWithRange:
registerOSLogStateHandlerName:block:
_lastDumpString
applicationProxyForIdentifier:
groupContainerURLs
dataContainerURL
initWithUserDefaultsDomain:containerPath:
sizeSafeToWrite
domainPlistSize
allKeys
prefSizeFor:inContainer:
domainSize
requiresDeviceUnlockedSinceBoot
setType:
containerPath
setContainerPath:
nanoDomainAccessor
setNanoDomainAccessor:
hasChangesToWrite
setHasChangesToWrite:
_hasChangesToWrite
_type
_containerPath
_nanoDomainAccessor
currentRunLoop
activeDeviceChanged
metadataIndexReadFromDiskIfNeeded
newFileUUID
persistMetadataIndex
pathToFileWithUUID:
exceptionWithName:reason:userInfo:
moveItemAtPath:toPath:error:
URLWithString:
UUID
fileURLWithUUID:
metadataIndex
setMetadataIndex:
_metadataIndex
NPSUserDefaultsMsgKey
NSCopying
NPSManagedConfigurationMsg
NPSUserDefaultsBackupMsg
NPSKeyedArchiverUtil
NPSIDSBlackHole
IDSServiceDelegate
NSObject
NPSCompanionServerProtocol
NPSServerProtocol
NPSServer
PSYSyncCoordinatorDelegate
NSXPCListenerDelegate
NPSFileBackupMetadata
NSSecureCoding
NSCoding
NPSUserDefaultsMsg
Logger
NPSFileBackupMsg
NPSDatabase
NPSBlobReaderWriter
NPSBackupReaderWriter
NPProgressTracker
UserDefaultsKey
UserDefaultsDomain
WhitelistedUserDefaultsKey
WhitelistedUserDefaultsDomain
NPSSettings
NPSUserDefaultsBackupMsgKey
NPSDeviceRegistry
NPSOSLogStateProvider
NPSSettingAccessor
NPSFullBackupMsg
NPSFileBackupManager
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
v24@0:8d16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
d16@0:8
v16@0:8
@"NSString"
@"NSData"
{?="timestamp"b1"twoWaySync"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v52@0:8@16@24@32@40B48
v52@0:8@"NSString"16@"NSSet"24@"NSString"32@"NSString"40B48
v36@0:8@16@24B32
v36@0:8@"NSString"16@"NSSet"24B32
B32@0:8@16@24
q16@0:8
v28@0:8@16B24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v32@0:8B16B20@24
v40@0:8@16Q24@32
v32@0:8@16Q24
@48@0:8@16i24@28^@36B44
@52@0:8@16i24@28^@36B44B48
B44@0:8@16@24B32@36
@28@0:8@16B24
B36@0:8@16@24B32
B28@0:8@16B24
v44@0:8@16@24@32B40
@36@0:8@16@24B32
@68@0:8@16@24@32^@40^@48B56@60
@52@0:8@16@24@32B40@44
v52@0:8@16@24B32@36@44
v24@0:8Q16
@"NPSFileBackupManager"
@"PSYSyncCoordinator"
@"PSYServiceSyncSession"
@"NSMutableDictionary"
@"NSObject<OS_os_transaction>"
@"NPProgressTracker"
@"NPSOSLogStateProvider"
@"NSObject<OS_dispatch_queue>"
@"NPSSettings"
@"NSXPCListener"
@"IDSService"
@"NPSDeviceRegistry"
@"NPSDatabase"
@"NSObject<OS_dispatch_source>"
@"NSDictionary"
@"NSUUID"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
{?="timestamp"b1}
B28@0:8i16@20
B32@0:8^i16@24
v32@0:8@16@?24
v52@0:8@16@24@32B40d44
i16@0:8
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3=}
^{sqlite3_stmt=}
@"NSFileHandle"
v32@0:8Q16@24
B24@0:8@?16
@"NPSBlobReaderWriter"
@"NSSet"
@"NSMutableSet"
@40@0:8@16@24@32
@"NRDevice"
@"NRActiveDeviceAssertion"
@"NPSDomainAccessor"
@"NPSServer"
@40@0:8@16q24@?32
@32@0:8@16^@24
v24@0:8q16
Error (%@) reading data from (%@)
Error (%@) unarchiving expected classes (%@) with (%@) bytes data
Error (%@) archiving (%@)
Launching; "NanoPreferencesSyncDaemon_Sim-291" "943"
Received notification: %s
Received managed configuration change notification
Received unexepectedly NULL notification
Received unexpected non-dictionary type event: (%@)
setHasPerformedInitialSync: Alt account device. Force set sync complete.
setHasPerformedInitialSync: (%d, %d, %{public}@)
setHasPerformedInitialSync called but the active device isn't paired to a non-archived device.
setHasPerformedInitialSync: Paired device build version being updated from %@ to %@
setHasPerformedInitialSync: Local device build version being updated from %@ to %@
setHasPerformedInitialSync: LastActiveDate being updated from %llu -> %llu
setHasPerformedInitialSync: sendSetting failed.
Not doing check for initial sync, as this is alt account device.
setHasPerformedInitialSync: Posting notification %@ (NPSHasCompletedInitialSync)
syncCompletedWithError: Sync completed: error=%@
_completeActiveSyncSessionWithError: Reporting sync failure (%@) to sync session: (%@)
_completeActiveSyncSessionWithError:Reporting successful sync completion to sync session: (%@)
coordinator: (%@)
Asked to start syncing for sync session (%@) even though there already is an active sync session (%@)
total: (%llu), remaining: (%llu); initialSyncProgressDictionary: (%@)
strongSession: (%p); _activeSyncSession: (%p)
Did not complete syncing before timer expired; Sync Session: (%@); Pending Messages: (%@)
startPrefsSyncWithGroups: %{public}@
Backup list before exclusions: %@ : %@
Excluding: %@
Backup list after exclusions: %@ : %@
Removed all keys from: %@
Excluding: %@ from backup, it's on the exclusion list
startPrefsSyncWithGroups: No data synced.
checkIfTinkerLastActiveDateChanged: LastActiveDate changed from %llu -> %llu Tinker watch switch detected
%s: Skipping Paired Device Version change check. Not paired.
%s: Detected first launch after pairing; Local build version: (%@)
%s: Detected local device update; Current build version: (%@); Previous: (%@)
%s: Doing new build tasks
%s: New build tasks completed
%s: lastRegisteredPairedDeviceBuildVersion: (%@); pairedDeviceBuildVersion: (%@)
%s: Doing a sync because of a build version change
%s: No build version change detected.
%s: Skipping Paired Device Version change check. Has not performed initial sync yet.
Using IDS service for sending sync state.
Successfully sent message with identifier: (%@)
Failed sending message with error: (%@)
service: (%@), account: (%@), identifier: (%@), success: (%d), error: (%@)
progress: (%f), total: (%llu), remaining: (%llu)
Message (%@) failed to be delivered with error: (%@)
Purge Timer fired!
Releasing transaction for ids-reset-timeout-transaction
messageID: (%@)
Failed re-sending settings backup for container (%@), domain (%@), keys (%@).
Failed re-sending file backup (%@) for identifier (%@)!
service: (%@); account: (%@); incomingResourceAtURL: (%@); metadata: (%@); fromID: (%@); context: (%@)
nil messageType. metadata: (%@)
Un-handled message type: (%@)
%{public}@
handleUserDefaultsMsg: idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Could not parse incoming data
Handling User Defaults message for domain: (%@);        hasTimestamp: (%d);        timestamp: (%f);        overwriteNewerTimestamps: (%s)
Domain (%@) not whitelisted; dropping incoming message
Handling key in domain: (%@)            key: (%@);            value: (%s);            hasTimestamp: (%d);            timestamp: (%f);            overwriteNewerTimestamps: (%s)
Using timestamp from user defaults message key (%f) for <Domain %@; key %@>.
Using timestamp from user defaults message (%f) for <Domain %@; key %@>.
Key (%@) in domain (%@) not whitelisted; dropping incoming message
Unable to create settings accessor for Key (%@) Domain (%@); dropping incoming message.
Received User Defaults value for <%@, %@>: (%@)
Discarding cached timestamp for <%@, %@> since it is set to the future; cached: (%f); current: (%f)
Updating timestamp for domain:%@ key:%@ to timestamp: %f
Discarding incoming setting for <%@, %@>, local value is more recent
Local expects <%@, %@> to be 2-way-synced, but remote doesn't
Skipping key (%@) since incoming value is un-changed                Current value: %@; incoming value: %@
Posting (%@) for domain (%@)
Handling Restore of User Defaults message for domain: (%@); hasTimestamp: (%d); timestamp: (%f)
Domain (%@) not synced; dropping incoming message
Key (%@) in domain (%@) not synced; dropping incoming message
Skipping key (%@) since incoming value is un-changed                        Current value: %@; incoming value: %@
Kind: (%@)
Feature: (%@); Value: (%@)
handleUserDefaultsBackupMsg: idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling User Defaults Backup message for container: (%@); domain: (%@)
Failed to unserialized domain backup (%@) with error: (%@)
Read pre-existing domain (%@) backup: (%@)
Received User Defaults Backup for <%@, %@>; Value: (%@)
Failed to serialize updated domain (%@) backup dictionary (%@) with error: (%@)
Failed to write updated domain (%@) backup at path (%@) with error: (%@)
Failed to delete backup for domain (%@) at path (%@) with error: (%@)
handleFileBackupMessage: idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling file backup message for path: (%@); Temporary URL: (%@)
listener: (%p); connection: (%p)
Connection invalidated: (%p)
Failed to resolve cache path for domain: (%@); isPerGizmo: (%d)
Reading cache for domain: (%@); isPerGizmo: (%d)
Failed to unserialized domain cache (%@) %@
Read cache: (%@)
Writing cache for domain: (%@); isPerGizmo: (%d)
Cache to be written: (%@)
Failed to serialize updated domain cache dictionary (%@) with error: (%@)
Failed to write updated domain cache (%@) with error: (%@)
Deleting cache for domain: (%@); isPerGizmo: (%d)
Cache for domain (%@) does not exist.
Failed to delete cache for domain: %@
Updating timestamp for <%@; %@> to %@
Could not list content of directory (%@)
Unexpectedly found directory (%@) within container (%@) backup
Restoring remote settings from backup at path (%@)
No remote settings backup directory (%@)
Restoring remote file (%@) stored locally at (%@); isInitialSync: (%d)
Failed to retrieve file size for file URL: (%@) with error: (%@); result: (%d)
Failed to send file resource (%@) for backup at (%@) with error: (%@)
Successfully sent file backup with identifier (%@)
Requested to create directory with nil path
Failed to create backup directory (%@) with error: (%@)
Failed to resolve backup path for domain: (%@) for container: (%@)
%s: keys: %@; syncGroups: %@
%s: Settings accessor not passed.
Key (%@) is not a String.
%s: Not allowed to sync items in this sync groups.
%s: Error serializing object for key %@. Error: %@
Remote backup for domain (%@) is empty; Deleting the associated .plist
Failed to unserialize domain (%@) backup (%@) for container (%@) with error: (%@)
Restoring <%@, %@> for container (%@) to (%@)
Failed to create binary data (domain: %@; key: %@) with error: (%@)
Reading cache for domain: (%@); key: (%@); isPerGizmo: (%{public}@)
Error reading the cache file (error: %@).
Sending user defaults message for <Domain: %@, Keys: %{public}lu>
Start sending settings in Domain: %{public}@ 
             Keys: %lu
             cloudEnabled: %{public}@
Not allowed to sync groups %{public}@. Skipping key %{public}@.
Sent <Domain: %{public}@; Key: %{public}@> as individual default sync message.
Skipping <%@; %@>.
<%{public}@>Domain size not safe to load in memory. Trying to send it once.
Failed to serialize value for <Domain: %{public}@; Key: %{public}@> (Error: %@)
No cached timestamp, and value is null. Not sending value for <Domain: %{public}@; Key: %{public}@>.
Message size reached max allowed size. Sending current default message.
[STATS] Completed sending settings in <Domain: %{public}@; Keys: %lul>.
Start sending whitelisted defaults in Domain: %{public}@ 
            Keys: %lu
 AllowedGroups: %@
Key: %@ not allowed, not syncing/backing up
Groups: %@, allowed groups: %@
Skipping <%@; %@>
<%{public}@>Domain size not safe to load in memory. Trying to load it once.
Handling message for domain (%@) key (%@) timestamp (%f)
Invalid debounce parameter
%s: Debouncer timed out- calling block
Releasing transaction for debounceOnWorkerQueueWithblock (timer fired)
Could not create dispatch source
Releasing transaction for debounceOnWorkerQueueWithblock (unable to create source)
Will force re-sync ManagedConfiguration state
Re-syncing MC since changes were detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since no change detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since Tinker watch
Sending MC user settings:
Sending MC restrictions:
File Backup manager did not have an entry for original file path (%@)
%s: domain: (%@); keys: (%@); container: (%@); appGroupContainer: (%@); cloudEnabled: (%d)
Domain (%@) should not be nil, and keys (%@) should not be nil or empty.
Container should not be nil when specifing an app group container (%@) for domain (%@) and keys (%@).
%s: domain: (%@); keys: (%@)
setLaunchNotification: %@ launch notification %@
SQL Error: (%d) %s
Error fetching schema version: %d (%s)
Error opening SQLite3 DB at (%@): (%d) %s
I/O error: ACCESS
I/O error: BLOCKED
I/O error: CHECKRESERVEDLOCK
I/O error: CLOSE
I/O error: DELETE
I/O error: DIR_CLOSE
I/O error: DIR_FSYNC
I/O error: FSTAT
I/O error: FSYNC
I/O error: LOCK
I/O error: NOMEM
I/O error: RDLOCK
I/O error: READ
I/O error: SEEK
I/O error: SHMLOCK
I/O error: SHMMAP
I/O error: SHMOPEN
I/O error: SHMSIZE
I/O error: SHORT_READ
I/O error: TRUNCATE
I/O error: UNLOCK
I/O error: WRITE
sqlite3_exec(%s) Error: (%d) %s
NPSBlobReaderWriter: initWithPathToCreateBlobFile error %@
NPSBlobReaderWriter: initWithPathToLoadBlobFile error %@
File length is not right- must have been a read or write error
File length is %ld bytes as expected
NPSBackupReaderWriter writing type %d length %u
NPSBackupReaderWriter reading type %d length %u
[Progress Tracker] Started tracking progress. (Crashed last time %@)
[Progress Tracker] Can start syncing (%{public}@)? %@
[Progress Tracker] Started %@
[Progress Tracker] Completed %@
[Progress Tracker] Stopped tracking progress.
[Progress Tracker] Requested to clear state.
[Progress Tracker] Adding %{public}@ to known problematic operation list.
[Progress Tracker] State from prefs %{public}@.                  Last domain being processed %{public}@.                  List of oversized domains %{public}@
%@ '%@': %@
%@ '%@':
Bundle directory (%@) does not exist
Bundle directory (%@) is not a directory
Bundle directory (%@) could not be open
Unable to read bundle: %@
Malformed bundle plist for bundle: %@. %@
Missing %@ or %@ entry for bundle: %@.
Key %@ mutually exclusive with keys %@ and %@ in bundle %@
Keys %@ and %@ must go together in bundle %@
Cannot overwrite existing container %@ with %@ for whitelisted <%@, %@> in bundle %@.
Cannot overwrite existing whitelisted <%@, %@> in bundle %@ with a different isPerGizmoSetting value.
Action %@ not supported in bundle (%@).
Received notification: (%@)
Paired device changed from %{public}@ to %{public}@
Failed to create directory (%@) with error: (%@)
Dumping data for %{public}@ to sysdiagnose
Could not resolve containerPath for container (%@)
Synchronized user defaults domain (%@) for containerPath: (%@); ret: (%d).
Synchronized user defaults domain (%@); ret: (%d).
Synchronized nano-setting domain (%@); ret: (%d).
Read containerized user default <%@, %@> for containerPath: (%@); value: (%{public}@)
Read user default <%@, %@>; value: (%{public}@)
Read nano-setting <%@, %@>; value: (%{public}@)
Not safe to write value into domain %@ for key %@. (size %lld Bytes is beyond what we can handle)
Written containerized user default <%@, %@> for containerPath: (%@); value: (%@)
Written user default <%@, %@>; value: (%@)
Written nano-setting <%@, %@>; value: (%@)
Failed to serialized value (%@) with error: %@ 
Failed to unserialized data (%@) with error: %@
Logic error! Type %ld is not handled.
%s: Protection Class for %@ at path %@ is %d
Is user defaults domain %@ protected: %@
%s: fileURL: (%@); originalURL: (%@)
%s: Skipping, active device has changed
Error backuping file (%@), originalFileURL is nil
Failed to generate file backup destination path. File will not get backuped!
Failed to delete old file backup (%@) with error: (%@)
Failed to move file (%@) to (%@) with error: (%@)
Removing file (%@) from backup
Failed to remove file (%@) with error: (%@)
Failed to write index file (%@) with error: (%@)
Failed to delete to-be-empty index file (%@) with error: (%@)
softlink:r:path:/System/Library/PrivateFrameworks/NanoBackup.framework/NanoBackup
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ignore-preferences-size-limits</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
