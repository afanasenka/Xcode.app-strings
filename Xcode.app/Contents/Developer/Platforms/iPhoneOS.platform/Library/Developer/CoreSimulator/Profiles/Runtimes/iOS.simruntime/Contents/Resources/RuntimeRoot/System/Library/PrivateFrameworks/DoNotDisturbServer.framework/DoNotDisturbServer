@(#)PROGRAM:DoNotDisturbServer  PROJECT:DoNotDisturb-1
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
T@"NSNumber",R,C,N,V_interruptionBehaviorSetting
T@"NSNumber",C,D,N
header
version
timestamp
data
com.apple.donotdisturb.server.JSONBackingStore
deviceOutOfSpace
sysdiagnoseDataIdentifier
T@"NSString",R,C,N
delegate
T@"<DNDSBackingStoreDelegate>",W,N
T@"NSString",R,C,D,N
T@"<DNDSBackingStoreDelegate>",W,N,V_delegate
<%@: %p; UUID: %@; predicate: %@; requestDate: %@; details: %@; source: %@; reason: %@; reasonOverride: %@>
UUID
T@"NSUUID",R,C,N,V_UUID
predicate
T@"DNDSModeAssertionInvalidationPredicate",R,C,N,V_predicate
requestDate
T@"NSDate",R,C,N,V_requestDate
details
T@"DNDModeAssertionInvalidationDetails",R,C,N,V_details
source
T@"DNDModeAssertionSource",R,C,N,V_source
reason
TQ,R,N,V_reason
reasonOverride
TQ,R,N,V_reasonOverride
activeUUIDs
T@"NSArray",R,C,N,V_activeUUIDs
expiredUUIDs
T@"NSArray",R,C,N,V_expiredUUIDs
com.apple.donotdisturb.lifetime-monitor.%@
v8@?0
@"NSString"16@?0@"NSUUID"8
active-uuids
activeLifetimeAssertionUUIDs
T@"NSArray",R,C,N
dataSource
T@"<DNDSLifetimeMonitorDataSource>",W,N
T@"<DNDSLifetimeMonitorDelegate>",W,N
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSArray",R,C,N,V_activeLifetimeAssertionUUIDs
T@"<DNDSLifetimeMonitorDataSource>",W,N,V_dataSource
T@"<DNDSLifetimeMonitorDelegate>",W,N,V_delegate
com.apple.donotdisturb.EventBehaviorResolutionService
com.apple.donotdisturb.EventBehaviorResolver
uuid
local-date
client-identifier
outcome
@"NSDictionary"16@?0@"DNDSEventBehaviorResolution"8
resolution-record
@"NSString"16@?0@"DNDStateModeAssertionMetadata"8
B24@?0@"DNDSEventBehaviorResolution"8@16
B16@?0@"CNContact"8
v24@?0@"CNContact"8^B16
@16@?0@"CNContact"8
B16@?0@"DNDSEventBehaviorResolution"8
T@"<DNDSEventBehaviorResolverDataSource>",W,N,V_dataSource
UI locked
UI unlocked
<invalid>
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_immediateBypassEventSourceType
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
T@"NSNumber",R,C,N,V_repeatEventSourceBehaviorEnabledSetting
T@"NSString",C,D,N
v20@?0B8@"NSError"12
com.apple.donotdisturb.server.CalendarEventLifetimeMonitor.timer
com.apple.donotdisturb.server.DateIntervalLifetimeMonitor.timer
@"NSUUID"16@?0@"DNDModeAssertion"8
fallbackState
T@"DNDState",R,C,D,N
com.donotdisturb.server.LocationLifetimeMonitor
com.apple.donotdisturb.server.until-i-leave
unknown
inside
outside
<%@: %p; lastUpdatedTimestamp: %@; scheduleEnabledSetting: %@; timePeriodStartTimeHour: %@; timePeriodStartTimeMinute: %@; timePeriodEndTimeHour: %@; timePeriodEndTimeMinute: %@; bedtimeBehaviorEnabledSetting: %@>
lastUpdatedTimestamp
scheduleEnabledSetting
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
bedtimeBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_lastUpdatedTimestamp
T@"NSNumber",R,C,N,V_scheduleEnabledSetting
T@"NSNumber",R,C,N,V_timePeriodStartTimeHour
T@"NSNumber",R,C,N,V_timePeriodStartTimeMinute
T@"NSNumber",R,C,N,V_timePeriodEndTimeHour
T@"NSNumber",R,C,N,V_timePeriodEndTimeMinute
T@"NSNumber",R,C,N,V_bedtimeBehaviorEnabledSetting
Inactive
Active
storeAssertionRecords
storeInvalidationRecords
storeInvalidationRequestRecords
assertionUUID
assertionStartDateTimestamp
assertionDetails
assertionSource
assertionDetailsIdentifier
assertionDetailsModeIdentifier
assertionDetailsUserVisibleEndDate
assertionDetailsLifetime
assertionDetailsLifetimeType
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
assertionDetailsDateIntervalLifetimeStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
assertionDetailsScheduleLifetimeScheduleIdentifier
assertionDetailsScheduleLifetimeBehavior
assertionClientIdentifier
assertionSourceDeviceIdentifier
invalidationAssertion
invalidationDateTimestamp
invalidationDetails
invalidationSource
invalidationReason
invalidationReasonOverride
invalidationDetailsIdentifier
invalidationRequestUUID
invalidationRequestPredicate
invalidationRequestDateTimestamp
invalidationRequestDetails
invalidationRequestSource
invalidationRequestReason
invalidationRequestReasonOverride
invalidationPredicateType
dateInvalidationPredicateDate
clientIdentifierInvalidationPredicateIdentifiers
UUIDInvalidationPredicateUUIDs
Library
DoNotDisturb
Assertions.json
Settings.json
Metrics.json
BulletinBoard
BehaviorOverrides.plist
@"NSDictionary"16@?0@8
user-requested
assertionDetailsUserRequested
schedule
com.apple.donotdisturb.schedule.default
expire-on-end
storeLastCompleteInvalidationTimestamp
user-changed-state
storeLastCompleteInvalidationReason
assertionDetailsSyncSuppressionOptions
storeLastUpdateDate
storeLastCompleteInvalidationSourceClientIdentifier
storeLastCompleteInvalidationSourceDeviceIdentifier
@"NSDictionary"16@?0@"NSMutableDictionary"8
invalidationSourceClientIdentifier
invalidationSourceDeviceIdentifier
B16@?0@"DNDModeAssertionInvalidation"8
q24@?0@"DNDModeAssertion"8@"DNDModeAssertion"16
q24@?0@"DNDSModeAssertionInvalidationRequest"8@"DNDSModeAssertionInvalidationRequest"16
B16@?0@"DNDSModeAssertionInvalidationRequest"8
q24@?0@"DNDModeAssertionInvalidation"8@"DNDModeAssertionInvalidation"16
default.device
B16@?0@"DNDModeAssertion"8
store
T@"DNDSModeAssertionStore",R,C,N,V_store
updateResult
T@"DNDSModeAssertionUpdateResult",R,C,N,V_updateResult
<%@: %p; interruptionSuppression: %@>
interruptionSuppression
TQ,R,N,V_interruptionSuppression
com.apple.donotdisturb.control-center.module
com.apple.private.Carousel.control-center.DND.state
none
com.apple.donotdisturb.assertionTaken
manual
mode
type
controlCenterPhone
controlCenterWatch
scheduleIdentifier
hour
lockState
weekday
@"NSDictionary"8@?0
com.apple.donotdisturb.kit.lifetime.one-hour
com.apple.donotdisturb.kit.lifetime.evening
com.apple.donotdisturb.kit.lifetime.morning
com.apple.donotdisturb.kit.lifetime.location
com.apple.donotdisturb.kit.lifetime.event
com.apple.donotdisturb.mode.driving
com.apple.donotdisturb.dailyHeartbeat
enabled
manuallyEnabled
numberOfSessions
numberOfManualSessions
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledForOneHour
enabledUntilEvening
enabledUntilMorning
enabledAtLocation
enabledDuringEvent
enabledDrivingMode
enabledSleepMode
dayOfWeek
com.apple.donotdisturb.weeklyHeartbeat
com.apple.donotdisturb.monthlyHeartbeat
Failed to write store
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-129/DoNotDisturbServer/Metrics/DNDSMetricsManager.m
MMMMYYYY
en_US
com.apple.donotdisturb.server.ScheduleLifetimeMonitor.timer
T@"<DNDSScheduleLifetimeMonitorDataSource>",W,D,N
com.apple.donotdisturb.mode.bedtime
com.apple.mobiletimer.mode.sleep
@"DNDSModeAssertionRecord"16@?0@8
com.apple.donotdisturb.legacy-watch-toggle
@"NSDictionary"16@?0@"DNDSModeAssertionRecord"8
interruptionInvalidationAssertionUUID
T@"NSUUID",R,C,N,V_interruptionInvalidationAssertionUUID
assertionUpdateClientIdentifiers
T@"NSSet",R,C,N,V_assertionUpdateClientIdentifiers
wantsStateUpdates
TB,R,N,V_wantsStateUpdates
wantsSettingsUpdates
TB,R,N,V_wantsSettingsUpdates
T@"NSUUID",C,D,N
T@"NSSet",C,D,N
TB,D,N
lastCalculatedState
T@"DNDState",C,V_lastCalculatedState
BBBehaviorOverride
BBBehaviorOverrideEffectiveInterval
<%@: %p; scheduleEnabledSetting: %@; timePeriod: %@; bedtimeBehaviorEnabledSetting: %@; creationDate: %@>
creationDate
T@"NSDate",R,C,N,V_creationDate
com.apple.donotdisturb.server.SettingsManager
Failed to load settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-127/DoNotDisturbServer/DNDSSettingsManager.m
Error saving settings
com.apple.donotdisturb.SettingsManager
interruption-behavior
%@ (%@)
behavior-settings
event-source-type
contact-group
bypass-settings
creation-date-local
creation-date-timestamp
start-time
%lu:%lu
end-time
bedtime-enabled
schedule-settings
sync-settings
T@"<DNDSSettingsManagerDelegate>",W,N,V_delegate
assertions
T@"NSArray",R,C,N,V_assertions
invalidations
T@"NSArray",R,C,N,V_invalidations
predicateType
TQ,R,D,N
<%@: %p>
<%@: %p; date: %@>
date
T@"NSDate",R,C,N,V_date
<%@: %p; clientIdentifiers: %@>
clientIdentifiers
T@"NSArray",R,C,N,V_clientIdentifiers
<%@: %p; UUIDs: %@>
UUIDs
T@"NSArray",R,C,N,V_UUIDs
disabled
device unlocked
always interrupt flag
always bypass
no bypass
favorite
contact
group contact
repeat event
emergency contact
com.donotdisturb.server.sync.legacy
com.donotdisturb.server.sync.legacy.workout
dndState
dndStateDate
dndCompanionAssertActive
dndGizmoAssertActive
com.donotdisturb.server.LegacyAssertionSyncManager
B16@?0@"<DNDSModeAssertionUpdateContext>"8
DNDStateChangedNotification
DNDAssertStateChangedNotification
B16@?0@"DNDSModeAssertionManagerUpdateContext"8
B16@?0@"DNDStateModeAssertionMetadata"8
com.apple.donotdisturb.sync.legacy.toggle-assertion
com.apple.donotdisturb.sync.legacy.mirror-assertion
com.apple.donotdisturb.mode.workout
T@"<DNDSAssertionSyncManagerDataSource>",W,N
T@"<DNDSAssertionSyncManagerDelegate>",W,N
T@"<DNDSLegacyAssertionSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSAssertionSyncManagerDelegate>",W,N,V_delegate
com.apple.donotdisturb.server.ModeAssertionManager
Failed to load assertion database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-129/DoNotDisturbServer/DNDSModeAssertionManager.m
<%@: %p; metricsByDay: %@; lastDailyHeartbeat: %@; metricsByWeek: %@; lastWeeklyHeartbeat: %@; metricsByMonth: %@; lastMonthlyHeartbeat: %@>
metricsByDay
lastDailyHeartbeat
metricsByWeek
lastWeeklyHeartbeat
metricsByMonth
lastMonthlyHeartbeat
T@"NSDictionary",R,C,N,V_metricsByDay
T@"NSDate",R,C,N,V_lastDailyHeartbeat
T@"NSDictionary",R,C,N,V_metricsByWeek
T@"NSDate",R,C,N,V_lastWeeklyHeartbeat
T@"NSDictionary",R,C,N,V_metricsByMonth
T@"NSDate",R,C,N,V_lastMonthlyHeartbeat
T@"NSDictionary",C,D,N
T@"NSDate",C,D,N
dndEffectiveOverrides
dndPrivilegedSenderTypes
DNDEffectiveOverridesChangedNotification
DNDPrivilegedSenderChangedNotification
T@"<DNDSSettingsSyncManagerDataSource>",W,N
T@"<DNDSSettingsSyncManagerDelegate>",W,N
T@"<DNDSSettingsSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSSettingsSyncManagerDelegate>",W,N,V_delegate
<%@: %p; assertions: %@; invalidations: %@; invalidationRequests: %@>
invalidationRequests
T@"NSArray",R,C,N,V_invalidationRequests
T@"NSArray",C,D,N
com.apple.nano
@"DNDModeAssertion"16@?0@"DNDModeAssertion"8
@"DNDModeAssertionInvalidation"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequest"8
com.apple.donotdisturb.server.ModernAssertionSyncManager
com.apple.donotdisturb.watch-sync
B16@?0@"NSString"8
T@"<DNDSAssertionSyncManagerDataSource>",W,N,V_dataSource
@"DNDSModeAssertionInvalidationRecord"16@?0@8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
%@Local
B16@?0@8
Error writing migrated settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-127/DoNotDisturbServer/DNDSLegacySettingsMigration.m
Error loading legacy settings
com.apple.donotdisturb.legacy-migration
legacy-toggle
Error writing migrated assertions
Error removing legacy settings
<%@: %p; deviceIdentifier: '%@'; deviceClass: %@; syncProtocolVersion: %lu; pairingIdentifier: %@; pairingDataStore: %@>
pairingIdentifier
T@"NSUUID",R,C,N,V_pairingIdentifier
pairingDataStore
T@"NSString",R,C,N,V_pairingDataStore
deviceIdentifier
T@"NSString",R,C,N,V_deviceIdentifier
deviceClass
TQ,R,N,V_deviceClass
syncProtocolVersion
TQ,R,N,V_syncProtocolVersion
phone
watch
watch (legacy)
<%@: %p; UUID: %@; date: %@; eventBehavior: %@; clientIdentifier: '%@'; outcome: %@; reason: %@>
eventBehavior
T@"DNDClientEventBehavior",R,C,N,V_eventBehavior
clientIdentifier
T@"NSString",R,C,N,V_clientIdentifier
TQ,R,N,V_outcome
<%@: %p; enabled: %@; manuallyEnabled: %@; numberOfSessions: %@; numberOfManualSessions: %@; enabledFromControlCenterPhone: %@; enabledFromControlCenterWatch: %@; enabledForOneHour: %@; enabledUntilEvening: %@; enabledUntilMorning: %@; enabledAtLocation: %@; enabledDuringEvent: %@; enabledDrivingMode: %@; enabledSleepMode: %@>
numOfSessions
numOfManualSessions
TB,R,N
T@"NSNumber",R,C,N
TB,R,N,V_enabled
TB,R,N,V_manuallyEnabled
T@"NSNumber",R,C,N,V_numberOfSessions
T@"NSNumber",R,C,N,V_numberOfManualSessions
TB,R,N,V_enabledFromControlCenterPhone
TB,R,N,V_enabledFromControlCenterWatch
TB,R,N,V_enabledForOneHour
TB,R,N,V_enabledUntilEvening
TB,R,N,V_enabledUntilMorning
TB,R,N,V_enabledAtLocation
TB,R,N,V_enabledDuringEvent
TB,R,N,V_enabledDrivingMode
TB,R,N,V_enabledSleepMode
TB,N
T@"NSNumber",C,N
<%@: %p; %@; dayOfWeek: %@>
T@"NSNumber",R,C,N,V_dayOfWeek
calendar
date-interval
current-location
match-schedule
com.apple.donotdisturb.private.schedule
T@"<DNDSScheduleManagerDataSource>",W,N,V_dataSource
overrideType
overrideMode
effectiveIntervals
supportsSecureCoding
TB,R
TQ,R,N,V_overrideType
TQ,R,N,V_mode
T@"NSArray",R,C,N,V_effectiveIntervals
bundle
com.apple.donotdisturb
AppleInternal
@"NSURL"16@?0@"NSString"8
ClientBundles
@16@?0@"NSURL"8
B16@?0@"NSURL"8
.preload.bundle
@"DNDSClientDetails"16@?0@"NSURL"8
com.apple.donotdisturb.server.PairedDeviceStateMonitor
v12@?0i8
com.apple.donotdisturb.PairedDevice
identifier
class
protocol-version
pairedDevice
T@"DNDSPairedDevice",C,V_pairedDevice
T@"<DNDSPairedDeviceStateMonitorDelegate>",W,N,V_delegate
com.donotdisturb.server.IdentityServicesSync
B16@?0@"IDSDevice"8
T@"<DNDSSyncServiceDelegate>",W,N
T@"<DNDSSyncServiceDelegate>",W,N,V_delegate
com.apple.donotdisturb.server.sysdiagnose
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
ServerGeneral
Resolver
ServiceProvider
StateProvider
AssertionManager
AssertionStore
IDSTransport
Schedule
Settings
SystemState
LegacyAssertionSync
LegacySettingsSync
ModernAssertionSync
PairedDeviceState
DateIntervalLifetimeMonitor
LocationLifetimeMonitor
CalendarEventLifetimeMonitor
ScheduleLifetimeMonitor
DefaultLifetimeMonitor
DataMigrator
Sysdiagnose
Metrics
startComponents
endComponents
repeatInterval
T@"NSDateComponents",R,C,N,V_startComponents
T@"NSDateComponents",R,C,N,V_endComponents
calendarIdentifier
T@"NSString",R,C,N,V_calendarIdentifier
TQ,R,N,V_repeatInterval
T@"NSUUID",R,C,N,V_identifier
<%@: %p; syncEnabled: %@>
syncEnabled
TB,R,N,GisSyncEnabled,V_syncEnabled
<%@: %p; assertions: %@; activeAssertionUUIDs: %@; activeDateIntervalByAssertionUUID: %@; interruptionBehaviorSetting: %@; lostModeState: %@>
activeAssertionUUIDs
T@"NSArray",R,C,N,V_activeAssertionUUIDs
activeDateIntervalByAssertionUUID
T@"NSDictionary",R,C,N,V_activeDateIntervalByAssertionUUID
TQ,R,N,V_interruptionBehaviorSetting
lostModeState
TQ,R,N,V_lostModeState
TQ,D,N
overrideStatus
overrideStatusLastCalculatedTime
overrides
privilegedSenderTypes
privilegedAddressBookGroupRecordID
effectiveWhileUnlocked
lifetime-expired
client-ended
client-replaced
server-unresponsive
client-unresponsive
@"DNDSModeAssertionRecord"16@?0@"DNDModeAssertion"8
@"DNDSModeAssertionInvalidationRecord"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@"DNDSModeAssertionInvalidationRequest"8
@"DNDModeAssertion"16@?0@"DNDSModeAssertionRecord"8
@"DNDModeAssertionInvalidation"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
T@"NSArray",&,N,V_assertions
T@"NSArray",&,N,V_invalidations
T@"NSArray",&,N,V_invalidationRequests
T@"NSString",&,N,V_UUID
startDate
T@"NSNumber",&,N,V_startDate
T@"DNDSModeAssertionDetailsRecord",&,N,V_details
T@"DNDSModeAssertionSourceRecord",&,N,V_source
T@"NSString",&,N,V_identifier
modeIdentifier
T@"NSString",&,N,V_modeIdentifier
userVisibleEndDate
T@"NSNumber",&,N,V_userVisibleEndDate
lifetime
T@"DNDSModeAssertionLifetimeRecord",&,N,V_lifetime
lifetimeType
T@"NSString",&,N,V_lifetimeType
eventUniqueID
T@"NSString",&,N,V_eventUniqueID
occurrenceDate
T@"NSNumber",&,N,V_occurrenceDate
onlyDuringEvent
T@"NSNumber",&,N,V_onlyDuringEvent
endDate
T@"NSNumber",&,N,V_endDate
T@"NSString",&,N,V_scheduleIdentifier
behavior
T@"NSString",&,N,V_behavior
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_deviceIdentifier
assertion
T@"DNDSModeAssertionRecord",&,N,V_assertion
invalidationDate
T@"NSNumber",&,N,V_invalidationDate
T@"DNDSModeAssertionInvalidationDetailsRecord",&,N,V_details
T@"NSString",&,N,V_reason
T@"NSString",&,N,V_reasonOverride
T@"DNDSModeAssertionInvalidationPredicateRecord",&,N,V_predicate
T@"NSNumber",&,N,V_requestDate
@"NSUUID"16@?0@"NSString"8
T@"NSString",&,N,V_predicateType
T@"NSNumber",&,N,V_date
T@"NSArray",&,N,V_clientIdentifiers
T@"NSArray",&,N,V_UUIDs
DNDClientDetails
DNDEventBehaviorResolutionServiceOptions
DNDEventBehaviorResolutionContextDeviceUILocked
DNDModeAssertionServiceOptions
DNDAssertionsPersist
DNDClientIdentifier
DNDSyncSuppressed
DNDUserInteractive
identifiers
T@"NSArray",R,C,N,V_identifiers
resolutionContextAssumingDeviceUILocked
TB,R,N,GisResolutionContextAssumingDeviceUILocked,V_resolutionContextAssumingDeviceUILocked
userInteractionClient
TB,R,N,GisUserInteractionClient,V_userInteractionClient
persistentAssertionClient
TB,R,N,GisPersistentAssertionClient,V_persistentAssertionClient
syncSuppressedClient
TB,R,N,GisSyncSuppressedClient,V_syncSuppressedClient
mirrorDNDState
MirrorDNDStateChangedNotification
syncSettings
T@"DNDSSyncSettings",C,V_syncSettings
T@"<DNDSSyncSettingsProviderDelegate>",W,N,V_delegate
UUID IN %@
source.clientIdentifier IN %@
source.deviceIdentifier == %@
B24@?0@"DNDModeAssertion"8@"NSDictionary"16
startDate < %@
<%@: %p; behaviorSettings: %@; phoneCallBypassSettings: %@; scheduleSettings: %@>
behaviorSettings
phoneCallBypassSettings
scheduleSettings
T@"DNDSBehaviorSettingsRecord",R,C,N,V_behaviorSettings
T@"DNDSBypassSettingsRecord",R,C,N,V_phoneCallBypassSettings
T@"DNDSScheduleSettingsRecord",R,C,N,V_scheduleSettings
T@"DNDSBehaviorSettingsRecord",C,D,N
T@"DNDSBypassSettingsRecord",C,D,N
T@"DNDSScheduleSettingsRecord",C,D,N
dnds_outOfSpaceError
TB,R,D,N,Gdnds_isOutOfSpaceError
allowed
suppressed
v24@?0@"DNDSClientConnectionDetails"8@"NSXPCConnection"16
@"DNDSClientConnectionDetails"16@?0@"DNDSClientConnectionDetails"8
T@"<DNDSRemoteServiceProviderDelegate>",W,N,V_delegate
com.apple.donotdisturb.service
com.apple.private.donotdisturb.behavior.resolution.client-identifiers
com.apple.private.donotdisturb.mode.assertion.client-identifiers
com.apple.private.donotdisturb.state.request.client-identifiers
com.apple.private.donotdisturb.state.updates.client-identifiers
com.apple.private.donotdisturb.settings.request.client-identifiers
com.apple.private.donotdisturb.settings.modify.client-identifiers
com.apple.private.donotdisturb.settings.updates.client-identifiers
com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers
B24@?0@8@"NSDictionary"16
assertion.source.clientIdentifier IN %@
[AUTO GENERATED] [%@/%@] %@ (%@:%lu%@)
 -- %@:%lu
Please describe what you were doing:
--- Do not edit below this line ---
Error: %@
Original title: %@
%%0A
tap-to-radar://new?ComponentID=960036&ComponentName=Do%%20Not%%20Disturb%%20(iOS)&ComponentVersion=New%%20Bugs&Title=%@&Description=%@
[Intenal] File a Radar (DND)
Do Not Disturb has encoutered an unexpected state. Please file a Radar to help us diagnose this issue!
Yes, I'll help!
/System/Library/Frameworks/CoreServices.framework/CoreServices
### Failed to Soft Linked: /System/Library/Frameworks/CoreServices.framework/CoreServices
LSApplicationWorkspace
com.apple.private.alloy.donotdisturb
com.donotdisturb.server.Server
SignificantTimeChangeNotification
com.apple.telephonyutilities.callservicesd
com.apple.NanoPhone
TQ,V_lockState
TQ,V_lostModeState
Event was resolved: resolution=%{public}@
Pruned %lu resolutions from record
Got bypass settings: settings=%{public}@
Checked if event source is a favorite: source=%{public}@, favorite=%{BOOL}d
Error looking up favorite contacts: error=%{public}@
Checked if event source is a contact: source=%{public}@, contact=%{BOOL}d
Error looking up contacts: error=%{public}@
Checked if event source is a group contact: source=%{public}@, contact=%{BOOL}d
Error looking up group contacts: error=%{public}@
Checked if event source is a repeat: source=%{public}@, repeat=%{BOOL}d
Checked if event source is an emergency contact: source=%{public}@, emergencyContact=%{BOOL}d
Error looking up emergency contacts: error=%{public}@
Requested access to events, granted=%{BOOL}d error=%{public}@
Refreshing monitor, date=%{public}@
Invalidating existing timer; fireDate=%{public}@
Scheduling timer; nextUpdateDate=%{public}@
Refreshing monitor
Location monitoring failed for region, will stop monitor and invalidate all assertions; manager=%p, region=%@, error=%{public}@
Location region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed region entry
Confirmed region exit, will invalidate all assertions
Received unexpected region exit, will start region monitoring again
Did not handle state %{public}@
Location monitoring found location, will update geofence; manager=%p, locations=%@
Location monitoring failed, will stop monitor and invalidate all assertions; manager=%p, error=%{public}@
Requesting location to begin monitoring
Location monitoring stopping for geofence; region=%@
Location monitoring started for geofence; location=%@, region=%@
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.takeAssertion
Inserted new assertion into store; assertion=%{public}@
Inserted new invalidation request into store; invalidationRequest=%{public}@
Assertion was already invalidated; assertion=%{public}@
Assertion already exists in store; assertion=%{public}@
Found %lu assertion(s) for predicate: predicate=%{public}@
Found %lu assertion invalidation(s) for predicate: predicate=%{public}@
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.invalidateAssertions
Inserted new invalidation request into store; request=%{public}@
Assertion preserved; assertion=%{public}@
Assertion invalidated; invalidation=%{public}@, invalidationRequest=%{public}@
Assertion already invalidated, skipping work; invalidation=%{public}@, invalidationRequest=%{public}@
Sending assertion taken event
Updating aggregated metrics
Sending daily metrics heartbeat
Sending weekly metrics heartbeat
Sending monthly metrics heartbeat
Metrics Wrote out store to file
Metrics Failed to write store, but error can be ignored; error=%{public}@
Metrics Failed to write store, will request radar; error=%{public}@
Skipping inactive lifetime, lifetime=%{public}@
Current DND state was calculated: state=%{public}@, snapshot=%{public}@
Failed to load settings, will request a radar; error=%{public}@
Saved settings; settingsRecord=%{public}@
Failed to save settings, but error can be ignored; error=%{public}@
Failed to save settings, will request a radar; settingsRecord=%{public}@, error=%{public}@
Cleaning up state
Update toggle sync: companionUpdateDate=%{public}@, gizmoUpdateDate=%{public}@, reason=%{public}@
Gizmo date was not valid, will reset to distantPast
Gizmo date is bogus, will reset to distantPast: gizmoUpdateDate=%{public}@
Gizmo date is in the future, will reset to now: gizmoUpdateDate=%{public}@
Will update toggle sync state to reflect current companion state, companionToggleDNDActive=%{BOOL}d, gizmoDNDActive=%{BOOL}d, reason=%{public}@
Ignoring update to toggle for reason %{public}@ as it was not user initiated
Gizmo has toggled DND, will mirror locally: gizmoDNDActive=%{BOOL}d
Gizmo has invalidated its DND assertion, will mirror locally
Did not update local state as it was not required
Companion assertion active changed, will update gizmo: value=%{BOOL}d
Gizmo has taken a DND assertion, will mirror locally
NPS has sent notification, name=%{public}@
Unable to find assertions, will return default: error=%{public}@
Unable to find assertion invalidations, will return default: error=%{public}@
com.apple.donotdisturb.ModeAssertionManager.updateModeAssertions
Executed handler; return=%{BOOL}d
Failed to load assertion database, will request a radar; error=%{public}@
Wrote out store to file
Failed to write store, but error can be ignored; error=%{public}@
Failed to write store, will request radar; error=%{public}@
Error decoding behavior overrides: error=%{public}@
Error encoding behavior overrides
Got new schedule settings: settings=%{public}@, oldSettings=%{public}@
Got new schedule settings: settings=%{public}@
Got new bypass settings: settings=%{public}@, oldSettings=%{public}@
Got new bypass settings: settings=%{public}@
Skipping update as it should not require sync: result=%{public}@
Rejecting incoming message as it is not from the active device: deviceIdentifier=%{public}@, pairedDevice=%{public}@
*** PLEASE UPDATE DEVICES *** Rejecting incoming message as the version number is not supported by this sync protocol: versionNumber=%lu, currentVersionNumber=%lu
Received message from sync service; syncService=%p, message=%{public}@, versionNumber=%lu, deviceIdentifier=%{public}@
Received impossible version number: versionNumber=%lu, currentVersionNumber=%lu
%lu assertion(s) were abandoned by the remote device, will invalidate: UUIDs=%{public}@
Incoming store was older than the store it replaced, will re-send...
Skipping received store as it is older than the last received store
Error decoding the assertion store from sync message
Error sending local assertions: error=%{public}@
Skipping sending store as it is the same as the previous
Successfully wrote migrated settings
Error writing migrated settings, but error can be ignored; error=%{public}@
Error writing migrated settings, will request radar: error=%{public}@
Error loading legacy settings, will request radar: error=%{public}@
Error loading legacy settings but there was no error. Will ignore.
Legacy override status present with no pre-existing assertion store, will create
Successfully wrote migrated assertions
Error writing migrated assertions, will request radar: error=%{public}@
Legacy override status' effective time is in the future. Ignoring...
Successfully removed legacy settings
Error removing legacy settings, will request radar: error=%{public}@
Updated assertions for schedule: settings=%{public}@
Unable to update assertions for schedule: error=%{public}@, settings=%{public}@
Existing schedule assertion does not need to change: settings=%{public}@
Paired device state changed: from=%{public}@, to=%{public}@
Paired device did not change: current=%{public}@
Pairing ID and data store of current watch was invalid; device=%{public}@, pairingID=%{public}@, pairingDataStore=%{public}@
Device class was invalid: device=%{public}@
Paired watch updated, will check for pairing change
Paired device state updated, will check for pairing change
Nearby devices changed, devices=%{public}@
Received sync data: service=%{public}@, service=%{public}@, identifier=%{public}@, message=%{public}@, deviceIdentifier=%@, context=%{public}@
Unable to resolve the device identifier from the IDS ID
Sync data send has finished: identifier=%{public}@, success=%{BOOL}d, error=%{public}@
Send sync data: identifier=%{public}@
Failed to send sync data: identifier=%{public}@, error=%{public}@
Failed to migrate message
Discarding data because delegate did not allow the message
Missing data, will skip message
Missing record version number, will skip message
Invalid version number, will skip message: versionNumber=%{public}@
Capturing sysdiagnose... date=%{public}@
Sysdiagnose captured
Could not capture sysdiagnose due to too much data
Could not capture sysdiagnose due to unable to make Plist: error=%{public}@
Did receive state update, will handle; stateUpdate=%{public}@
Delivering state update: stateUpdate=%{public}@, connection=%{public}@
Did receive update result with %lu assertion(s) & %lu invalidation(s), will handle; updateResult=%{public}@
Delivering assertion update with invalidation: assertion=%{public}@, invalidation=%{public}@, connection=%{public}@
Delivering assertion update: assertion=%{public}@, connection=%{public}@
Did receive updated behavior settings, will handle; settings=%{public}@
Delivering settings update: settings=%{public}@, connection=%{public}@
Did receive updated phone call bypass settings, will handle; settings=%{public}@
Did receive updated schedule settings, will handle; settings=%{public}@
XPC connection successfully accepted: connection=%{public}@
XPC connection without any valid entitlements tried to connect, will reject: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to process event, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to take mode assertion, will invalidate: connection=%{public}@, assertionDetails=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion invalidation, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for state updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get phone call bypass settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set phone call bypass settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set schedule settings, will invalidate: connection=%{public}@
Client XPC connection was interrupted: connection=%{public}@
Client XPC connection was invalidated: connection=%{public}@
Registering new connection details for connection: connection=%{public}@
Updating connection details for connection: connection=%{public}@, updatedConnectionDetails=%{public}@
Connection details unregistered: connection=%{public}@, clientDetails=%{public}@
Invalidating assertion due to client disconnect: connection=%{public}@, UUID=%{public}@
Will sanitize assertion date: date=%{public}@ assertion=%{public}@
Will sanitize invalidation date: date=%{public}@ invalidation=%{public}@
Will sanitize invalidation request date: date=%{public}@ invalidationRequest=%{public}@
Access to contacts store: granted=%{BOOL}u, error=%{public}@
Got significant time change; update lifetime monitors
Lifetime monitor says active assertions changed; monitor=%p
Lifetime monitor says UUIDs should expire; monitor=%p, UUIDs=%{public}@
No behavior settings in settings manager, will return default settings
No phone call bypass settings in settings manager, will return default settings
No schedule settings in settings manager, will return default settings
Performed update for sync manager; manager=%{public}@
Error when performing update for sync manager; manager=%{public}@, error=%{public}@
Received updated bypass settings via sync; manager=%{public}@, settings=%{public}@
Received updated schedule settings via sync; manager=%{public}@, settings=%{public}@
DND behavior settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND phone call bypass settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND schedule settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Sync settings updated; manager=%{public}@, settings=%{public}@
Paired devices updated; monitor=%{public}@, previousDevice=%{public}@, device=%{public}@
State was updated: stateUpdate=%{public}@
Ignored update as it changed nothing
Current DND sync status: device=%{public}@, settings=%{public}@
Received new lost mode state: state=%@
Starting up...
Received new UI lock state: state=%@
Resolution
DNDSModernAssertionSourceResolution
NSObject
DNDSBehaviorSettingsRecord
NSCopying
NSMutableCopying
DNDSBackingStoreRecord
DNDSMutableBehaviorSettingsRecord
DNDSJSONBackingStore
DNDSSysdiagnoseDataProvider
DNDSBackingStore
DNDSModeAssertionInvalidationRequest
Schedule
DNDSLifetimeMonitorResult
DNDSBaseLifetimeMonitor
DNDSLifetimeMonitor
DNDSDateHelper
DNDClientEventSource
DNDSEventBehaviorResolver
Record
DNDSMemoryCachedBackingStore
DNDSBackingStoreDelegate
DNDSBypassSettingsRecord
DNDSMutableBypassSettingsRecord
DNDSCalendarEventLifetimeMonitor
SyncMessage
DNDSDateIntervalLifetimeMonitor
DNDSDefaultLifetimeMonitor
Defaults
DNDSLocationLifetimeMonitor
CLLocationManagerDelegate
DNDSScheduleSettingsRecord
DNDSMutableScheduleSettingsRecord
BackingRecord
BackingStores
BackingRecordUpgrade
DNDSModeAssertionManagerUpdateContext
DNDSModeAssertionUpdateContext
DNDSModeAssertionQuerying
SysdiagnoseRecord
DNDSModeDetails
DNDSMetricsManager
DNDSScheduleLifetimeMonitor
DNDSModeRepository
PeaceSyncMessage
DNDSClientConnectionDetails
DNDSMutableClientConnectionDetails
DNDSStateProvider
LegacySupport
DNDSScheduleSettings
DNDSSettingsManager
DNDSSyncSettingsProviderDelegate
DNDSModeAssertionUpdateResult
DNDSModeAssertionInvalidationPredicate
DNDSAnyModeAssertionInvalidationPredicate
DNDSModeAssertionDateInvalidationPredicate
DNDSModeAssertionClientIdentifierInvalidationPredicate
DNDSModeAssertionUUIDInvalidationPredicate
DNDSLegacyAssertionSyncManager
DNDSAssertionSyncManager
DNDSModeAssertionManager
DNDSModeAssertionUpdating
DNDSMetricsRecord
DNDSMutableMetricsRecord
DNDSLegacySettingsSyncManager
DNDSSettingsSyncManager
DNDSModeAssertionStore
DNDSMutableModeAssertionStore
DNDSModernAssertionSync
DNDSModernAssertionSyncManager
DNDSSyncServiceDelegate
DNDSModeAssertionStoreRecord
Dictionary
DNDSModeAssertionStoreRecordDictionaryEncoding
DNDSPairedDevice
DNDSEventBehaviorResolution
DNDSHeartbeatMetricsRecord
DNDSHeartbeatMetricsProtocol
DNDSMutableHeartbeatMetricsRecord
DNDSMutableHeartbeatMetricsProtocol
DNDSDailyHeartbeatMetricsRecord
DNDSMutableDailyHeartbeatMetricsRecord
DNDSWeeklyHeartbeatMetricsRecord
DNDSMutableWeeklyHeartbeatMetricsRecord
DNDSMonthlyHeartbeatMetricsRecord
DNDSMutableMonthlyHeartbeatMetricsRecord
DNDModeAssertionLifetimeTypeHelper
DNDModeAssertionScheduleLifetimeBehaviorHelper
DNDSScheduleManager
DNDSLegacyBehaviorOverride
NSSecureCoding
NSCoding
DNDSClientDetailsProvider
DNDServer
DNDSPairedDeviceStateMonitor
IDSServiceDelegate
BackingStore
DNDSIDSSyncService
DNDSSyncService
DNDSLegacyBehaviorOverrideEffectiveInterval
DNDSSyncSettings
DNDSStateProviderSystemSnapshot
DNDSMutableStateProviderSystemSnapshot
DNDModeAssertionInvalidationReasonHelper
DNDModeAssertionInvalidationReasonOverrideHelper
DNDSModeAssertionInvalidationPredicateTypeHelper
DNDSModeAssertionRecord
DNDSModeAssertionDetailsRecord
DNDSModeAssertionLifetimeRecord
DNDSModeAssertionSourceRecord
DNDSModeAssertionInvalidationRecord
DNDSModeAssertionInvalidationDetailsRecord
DNDSModeAssertionInvalidationRequestRecord
DNDSModeAssertionInvalidationPredicateRecord
LifetimePhase
DNDSClientDetails
DNDSSyncSettingsProvider
Predicates
DNDSSettingsRecord
DNDSMutableSettingsRecord
DoNotDisturbServer
DNDSRemoteServiceProvider
NSXPCListenerDelegate
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
Entitlements
DateOperations
DNDSServer
DNDSEventBehaviorResolverDataSource
DNDSLifetimeMonitorDataSource
DNDSScheduleLifetimeMonitorDataSource
DNDSLifetimeMonitorDelegate
DNDSRemoteServiceProviderDelegate
DNDSRemoteServiceProviderBehaviorResolutionDelegate
DNDSRemoteServiceProviderAssertionDelegate
DNDSRemoteServiceProviderStateDelegate
DNDSRemoteServiceProviderSettingsDelegate
DNDSAssertionSyncManagerDataSource
DNDSAssertionSyncManagerDelegate
DNDSLegacyAssertionSyncManagerDataSource
DNDSSettingsSyncManagerDataSource
DNDSSettingsSyncManagerDelegate
DNDSScheduleManagerDataSource
DNDSSettingsManagerDelegate
DNDSPairedDeviceStateMonitorDelegate
source
resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:
isEqual:
UUID
startDate
details
initWithUUID:startDate:details:source:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
assertion
invalidationDate
reason
reasonOverride
initWithAssertion:invalidationDate:details:source:reason:reasonOverride:
deviceIdentifier
clientIdentifier
initWithClientIdentifier:deviceIdentifier:
predicate
requestDate
initWithUUID:predicate:requestDate:details:source:reason:reasonOverride:
_initWithRecord:
interruptionBehaviorSetting
_initWithInterruptionBehaviorSetting:
init
copy
stringWithFormat:
bs_safeObjectForKey:ofType:
dictionary
setObject:forKey:
migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
newWithDictionaryRepresentation:
copyWithZone:
mutableCopyWithZone:
dictionaryRepresentation
.cxx_destruct
_interruptionBehaviorSetting
setInterruptionBehaviorSetting:
dealloc
defaultManager
path
fileExistsAtPath:
dataWithContentsOfURL:options:error:
JSONObjectWithData:options:error:
integerValue
firstObject
delegate
backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
arrayWithObjects:count:
numberWithUnsignedInteger:
timeIntervalSinceReferenceDate
numberWithDouble:
dictionaryWithObjects:forKeys:count:
dataWithJSONObject:options:error:
URLByDeletingLastPathComponent
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToURL:options:error:
dnds_isOutOfSpaceError
numberWithBool:
sysdiagnoseDataForDate:
sysdiagnoseDataIdentifier
readRecordWithError:
writeRecord:error:
setDelegate:
initWithRecordClass:fileURL:versionNumber:
_recordClass
_fileURL
_versionNumber
_deviceOutOfSpace
_delegate
requestWithPredicate:requestDate:source:reason:
requestWithPredicate:requestDate:details:source:reason:reasonOverride:
_UUID
_predicate
_requestDate
_details
_source
_reason
_reasonOverride
scheduleEnabledSetting
timePeriod
startTime
dateComponents
endTime
date:matchesComponents:
nextDateAfterDate:matchingComponents:options:
compare:
initWithStartDate:endDate:
dnds_dateIntervalForScheduleSettings:date:calendar:
dnds_dateIntervalUntilEndOfScheduleForScheduleSettings:startDate:calendar:
initWithActiveUUIDs:expiredUUIDs:
activeUUIDs
expiredUUIDs
_activeUUIDs
_expiredUUIDs
cStringUsingEncoding:
refreshMonitorFromQueueForDate:
dataSource
lifetimeClass
lifetimeMonitor:modeAssertionsWithLifetimeClass:
updateForModeAssertions:date:
count
lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:expirationDate:
activeAssertionsDidChangeForLifetimeMonitor:
activeLifetimeAssertionUUIDs
UUIDString
bs_mapNoNulls:
refreshMonitorForDate:
setDataSource:
queue
_queue
_activeLifetimeAssertionUUIDs
_dataSource
dnds_numberWithDate:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
dnds_dateValue
dnds_safeNumberWithDate:
type
value
predicateForContactsWithIdentifiers:
destinationIdIsPhoneNumber
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:prefixHint:
predicateForContactsMatchingEmailAddress:
dnds_predicateForContactsMatchingEventSource:
initWithContactStore:
_queue_resolveBehaviorForEventDetails:clientDetails:date:error:
date
localizedStringFromDate:dateStyle:timeStyle:
outcome
currentStateForEventBehaviorResolver:
shouldAlwaysInterrupt
suppressionState
isResolutionContextAssumingDeviceUILocked
currentUILockStateForEventBehaviorResolver:
_queue_resolveOutcomeForEventSource:clientDetails:date:reason:
detailsForInactiveDoNotDisturb
activeModeAssertionMetadata
modeIdentifier
arrayByAddingObject:
modeDetailsForIdentifiers:
countByEnumeratingWithState:objects:count:
restrictedDetailsWithDetails:
interruptionSuppression
initWithEventDetails:interruptionSuppression:
resolutionForDate:eventBehavior:clientIdentifier:outcome:reason:
addObject:
dateByAddingTimeInterval:
predicateWithBlock:
filterUsingPredicate:
eventBehaviorResolver:bypassSettingsForClientIdentifier:
immediateBypassEventSourceType
_queue_eventSourceIsFavorite:
_queue_eventSourceIsContact:
immediateBypassCNGroupIdentifier
_queue_eventSourceIsContact:inGroupWithIdentifier:
repeatEventSourceBehaviorEnabledSetting
_queue_eventSourceIsRepeat:clientDetails:date:
_queue_eventSourceIsEmergencyContact:
initWithKeysToFetch:
setPredicate:
setUnifyResults:
isUnified
linkedContacts
entriesForContact:
bs_containsObjectPassingTest:
enumerateContactsWithFetchRequest:error:usingBlock:
predicateForContactsInGroupWithIdentifier:
unifiedContactsMatchingPredicate:keysToFetch:error:
bs_flatten
identifier
isEqualToString:
eventBehavior
eventDetails
callAlert
ignoreMute
initWithModeRepository:contactStore:
resolveBehaviorForEventDetails:clientDetails:date:error:
_modeRepository
_contactStore
_favorites
_resolutionRecord
unsignedIntegerValue
makeRecord
settingsForRecord:
initWithUnderlyingBackingStore:
_underlyingBackingStore
_cache
_lock
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
bs_setSafeObject:forKey:
_immediateBypassEventSourceType
_immediateBypassCNGroupIdentifier
_repeatEventSourceBehaviorEnabledSetting
setImmediateBypassEventSourceType:
setImmediateBypassCNGroupIdentifier:
setRepeatEventSourceBehaviorEnabledSetting:
initWithEKOptions:
requestAccessToEntityType:completion:
defaultCenter
_calendarEventStoreChangedWithNotification:
addObserver:selector:name:object:
eventUniqueID
occurrenceDate
eventWithUniqueId:occurrenceDate:
isOnlyDuringEvent
endDate
distantFuture
array
lifetime
activeDateIntervalForCalendarEventLifetime:assertionStartDate:
dnds_lifetimePhaseForDate:
earlierDate:
isEqualToDate:
fireTime
reset
invalidate
_timerFired:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
setUserVisible:
scheduleInQueue:
userInfo
_eventStore
_lifetimeTimer
bs_safeDictionaryForKey:
recordForDictionary:keys:
object
bs_safeNumberForKey:
distantPast
recordForAssertionStore:
dictionaryWithKeys:options:
syncDictionaryRepresentationWithDate:messageUUID:
newWithSyncDictionaryRepresentation:
messageDateForSyncDictionaryRepresentation:
dateInterval
initWithSuppressionState:activeModeAssertionMetadata:userVisibleTransitionDate:userVisibleTransitionLifetimeType:
fallbackState
dnd_locationBundle
initWithEffectiveBundle:delegate:onQueue:
_queue_refreshMonitor
_queue_stopMonitoringCurrentLocation
_queue_sendExpiryEventForAllLocationAssertions
_queue_beginMonitoringCurrentLocation
lastObject
_queue_geofenceLocation:
isEqualToArray:
requestLocation
stopMonitoringForRegion:
coordinate
initWithCenter:radius:identifier:
setNotifyOnExit:
setNotifyOnEntry:
startMonitoringForRegion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_locationManager
_currentRegion
_regionEntered
_hasActiveLifetimes
lastUpdatedTimestamp
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
bedtimeBehaviorEnabledSetting
_initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:bedtimeBehaviorEnabledSetting:
_lastUpdatedTimestamp
_scheduleEnabledSetting
_timePeriodStartTimeHour
_timePeriodStartTimeMinute
_timePeriodEndTimeHour
_timePeriodEndTimeMinute
_bedtimeBehaviorEnabledSetting
setLastUpdatedTimestamp:
setScheduleEnabledSetting:
setTimePeriodStartTimeHour:
setTimePeriodStartTimeMinute:
setTimePeriodEndTimeHour:
setTimePeriodEndTimeMinute:
setBedtimeBehaviorEnabledSetting:
fileURLWithPathComponents:
URLByAppendingPathComponent:
dnds_localAssertionBackingStoreFileURL
dnds_settingsBackingStoreFileURL
dnds_metricsBackingStoreFileURL
dnds_legacySettingsFileURL
mutableCopy
bs_safeArrayForKey:
bs_safeStringForKey:
removeObjectForKey:
boolValue
laterDate:
bs_takeObjectForKey:
upgradeDictionaryRepresentation:fromVersionNumber:toVersionNumber:
emptyResult
clientDetailsForIdentifier:
assertions
invalidations
containsObject:
setAssertions:
isUserInteractionClient
predicateForAnyAssertion
identifiers
predicateForAssertionClientIdentifiers:
invalidationRequests
setInvalidationRequests:
sanitizeDatesForThreshold:
_resolveStore:
_cleanupStore:
_calculateUpdateResultForStore:previousStore:
resultCombiningWithResult:
filteredArrayUsingPredicate:
takeAssertionWithUUID:details:source:startDate:
sortedArrayUsingComparator:
predicateForAssertionsTakenBeforeDate:
andPredicateWithSubpredicates:
evaluateWithObject:
bs_firstObjectPassingTest:
sortUsingComparator:
setInvalidations:
orderedSetWithArray:
objectForKey:
keysSortedByValueUsingComparator:
allValues
addObjectsFromArray:
removeAllObjects
clientIdentifiers
UUIDs
bs_safeAddObject:
allObjects
bs_filter:
initWithAssertions:invalidations:
modeAssertionsMatchingPredicate:
modeAssertionInvalidationsMatchingPredicate:
takeAssertionWithDetails:source:startDate:
invalidateAssertionsForRequest:
initWithStore:clientDetailsProvider:
store
updateResult
_clientDetailsProvider
_store
_updateResult
sysdiagnoseDictionaryRepresentation
initWithInterruptionSuppression:
_interruptionSuppression
backingStoreWithFileURL:
scheduleIdentifier
_calendar
component:fromDate:
numberWithInteger:
_aggregateMetricsWithEnabled:manuallyEnabled:numberOfNewSessions:numberOfNewManualSessions:controlCenterPhone:controlCenterWatch:type:mode:dayOfWeek:
sendMetricsHeartbeatsIfNeeded
_sendDailyHeartbeatIfNeeded
_sendWeeklyHeartbeatIfNeeded
_sendMonthlyHeartbeatIfNeeded
_metricsDayStringForDate:
metricsByDay
valueForKey:
_metricsWeekStringForDate:
metricsByWeek
_metricsMonthStringForDate:
metricsByMonth
setEnabled:
setManuallyEnabled:
numberOfSessions
intValue
numberWithInt:
setNumberOfSessions:
numberOfManualSessions
setNumberOfManualSessions:
setEnabledFromControlCenterPhone:
setEnabledFromControlCenterWatch:
setEnabledForOneHour:
setEnabledUntilEvening:
setEnabledUntilMorning:
setEnabledAtLocation:
setEnabledDuringEvent:
setEnabledDrivingMode:
setEnabledSleepMode:
setDayOfWeek:
setValue:forKey:
setMetricsByDay:
setMetricsByWeek:
setMetricsByMonth:
_writeMetricsToStore:
lastDailyHeartbeat
startOfDayForDate:
_dateForYesterday
enabled
manuallyEnabled
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledForOneHour
enabledUntilEvening
enabledUntilMorning
enabledAtLocation
enabledDuringEvent
enabledDrivingMode
enabledSleepMode
dayOfWeek
setLastDailyHeartbeat:
lastWeeklyHeartbeat
_startOfWeekWithDate:
_startOfLastWeek
setLastWeeklyHeartbeat:
lastMonthlyHeartbeat
_startOfMonthWithDate:
_startOfLastMonth
setLastMonthlyHeartbeat:
_dateFormatter
setDateStyle:
setTimeStyle:
stringFromDate:
setLocalizedDateFormatFromTemplate:
setDay:
dateByAddingComponents:toDate:options:
components:fromDate:
weekday
dateFromComponents:
month
setMonth:
initWithCalendarIdentifier:
systemTimeZone
setTimeZone:
initWithLocaleIdentifier:
setLocale:
assertionTaken:withClientDetails:lockState:
_metricsBackingStore
_metricsRecord
scheduleSettingsForScheduleLifetimeMonitor:
defaultScheduleSettings
currentCalendar
_activeDateIntervalForScheduleLifetime:assertionStartDate:date:scheduleSettings:calendar:ignoreMatchScheduleStartDate:
behavior
creationDate
containsDate:
activeDateIntervalForScheduleLifetime:assertionStartDate:date:
nextActiveDateIntervalForScheduleLifetime:assertionStartDate:date:
setLifetimeType:
setEventUniqueID:
setOnlyDuringEvent:
setOccurrenceDate:
setStartDate:
setEndDate:
dnds_stringForLifetimeType:
setScheduleIdentifier:
dnds_stringForScheduleLifetimeBehavior:
setBehavior:
setIdentifier:
setModeIdentifier:
setLifetime:
setClientIdentifier:
setUUID:
setDetails:
setSource:
recordForInvalidationRequest:
lifetimeType
onlyDuringEvent
predicateType
peaceSyncDictionaryRepresentationWithDate:messageUUID:userRequestedClientIdentifierHandler:
newWithPeaceSyncDictionaryRepresentation:
messageDateForPeaceSyncDictionaryRepresentation:
_initWithDetails:
interruptionInvalidationAssertionUUID
assertionUpdateClientIdentifiers
wantsStateUpdates
wantsSettingsUpdates
_initWithInterruptionInvalidationAssertionUUID:assertionUpdateClientIdentifiers:wantsStateUpdates:wantsSettingsUpdates:
_interruptionInvalidationAssertionUUID
_assertionUpdateClientIdentifiers
_wantsStateUpdates
_wantsSettingsUpdates
setInterruptionInvalidationAssertionUUID:
setAssertionUpdateClientIdentifiers:
setWantsStateUpdates:
setWantsSettingsUpdates:
activeAssertionUUIDs
lostModeState
activeDateIntervalByAssertionUUID
userVisibleEndDate
initWithClientIdentifier:modeIdentifier:lifetimeType:activeDateInterval:userVisibleEndDate:
setLastCalculatedState:
recalculateStateForSnapshot:
lastCalculatedState
_lastCalculatedState
initRequiringSecureCoding:
setClassName:forClass:
dnds_secureLegacyArchiver
initForReadingFromData:error:
setClass:forClassName:
dnds_secureLegacyUnarchiverForReadingFromData:error:
settingsWithClientSettings:creationDate:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:creationDate:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:
supportsSecureCoding
replacementObjectForCoder:
_creationDate
initWithQueue:
_readSettingsReturningError:
behaviorSettings
_saveBehaviorSettings:phoneCallBypassSettings:scheduleSettings:error:
settingsManager:didReceiveUpdatedBehaviorSettings:
phoneCallBypassSettings
settingsManager:didReceiveUpdatedPhoneCallBypassSettings:
scheduleSettings
settingsManager:didReceiveUpdatedScheduleSettings:
syncSettings
setBehaviorSettings:
setPhoneCallBypassSettings:
setScheduleSettings:
settingsManager:didReceiveUpdatedSyncSettings:
behaviorSettingsWithError:
phoneCallBypassSettingsWithError:
scheduleSettingsWithError:
hour
minute
syncSettingsWithError:
isSyncEnabled
syncSettingsProvider:didReceiveUpdatedSyncSettings:
initWithBackingStore:contactStore:
setBehaviorSettings:withError:
setPhoneCallBypassSettings:withError:
setScheduleSettings:withError:
_backingStore
_syncSettingsProvider
arrayByAddingObjectsFromArray:
_assertions
_invalidations
initWithDate:
initWithClientIdentifiers:
initWithUUIDs:
predicateForAssertionUUIDs:
_init
evaluateWithObject:substitutionVariables:
sharedInstance
initWithCoder:
encodeWithCoder:
decodeObjectOfClass:forKey:
encodeObject:forKey:
_date
setWithObjects:
decodeObjectOfClasses:forKey:
_clientIdentifiers
_UUIDs
initWithDomain:
synchronize
pairingIdentifier
pairingDataStore
initWithDomain:pairingID:pairingDataStore:
_endMonitoringForChanges
_beginMonitoringForChanges
_updateForReason:
_queue_updateToggleSyncForReason:
_queue_updateGizmoAssertionSyncWithModeAssertionUpdateContext:
syncManager:performModeAssertionUpdatesWithHandler:
currentStateForLegacyAssertionSyncManager:
lastUpdateDate
activeDateInterval
_queue_gizmoUpdateDate
_queue_updateCompanionToggleSyncForGizmoUpdateDate:modeAssertionUpdateContext:
_queue_updateGizmoToggleSyncForState:companionUpdateDate:reason:
_queue_updateCompanionAssertionMirroringForState:
doubleForKey:keyExistsAndHasValidFormat:
dateWithTimeIntervalSinceNow:
boolForKey:
isSyncSuppressedClient
setBool:forKey:
setDouble:forKey:
synchronizeNanoDomain:keys:
predicateForModeAssertionsWithClientIdentifiers:
currentlyActivePairedDeviceForSyncManager:
lifetimeUntilEndOfScheduleWithIdentifier:
setWithObject:
detailsWithIdentifier:modeIdentifier:lifetime:
cleanupState
resume
updateForModeAssertionUpdateResult:
updateForStateUpdate:
initWithClientDetailsProvider:pairedDevice:
_updateGizmoAssertionSync
_npsManager
_accessor
initWithBackingStore:clientDetailsProvider:
_loadDataFromBackingStore
updateModeAssertionsWithContextHandler:error:
_saveDataToBackingStoreWithError:
isPersistentAssertionClient
initWithBackingStoreURL:clientDetailsProvider:
clientDetailsForClientIdentifier:
_storeLock
_initWithMetricsByDay:lastDailyHeartbeat:metricsByWeek:lastWeeklyHeartbeat:metricsByMonth:lastMonthlyHeartbeat:
_metricsByDay
_lastDailyHeartbeat
_metricsByWeek
_lastWeeklyHeartbeat
_metricsByMonth
_lastMonthlyHeartbeat
integerForKey:keyExistsAndHasValidFormat:
recordForLegacyPrivilegedSenderType:legacyAddressBookID:
legacyPrivilegedSenderType
setInteger:forKey:
recordForLegacyBehaviorOverride:lastUpdated:
legacyBehaviorOverride
encodedData
dnds_bypassSettings
dnds_setBypassSettings:
dnds_scheduleSettingsWithLastUpdated:
dnds_setScheduleSettings:
_initWithListen:send:pairedDevice:
_updateBypassSettings
_updateScheduleSettingsWithDate:
update
phoneCallBypassSettingsForSyncManager:
scheduleSettingsForSyncManager:
_propagateBypassSettings:
_propagateScheduleSettings:
syncManager:didReceiveUpdatedScheduleSettings:
syncManager:didReceiveUpdatedPhoneCallBypassSettings:
sendManagerForPairedDevice:
receiveManagerForPairedDevice:
_listen
_send
_initWithStore:
_invalidationRequests
filterForSyncToPairedDevice:clientDetailsProvider:
unresolveSourcesForSyncToPairedDevice:
resolveSourcesForSyncFromPairedDevice:
_queue_sendStateSnapshotToPairedDevice:force:
_queue_handleMessage:withVersionNumber:
predicateForModeAssertionsWithDeviceIdentifier:
removeObject:
syncProtocolVersion
sendMessage:withVersionNumber:completionHandler:
syncService:didReceiveMessage:withVersionNumber:fromDeviceIdentifier:
syncService:shouldAcceptIncomingMessage:withVersionNumber:fromDeviceIdentifier:
initWithClientDetailsProvider:syncService:
_syncService
_lastReceivedStoreDate
_lastSentStoreDate
dnds_setSafeLocalDateForTimestamp:key:
setUserVisibleEndDate:
setDeviceIdentifier:
setAssertion:
setInvalidationDate:
setReason:
setReasonOverride:
setRequestDate:
setPredicateType:
setDate:
setClientIdentifiers:
setUUIDs:
dictionaryWithContentsOfURL:
recordWithEncodedInfo:error:
timeIntervalSinceNow
removeItemAtURL:error:
deviceClass
initWithDeviceIdentifier:deviceClass:syncProtocolVersion:pairingIdentifier:pairingDataStore:
_deviceIdentifier
_deviceClass
_syncProtocolVersion
_pairingIdentifier
_pairingDataStore
_initWithUUID:date:eventBehavior:clientIdentifier:outcome:reason:
_eventBehavior
_clientIdentifier
_outcome
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:
bs_boolForKey:
_enabled
_manuallyEnabled
_numberOfSessions
_numberOfManualSessions
_enabledFromControlCenterPhone
_enabledFromControlCenterWatch
_enabledForOneHour
_enabledUntilEvening
_enabledUntilMorning
_enabledAtLocation
_enabledDuringEvent
_enabledDrivingMode
_enabledSleepMode
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:dayOfWeek:
_dayOfWeek
dnds_lifetimeTypeValue
dnds_scheduleLifetimeBehaviorValue
scheduleSettingsForScheduleManager:
_refreshWithScheduleSettings:context:
lifetimeMatchingScheduleWithIdentifier:
initWithModeAssertionManager:
refresh
_modeAssertionManager
_currentScheduleSettings
decodeIntegerForKey:
initWithOverrideType:mode:effectiveIntervals:
overrideType
encodeInteger:forKey:
mode
effectiveIntervals
_overrideType
_mode
_effectiveIntervals
_loadPreloadBundles
clientDetailsForIdentifier:applicationBundleURL:
_defaultModuleDirectories
URLByAppendingPathExtension:
detailsForBundleAtURL:
detailsForClientIdentifier:applicationBundleURL:
initWithClientIdentifier:identifiers:resolutionContextAssumingDeviceUILocked:userInteractionClient:persistentAssertionClient:syncSuppressedClient:
pathWithComponents:
bs_map:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
hasSuffix:
findClientDetailsForIdentifier:
_detailsByIdentifier
_dnds_pairedDeviceClass
_dnds_syncProtocolVersion
_queue_updatePairedState
pairedDevice
_getCurrentPairedDevice
setPairedDevice:
pairedDeviceStateMonitor:pairingChangedFromDevice:toDevice:
getActivePairedDevice
valueForProperty:
_pairedDeviceStateChanged:
UTF8String
removeObserver:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithIDSService:
_idsService
_pairedDeviceDidChangeNotificationToken
_pairedDevice
_queue_resume
_queue_sendMessage:withVersionNumber:error:
devices
deviceForIDSDevice:
pairingID
outgoingResponseIdentifier
_queue_handleIncomingMessage:deviceIdentifier:
addDelegate:queue:
sendMessage:toDestinations:priority:options:identifier:error:
dataWithPropertyList:format:options:error:
length
getBytes:length:
weakObjectsHashTable
initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:identifier:
startComponents
endComponents
calendarIdentifier
repeatInterval
_startComponents
_endComponents
_calendarIdentifier
_repeatInterval
_identifier
initWithSyncEnabled:
_syncEnabled
_initWithSnapshot:
_initWithAssertions:activeAssertionUUIDs:activeDateIntervalByAssertionUUID:interruptionBehaviorSetting:lostModeState:
_activeAssertionUUIDs
_activeDateIntervalByAssertionUUID
_lostModeState
setActiveAssertionUUIDs:
setActiveDateIntervalByAssertionUUID:
setLostModeState:
_recordWithEncodedInfo:error:
bs_firstObjectOfClass:
setHour:
setMinute:
predicateForiOSLegacyIdentifier:
requestAccessForEntityType:completionHandler:
groupsMatchingPredicate:error:
dnds_invalidationReasonValue
dnds_stringForInvalidationReason:
dnds_invalidationReasonOverrideValue
dnds_stringForInvalidationReasonOverride:
dnds_predicateTypeValue
dnds_stringForPredicateType:
recordForAssertion:
recordForInvalidation:
recordForAssertionDetails:
recordForAssertionSource:
initWithUUIDString:
_startDate
recordForAssertionLifetime:
_modeIdentifier
_userVisibleEndDate
_lifetime
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
initWithDateInterval:
initWithScheduleIdentifier:behavior:
_lifetimeType
_eventUniqueID
_occurrenceDate
_onlyDuringEvent
_endDate
_scheduleIdentifier
_behavior
recordForInvalidationDetails:
_assertion
_invalidationDate
recordForInvalidationPredicate:
_predicateType
_detailsForClientIdentifier:bundleInfoDictionary:
_resolutionContextAssumingDeviceUILocked
_userInteractionClient
_persistentAssertionClient
_syncSuppressedClient
_identifiers
_updateSyncPreferences
_queue_updateSyncPreferences
boolForKey:keyExistsAndHasValidFormat:
setSyncSettings:
_syncSettings
predicateWithFormat:
predicateForModeAssertionsWithUUIDs:
predicateForModeAssertionsWithLifetimeClass:
predicateForModeAssertionsTakenBeforeDate:
_initWithBehaviorSettings:phoneCallBypassSettings:scheduleSettings:
_behaviorSettings
_phoneCallBypassSettings
_scheduleSettings
domain
code
setStartTime:
setEndTime:
initWithMachServiceName:
weakToStrongObjectsMapTable
remoteObjectProxy
deliverStateUpdate:
_iterateClientConnectionsToSendWithHandler:
deliverActiveModeAssertionUpdate:invalidation:clientIdentifiers:
deliverUpdatedBehaviorSettings:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedScheduleSettings:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
_handleClientConnectionInterrupted:
setInterruptionHandler:
_handleClientConnectionInvalidated:
setInvalidationHandler:
dnds_hasAnyValidEntitlement
currentConnection
dnds_hasBehaviorResolutionEntitlementForClientIdentifier:
_clientDetailsForClientIdentifier:clientConnection:
remoteServiceProvider:resolveBehaviorForEventDetails:clientDetails:date:error:
dnds_hasEntitlementsToRequestAssertionWithDetails:clientIdentifier:
remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:error:
_registerOrMutateConnectionDetailsForClientConnection:handler:
dnds_hasModeAssertionEntitlementForClientIdentifier:
remoteServiceProvider:invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
remoteServiceProvider:assertionWithClientIdentifer:error:
remoteServiceProvider:latestInvalidationWithClientIdentifer:error:
dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:
remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:clientIdentifier:error:
setByAddingObject:
dnds_hasStateRequestEntitlementForClientIdentifier:
remoteServiceProvider:currentStateWithError:
dnds_hasStateUpdatesEntitlementForClientIdentifier:
dnds_hasSettingsRequestEntitlementForClientIdentifier:
remoteServiceProvider:behaviorSettingsWithError:
dnds_hasSettingsModificationEntitlementForClientIdentifier:
remoteServiceProvider:setBehaviorSettings:withError:
remoteServiceProvider:phoneCallBypassSettingsWithError:
remoteServiceProvider:setPhoneCallBypassSettings:withError:
remoteServiceProvider:scheduleSettingsWithError:
remoteServiceProvider:setScheduleSettings:withError:
dnds_hasSettingsUpdatesEntitlementForClientIdentifier:
_unregisterConnectionDetailsForClientConnection:
remoteServiceProvider:invalidateModeAssertionWithUUID:reason:reasonOverride:error:
auditToken
fileURLWithPath:
listener:shouldAcceptNewConnection:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
takeModeAssertionWithDetails:requestDetails:completionHandler:
invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
registerForAssertionUpdatesWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
setBehaviorSettings:withRequestDetails:completionHandler:
getPhoneCallBypassSettingsWithRequestDetails:completionHandler:
setPhoneCallBypassSettings:withRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
setScheduleSettings:withRequestDetails:completionHandler:
registerForSettingsUpdatesWithRequestDetails:completionHandler:
initWithClientDetailsProvider:
handleStateUpdate:
handleModeAssertionUpdateResult:
handleUpdatedBehaviorSettings:
handleUpdatedPhoneCallBypassSettings:
handleUpdatedScheduleSettings:
_listener
_clientConnectionDetailsByConnection
_dnds_safeStringArrayEntitlementForKey:
valueForEntitlement:
predicateForModeAssertionInvalidationsWithAssertionClientIdentifiers:
lastPathComponent
productHardwareModel
productBuildVersion
alphanumericCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByReplacingOccurrencesOfString:withString:
URLWithString:
defaultWorkspace
openURL:configuration:completionHandler:
lostModeIsActive
initWithService:
_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:
setLockState:
lockState
_updateModeAssertionManagerAndRefreshLifetimesAndStateWithHandler:error:
_queue_handlePairedDeviceAndSyncSettingsChange
_stateSystemSnapshot
initWithPreviousState:state:reason:
predicateWithValue:
_activeDateIntervalForModeAssertion:currentlyActive:
_handleSignificantTimeChange
setUILockState:error:
_setLostModeState:error:
_calendarEventLifetimeMonitor
_scheduleLifetimeMonitor
_lifetimeMonitors
_scheduleManager
_stateProvider
_eventBehaviorResolver
_serviceProvider
_assertionSyncManager
_settingsSyncManager
_settingsManager
_pairedDeviceStateMonitor
_metricsManager
_lockState
@40@0:8@16@24@32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8@"NSString"16@"NSString"24@"NSString"32
@40@0:8@16Q24Q32
@24@0:8@16
@24@0:8^{_NSZone=}16
@"NSDictionary"16@0:8
@24@0:8@"NSDictionary"16
v16@0:8
@"NSNumber"
v24@0:8@16
@"NSDictionary"24@0:8@"NSDate"16
@24@0:8^@16
Q32@0:8@16^@24
Q32@0:8@"<DNDSBackingStoreRecord>"16^@24
@"<DNDSBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSBackingStoreDelegate>"16
@40@0:8#16@24Q32
@"NSURL"
@"<DNDSBackingStoreDelegate>"
@48@0:8@16@24@32Q40
@64@0:8@16@24@32@40Q48Q56
@72@0:8@16@24@32@40@48Q56Q64
@"NSUUID"
@"DNDSModeAssertionInvalidationPredicate"
@"NSDate"
@"DNDModeAssertionInvalidationDetails"
@"DNDModeAssertionSource"
@32@0:8@16@24
@"NSArray"
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"<DNDSLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDataSource>"16
@"<DNDSLifetimeMonitorDelegate>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDelegate>"16
@"NSObject<OS_dispatch_queue>"
@"<DNDSLifetimeMonitorDataSource>"
@"<DNDSLifetimeMonitorDelegate>"
@48@0:8@16@24@32^@40
Q48@0:8@16@24@32o^Q40
B32@0:8@16@24
B40@0:8@16@24@32
@"<DNDSModeRepository>"
@"CNContactStore"
@"CNFavorites"
@"NSMutableArray"
@"<DNDSEventBehaviorResolverDataSource>"
@48@0:8@16@24Q32Q40
@"NSDictionary"48@0:8@"<DNDSBackingStore>"16@"NSDictionary"24Q32Q40
@"<DNDSBackingStore>"
@"<DNDSBackingStoreRecord>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@"EKEventStore"
@"PCPersistentTimer"
v40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"CLRegion"
@72@0:8@16@24@32@40@48@56@64
@"NSArray"24@0:8@"NSPredicate"16
@"DNDSModeAssertionUpdateResult"40@0:8@"DNDModeAssertionDetails"16@"DNDModeAssertionSource"24@"NSDate"32
@"DNDSModeAssertionUpdateResult"24@0:8@"DNDSModeAssertionInvalidationRequest"16
@48@0:8@16@24@32@40
v24@0:8N@16
@"DNDSClientDetailsProvider"
@"DNDSModeAssertionStore"
@"DNDSModeAssertionUpdateResult"
@24@0:8Q16
v40@0:8@16@24Q32
v64@0:8B16B20i24i28B32B36@40@48@56
@"DNDSMutableMetricsRecord"
@"NSCalendar"
@"NSDateFormatter"
@60@0:8@16@24@32@40@48B56
@"NSArray"24@0:8@"NSArray"16
@40@0:8@16@24@?32
@40@0:8@16@24B32B36
@"NSSet"
v20@0:8B16
@"DNDState"
@32@0:8@16^@24
@48@0:8Q16@24Q32@40
v32@0:8@"DNDSSyncSettingsProvider"16@"DNDSSyncSettings"24
B32@0:8@16^@24
Q48@0:8@16@24@32^@40
@"DNDSSyncSettingsProvider"
@"<DNDSSettingsManagerDelegate>"
@"<DNDSAssertionSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDataSource>"16
@"<DNDSAssertionSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDelegate>"16
v24@0:8@"DNDSModeAssertionUpdateResult"16
v24@0:8@"DNDStateUpdate"16
v24@0:8Q16
@"NPSManager"
@"NPSDomainAccessor"
@"<DNDSLegacyAssertionSyncManagerDataSource>"
@"<DNDSAssertionSyncManagerDelegate>"
@32@0:8@?16^@24
@"DNDSModeAssertionUpdateResult"32@0:8@?<B@?@"<DNDSModeAssertionUpdateContext>">16^@24
B24@0:8^@16
@64@0:8@16@24@32@40@48@56
@"NSDictionary"
@"<DNDSSettingsSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDataSource>"16
@"<DNDSSettingsSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDelegate>"16
@32@0:8B16B20@24
@"<DNDSSettingsSyncManagerDataSource>"
@"<DNDSSettingsSyncManagerDelegate>"
v48@0:8@16@24Q32@40
B48@0:8@16@24Q32@40
v48@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40
B48@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40
v32@0:8@16Q24
v28@0:8@16B24
@"<DNDSSyncService>"
@"<DNDSAssertionSyncManagerDataSource>"
@32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@}{?=@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@16r^{?={?=@@@}{?=@@@@}{?=@@@@}{?=@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@"NSDictionary"32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@}{?=@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@"NSDictionary"16r^{?={?=@@@}{?=@@@@}{?=@@@@}{?=@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@56@0:8@16Q24Q32@40@48
@56@0:8@16@24@32Q40Q48
@"DNDClientEventBehavior"
@"NSNumber"16@0:8
@76@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72
v24@0:8@"NSNumber"16
@84@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72@76
@"DNDSModeAssertionManager"
@"DNDSScheduleSettings"
@"<DNDSScheduleManagerDataSource>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16Q24@32
@"NSMutableDictionary"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
@"DNDSPairedDevice"
@"<DNDSPairedDeviceStateMonitorDelegate>"
v40@0:8@16Q24@?32
v40@0:8@"NSDictionary"16Q24@?<v@?B@"NSError">32
@"<DNDSSyncServiceDelegate>"16@0:8
v24@0:8@"<DNDSSyncServiceDelegate>"16
B40@0:8@16Q24^@32
@"<DNDSSyncServiceDelegate>"
@56@0:8@16@24@32Q40@48
@"NSDateComponents"
@20@0:8B16
@28@0:8Q16i24
@"DNDSModeAssertionDetailsRecord"
@"DNDSModeAssertionSourceRecord"
@"DNDSModeAssertionLifetimeRecord"
@"DNDSModeAssertionRecord"
@"DNDSModeAssertionInvalidationDetailsRecord"
@"DNDSModeAssertionInvalidationPredicateRecord"
Q24@0:8@16
@48@0:8@16@24B32B36B40B44
@"DNDSSyncSettings"
@"<DNDSSyncSettingsProviderDelegate>"
@24@0:8#16
@"DNDSBehaviorSettingsRecord"
@"DNDSBypassSettingsRecord"
@"DNDSScheduleSettingsRecord"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"DNDClientEventDetails"16@"DNDRequestDetails"24@?<v@?@"DNDClientEventBehavior"@"NSError">32
v48@0:8@16Q24@32@?40
v32@0:8@16@?24
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"DNDModeAssertion"@"NSError">32
v48@0:8@"DNDModeAssertionInvalidationDetails"16Q24@"DNDRequestDetails"32@?<v@?@"DNDModeAssertionInvalidation"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertionInvalidation"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?B@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDState"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBehaviorSettings"@"NSError">24
v40@0:8@"DNDBehaviorSettings"16@"DNDRequestDetails"24@?<v@?B@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBypassSettings"@"NSError">24
v40@0:8@"DNDBypassSettings"16@"DNDRequestDetails"24@?<v@?B@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDScheduleSettings"@"NSError">24
v40@0:8@"DNDScheduleSettings"16@"DNDRequestDetails"24@?<v@?B@"NSError">32
v24@0:8@?16
@"NSXPCListener"
@"NSMapTable"
@"<DNDSRemoteServiceProviderDelegate>"
@"DNDState"24@0:8@"DNDSEventBehaviorResolver"16
Q24@0:8@"DNDSEventBehaviorResolver"16
@"DNDBypassSettings"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@32@0:8@16#24
@"NSArray"32@0:8@"<DNDSLifetimeMonitor>"16#24
@"DNDSScheduleSettings"24@0:8@"<DNDSLifetimeMonitor>"16
v24@0:8@"<DNDSLifetimeMonitor>"16
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSArray"24@"NSDate"32
@56@0:8@16@24@32@40^@48
@"DNDClientEventBehavior"56@0:8@"DNDSRemoteServiceProvider"16@"DNDClientEventDetails"24@"DNDSClientDetails"32@"NSDate"40^@48
@40@0:8@16@24^@32
@56@0:8@16@24Q32Q40^@48
@64@0:8@16@24Q32Q40@48^@56
@56@0:8@16@24Q32@40^@48
@"DNDModeAssertion"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertionInvalidation"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertion"48@0:8@"DNDSRemoteServiceProvider"16@"DNDModeAssertionDetails"24@"NSString"32^@40
@"DNDModeAssertionInvalidation"56@0:8@"DNDSRemoteServiceProvider"16@"NSUUID"24Q32Q40^@48
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSString"24Q32Q40@"DNDModeAssertionInvalidationDetails"48^@56
@"NSArray"56@0:8@"DNDSRemoteServiceProvider"16@"NSDate"24Q32@"NSString"40^@48
@"DNDState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16@24^@32
@"DNDBehaviorSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBehaviorSettings"24^@32
@"DNDBypassSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBypassSettings"24^@32
@"DNDScheduleSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDScheduleSettings"24^@32
@"DNDSPairedDevice"24@0:8@"<DNDSAssertionSyncManager>"16
v32@0:8@"<DNDSAssertionSyncManager>"16@?<B@?@"<DNDSModeAssertionUpdateContext>">24
@"DNDState"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDBypassSettings"24@0:8@"<DNDSSettingsSyncManager>"16
@"DNDSScheduleSettings"24@0:8@"<DNDSSettingsSyncManager>"16
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDBypassSettings"24
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDSScheduleSettings"24
@"DNDSScheduleSettings"24@0:8@"DNDSScheduleManager"16
v32@0:8@"DNDSSettingsManager"16@"DNDBehaviorSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDBypassSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSScheduleSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSSyncSettings"24
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"DNDSPairedDevice"24@"DNDSPairedDevice"32
B32@0:8Q16^@24
@28@0:8@16B24
@"DNDSCalendarEventLifetimeMonitor"
@"DNDSScheduleLifetimeMonitor"
@"DNDSScheduleManager"
@"DNDSStateProvider"
@"DNDSEventBehaviorResolver"
@"DNDSRemoteServiceProvider"
@"<DNDSAssertionSyncManager>"
@"<DNDSSettingsSyncManager>"
@"DNDSSettingsManager"
@"DNDSPairedDeviceStateMonitor"
@"DNDSMetricsManager"
