softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
com.apple.springboardservices.eventobserver.internalSBSEventObserverEventDimmed
v8@?0
SBStatusBarReturnToHearingAidNotification
HearingAidUIClient
HearingAidUIServer
SBLockScreenManager
sharedInstanceIfExists
isUILocked
shouldShow
result
v24@?0@"NSDictionary"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
shouldIgnoreRouteChanges
TB,N,V_shouldIgnoreRouteChanges
isShowingHearingAidControl
TB,N,VisShowingHearingAidControl
hearingAidIsConnected
TB,N,V_hearingAidIsConnected
holdingMediaForConnection
TB,N,V_holdingMediaForConnection
holdingPhoneForConnection
TB,N,V_holdingPhoneForConnection
preferredRoute
T@"NSDictionary",&,N,V_preferredRoute
preferredRouteTimer
T@"NSTimer",&,N,V_preferredRouteTimer
mediaUpdateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaUpdateQueue
SBReachabilityManager
SBPrototypeController
sharedInstance
rootSettings
SBReachabilityDomain
SBReachabilitySettings
animationSettings
yOffsetFactor
SBFFluidBehaviorSettings
trackingDampingRatio
dampingRatio
trackingResponse
response
trackingRetargetImpulse
retargetImpulse
reachabilityEnabled
reachabilityModeActive
_notifyObserversReachabilityModeActive:
_setKeepAliveTimer
enabled
offset
Accessibility
SBMainWorkspace
_instanceIfExists
SBBacklightController
SBUIController
_lockScreenEnvironment
SBApplicationController
SHAKE_TO_ENABLE
AXSBServerOrientationChange
activeInterfaceOrientation
UITableViewTexture.png
ask.sheet.option.VoiceOver.on
activate-arrow
SWIPE_TO_ENABLE
delegate
T@"<AXSBVoiceOverSwipeDetectorDelegate>",W,N,V_delegate
CSScrollGestureController
setScrollingStrategy:
scrollingStrategy
SBOrientationLockChangedNotification
SBMediaNowPlayingChangedNotification
_UIAlertControllerActionView
UIAlertController
UIWindow
SBVolumeControl
SBHUDController
UIApplication
SpringBoard
SBControlCenterController
SBApplication
SBRestartManager
UIScreen
SBMainDisplaySceneManager
SBAssistantController
buttonIndex
Tq,N,VbuttonIndex
rootViewController
_canDismissWithGestureRecognizer
UIViewController
viewDidAppear:
_UIAlertControllerView
_mainInterfaceActionsGroupView
_UIAlertControllerInterfaceActionGroupView
UIInterfaceActionGroupView
actionSequenceView
_UIInterfaceActionRepresentationsSequenceView
arrangedActionRepresentationViews
_UIInterfaceActionCustomViewRepresentationView
_actionContentView
UIView
IsTripleClick
{CGRect={CGPoint=dd}{CGSize=dd}}8@?0
action
UIAlertAction
title
_preferredFocusedWindow
_userInterfaceStyleArbiterStyleChanged:
B16@?0@"AXValidationManager"8
SBTelephonyManager
SBConferenceManager
UIApplicationRotationFollowingWindow
inCallTransientOverlayManager
ringerControl
updateFrontMostApplicationEventPort
_keyboardFocusController
SBWorkspaceKeyboardFocusController
lockFocusToSpringBoardForReason:
SBInCallTransientOverlayManager
presentTransientOverlay
SBRingerControl
isRingerMuted
_reachabilityModeActive
isVisible
SBMediaController
SBOrientationLockManager
sharedTelephonyManagerCreatingIfNecessary:
SBMainSwitcherViewController
loginApplication
SBSystemGestureManager
isGestureWithTypeAllowed:
mainDisplayManager
SBVoiceControlController
handleHomeButtonHeld
_contentViewController
UIViewController<SBSwitcherContentViewControlling>
SBFluidSwitcherViewController
isClassic
_classicMode
isInsetForHomeAffordance
transientOverlayPresentationManager
SBTransientOverlayPresentationManager
topmostPresentedViewController
CSPageViewController
view
SBDefaults
localDefaults
coverSheetViewController
CSCoverSheetViewController
coverSheetView
activatePage:animated:withCompletion:
_indexOfMainPage
suppressesControlCenter
_allowedPageViewControllers
CSCoverSheetView
scrollView
SBFPagedScrollView
currentPageIndex
processState
SBApplicationProcessState
_updateProcess:withState:
taskState
visibility
_internalProcessState
lockUIFromSource:withOptions:
_authenticationStateChanged:
SBIdleTimerGlobalCoordinator
resetIdleTimer
shouldTurnOnScreenForBacklightSource:
setBacklightFactor:source:
CSCombinedListViewController
notificationStructuredListViewControllerShouldAllowNotificationHistoryReveal:
_notificationDispatcher
SBNCNotificationDispatcher
_bannerDestination
SBNotificationBannerDestination
presentedBanner
isPresentingBanner
activateMainSwitcherNoninteractivelyWithSource:animated:
SBSceneManagerCoordinator
mainDisplaySceneManager
policyAggregator
SBMainDisplayPolicyAggregator
allowsCapability:
SBMainDisplaySceneLayoutViewController
_statusBarView
SBMainDisplaySceneLayoutStatusBarView
dismissAssistantViewIfNecessary
SBSceneManager
sceneLayoutViewController
lockOutController
SBFDeviceLockOutController
isLockedOut
isPlaying
nowPlayingApplication
bundleIdentifier
isUserLocked
lock
unlock
_frontMostAppOrientation
addActiveOrientationObserver:
applicationOpenURL:
removeActiveOrientationObserver:
_toggleSearch
toggleSearchFromBreadcrumbSource:withWillBeginHandler:completionHandler:
_setRotatableViewOrientation:duration:force:
_effectiveVolumeChanged:
_presentVolumeHUDWithVolume:
SBLockScreenCallHandling
isMakingEmergencyCall
SBLockScreenPasscodeViewPresenting
isPasscodeLockVisible
SBLockScreenEnvironment
passcodeViewPresenter
SBLockScreenViewControllerBase
dismissMainSwitcherNoninteractivelyAnimated:
dismissAllSwitchersNoninteractivelyAnimated:
allowShowTransition
allowShowTransitionSystemGesture
inCall
isEndpointOnCurrentDevice
applicationWithPid:
inFaceTime
presentAnimated:
applicationWithBundleIdentifier:
toggleReachability
setReachabilityEnabled:
_activateApplicationFromAccessibility:
SBAppLayout
homeScreenAppLayout
visibleItemContainers
layoutContext
SBRotationLockHUDViewController
SBVolumeHUDViewController
_presentHUD:animated:
unlockUIFromSource:withOptions:
SBLockScreenUnlockRequest
setName:
setSource:
setIntent:
unlockWithRequest:completion:
_scrollGestureController
isPasscodeEntryTransientOverlayVisible
isLockScreenVisible
SBIconController
floatingDockController
SBCoverSheetPresentationManager
_coverSheetSlidingViewController
SBCoverSheetSlidingViewController
systemGesturesDelegate
SBCoverSheetSystemGesturesDelegate
gestureRecognizerShouldBegin:
presentGestureRecognizer
dismissGestureRecognizer
setCoverSheetPresented:animated:withCompletion:
coverSheetSlidingViewControllerIfLoaded
_appearState
isInSecureApp
CSMainPageContentViewController
mainPageContentViewController
combinedListViewController
NCNotificationListSectionRevealHintView
revealHintTitle
_structuredListViewController
NCNotificationStructuredListViewController
revealNotificationHistory:animated:
masterList
NCNotificationMasterList
isNotificationHistoryRevealed
_listPresentingContent
_allowNotificationsRevealPolicy
isDndDrivingModeActive
noteMenuButtonDoublePress
SBMainScreenActiveInterfaceOrientationWindow
SBSecureMainScreenActiveInterfaceOrientationWindow
contentViewController
initWithDebugName:
setContentViewController:
isShowingHomescreen
setHighlighted:
isPresented
iconManager
SBHIconManager
isIconDragging
isOverlayTodayOrLibraryViewVisible
isAnyTouchGestureRunning
_screenCapturer
SSScreenCapturer
_serviceWindow
SSScreenshotsWindow
_hostViewControllerIfExists
SBDeviceApplicationSceneHandle
sceneIdentityForApplication:
fetchOrCreateApplicationSceneHandleForRequest:
bestSnapshotWithImageName:sceneHandle:variantID:scale:size:contentTypeMask:statusBarStateMask:launchingOrientation:contentOverridesContext:userInterfaceStyle:displayEdgeInfo:
{CGSize=dd}
SBApplicationSceneHandleRequest
defaultRequestForApplication:sceneIdentity:displayIdentity:
displayEdgeInfoForForLayoutEnvironment:isInsetForHomeAffordance:
SBSpotlightMultiplexingViewController
sharedRemoteSearchViewController
SPUIRemoteSearchViewController
revealProgress
SBVoiceControlTransientOverlayViewController
SBPIPController
_pictureInPictureWindow
SBPIPWindow
FBSSceneSettings
otherSettings
bannerManager
SBBannerManager
AXSpringBoardServerHelper
v16@?0@"AXValidationManager"8
AXSB_UIScreenSafeCategory
AXSB_UIAlertControllerActionViewSafeCategory
AXSB_UIAlertControllerSafeCategory
AXSBUIWindow
AXSBServerHelperSBControlCenterController
AXSBServerVolumeControl
AXSBServerSBHUDController
AXSBServerUIApplication
AXSpringBoardAccessibility
AXSBLockScreenManager
AXSBReachabilityManagerAccessibility
AXSBHomeHardwareButtonActions
AXSB_SBApplicationSafeCategory
AXSB_SBRestartManagerSafeCategory
AXSBDeviceApplicationSceneStatusBarBreadcrumbProviderAccessibility
AXCSScrollGestureControllerAccessibility
AXSB_SBMainDisplaySceneManagerSafeCategory
AXSB_SBAssistantControllerSafeCategory
AX_AX_SBSecureMainScreenActiveInterfaceOrientationWindowOverride
AX_SBSecureMainScreenActiveInterfaceOrientationWindow
com.apple.mobile.SubstantialTransition
v16@?0@"NSNotification"8
AXVisualAlertEvent
bundleId
visualAlertType
AXVisualAlertEventEnded
SBSyncController
SBWallpaperController
Incoming call: %@
Incoming call?: %{public}@
Call status (Before answering call): %lu
Answering call
Call status (After answering call): %lu
Existing calls: %@
Existing call count: %lu
Call status (Before disconnecting call) : %lu
Disconnecting call
Call status (After disconnecting call) : %lu
SBUseHardwareSwitchAsOrientationLock
prefs:root=ACCESSIBILITY&path=TOUCH_REACHABILITY_TITLE/AIR_TOUCH_TITLE/CreateCustomGesture
prefs:root=ACCESSIBILITY&path=TOUCH_REACHABILITY_TITLE/AIR_TOUCH_TITLE/AssistiveTouchCustomize
prefs:root=ACCESSIBILITY&path=ScannerSwitchTitle/CustomGesturesIdentifier/CreateCustomGesture
prefs:root=ACCESSIBILITY&path=CommandAndControlTitle
prefs:root=ACCESSIBILITY&path=CommandAndControlTitle/CUSTOMIZE_COMMANDS
prefs:root=ACCESSIBILITY&path=CommandAndControlTitle/VOCABULARY
screenIsOn
callController
com.apple.WebKit.WebContent
v12@?0I8
v12@?0i8
_allowGestureRecognizers
B16@?0@8
isFloatingDockFullyPresented
isPresentingFolder
isAnySwitcherVisible
isInUse
model
allApplications
displayName
isInternalApplication
Trying to unlock with intent %d: unlock request did not respond to %s
Accessibility screen unlock
v12@?0B8
NotImplemented
showSpeechPlaybackControls not implemented
Retried media pause, %@
success
fail
Media Pause command %@
Retried media play, %@
Media Play command %@
incomingCallExists
outgoingCallExists
GAXSpringboard
isActive
expected SBUIController to respond to _activateApplicationFromAccessibility: %@
SOS: triggering SOS
displayIdentity
SBSuspendSnapshot
downscaled
v16@?0q8
NCNotificationViewController
SBBulletinWindowController
_accessibilityAllowsShowNotificationsGestureFromThreeFingerSwipe
notification.center.showing
AXSBAllowShowNotificationGesture
IsAXActivating
com.apple.purplebuddy
v32@?0@8Q16^B24
q24@?0@8@16
ordering options: %@
ask.sheet.title
v16@?0@"UIAlertAction"8
ask.sheet.option.cancel
windowContextID
AccessibilityShortcut
Accessibility Presented Window
_accessibilityObjectWithinProximity
ZoomConflictMessage
ZoomConflictTitle
TripleClickMessage
TripleClickEnableTitle
cancel
enable
USAGE_CONFIRMED_TITLE
VoiceOver.confirmation.message.format
voiceover.home.gesture.alert.title
voiceover.home.gesture.alert.message
vo.disallow.usb.restricted.mode.alert.message_IPOD
vo.disallow.usb.restricted.mode.alert.message_IPAD
vo.disallow.usb.restricted.mode.alert.message_IPHONE
.informativeOnly
vo.disallow.usb.restricted.mode.alert.title
sc.disallow.usb.restricted.mode.alert.message_IPOD
sc.disallow.usb.restricted.mode.alert.message_IPAD
sc.disallow.usb.restricted.mode.alert.message_IPHONE
sc.disallow.usb.restricted.mode.alert.title
DWELL_CONTROL_CUSTOMIZE_MENU
DWELL_CONTROL_ADD_DWELL_SCROLL
DWELL_CONTROL_CUSTOMIZE
DWELL_CONTROL_ADD_DWELL
DWELL_CONTROL_ADD_SCROLL
devices.require.ast.title
Accessibility-hello
devices.require.ast.message
turn.off
SECURE_INTENT_ALERT_FIRST_USE_TITLE_AST
SECURE_INTENT_ALERT_FIRST_USE_TITLE_SC
SECURE_INTENT_ALERT_FIRST_USE_BODY_AST
SECURE_INTENT_ALERT_FIRST_USE_BODY_SC
SWITCH_USAGE_CONFIRMED_MESSAGE
TURN_OFF_AST_ALERT_MESSAGE
TURN_OFF_SC_ALERT_MESSAGE
TURN_OFF_FKA_ALERT_MESSAGE
TOUCH_ACCOMMODATIONS_USAGE_CONFIRMED_MESSAGE
broken.home.button.title
broken.home.button.message
enable.zoom.purple.buddy.title
enable.zoom.purple.buddy.message
REBOOT_ALERT_MESSAGE_IPHONE
REBOOT_ALERT_MESSAGE_IPAD
REBOOT_ALERT_MESSAGE_IPOD
REBOOT_ALERT_CONFIRM
sideAppManager
T@"AXSpringBoardServerSideAppManager",R,N
alertManager
T@"AXSpringBoardServerAlertManager",&,N,V_alertManager
presentationWindow
T@"UIWindow",&,N,V_presentationWindow
presentationWindowFocusAssertion
T@"<BSInvalidatable>",&,N,V_presentationWindowFocusAssertion
disableSystemGesturesAssertionForAlert
T@"AXAssertion",&,N,V_disableSystemGesturesAssertionForAlert
hudViewController
initializeAndRunStartupTransition:
v16@?0@"BSTransaction"8
v24@?0@"BSTransactionBlockObserver"8@16
dismissAssistantViewIfNecessaryWithDismissalOptions:
dismissalReason
PKPassLibrary
/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
SOSManager
/System/Library/PrivateFrameworks/SOS.framework/SOS
SBDeviceApplicationSceneStatusBarBreadcrumbProvider
SBWorkspaceApplicationSceneTransitionContext
_shouldAddBreadcrumbToActivatingSceneEntity:sceneHandle:withTransitionContext:
applicationSceneEntityForLayoutRole:
previousApplicationSceneEntityForLayoutRole:
SBWorkspaceTransitionContext
request
SBMainWorkspaceTransitionRequest
source
isMainWorkspaceTransitionRequest
SBApplicationSceneEntity
application
SBHomeHardwareButtonActions
performSinglePressUpActions
AXSpringBoardServerInstanceDidInitializeNotification
AXCaptionPanelContextDidChangeNotification
SBFaceTimeStateChangedNotification
identifier
T@"NSString",C,N,V_identifier
type
T@"NSString",C,N,V_type
sb-ax-action-queue
payload
Error sending reachability toggled message: %@
B32@?0@"AXIPCClient"8Q16^B24
B32@?0@8Q16^B24
Proximity Changed triggering an audio route change
%s:%d %@
-[_AXSpringBoardServerInstance _proximityDidChange:]
Speaker
Receiver
accessibility.avsystem.retrieval
HeadphonesBT
HeadsetBT
CarAudioOutput
BluetoothLEOutput
Headset
Headphone
LineOut
v32@?0@"NSDictionary"8Q16^B24
Hearing aids paired. Skipping call route
-[_AXSpringBoardServerInstance _setCallRoute:ifCurrentlyRoutedTo:withRoutes:]
Changing route to %@
-[_AXSpringBoardServerInstance _setAVCallRoute:]
You shouldn't have called me
_hasFinishedLaunching
SpringBoard is not done booting. Waiting for notification to start AXSB server.
MPAVRoutingControllerDidPickRouteNotification
PrimaryUsagePage
PrimaryUsage
v20@?0I8@"NSString"12
error starting AX SB IPC server: %@
RBSProcessEverythingPredicate
everythingPredicate
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
hostIdentity
embeddedApplicationIdentifier
com.apple.accessibility.voiceover
com.apple.commandandcontrol
com.apple.private.allow-explicit-graphics-priority
com.apple.accessibility.physicalinteraction.client
com.apple.assistivetouch.daemon
com.apple.fullkeyboardaccess
com.apple.accessibility.AccessibilityUIServer
com.apple.accessibility.axctl
com.apple.accessibility.automation.client
com.apple.accessibility.api
com.apple.CoreRoutine.preferences
com.apple.hearingaids
com.apple.voiceservices.tts.customvoice
com.apple.accessibility.AXSettingsShortcuts
com.apple.accessibility.AXSBServer.assertions
com.apple.AXUIViewService
B32@?0@"AXAssertionIdentifierTypePair"8Q16^B24
_takeScreenshotAndEdit:
_accessibilitySetSystemGesturesDisabledByAccessibility:
_isSpringBoardShowingAnAlert
lockScreenEnvironment
applicationHoster
SBApplicationHosting
hostedAppSceneHandle
SBApplicationSceneHandle
SiriPresentationSpringBoardMainScreenViewController
SiriPresentationViewController
siriViewController
AFUISiriViewController
FBScene
FBApplicationProcess
FBProcessManager
FBSceneManager
systemApplicationProcess
FBProcess
isForeground
clientProcess
display
settings
enumerateScenesWithBlock:
frame
{CGRect={CGPoint=dd}{CGSize=dd}}
level
isOccluded
hasActivePresentation
RBSProcessIdentity
AXSpringBoardServerInstance
GAX-BB
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2883/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSpringBoardServerInstance.m
-[_AXSpringBoardServerInstance _setupAssertionServerIfNeeded]_block_invoke
AXSpringBoardServer did not understand assertion type: %@
v16@?0@"NSString"8
reenabling dashboard system gestures
disabling dashboard system gestures
orientation
alertType
data
remoteViewType
passcodeStatusRequired
screenLocked
passcode
lockScreenEnvironment.applicationHoster.hostedAppSceneHandle.application.processState
register
locked
active
cancelEnabled
isMainSwitcherVisible
visible
contextId
record
show
string
query
excludeSiri
gesture
mode
splashData
assertionServer
T@"_AXAssertionServer",&,N,V_assertionServer
disableNotificationCenterAssertionHeld
TB,N,V_disableNotificationCenterAssertionHeld
disableControlCenterAssertionHeld
TB,N,V_disableControlCenterAssertionHeld
T@"<AXSpringBoardServerInstanceDelegate>",W,N,V_delegate
Switching to default route
void callStateChanged(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)_block_invoke
Call no longer active, switching to previous route
Auto-answering incoming call: %{public}@ , with status: %d
Auto Answer pref val is %{public}@ - call count is %lu, incoming call: %{public}@ , incoming video call: %{public}@
DeviceUsagePairs
DeviceUsage
DeviceUsagePage
IAPHIDAccessoryCategory
Error opening device: %d
void safeDecrementRef(mach_port_t)
%s: Failure deallocating right %llx: %d! This probably means there is a port right overrelease somewhere!
safeDecrementRef
handlesByService
T@"NSMutableDictionary",&,N,V_handlesByService
TripleClickAskWindow
_highlighted
sendEvent:
TripleClickTitle
selected
__AXStringForVariablesSentinel
stopping speak for TC menu
speaking TC menu item: %@
AXDispatchTimer
TripleClickSpeakWaited
SBIconLocationFloatingDockSuggestions
SBPlatformController
medusaCapabilities
SBSceneLayoutViewController
externalForegroundApplicationSceneHandles
mainDisplaySceneLayoutViewController
layoutState
sceneManager
SBApplicationSceneHandleProviding
SBApplicationSceneIdentityProviding
newSceneIdentityForApplication:
SBLayoutState
elementWithRole:
SBMainDisplayLayoutState
spaceConfiguration
floatingConfiguration
unlockedEnvironmentMode
_appLayouts
NSArray
_currentFloatingAppLayout
_configureRequest:forSwitcherTransitionRequest:withEventLabel:
SBSwitcherTransitionRequest
requestForActivatingAppLayout:
SBWorkspace
mainWorkspace
requestTransitionWithOptions:builder:validator:
SBWorkspaceTransitionRequest
modifyApplicationContext:
setEntity:forLayoutRole:
setRequestedSpaceConfiguration:
setRequestedFloatingConfiguration:
SBWorkspaceEntity
SBEmptyWorkspaceEntity
SBPreviousWorkspaceEntity
entity
entityWithPreviousLayoutRole:
applicationSceneEntity
isMedusaCapable
info
SBDeviceApplicationSceneEntity
initWithApplicationForMainDisplay:
initWithApplicationSceneHandle:
FBSApplicationInfo
supportsMultiwindow
SBLayoutElement
layoutAttributes
workspaceEntity
_sceneLayoutViewController
isFloatingSwitcherVisible
SBIconView
icon
_iconLocation
NSString
iconManager:launchIconForIconView:withActions:
SBIcon
applicationBundleID
environment
AXSpringBoardServerHelperSideAppManager
AXSB_SBIconControllerSafeCategory
shouldAllowMedusaGestures
v24@?0@8q16
Tried to perform invalid side app gesture: %lu.  Allowed gestures: %@
currentLayoutState
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2883/AccessibilityUmbrellaFramework/Frameworks/AXSpringBoardServerInstance/Source/AXSpringBoardServerSideAppManager.m
-[AXSpringBoardServerSideAppManager _endDockIconActivationModeAfterTimeout]
Should not have tried to end dock icon activation mode if it was set to default.
ProgrammaticSwitchFloatingAppGestureMoveToRight
v16@?0@"<SBMainWorkspaceTransitionMethods>"8
v16@?0@8
T@"<AXSpringBoardServerSideAppManagerDelegate>",W,N,V_delegate
dockIconActivationMode
TQ,N,V_dockIconActivationMode
NSString *getSBIconLocationDock(void)
AXSpringBoardServerSideAppManager.m
SBIconLocationDock
void *SpringBoardHomeLibrary(void)
/System/Library/PrivateFrameworks/SpringBoardHome.framework/SpringBoardHome
/System/Library/PrivateFrameworks/SpringBoardHome.framework/Contents/MacOS/SpringBoardHome
NSString *getSBIconLocationFloatingDock(void)
SBIconLocationFloatingDock
Setting screen contrast to %.0f on display %@
/System/Library/AccessibilityBundles/VisualAlerts.bundle
AX: Update SB Server(%d, %lu) {{ Internal Logging }}
Could not read the login session note: %@
Could not property deserialize note as a plist: %@
v24@?0@"NSError"8@"NSData"16
/var/mobile/Library/Accessibility/DataResetAccessibilityFeatureReenablement
VoiceOverTouch
ZoomTouch
AssistiveTouch
SwitchControl
Enabling resting unlock because AST was on and we had never set this before
v16@?0B8B12
AX: Registering for SBAX server launch {{ Internal Logging }}
AccessibilitySettingsLoaderDidUpdateSettings
AXAssetClient-hearingaidmodule
AXAssetAndDataServer
AX_soundDetectionClient-sb
AXUltronPluginService
com.apple.ax.UltronApp
SBIconVisibility
com.apple.springboard.appIconVisibilityPreferencesChanged
_restartManager
rebootForReason:
AXSpringBoardSettingsLoader
Registering for home button errors
IOProviderClass
IOGeneralInterest
AXBrokenHomeButtonAlreadyRebootedOnce
Setting flag that we already rebooted one time
com.apple.accessibility.sshb.failure.reboot
@"NSDictionary"8@?0
rebooted
Home button detected as broken, rebooting gracefully
MESA FAILURE: Home button broke, rebooting
AST already running, no need to enable again
Switch Control already running, no need to enable again
Starting AST in repair incarnation mode
AppleSPUHIDDevice
button-err-state
Found device with button err state %d
Home button error state : %d (check type initial: %d), graceful reboot status? %d
AST Button failure mode: new count: %d
com.apple.accessibility.sshb.failure.assistivetouch.mode
resetCount
AST is on in repair mode, turning off. No more error state
AST setting failure mode log: %d
Jq+xaurJgFzSwxOfTqtBGw
Did get profile changed notification from MC:%@. Will check to see if GAX should be loaded
com.apple.accessibility.remote
VOWORK: Registering for remote network update
VOWORK: HIDE ENABLER %@
VOWORK: SWIPE GO AWAY: %@
VOWORK: window is gone
%@/%@
/System/Library/CoreServices/VoiceOverTouch.app
Sounds/FolderClosed.aiff
Sounds/FolderOpened.aiff
VOWORK: start frame: %@
VOWORK: reachability changed, isReachable: %d
VOWORK: force registration again: %d
configuration.apple.com
VOWORK: register for reachability changed %@
com.apple.springboard
com.apple.iapd.videoout.SettingsChanged
Button message handler: %d
AppleSPUHIDDevice property change
333333
?333333
MbP?
Could not find SBSecureMainScreenActiveInterfaceOrientationWindow
Could not make dynamic subclass for SBSecureMainScreenActiveInterfaceOrientationWindow
reachability state same as desired change, doing nothing
toggle NC: will show %d
NC center is visible: %d
CS is visible: %d
Can't toggle dock. GAX is active.
Requesting screen unlock. intent: %ld
Screen unlock request finished: %ld
Canceling Siri dismissal (if pending) due to AssistiveTouch handling an up event.
Not showing CoverSheet because system gesture delegate said no: %@
Showing CoverSheet and revealing more notifications
Revealing more recent notifications
Not revealing more recent notifications
Not hiding CS because system gesture delegate said no: %@
trying to hide recent notifications
Hiding CS with completion
GAX active or generally not allowed
BB window allows: %d
Show CC: %d
Show CC: Gesture manager said not generally allowed
Show CC: No because GA is active
Show CC: UI is locked, generally allowed: %d, ccAllows: %d
Show CC: controller allows transition: %d
Show CC: Allow transition: %d %{public}@
Show CC: Presenting CC
Show CC: Dismiss CC
Showing Guided Access in triple click due to call.
Not showing Guided Access in triple click: system app is frontmost.
Not showing Guided Access in triple click: app switcher is active.
Not showing Guided Access in triple click: multiple apps are active.
Not showing Guided Access in triple click: emergency call.
Not showing Guided Access in triple click: setup.
Not showing Guided Access in triple click: Settings is frontmost.
Triple click: dismissed.
Triple click: selected %@.
Triple click: canceled.
Triple click: presented.
Could not find the class for SBSecureMainScreenActiveInterfaceOrientationWindow.
Unexpectedly had a presentation window focus assertion, even though the presentation window was created from scratch
AssistiveTouch did not handle the up event. Now dismissing Siri.
Delaying Siri dismissal due to AssistiveTouch.
Error sending SpringBoard action: %@
Retrieved routes for category: %@ [%d]
Setting new telephony route for accessibility: %@
%{public}s
Should have a list of assertion pairs here, not nil!
SB acquired assertion: %@, %@
SB relinquished assertion: %@, %@
System gestures enabled: %d
Could not connect client for registering SpringBoard action handler: %{public}@
Error: %@
%{public}@
Usage pairs: %@
Activating remote alert service: %@, class: %@
withData: %@
Hiding remote alert service: %@
Remote alert handle did activate: %@
Remote alert handle did deactivate: %@
Remote alert handle did invalidate: %@
Remote alert handle did invalidate with error: %@
Attempting to perform invalid gesture: %ld
Could not read data reset state from file: %{public}@
Applying settings from before reset: %@
Could not remove data settings file: %@
Triple click buddy still in settings, need to remove
Trying to turn on hearing aid module: %d
Ultron client interrupted, restart: %d
Starting Sound Detection UI Server - Ultron
Starting Sound Detection UI Server - Sound Detection
Writing visiblity for ultron app: %d
whitelistedApps (%{public}@) or appSelfLockIDs (%{public}@) exist. WIll enable GAX (Single App Mode) now
whitelistedApps and appSelfLockIDs both nil.  No need to enable GAX (Single App Mode)
Initializing AXSpeechAssetMonitorHelper so that we check for assets if we need to.
Trying to kick off Sound Detection with nil SprinbBoardSettingsLoader - likely due to SB crash; bailing.
AXSBHearingAidDeviceController
AXUIClientDelegate
NSObject
AXHAServerDelegate
AXHeardServerDelegate
__AXSBReachabilityManagerAccessibility_super
SafeCategory
AXSBReachabilityManagerAccessibility
AXSBVoiceOverShakeMessage
AXSBVoiceOverSwipeDetectorView
__AXCSScrollGestureControllerAccessibility_super
AXCSScrollGestureControllerAccessibility
AXSecureWindow
__AXSB_UIAlertControllerActionViewSafeCategory_super
__AXSB_UIAlertControllerSafeCategory_super
__AXSBUIWindow_super
__AXSBServerVolumeControl_super
__AXSBServerSBHUDController_super
__AXSBServerUIApplication_super
__AXSpringBoardAccessibility_super
__AXSBLockScreenManager_super
__AXSBServerHelperSBControlCenterController_super
__AXSB_SBApplicationSafeCategory_super
__AXSB_SBRestartManagerSafeCategory_super
__AXSB_UIScreenSafeCategory_super
__AXSB_SBMainDisplaySceneManagerSafeCategory_super
__AXSB_SBAssistantControllerSafeCategory_super
AXTripleClickAlertController
AXAlertAction
AXTripleClickTableViewCell
AXSB_UIAlertControllerSafeCategory
AXSB_UIAlertControllerActionViewSafeCategory
AXSB_UIScreenSafeCategory
AXSB_SBMainDisplaySceneManagerSafeCategory
AXSpringBoardServerHelper
AXSpringBoardServerSideAppManagerDelegate
AXSpringBoardServerInstanceDelegate
AXSBLockScreenManager
AXSpringBoardAccessibility
AXSBServerUIApplication
AXSBUIWindow
AXSBServerHelperSBControlCenterController
AXSBServerSBHUDController
AXSBServerVolumeControl
AXSB_SBApplicationSafeCategory
AXSB_SBRestartManagerSafeCategory
AXSB_SBAssistantControllerSafeCategory
__AXSBDeviceApplicationSceneStatusBarBreadcrumbProviderAccessibility_super
AXSBDeviceApplicationSceneStatusBarBreadcrumbProviderAccessibility
__AXSBHomeHardwareButtonActions_super
AXSBHomeHardwareButtonActions
AXAssertionIdentifierTypePair
_AXSpringBoardServerInstance
AXSpringBoardServerAlertManager
SBSRemoteAlertHandleObserver
AXViewServiceHandler
__AX_AX_SBSecureMainScreenActiveInterfaceOrientationWindowOverride_super
AX_AX_SBSecureMainScreenActiveInterfaceOrientationWindowOverride
__AXSpringBoardServerSideAppManager
AXSpringBoardServerSideAppManager
__AXSB_SBIconControllerSafeCategory_super
AXSB_SBIconControllerSafeCategory
AXSpringBoardSettingsLoader
AXSBVoiceOverSwipeDetectorDelegate
AVSpeechSynthesizerDelegate
init
defaultCenter
liveListenStatusBarActivated:
addObserver:selector:name:object:
removeObserver:
dealloc
sharedInstance
startServerWithDelegate:
initWithIdentifier:serviceBundleName:
setDelegate:
isScreenLocked
showHearingAidControl:
safeValueForKey:
safeBoolForKey:
allowHearingAidControlOnLockScreen
server
isControlCenterVisible
showControlCenter:
hearingUIClient
numberWithBool:
dictionaryWithObject:forKey:
backgroundAccessQueue
valueForKey:
boolValue
setIsShowingHearingAidControl:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
pairedHearingAids
setHearingAidControlIsVisible:
sharedController
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
hearingServerDidDie:
hearingAidConnectionDidChange:
startServer
_lockStateChanged
isShowingHearingAidControl
shouldIgnoreRouteChanges
setShouldIgnoreRouteChanges:
hearingAidIsConnected
setHearingAidIsConnected:
holdingMediaForConnection
setHoldingMediaForConnection:
holdingPhoneForConnection
setHoldingPhoneForConnection:
preferredRoute
setPreferredRoute:
preferredRouteTimer
setPreferredRouteTimer:
mediaUpdateQueue
setMediaUpdateQueue:
.cxx_destruct
_routeChangedTime
_shouldIgnoreRouteChanges
_hearingAidIsConnected
_holdingMediaForConnection
_holdingPhoneForConnection
_preferredRoute
_preferredRouteTimer
_mediaUpdateQueue
safeCategoryTargetClassName
safeCategoryBaseClass
validateClass:
validateClass:hasClassMethod:withFullSignature:
validateClass:hasInstanceMethod:withFullSignature:
_notifyObserversReachabilityModeActive:
_axReachabilityEnabled
springBoardServerInstance
shouldSendReachabilityToggled
_axDictionaryOfAnimationProperties
setObject:forKeyedSubscript:
_axReachabilitySettings
doubleValue
mainScreen
bounds
numberWithDouble:
_axSendReachabilityToggledActionWithPayload:
dictionary
_axAddReachabilityProperty:toDictionary:
_synchronizeDrawingAcrossProcesses
reachabilityToggledWithPayload:synchronizationPort:completion:
_setKeepAliveTimer
_accessibilityPerformValidations:
bundleForClass:
localizedStringForKey:value:table:
applicationWithBundleIdentifier:
initWithFrame:
setClipsToBounds:
addSubview:
setNumberOfLines:
setFont:
clearColor
setBackgroundColor:
whiteColor
setTextColor:
setTextAlignment:
colorWithRed:green:blue:alpha:
setShadowColor:
setShadowOffset:
setText:
sizeToFit
frame
setFrame:
setAlpha:
orientationChange
reorientHUDIfNeeded:
safeIntegerForKey:
setTransform:
animateWithDuration:animations:
roundedRectBezierPath:withRoundedCorners:withCornerRadius:
setFill
fill
drawRect:
setAutoresizesSubviews:
setMultipleTouchEnabled:
_defaultBackgroundGradient
initWithImage:
setAutoresizingMask:
setUserInteractionEnabled:
kitImageNamed:
colorWithPatternImage:
_swipeDetected:
initWithTarget:action:
setDelaysTouchesEnded:
setCancelsTouchesInView:
setNumberOfTouchesRequired:
setDirection:
addGestureRecognizer:
initWithTitle:
setHidesBackButton:
_cancelVOSwipeActivation:
initWithBarButtonSystemItem:target:action:
setRightBarButtonItem:
pushNavigationItem:animated:
imageNamed:inBundle:
boldSystemFontOfSize:
setLineBreakMode:
setColor:
colorWithAlphaComponent:
setIsAccessibilityElement:
delegate
swipeDetectorDetectedSwipe
state
swipeDetectorCanceled
touchesBegan:withEvent:
touchesEnded:withEvent:
layoutSubviews
_titleLabel
_bgImageView
_swipeDetected
_delegate
numberWithInteger:
_accessibilitySetSavedScrollingStrategy:
_accessibilityForcedScrollingStrategy
setScrollingStrategy:
_accessibilitySavedScrollingStrategy
_accessibilitySetForcedScrollingStrategy:
integerValue
accessibilitySetSystemDashBoardGesturesEnabled:
_isSecure
_allowInteractiveSheetDismissal
_canShowWhileLocked
actionWithTitle:style:handler:
setButtonIndex:
buttonIndex
initWithStyle:reuseIdentifier:
textLabel
colorWithWhite:alpha:
_topLine
_bottomLine
validateClass:isKindOfClass:
validateClass:hasInstanceVariable:withType:
_accessibilityLoadAccessibilityInformation
_applyAccessibilityLoadAccessibilityInformation
_accessibilityBoolValueForKey:
view
countByEnumeratingWithState:objects:count:
axSafelyAddObject:
_setAccessibilityFrameBlock:
accessibilityFrame
count
setAccessibilityElements:
_canDismissWithGestureRecognizer
viewDidAppear:
_isChecked
setAccessibilityTraits:
setAccessibilityLabel:
_isCarScreen
sharedServerHelper
presentationWindow
_preferredFocusedWindow
_userInterfaceStyleArbiterStyleChanged:
_isDarkModeActive
dictionaryWithObjects:forKeys:count:
springBoardActionOccurred:withPayload:
validateProtocol:hasRequiredInstanceMethod:
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
installSafeCategory:canInteractWithTargetClass:
performValidations:withPreValidationHandler:postValidationHandler:safeCategoryInstallationHandler:
_createAlertWindowSubclass
_performValidation
sharedApplication
addActiveOrientationObserver:
currentQueue
springBoardActionOccurred:
addObserverForName:object:queue:usingBlock:
addObject:
userInfo
objectForKeyedSubscript:
sideAppManager
isDisplayingApp
setAlertManager:
removeActiveOrientationObserver:
dismissAlertWithCancel
copy
mainAccessQueue
_handleTripleClickAskAlert
_handleZoomInBuddyAlert
handleBrokenHomeButtonAlert
_handleVoiceOverUsageConfirmation
_handleZoomConflictAlert:
_handleSwitchUsageConfirmed
_handleTouchAccommodationsUsageConfirmed
_handleZoomTripleClickAfterConflict
_handleDisableBrightnessFiltersAlert:
_handleDisableSwitchControlConfirmation
_handleDisableAssistiveTouchConfirmation
_handleDisableFKAConfirmation
_handleConfirmRebootDevice
_handleVONoHomeButtonGestureAlert
_handleDisallowUSBRestrictedModeVOInformativeOnly:
_handleDisallowUSBRestrictedModeSCInformativeOnly:
_handleASTMenuFullForInstance:
_handleASTMenuCustomizeAddDwell:addScroll:
_handleConnectedDevicesRequireAssistiveTouchAlert
_handleSecureItentAlertForSwitchAST
performAsynchronousWritingBlock:
_dismissAlertController
_serviceForRemoteViewType:
alertManager
showAXUIViewService:withData:
hideAXUIViewService:
isShowingAXUIViewService:
array
incomingCall
incomingVideoCall
firstObject
ignoreLogging
identifier
status
answerCall:
currentCalls
axSafelyAddObjectsFromArray:
currentVideoCalls
disconnectCall:withReason:
performSynchronousReadingBlock:
sharedAVSystemController
getActiveCategoryVolume:andName:
toggleReachability
lock
unlock
isScreenLockedWithServerInstance:
initWithString:
applicationOpenURL:
objectForKey:
isEqualToString:
_globalIdleTimeCoordinator
resetIdleTimer
isGestureWithTypeAllowed:
isGuidedAccessActive
activateMainSwitcherNoninteractivelyWithSource:animated:
currentDevice
_tapticEngine
actuateFeedback:
_assistantController
dismissAssistantViewIfNecessary
presentContactlessInterfaceForDefaultPassFromSource:completion:
accessibilityIsNotificationVisible
accessibilityIsBannerVisible
isNotificationCenterVisibleWithServerInstance:
_accessibilityShowNotificationCenter:serverInstance:
coverSheetViewController
isCoverSheetVisibleWithServerInstance:
safeUnsignedIntegerForKey:
_accessibilityCoverSheetPresentationManagerSharedInstance
safeIntForKey:
setReachabilityEnabled:
accessibilityShowControlCenter:
_axFloatingDockController
isDockVisibleWithServerInstance:
dismissFloatingDockIfPresentedAnimated:completionHandler:
presentFloatingDockIfDismissedAnimated:completionHandler:
_accessibilityNativeFocusableElements:matchingBlock:
accessibilityTraits
isShowingHomescreenWithServerInstance:
isSystemAppShowingAnAlertWithServerInstance:
isControlCenterVisibleWithServerInstance:
isAppSwitcherVisibleWithServerInstance:
isPasscodeLockVisible
isLockScreenVisible
dismissAllSwitchersNoninteractivelyAnimated:
_iconController
_accessibilityIsSpeakThisTemporarilyDisabled
_accessibilityIsSystemGestureActive
_accessibilitySystemGesturesDisabledByAccessibility
areSystemGesturesDisabledNativelyWithServerInstance:
areSystemGesturesDisabledByAccessibilityWithServerInstance:
installedAppsWithServerInstance:
isPasscodeRequiredOnLockWithServerInstance:
isSiriVisibleWithServerInstance:
isMakingEmergencyCallWithServerInstance:
purpleBuddyPIDWithServerInstance:
numberWithInt:
isSystemAppFrontmostExcludingSiri:withServerInstance:
isSystemSleepingWithServerInstance:
isSyncingRestoringResettingOrUpdatingWithServerInstance:
isSystemGestureActiveWithServerInstance:
_applicationController
applicationIconForBundleIdentifier:
isIconVisible:
setObject:forKey:
setName:
setSource:
setIntent:
_lockScreenManager
unlockWithRequest:completion:
_unlockWithIntent:
raise:format:
sharedTelephonyManagerCreatingIfNecessary:
isReachabilityActive
safeCGFloatForKey:
allowedMedusaGestures
performMedusaGesture:
medusaApps
setDockIconActivationMode:
canActivateMedusaForDock
medusaAppBundleIdsToLayoutRoles
toggleSearchFromBreadcrumbSource:withWillBeginHandler:completionHandler:
isTodayViewOrAppLibraryVisibleWithServerInstance:
_toggleSearch
isSpotlightVisibleWithServerInstance:
toggleCurrentStyle
_appearState
isHidden
postNotificationName:object:
serverInstance:appWithIdentifier:
_uiController
_activateApplicationFromAccessibility:
bundleIdentifier
visibility
triggerSOS
currentDevicesHaveAssistiveTouchCustomActions
_axCancelDismissSiriForAssistiveTouch
mainDisplaySceneManager
sceneIdentityForApplication:
defaultRequestForApplication:sceneIdentity:displayIdentity:
fetchOrCreateApplicationSceneHandleForRequest:
displayEdgeInfoForForLayoutEnvironment:isInsetForHomeAffordance:
scale
windows
objectAtIndexedSubscript:
traitCollection
userInterfaceStyle
bestSnapshotWithImageName:sceneHandle:variantID:scale:size:contentTypeMask:statusBarStateMask:launchingOrientation:contentOverridesContext:userInterfaceStyle:displayEdgeInfo:
imageForInterfaceOrientation:
showAlert:withHandler:
launchApplication:
launchApplicationWithFullConfiguration:
launchPinnedApplication:onLeadingSide:
launchFloatingApplication:
canLaunchAsPinnedApplicationForIconView:
canLaunchAsFloatingApplicationForIconView:
sceneLayoutState
appForLayoutRole:
_accessibilityNotificationSummary:
_accessibilityNotificationCount
setReachabilityActive:
gestureRecognizerShouldBegin:
setCoverSheetPresented:animated:withCompletion:
notificationStructuredListViewControllerShouldAllowNotificationHistoryReveal:
_accessibilityAllowsShowNotificationsGestureFromThreeFingerSwipe
revealNotificationHistory:animated:
initWithString:attributes:
setNeedsLayout
layoutIfNeeded
activatePage:animated:withCompletion:
_accessibilityShowCoverSheet:serverInstance:completion:
_accessibilitySetBoolValue:forKey:
_accessibilitySetAllowShowNotificationGestureOverride:
_accessibilityIsUILocked
presentAnimated:
dismissAnimated:
runningAppProcessesWithServerInstance:
enumerateObjectsUsingBlock:
guidedAccessEnableExperimentalUI
hasActiveOrPendingCallOrFaceTimeWithServerInstance:
hasMultipleApps
isBuddyRunning
isPreferencesFrontmost
isiCloudPaired
voiceOverActivationWorkaround
isMagnifierVisible
titleForTripleClickOption:
length
tripleClickOrderedOptions
indexOfObject:
numberWithUnsignedInteger:
compare:
sortUsingComparator:
intValue
localizedCompare:
_cleanupAlertController
rootViewController
presentedViewController
removeAllObjects
alertControllerWithTitle:message:preferredStyle:
_shouldShowTCOption:
_sortVisibleItems
_handleAlertActionPress:
valueForTripleClickOption:
_setChecked:
addAction:
actions
_displayAlertController:
_contextId
numberWithUnsignedInt:
postNotificationName:object:userInfo:
_displayViewController:withCompletion:
assertionWithType:identifier:
setDisableSystemGesturesAssertionForAlert:
_isDisplayingAlertController
_dismissAlertControllerWithCompletion:
initWithDebugName:
setContentViewController:
setRootViewController:
setAutorotates:
setAccessibilityViewIsModal:
setHidden:
setWindowLevel:
presentationWindowFocusAssertion
lockFocusToSpringBoardForReason:
setPresentationWindowFocusAssertion:
setNeedsFocusUpdate
presentViewController:animated:completion:
_dismissViewControllerWithCompletion:
_cleanupPresentationWindow
dismissViewControllerAnimated:completion:
invalidate
_toggleTripleClickDisplay
stringWithFormat:
_handleUsageConfirmationDialogWithMessage:
stringByAppendingString:
openMenuCustomizationForASTWithServerInstance:
notifyZoomHomeButtonWasPressed
initialize
_backlightController
_awayController
_syncController
_wallpaperController
didFailToPinAppForSideAppManager:
didFailToFloatAppForSideAppManager:
serverInstance:showAlertType:withHandler:withData:
serverInstance:showRemoteViewType:withData:
serverInstance:hideRemoteViewType:
serverInstance:isShowingRemoteViewType:
hideAlertWithServerInstance:
isVoiceControlRunningWithServerInstance:
handleToggleIncomingCallWithServerInstance:
volumeLevelWithServerInstance:
isSideSwitchUsedForOrientationWithServerInstance:
isRingerMutedWithServerInstance:
isOrientationLockedWithServerInstance:
serverInstance:setOrientationLocked:
openCustomGestureCreationForASTWithServerInstance:
openCustomGestureCreationForSCATWithServerInstance:
openCommandAndControlSettingsWithServerInstance:
openCommandAndControlCommandsWithServerInstance:
openCommandAndControlVocabularyWithServerInstance:
isMediaPlayingWithServerInstance:forBundleId:
resetDimTimerWithServerInstance:
dismissSiriWithServerInstance:
openVoiceControlWithServerInstance:
isScreenshotWindowVisibleWithServerInstance:
toggleNotificationCenterWithServerInstance:
isNotificationVisibleWithServerInstance:
isBannerVisibleWithServerInstance:
serverInstance:showControlCenter:
serverInstance:showNotificationCenter:
serverInstance:setReachabilityEnabled:
toggleDockWithServerInstance:
isStatusBarNativeFocusableWithServerInstance:
armApplePayWithServerInstance:
isShowingNonSystemAppWithServerInstance:
isPasscodeLockVisibleWithServerInstance:
isLockScreenVisibleWithServerInstance:
openAppSwitcherWithServerInstance:
dismissAppSwitcherWithServerInstance:
simulateEdgePressHaptics:
serverInstance:showSpeechPlaybackControls:
serverInstance:pauseMedia:forBundleId:
hasActiveCallWithServerInstance:
hasActiveEndpointCallWithServerInstance:
hasActiveOrPendingCallWithServerInstance:
isSpeakThisTemporarilyDisabledWithServerInstance:
serverInstance:springBoardSystemInfoQuery:
wakeUpDeviceIfNecessaryWithServerInstance:
unlockDeviceWithServerInstance:
reachabilityOffsetWithServerInstance:
allowedMedusaGesturesWithServerInstance:
serverInstance:performMedusaGesture:
serverInstance:setDockIconActivationMode:
canSetDockIconActivationModeForServerInstance:
medusaAppsWithServerInstance:
toggleSpotlightWithServerInstance:
revealSpotlightWithServerInstance:
isPIPWindowVisibleWithServerInstance:
isGuidedAccessActiveWithServerInstance:
toggleDarkModeWithServerInstance:
isDarkModeActiveWithServiceInstance:
setDashBoardSystemGesturesEnabled:withServerInstance:
activateSOSModeWithServerInstance:
rebootDeviceWithServerInstance:
serverInstance:splashImageForAppWithBundleIdentifier:
connectedDevicesRequireAssistiveTouch
cancelSiriDismissalForAssistiveTouchWithServerInstance:
focusedAppPIDWithServerInstance:
runningAppPIDsWithServerInstance:
isSettingsAppFrontmostWithServerInstance:
focusedAppsWithServerInstance:
isPurpleBuddyAppFrontmostWithServerInstance:
focusedAppProcessWithServerInstance:
forceLoadGAXBundleWithServerInstance:
reactivateInCallServiceWithServerInstance:
launchMagnifierAppWithServerInstance:
isMagnifierVisibleWithServerInstance:
updateFrontMostApplicationWithServerInstance:
medusaBundleIDsToLayoutRoles
serverInstanceBringInCallServiceForeground:
_accessibilityAllowShowNotificationGestureOverride
frontmostAppProcessWithServerInstance:
_visibleTripleClickItems
shouldOverrideInterfaceOrientation
_displayViewController:
_accessibilityHandleHomeOrLockButtonPress
activeInterfaceOrientationWillChangeToOrientation:
activeInterfaceOrientationDidChangeToOrientation:willAnimateWithDuration:fromOrientation:
setPresentationWindow:
disableSystemGesturesAssertionForAlert
_alertHandler
_shouldOverrideInterfaceOrientation
_notificationObservers
_alertManager
_presentationWindow
_presentationWindowFocusAssertion
_disableSystemGesturesAssertionForAlert
lockUIFromSource:withOptions:
_authenticationStateChanged:
_takeScreenshotAndEdit:
activeInterfaceOrientation
alertInterfaceOrientation
interfaceOrientation
_setRotatableViewOrientation:duration:force:
shouldBlockGestureActivation:
allowShowTransition
_presentHUD:animated:
floatValue
_effectiveVolumeChanged:
_presentVolumeHUDWithVolume:
_updateProcess:withState:
TTYHardwareEnabled
TTYSoftwareEnabled
cancelCallPromptDisplay
_performBlockAfterCATransactionCommits:
addTransactionDidCompleteBlock:
initializeAndRunStartupTransition:
_axDismissSiriForAssistiveTouch
cancelPreviousPerformRequestsWithTarget:selector:object:
_axSetSiriDismissalIsForAssistiveTouch:
_axSiriDismissalOptions
dismissAssistantViewIfNecessaryWithDismissalOptions:
performSelector:withObject:afterDelay:
_axSiriDismissalIsForAssistiveTouch
_axSetSiriDismissalOptions:
_axScheduleDismissSiriForAssistiveTouch
isHiddenOrHasHiddenAncestor
window
applicationSceneEntityForLayoutRole:
safeStringForKey:
previousApplicationSceneEntityForLayoutRole:
_shouldAddBreadcrumbToActivatingSceneEntity:sceneHandle:withTransitionContext:
performSinglePressUpActions
setIdentifier:
type
setType:
_identifier
_type
initWithKey:payload:
sendSimpleMessage:withError:
currentVideoCall
displayName
axAttributedStringWithString:
setAttribute:forKey:
disableNotificationCenterAssertionHeld
disableControlCenterAssertionHeld
sendSimpleMessage:synchronizationPort:error:
serviceMachPort
indexOfObjectPassingTest:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
hasActiveCall
UTF8String
_setCallRoute:ifCurrentlyRoutedTo:
hasActiveOrPendingCallOrFaceTime
attributeForKey:
pickableRoutesForCategory:
_setCallRoute:ifCurrentlyRoutedTo:withRoutes:
_accessibilityRetrieveAVSystemControlData:withCompletionBlock:
displayedCall
sharedAudioSystemController
audioCategory
audioMode
pickableRoutesForCategory:andMode:
arrayByAddingObjectsFromArray:
hasPrefix:
_setAVCallRoute:
setAttribute:forKey:error:
_initServer
removeAllHandlersForTarget:
strongToStrongObjectsMapTable
initWithServiceName:perPidService:
_registerServerAndNotifyClients
_springBoardFinishedLaunching:
_initializeHearing
_proximityDidChange:
userChangedRouteNotification:
removeObserver:name:object:
startServerWithError:
setQueueSize:
_initializeHandlers
setClientInvalidationCallback:
arrayWithObjects:count:
setPredicates:
setServiceClass:
descriptor
setStateDescriptor:
_updateProcess:
setUpdateHandler:
monitorWithConfiguration:
identity
currentState
taskState
_getApplicationOrientation:
setHandlerWithTarget:selector:forKey:possibleRequiredEntitlements:
_getPid:
_showAlert:
_hideAlert:
_showRemoteView:
_hideRemoteView:
_isShowingRemoteView:
_screenLocked:
_isMakingEmergencyCall:
_hasActiveCall:
_hasActiveEndpointCall:
_hasActiveOrPendingCall:
_hasActiveOrPendingCallOrFaceTime:
_topEventPidOverride:
_takeScreenshot:
_openAppSwitcher:
_dismissAppSwitcher:
_simulateEdgePressHaptics:
_wakeUpDeviceIfNecessary:
_unlockDevice:
_rebootDevice:
_dismissSiri:
_toggleNotificationCenter:
_isNotificationCenterVisible:
_openVoiceControl:
_getActiveInterfaceOrientation:
_actionHandling:
_isVoiceControlRunning:
_isSystemSleeping:
_volumeLevel:
_isOrientationLocked:
_setOrientationLocked:
_isSideSwitchUsedForOrientation:
_isRingerMuted:
_openCustomGestureCreationForAST:
_openCustomGestureCreationForSCAT:
_openCommandAndControlSettings:
_openCommandAndControlCommands:
_openCommandAndControlVocabulary:
_cancelGestureActivation:
_toggleHearingControl:
_setCaptionPanelContextId:
_isPointInAXInspector:
_isMediaPlaying:
_pauseMedia:
_resumeMedia:
_resetDimTimer:
_startHearingAidServer:
_showControlCenter:
_toggleDock:
_armApplePay:
_showNotificationCenter:
_isControlCenterVisible:
_copyStringToPasteboard:
_isSiriVisible:
_isAppSwitcherVisible:
_isShowingHomescreen:
_isDockVisible:
_isPasscodeLockVisible:
_isLockScreenVisible:
_isShowingNonSystemApp:
_isSyncingRestoringResettingOrUpdating:
_areSystemGesturesDisabledNatively:
_areSystemGesturesDisabledByAccessibility:
_handleSpringBoardInfoQuery:
_handleInstalledApps:
_handleIsInspectorMinimized:
_handleCancelReachabilityTimer:
_handleToggleSpotlight:
_handleRevealSpotlight:
_isSpotlightVisible:
_isPIPWindowVisible:
_isGuidedAccessActive:
_isDarkModeActive:
_toggleDarkMode:
_handleLoadGAXBundleForUnmanagedASAM:
setHandlerWithTarget:selector:forKey:
_handleReactivateInCallService:
_handleLaunchMagnifierApp:
_handleIsMagnifierVisible:
_setSpeechPlaybackControls:
_isSpeakThisTemporarilyDisabled:
_handleAcquireAssertion:
_handleRelinquishAssertion:
_activateSOSMode:
_getSplashImageForApp:
laserEnabled
_connectedDevicesRequireAssistiveTouch:
_cancelSiriDismissalForAssistiveTouch:
_handleIsSystemAppShowingAnAlert:
_handleGetFocusedAppPID:
_handleGetPurpleBuddyPID:
_handleGetRunningAppPIDs:
_handleGetFocusedApps:
_handleIsSystemAppFrontmost:
_handleIsPurpleBuddyAppFrontmost:
_handleIsSettingsAppFrontmost:
_reachabilityOffset:
_reachabilityHandling:
_reachabilityActive:
_handleToggleIncomingCall:
_reachabilityEnabled:
_allowedMedusaGestures:
_performMedusaGesture:
_medusaApps:
_setDockIconActivationMode:
_canSetDockIconActivationMode:
registerUpdateBlock:forRetrieveSelector:withListener:
personalMediaConfiguration
addPossibleRequiredEntitlement:forMessageWithKey:
_setupAssertionServerIfNeeded
assertionServer
addHeldAssertionOfType:byClient:
_assertionClientForPort:
initWithPort:
setClientIdentifier:
setTimeout:
connectWithError:
_relinquishAllAssertionsForClientWithPort:
setPortDeathHandler:
relinquishAssertionWithType:identifier:clientPort:
removeHeldAssertionOfType:byClient:
removeObjectForKey:
performValidations:withPreValidationHandler:postValidationHandler:
_accessibilitySetSystemGesturesDisabledByAccessibility:
clientsHoldingAssertionOfType:
isEqualToArray:
setAssertionServer:
_setSystemGesturesEnabled:
_accessibilitySetSpeakThisTemporarilyDisabled:
setDisableNotificationCenterAssertionHeld:
setDisableControlCenterAssertionHeld:
_setDashboardSystemGesturesDisabled:
setAssertionWasAcquiredHandler:
setAssertionWasReleasedHandler:
payload
clientPort
sendSimpleMessage:
hasActiveEndpointCall
hasActiveOrPendingCall
_hasActionHandlerForClientPort:
_removeActionHandler:
_hasReachabilityHandlerForClientPort:
_removeReachabilityHandler:
dismissMainSwitcherNoninteractivelyAnimated:
_accessibilityIsInspectorMinimized
_accessibilityIsPointInAXInspector:
generalPasteboard
setItems:
unsignedIntegerValue
acquireAssertionWithType:identifier:clientPort:
archivedDataWithRootObject:requiringSecureCoding:error:
springBoardServerInstanceIfExists
_axCaptionPanelContextId
shouldCancelSiriTouchActivationBlock
_performBlockAsynchronously:afterDelay:
registerHandlerForMessageKey:target:selector:entitlements:
onlySystemGesturesDisabledHolderIsGuidedAccess
_server
_client
_actionHandlers
_reachabilityHandlers
_assertionClients
_currentSpeakerClient
_hidManager
_processMonitor
_avSystemRetrievalQueue
_disableNotificationCenterAssertionHeld
_disableControlCenterAssertionHeld
_assertionServer
callAudioRoutingAutoAnswerEnabled
currentAudioAndVideoCallCount
callAudioRoutingAutoAnswerDelay
sb_alertDefinition
setUserInfo:
serviceName
viewControllerClassName
newHandleWithDefinition:configurationContext:
addObserver:
activateWithContext:
handlesByService
setHandlesByService:
valueWithPointer:
isActive
remoteAlertHandleDidActivate:
remoteAlertHandleDidDeactivate:
remoteAlertHandle:didInvalidateWithError:
_handlesByService
containsObject:
setAccessibilityIdentifier:
removeObjectAtIndex:
locationInView:
pointInside:withEvent:
subviews
addObjectsFromArray:
_accessibilityValueForKey:
_accessibilityTripleClickElementHitTest:
title
text
notifySpeakServicesToStopSpeaking
_accessibilityRemoveValueForKey:
notifySpeakServicesForSpeechOutput:volume:speakingRate:
_accessibilitySetRetainedValue:forKey:
initWithTargetSerialQueue:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
_tripleClickSpeakMenuProcessTouch:
isPending
isCancelled
afterDelay:processBlock:
accessibilityIdentifier
allTouches
phase
_processEventForVOSpeakage:
cancel
sendEvent:
__CGRect__
validateClass:conformsToProtocol:
_addFloatingApplicationGesturesIfAllowed:
_mainDisplaySceneLayoutViewController
_hasPinnedApp
_addResizeGestureRecognizerGesturesIfAllowed:
_appForLayoutRole:layoutState:
elementWithRole:
_currentFloatingConfiguration
_mainDisplaySceneManager
_enumerateAppsAndLayoutRoles:
_performSwipeOnFloatingAppSwitcher:
currentLayout
elements
_isDockIconView:
_bundleIdentifierForIconView:
_appWithIdentifier:
_endDockIconActivationModeAfterTimeout
dockIconActivationMode
_currentSpaceConfiguration
_sbPreviousWorkspaceEntityClass
entityWithPreviousLayoutRole:
_sbEmptyEntity
_sbPreviousEntity
_requestFloatingAppSwitcherVisible
_requestTransactionWithPrimaryEntity:sideEntity:floatingEntity:spaceConfiguration:floatingConfiguration:
safeArrayForKey:
ax_filteredArrayUsingBlock:
objectAtIndex:
_sbWorkspaceMainWorkspace
_sbSwitcherTransitionRequestClass
requestForActivatingAppLayout:
_configureRequest:forSwitcherTransitionRequest:withEventLabel:
requestTransitionWithOptions:builder:validator:
setEntity:forLayoutRole:
setRequestedSpaceConfiguration:
setRequestedFloatingConfiguration:
modifyApplicationContext:
setRequestedFloatingSwitcherVisible:
initWithApplicationForMainDisplay:
newSceneIdentityForApplication:
initWithApplicationSceneHandle:
_hasFloatingApp
_activeApplicationBundleIdentifiers
_floatingAppRootViewController
_dockIconActivationMode
iconManager:launchIconForIconView:withActions:
currentHandler
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
_setVoiceOverTouchSettings:
speakCorrectionsEnabled
setSpeakCorrectionsEnabled:
serverIfRunning
displays
setContrast:
_checkContrastSetting
detachNewThreadSelector:toTarget:withObject:
_checkAccessibilityOptionsSetByiTunes
_checkVoiceOverTouchSetByiTunes
_checkZoomTouchSetByiTunes
_checkInvertColorsSetByiTunes
_checkMonoAudioSetByiTunes
_checkSpeakAutofillSetByiTunes
_checkClosedCaptioningSetByiTunes
_checkAssistiveTouchSetByiTunes
stringByAppendingPathComponent:
bundleWithPath:
isLoaded
load
_updateAXSettings
_updateSpringBoardHelper
sharedManager
propertyListWithData:options:format:error:
readDataForFileAtAccessibilityContainerPath:completion:
_initializeDelayedSpringBoardSettings
defaultManager
fileExistsAtPath:
dataWithContentsOfFile:options:error:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
removeItemAtPath:error:
_checkForDataResetFile
_findNoteFromLoginSessionWithCompletion:
_registerForNotifications
_initializeRemoteSettingsListener
_handleGuidedAccessManagedConfigurationDidChange:
bootstrapGuidedAccessIfNeeded
_bootstrapSoundDetection
_registerForHomeButtonBreakage
_performValidations
sharedUtilities
updateHearingFeatureUsage
ultronSupportEnabled
_startupSoundDetectionUIServer
_shouldArmSoundDetection
soundDetectionState
_ensureUltronAppVisibility:
ultronIsRunning
standardUserDefaults
boolForKey:
setBool:forKey:
synchronize
_setRebootedGracefullyOnce
rebootForReason:
_alreadyRebootedGracefullyOnce
_startAssistiveTouchForBrokenHomeButton
brokenHomeButtonCount
setBrokenHomeButtonCount:
_gracefulRebootForBrokenHomeButton
_registerForHomeButtonBreakageNotification
_checkForHomeButtonBreakage:
sharedConnection
effectiveWhitelistedAppsAndOptions
autonomousSingleAppModePermittedBundleIDs
processInfo
physicalMemory
policy
updateAssetForPolicy:
_isDeviceAffectedByVOActivationWorkaround
_remoteAccessibilitySettingsChanged:
registerNetworkDefaultsForAppID:
_updateRemoteAccessibilitySettings
_hideVoiceOverEnabler
callStackSymbols
_playVOActivationSoundEnded
animateWithDuration:animations:completion:
initWithContentRect:
setBecomeKeyOnOrderFront:
setEnabled:
orderFront:
setOpaque:
setContentView:
resourcePath
initFileURLWithPath:isDirectory:
_playVOActivationSoundStarted
_voiceOverEnabled:
_makeVoiceOverVibrateWindow
lastObject
setBounds:
setCenter:
registerNetworkDefaultsForAppIDs:forceUpdate:
sharedNetworkObserver
removeObserver:forHostname:
_reachabilityChanged:
addObserver:selector:forHostname:
checkScreenContrast
checkAccessibilityOptions
speechSynthesizer:didStartSpeechUtterance:
speechSynthesizer:didFinishSpeechUtterance:
speechSynthesizer:didPauseSpeechUtterance:
speechSynthesizer:didContinueSpeechUtterance:
speechSynthesizer:didCancelSpeechUtterance:
speechSynthesizer:willSpeakRangeOfSpeechString:utterance:
_turnOnHearingControlCenterModule
_showSwipeDetectionEnablerView
_showVibrationVoiceOverEnablerView
_registerReachability
_voiceOverVibrateWindow
_voiceOverActivationCanceler
_managedConfigurationNotificationCoalesceTimer
_soundDetectionClient
_assetsService
mutableCopy
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@48@0:8@16@24Q32^@40
B32@0:8@16Q24
v48@0:8@16@24Q32@?40
@32@0:8@16Q24
v32@0:8@16@24
v24@0:8@16
@"NSDictionary"48@0:8@"AXUIClient"16@"NSDictionary"24Q32^@40
B32@0:8@"AXUIClient"16Q24
v48@0:8@"AXUIClient"16@"NSDictionary"24Q32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"32@0:8@"AXUIClient"16Q24
v32@0:8@"AXUIClient"16@"NSMutableDictionary"24
v24@0:8@"AXUIClient"16
v24@0:8@"HCServer"16
v20@0:8B16
v16@0:8
@"NSDictionary"
@"NSTimer"
@"NSObject<OS_dispatch_queue>"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"UILabel"
@"UIImageView"
@"<AXSBVoiceOverSwipeDetectorDelegate>"
v24@0:8q16
@40@0:8@16q24@?32
q16@0:8
@32@0:8q16@24
@"UIView"
v24@0:8@"AXSpringBoardServerSideAppManager"16
v44@0:8@16i24@?28@36
v40@0:8@16q24@32
v32@0:8@16q24
B32@0:8@16q24
d24@0:8@16
v28@0:8@16B24
B32@0:8@16@24
B28@0:8@16B24
v36@0:8@16B24@28
@32@0:8@16@24
@24@0:8@16
v32@0:8@16Q24
v28@0:8B16@20
i24@0:8@16
B28@0:8B16@20
v44@0:8@"_AXSpringBoardServerInstance"16i24@?<v@?q>28@36
v40@0:8@"_AXSpringBoardServerInstance"16q24@32
v32@0:8@"_AXSpringBoardServerInstance"16q24
B32@0:8@"_AXSpringBoardServerInstance"16q24
v24@0:8@"_AXSpringBoardServerInstance"16
B24@0:8@"_AXSpringBoardServerInstance"16
d24@0:8@"_AXSpringBoardServerInstance"16
v28@0:8@"_AXSpringBoardServerInstance"16B24
B32@0:8@"_AXSpringBoardServerInstance"16@"NSString"24
B28@0:8@"_AXSpringBoardServerInstance"16B24
v36@0:8@"_AXSpringBoardServerInstance"16B24@"NSString"28
@"NSDictionary"32@0:8@"_AXSpringBoardServerInstance"16Q24
@32@0:8@"_AXSpringBoardServerInstance"16@"NSString"24
@"NSDictionary"24@0:8@"_AXSpringBoardServerInstance"16
@"NSArray"24@0:8@"_AXSpringBoardServerInstance"16
B32@0:8@"_AXSpringBoardServerInstance"16Q24
v32@0:8@"_AXSpringBoardServerInstance"16Q24
v28@0:8B16@"_AXSpringBoardServerInstance"20
@"NSNumber"24@0:8@"_AXSpringBoardServerInstance"16
i24@0:8@"_AXSpringBoardServerInstance"16
B28@0:8B16@"_AXSpringBoardServerInstance"20
@24@0:8@"_AXSpringBoardServerInstance"16
@24@0:8q16
v20@0:8i16
@24@0:8Q16
B36@0:8B16@20@?28
B20@0:8B16
B20@0:8i16
v32@0:8@16@?24
v24@0:8@?16
v24@0:8B16B20
v40@0:8q16d24q32
@"NSMutableArray"
@"AXSpringBoardServerAlertManager"
@"UIWindow"
@"<BSInvalidatable>"
@"AXAssertion"
v28@0:8i16@20
v36@0:8q16d24B32
v20@0:8f16
B40@0:8@16@24@32
@"NSString"
I16@0:8
v32@0:8q16@24
B24@0:8Q16
v36@0:8@16I24@?28
B20@0:8I16
v20@0:8I16
v32@0:8@?16@?24
v36@0:8i16@20@28
v32@0:8@?16d24
v44@0:8i16@20:28@36
@20@0:8I16
v36@0:8@16@24I32
@"AXIPCServer"
@"AXIPCClient"
@"<AXSpringBoardServerInstanceDelegate>"
@"NSMapTable"
^{__IOHIDManager=}
@"RBSProcessMonitor"
@"_AXAssertionServer"
v24@0:8@"SBSRemoteAlertHandle"16
v32@0:8@"SBSRemoteAlertHandle"16@"NSError"24
v32@0:8@"AXVSBaseService"16@"NSDictionary"24
v24@0:8@"AXVSBaseService"16
B24@0:8@"AXVSBaseService"16
@"NSMutableDictionary"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v24@0:8Q16
v56@0:8@16@24@32q40q48
@"<AXSpringBoardServerSideAppManagerDelegate>"
v40@0:8@16@24@32
v20@0:8C16
v48@0:8@16{_NSRange=QQ}24@40
v32@0:8@"AVSpeechSynthesizer"16@"AVSpeechUtterance"24
v48@0:8@"AVSpeechSynthesizer"16{_NSRange=QQ}24@"AVSpeechUtterance"40
@"AXAccessQueueTimer"
@"AXDispatchTimer"
@"AXUIClient"
@"AXAssetsService"
