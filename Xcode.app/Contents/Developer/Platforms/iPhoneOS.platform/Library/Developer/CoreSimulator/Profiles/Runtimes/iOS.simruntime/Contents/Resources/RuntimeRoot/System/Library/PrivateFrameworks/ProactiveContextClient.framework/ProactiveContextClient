@(#)PROGRAM:ProactiveContextClient  PROJECT:AppPrediction-1
Home
Work
School
supportsSecureCoding
TB,R
currentLOI
previousLOI
lastUpdateDate
predictedNextLOIs
predictedExitTimes
locationsOfInterest
v16@?0@"ATXLocationOfInterest"8
T@"ATXLocationOfInterest",&,N,V_currentLOI
T@"ATXLocationOfInterest",&,N,V_previousLOI
T@"NSArray",&,N,V_predictedNextLOIs
T@"NSArray",&,N,V_predictedExitTimes
T@"NSDate",&,N,V_lastUpdateDate
T@"ATXLocationManagerKnownLOIs",R,N,V_locationsOfInterest
homeLOI
T@"CLLocation",R,N
workLOI
schoolLOI
gymLOI
%@ %@
uuid
type
mode
intValue
strValue
startDate
endDate
jsonMeta
-[ATXModePBEvent writeTo:]
/Library/Caches/com.apple.xbs/Sources/ProactiveAppPredictionUI_Sim/ProactiveAppPrediction-430.2/ProactiveContextClient/Generated/ATXModePBEvent.m
nil != self->_uuid
T@"NSString",&,N,V_uuid
Ti,N,V_type
hasMode
TB,N
Ti,N,V_mode
hasIntValue
Ti,N,V_intValue
hasStrValue
TB,R,N
T@"NSString",&,N,V_strValue
hasStartDate
Td,N,V_startDate
hasEndDate
Td,N,V_endDate
hasJsonMeta
T@"NSString",&,N,V_jsonMeta
ModeChange
StartsUp
(unknown: %i)
Unknown
Default
Working
Exercising
Driving
Bedtime
version
modeRecord
hasVersion
Ti,N,V_version
hasModeRecord
T@"ATXModePBRecord",&,N,V_modeRecord
-[ATXModeScheduler runAfterDelaySecondsIfNotYetScheduled:]
v8@?0
v24@?0@"NSArray"8@"NSError"16
v32@?0@"RTSource"8Q16^B24
v24@?0q8@"NSError"16
ATXMotionTypeWalking
ATXMotionTypeRunning
ATXMotionTypeCycling
ATXMotionTypeDriving
ATXMotionTypeUnknown
stringForMotionType called with invalid ATXMotionType of %tu
Error
com.apple.duetexpertd
identifier
v24@?0@"NSString"8@"NSDictionary"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<ATXModeFeaturizerDelegate>",W,N
isInWorkout
TB,V_isInWorkout
T@"<ATXModeFeaturizerDelegate>",W,N,V_delegate
_HKWorkoutSessionStateName
/System/Library/Frameworks/HealthKit.framework/HealthKit
HKWorkout
ATXLocationManagerState
contextstored
-unrestricted
cacheExpirationInterval
Td,V_cacheExpirationInterval
v12@?0i8
v16@?0@"ATXModeClassifierGuardedData"8
start
modeOrigin
process
com.apple.duet.expertcenter.appRefresh
CoreMotion
CarPlay
Do Not Disturb While Driving
Watch
CoreRoutine
_ATXGlobals
plplist
LocationOfInterestSearchRadius
HomeLOISearchRadius
WorkLOISearchRadius
PreviousLOIExpirationTime
FrequentLOIMinimumVisits
CurrentLocationUpdateInterval
LocationOfInterestUpdateInterval
PredictedLocationsOfInterestUpdateInterval
PredictedExitTimesUpdateInterval
userID
events
timezone
timestamp
hasUserID
T@"NSString",&,N,V_userID
T@"NSMutableArray",&,N,V_events
hasTimezone
Ti,N,V_timezone
hasTimestamp
TQ,N,V_timestamp
com.apple.duetexpertd.modes
v32@?0@"NSNumber"8@"NSNumber"16^B24
v28@?0i8@"NSNumber"12^B20
archive contains illegal nil value for key "%@"
key "%@" not present
key "%@" maps to unexpected class
Invalid
LocationIsAtHome
LocationIsAtWork
WatchIsInWorkout
IsInAutoDND
IsUsingCarPlay
IsOperatingVehicle
IsInBedtime
com.apple.duetexpertd.atx
general
dailyroutines
modes
hero
lastModeLoggerSubmissionDate
uniqueModeUserID
en_US_POSIX
yyyy-MM-dd HH:mm:ss zzz
shareDiagnosticDataWrapper
TB,V_shareDiagnosticDataWrapper
com.apple.DuetExpertCenter.AppPredictionExpert
EnableFocusModes
CurrentMode
SecondsToEngagement
SecondsToClear
AverageSecondsToEngagement
AverageSecondsToClear
numToggles
totalTime
numUnlocks
displayName
incomingMessages
outgoingMessages
incomingPhoneCalls
outgoingPhoneCalls
incomingFaceTimeAudio
outgoingFaceTimeAudio
incomingFaceTimeVideo
outgoingFaceTimeVideo
unknown
appPredictionABGroupOverride
duetexpertd
v24@?0@"ATXLocationOfInterest"8@"NSError"16
-[ATXModeRoutineFeaturizer _routineLocationsOfInterestDidChange:]
-[ATXModeRoutineFeaturizer _locationManagerDidEnterRegion:]
-[ATXModeRoutineFeaturizer _locationManagerDidExitRegion:]
-[ATXModeRoutineFeaturizer isInRegion:]
-[ATXModeRoutineFeaturizer provideFeatures]
-[ATXModeRoutineFeaturizer _watchRegionForLOIType:]_block_invoke
v24@?0@"CLLocation"8@"NSError"16
-[ATXModeRoutineFeaturizer beginMonitoringForLocation:radius:type:]
homeLOISearchRadius
Td,V_homeLOISearchRadius
workLOISearchRadius
Td,V_workLOISearchRadius
%ld-%@
v24@?0@"MTAlarm"8@"NSError"16
SignificantTimeChangeNotification
v16@?0@"NSTimer"8
MTAlarmManager
/System/Library/PrivateFrameworks/MobileTimer.framework/MobileTimer
MTAlarmManagerAlarmsChanged
ATXLocationManagerDidEnterRegionNotification
ATXLocationManagerDidExitRegionNotification
ATXLocationManagerRegionIdentifierUserInfoKey
ATXLocationManager_LOIUpdateQueue
v16@?0@"ATXLocationManagerGuardedData"8
v16@?0@"ATXLocationManagerState"8
current
v16@?0@"NSError"8
predictedLOIs
T@"NSDate",&,N,V_now
predictedNextLOITimeout
Td,N,V_predictedNextLOITimeout
predictedExitDateTimeout
Td,N,V_predictedExitDateTimeout
/System/Library/LocationBundles/CoreParsec.framework
_clCallbackQueue
-[ATXLocationManagerGPSCoreLocation stateForRegion:withTimeout:]
-[ATXLocationManagerGPSCoreLocation locationManager:didDetermineState:forRegion:]
T@"<ATXLocationManagerGPSDelegate>",W,N
location
locationEnabled
preciseLocationEnabled
T@"<ATXLocationManagerGPSDelegate>",W,N,V_delegate
(startDate > %@ AND startDate < %@) OR (endDate > %@ AND endDate < %@)
v16@?0@"ATXModeDrivingFeaturizerData"8
CARAutomaticDNDStatusChangedNotification
v32@?0@"NSString"8Q16^B24
v20@?0B8@"NSError"12
CARSessionStatus
/System/Library/PrivateFrameworks/CarKit.framework/CarKit
CARAutomaticDNDStatus
v16@?0@"ATXCachedMotion"8
v16@?0@"CMMotionActivity"8
walking
running
cycling
driving
%@|stationary
@16@?0@8
B32@?0@8Q16^B24
motiontype
Tq,R,N,V_motiontype
stationary
TB,R,N,V_stationary
canPredictClipsGivenRecentMotion
TB,R,N,V_canPredictClipsGivenRecentMotion
currentMotion
T@"ATXMotion",R,C,N,V_currentMotion
latitude
longitude
ATXLocationOfInterest uuid:%@ visits:%@ type:%ld lat:%f long:%f
T@"NSUUID",R,N,V_uuid
visits
T@"NSArray",R,N,V_visits
Tq,R,N,V_type
coordinate
T{CLLocationCoordinate2D=dd},R,N,V_coordinate
%s: an operation has already been scheduled at %@. Skip this request.
%s: schedule an operation with %.2lf seconds delay
Predicted next LOI: %@, confidence: %lf
Predicted Exit Time: %@, uncertainty: %lf, confidence %lf
Error while fetching routine mode from CoreRoutine. Error: %@
CoreRoutine did not return any routine mode. Returning ATXRoutineModeUnknown.
stringForMotionType called with invalid ATXMotionType of %tu
Failed to register Core Duet contextual change handler
Unable to retrieve all workout types from HealthKit
Failed to soft-link HealthKit: %s
Error deserializing: %@
Error serializing: %@
Error writing location manager file
failed to open '%@': [%i] %s
ATXModeClassifier finished initialization
ATXModeClassifier update with %d feature sets in buffer
ATXModeClassifier: mode updated from %@ to %@
ATXModeClassifier: could not save mode to knowledge store with error: %@
%@ updated its features
ATXModeFeatureSet: error initWithCoder: %@
Found %ld events of mode changes from %@ to %@
Using A/B group override: %@
Error while updating LOI at current location asynchronously: %@
%s: locations of interest did change
%s: did enter region
%s: did exit region
%s: state for region: %@, state: %ld
%s isAtHome: %d isAtWork: %d
%s: could not fetch LOI of type: %@ with error: %@
%s: could not find LOI of type: %@
%s: found LOI: %@ of type: %@ region radius: %f
Sleep alarm available during feature update
The next sleep event is a wake alarm
The next sleep event is a bedtime notification
No sleep alarm available during feature update
Could not fetch the sleep alarm: %@
The sleep alarm exists but is disabled
No sleep date components; bailing
Scheduling a sleep update for date: %@
Failed to soft-link MobileTimer: %s
loaded cache, cached work LOI: %@, cached home LOI: %@
Using cached location: %@
Updating location
Updated location: %@
Current LOI at %@
LOI fetch timed out
LOI fetch successful
Checking cache with age: %f
Using cached %@ LOI
Fetching %@ LOI
Falling back to cache because Core Routine failed
%@ LOI: %@
Disabling LOI updates due to error fetching %{public}@: %@
RT misuse fetching %{public}@: %@
Error fetching %{public}@: %@
Non-RT error fetching %{public}@: %@
Attempting to update location of interest since update age is %lf
Next Predicted LOIs: %@
Next predicted LOIs fetch timed out
Predicted Exit Times: %@
Predicted exit times fetch timed out
Updating predicted next lois in ATXLocationManager
Updating predicted exit times in ATXLocationManager
Distance to %@ LOI: %f meters
Querying GPS location now, requesting with precise location: %@
Timeout waiting for location update
Timeout waiting for region state update
%s: region: %@, state: %ld
Location update: %@
Started monitoring region: %@
Failed to start monitoring region: %@ error: %@
did enter region: %@, region center: (%f, %f), region radius: %f
did enter region: %@, class: %@
did exit region: %@, region center: (%f, %f), region radius: %f
did exit region: %@, class: %@
Location error %@
Duet query: %@
Error querying Duet: %@
ATXModeDrivingFeaturizer: Driving mode activated by Do Not Disturb While Driving
ATXModeDrivingFeaturizer: Driving mode activated by CarPlay
ATXModeDrivingFeaturizer: Driving mode activated by Core Motion
ATXModeDrivingFeaturizer: Driving mode not activated. Vehicle state is available: %d, vehicularOperatorState: %lu, vehicularState: %lu, motionTypeDriving: %d
ATXModeDrivingFeaturizer: vehicular state Darwin notification: %@
Could not register driving mode notification with name: %@
ATXModeDrivingFeaturizer could not fetch the auto DND assertion with error: %@
Failed to soft-link CarKit: %s
Error: motion activity query timed out
ATXMotionManagerWrapper: WALKING state changed to %d
ATXMotionManagerWrapper: RUNNING state changed to %d
ATXMotionManagerWrapper: CYCLING state changed to %d
ATXMotionManagerWrapper: AUTOMOTIVE state changed to %d
ATXMotionManagerWrapper: UNKNOWN state changed to %d
Current motion activities: %@
ATXLocationManagerKnownLOIs
NSSecureCoding
NSCoding
ATXLocationManagerState
ATXModePBEvent
NSCopying
ATXModePBLogWrapper
ATXModeScheduler
ATXLocationManagerRoutineCR
ATXLocationManagerRoutine
ATXMotionTypes
ATXModeExerciseFeaturizer
ATXModeFeaturizer
NSObject
ATXLocationManagerStateStoreOnDisk
ATXLocationManagerStateStore
ATXLocationManagerStateStoreOnDiskEnv
ATXModeClassifierGuardedData
ATXModeClassifier
ATXModeFeaturizerDelegate
ATXModeGlobals
ATXModePBRecord
ATXModeFeatureSet
ATXModeLogger
ATXABHelper
ATXModeRoutineFeaturizer
ATXModeBedtimeFeaturizer
ATXLocationManager
ATXLocationManagerGPSDelegate
ATXLocationManagerProtocol
ATXPredictedLocationsManagerProtocol
ATXLocationOfInterestManagerProtocol
ATXLocationManagerGuardedData
ATXLocationManagerGPSCoreLocation
CLLocationManagerDelegate
ATXLocationManagerGPS
ATXModeDuetHelper
ATXModeDrivingFeaturizerData
ATXModeDrivingFeaturizer
CARSessionObserving
ATXMotionManagerDelegate
ATXMotionManagerWrapper
ATXMotion
ATXCachedMotion
ATXLocationOfInterest
ATXNamedLOI
encodeObject:forKey:
init
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
.cxx_destruct
Home
Work
School
distantPast
arrayWithObjects:count:
setWithArray:
decodeObjectOfClasses:forKey:
lastUpdateDate
earlierDate:
isEqualToDate:
uuid
isEqual:
addObject:
previousLOI
currentLOI
count
lastObject
setCurrentLOI:
removeLastObject
setPreviousLOI:
predictedNextLOIs
setPredictedNextLOIs:
predictedExitTimes
setPredictedExitTimes:
countByEnumeratingWithState:objects:count:
locationsOfInterest
valueForKey:
setValue:forKey:
setLastUpdateDate:
merge:with:
expirePreviousLOIBefore:
homeLOI
workLOI
schoolLOI
gymLOI
_currentLOI
_previousLOI
_predictedNextLOIs
_predictedExitTimes
_lastUpdateDate
_locationsOfInterest
isEqualToArray:
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithInt:
numberWithDouble:
setUuid:
setStrValue:
setJsonMeta:
allocWithZone:
copyWithZone:
isMemberOfClass:
hash
typeAsString:
StringAsType:
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
setIntValue:
setHasIntValue:
hasIntValue
hasStrValue
setStartDate:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
hasJsonMeta
readFrom:
writeTo:
copyTo:
mergeFrom:
type
setType:
intValue
strValue
startDate
endDate
jsonMeta
_endDate
_startDate
_intValue
_jsonMeta
_mode
_strValue
_type
_uuid
_has
isEqualToString:
setModeRecord:
setVersion:
setHasVersion:
hasVersion
hasModeRecord
version
modeRecord
_modeRecord
_version
dispatchTimeWithSecondsFromNow:
cancelPendingOperation
dateWithTimeIntervalSinceNow:
initWithQueue:operationBlock:andLeeway:
runAfterDelaySecondsIfNotYetScheduled:
_timer
_queue
_block
_leewaySeconds
_scheduledDate
initWithRoutineManager:
closestLOI:toLocation:
fetchLocationsOfInterestWithinDistance:ofLocation:withHandler:
firstObject
location
latitude
longitude
initWithLatitude:longitude:
fetchLocationsOfInterestOfType:withHandler:
initWithCapacity:
fetchLocationsOfInterestVisitedBetweenStartDate:endDate:withHandler:
locationOfInterest
confidence
sources
enumerateObjectsUsingBlock:
fetchNextPredictedLocationsOfInterestFromLocation:startDate:timeInterval:withHandler:
date
uncertainty
fetchPredictedExitDatesFromLocation:onDate:withHandler:
fetchRoutineModeFromLocation:withHandler:
waitForSemaphore:timeoutSeconds:onAcquire:onTimeout:
distanceFromLocation:
fetchClosestLOIWithinDistance:ofLocation:reply:
fetchLOILocationOfType:reply:
fetchLOIVisitedDuring:reply:
fetchNextPredictedLOIFromLocation:startDate:timeInterval:requireHighConfidence:reply:
fetchPredictedExitDatesFromLocation:onDate:requireHighConfidence:reply:
fetchRoutineModeFromLocation:
_routineManager
visits
entryDate
timeIntervalSinceReferenceDate
exitDate
valueWithRange:
identifier
initWithUUID:visits:coordinate:type:
raise:format:
stringForMotionType:
motionTypeForString:found:
isInWorkout
setValue:forBinaryFeatureOfType:
_setUpContextIfNecessary
_createWorkoutPredicate
objectForKeyedSubscript:
value
sessionState
setIsInWorkout:
delegate
featurizer:didUpdateFeatures:
registrationWithIdentifier:contextualPredicate:deviceTypes:clientIdentifier:mustWake:qualityOfService:callback:
registerCallback:
deregisterCallback:
_allWorkoutActivityTypes
predicateForFirstPartyWorkoutMatchingTypes:states:
userContext
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
provideFeatures
beginListening
stopListening
setDelegate:
_userContext
_registration
_isInWorkout
_delegate
sharedInstance
previousLOIExpirationTime
appPredictionDirectoryFile:
processInfo
processName
lowercaseString
knowledgeDirectory
stringByAppendingPathComponent:
stringByAppendingString:
initWithPath:environment:
dealloc
openFileAtPath:dataProtectionClass:
_tryToOpen
cacheExpirationInterval
unarchivedObjectOfClass:fromData:error:
isLocked
defaultManager
fileExistsAtPath:
_deviceDidUnlock
callOnNextUnlock:
loadNowOrCallLater:
archivedDataWithRootObject:requiringSecureCoding:error:
removeItemAtPath:error:
write:
clear
setCacheExpirationInterval:
_path
_env
_deferredLoadCallback
_cacheExpirationInterval
unregisterForLockStateChangeNotifications:
isUnlocked
UTF8String
registerForLockStateChangeNotifications:
_stateChangeRegistration
_aggregateFeatures
_lastFeatureUpdateDate
_featureBuffer
initWithDuetHelper:
runBlockWhenDeviceIsClassCUnlocked:
initWithFeaturizers:minUpdateInterval:duetHelper:
copy
initWithSuiteName:
arrayWithCapacity:
initWithGuardedData:serialQueue:
_updateWithGuardedData:
runAsyncWithLockAcquired:
_requestFeaturesFromAllFeaturizersAndUpdate
removeAllObjects
mergeWithFeatures:
_predictModeWithFeature:
_originForMode:fromAggregateFeatures:
focusModeStream
timeIntervalSince1970
dictionaryWithObjects:forKeys:count:
eventWithStream:startDate:endDate:identifierStringValue:metadata:
knowledgeStore
saveObjects:error:
boolValueForFeatureType:
UUID
UUIDString
runWithLockAcquired:
updateWithFeatureSet:immediately:reply:
timeIntervalSinceNow
updateWithFeatureSet:
provideModeClassifierWhenReadyWithDuetHelper:block:
_pbEventForMode:
currentMode
currentFeaturesInDictionary
reset
_minUpdateInterval
_featurizers
_scheduler
_lock
_knowledgeStore
_logger
_userDefaults
abGroupOverride
initWithAssetsForResource:ofType:specifiedABGroup:
abGroupContents
initWithAssetClass:
locationOfInterestSearchRadius
homeLOISearchRadius
workLOISearchRadius
frequentLOIMinimumVisits
currentLocationUpdateInterval
locationOfInterestUpdateInterval
predictedLocationsOfInterestUpdateInterval
predictedExitTimesUpdateInterval
_parameters
objectAtIndex:
numberWithUnsignedLongLong:
addEvents:
setUserID:
eventsCount
clearEvents
eventsAtIndex:
eventsType
hasUserID
setTimezone:
setHasTimezone:
hasTimezone
setTimestamp:
setHasTimestamp:
hasTimestamp
userID
events
setEvents:
timezone
timestamp
_timestamp
_events
_timezone
_userID
mutableCopy
numberWithBool:
setValue:forFeatureType:
setObject:forKeyedSubscript:
valueForFeatureType:
boolValue
enumerateKeysAndObjectsUsingBlock:
enumerateFeaturesUsingBlock:
setWithObjects:
error
containsValueForKey:
initWithDomain:code:userInfo:
failWithError:
initWithDictionary:
_features
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
_lastSubmissionDate
localTimeZone
secondsFromGMT
shareDiagnosticDataWrapper
modeStreamFrom:to:limit:
stringValue
_updateLastSubmissionDate:
stringForKey:
doubleForKey:
dateByAddingTimeInterval:
dateWithTimeIntervalSince1970:
setDouble:forKey:
stringForDate:
logEventsFromModeStream
setShareDiagnosticDataWrapper:
_formatter
_defaults
_duetHelper
_shareDiagnosticDataWrapper
abGroupNilString
numberWithUnsignedChar:
sharedInstanceWithMobileAssets
getAssetFileAndSubscoreForConsumerSubType:
first
groupIdentifier
isInternalBuild
objectForKey:
abGroupForConsumerSubType:
initWithLocationManager:
initWithStateStore:
defaultCenter
_locationManagerDidEnterRegion:
addObserver:selector:name:object:
_locationManagerDidExitRegion:
_routineLocationsOfInterestDidChange:
removeObserver:
locationOfInterestAtCurrentLocationWithCompletionHandler:
_updateLOIAndUpdateFeatures
invalidateLocationOfInterestCache
stateForRegion:withTimeout:
isInRegion:
beginMonitoringForLocation:radius:type:
coordinate
initWithCenter:radius:identifier:
beginMonitoringRegion:
_watchRegionForLOIType:
stopMonitoringRegionWithIdentifier:
setHomeLOISearchRadius:
setWorkLOISearchRadius:
_locationManager
_homeLOIRegion
_workLOIRegion
_homeLOISearchRadius
_workLOISearchRadius
currentCalendar
dateComponents
mtNextDateAfterDate:matchingComponents:
bedtimeComponents
_fetchSleepAlarmIfNecessary
sleepAlarm
invalidate
isEnabled
_updateFeatures
_scheduleTimerForAlarm:
addCompletionBlock:
_alarmsDidChange:
removeObserver:name:object:
initWithFireDate:interval:repeats:block:
mainRunLoop
addTimer:forMode:
_alarmManager
_sleepAlarm
_significantTimeToken
initWithGPS:routine:stateStore:now:
initWithGuardedData:
locationEnabled
preciseLocationEnabled
horizontalAccuracy
timeIntervalSinceDate:
tupleWithFirst:second:
getCurrentLocation_RequestPreciseLocation:
clearLocationOfInterest
_currentLocationAndNeedsUpdate_RequestPreciseLocation:
second
updateLocationWithTimeout:requestPreciseLocation:
errorWithDomain:code:userInfo:
updateLocationWithCompletionHandler:
_handleRoutineError:forThing:
gotState:
_fetchLocationOfInterest:inGroup:
getCurrentLocation
_updateLocationsOfInterestWithCurrentLocation:
waitForGroup:timeoutSeconds:
laterDate:
getCurrentLocationWithCompletionHandler:
stringForLOIType:
length
_gotLocation:forLocationOfInterest:
dateWithTimeInterval:sinceDate:
domain
code
distantFuture
updateCurrentLocationOfInterest
updateCurrentLocationOfInterestWithCompletionHandler:
updateCurrentLocationOfInterestIfTimeElapsed
cachedLocationOfInterestAtCurrentLocation
_updateCurrentLocationOfInterestIfTimeElapsedWithCompletionHandler:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
_updatePredictedLocationsOfInterestIfTimeElapsed
_updatePredictedExitTimesIfTimeElapsed
updatePredictedLocationsOfInterest
updatePredictedExitTimes
_distanceOfCurrentLocationFrom:
initWithStartDate:endDate:
locationOfInterestAtCurrentLocation
isNearKnownTypeLocationOfInterest
isNearFrequentLocationOfInterest
isTouristWithCurrentDate:
getCurrentRoutineModeWithCurrentDate:
initWithName:object:userInfo:
postNotification:
didChangeLocationEnabled:
didChangePreciseLocationEnabled:
locationManagerGPS:didEnterRegionWithIdentifier:
locationManagerGPS:didExitRegionWithIdentifier:
distanceFromHomeOfCurrentLocationInMeters
distanceFromWorkOfCurrentLocationInMeters
distanceFromSchoolOfCurrentLocationInMeters
distanceFromGymOfCurrentLocationInMeters
fetchAllLocationsOfInterest:
getCurrentPreciseLocation
isTourist
isNearKnownTypeOrFrequentLocationOfInterest
predictedLocationsOfInterest
getPredictedLocationsOfInterestFromLOIName:startDate:
getPredictedExitTimesFromLOIName:startDate:
isAvailableLocationOfInterestType:
setNow:
previousLOIAndCurrentLOI
isLocationNearKnownTypeLocationOfInterest:
didGetLocationUpdate:
predictedNextLOITimeout
setPredictedNextLOITimeout:
predictedExitDateTimeout
setPredictedExitDateTimeout:
_gps
_routine
_stateStore
_loiUpdateQueue
_now
_predictedNextLOITimeout
_predictedExitDateTimeout
currentLocation
currentRoutineMode
state
lastLOIUpdateTimestamp
lastRoutineModeTimestamp
lastPredictedLOIsUpdateTimestamp
lastPredictedExitTimesUpdateTimestamp
bundleWithPath:
initWithEffectiveBundle:delegate:onQueue:
setDesiredAccuracy:
authorizationStatus
accuracyAuthorization
_init
requestLocation
lock
_startUpdateIfNeededWithPreciseLocation:
waitUntilDate:
unlock
startMonitoringForRegion:
_requestStateIfNeededForRegion:
requestStateForRegion:
monitoredRegions
_existingRegionWithIdentifierOnCLQueue:
stopMonitoringForRegion:
broadcast
_updateConditionAndInvokeLocationBlocks:error:
center
radius
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_clQueue
_updateCondition
_locationEnabled
_preciseLocationEnabled
_updatePending
_locationBlocksToInvoke
_requestStateCondition
_regionRequested
_state
modeStreamFrom:to:ascending:limit:
_queryDuetStreamUnbatched:startDate:endDate:ascending:otherPredicates:limit:
_updateModeStreamEndDates:to:
predicateWithFormat:
arrayByAddingObject:
andPredicateWithSubpredicates:
knowledgeStoreWithDirectReadOnlyAccess
sortDescriptorWithKey:ascending:
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
executeQuery:error:
objectAtIndexedSubscript:
metadata
eventWithStream:startDate:endDate:value:metadata:
carPlayMonitor
autoDNDMonitor
notificationTokens
motionManagerWrapper
isMotionTypeDriving
waitForSessionInitialization
cachedAutomaticDNDActiveState
currentSession
isAvailable
vehicularState
vehicularOperatorState
addSessionObserver:
startUpdatingMotionType:forDelegate:
stopUpdatingMotionType:forDelegate:
removeSessionObserver:
fetchAutomaticDNDAssertionWithReply:
startedConnectionAttemptOnTransport:
cancelledConnectionAttemptOnTransport:
sessionDidConnect:
sessionDidDisconnect:
session:didUpdateConfiguration:
didUpdateMotionType:isActive:
initWithATXMotion:
hasMotionActivity
updateCurrentActivity:
isActivityAvailable
queryActivityStartingFromDate:toDate:toQueue:withHandler:
waitForSemaphore:timeoutSeconds:
_fetchMotionActivities
summarizeActivityStream:
update:
initFromCMMotionActivity:
isExpired
currentMotion
numberWithInteger:
walking
running
cycling
automotive
unknown
setWithObject:
_motionActivityHandler
startActivityUpdatesToQueue:withHandler:
removeObject:
removeObjectForKey:
stopActivityUpdates
getCurrentActivity
_motionActivityManager
_motionActivityQueue
_delegatesMonitoringForMotionType
_mostRecentActivity
_currentMotion
initFromCMMotionActivity:canPredictClipsGivenRecentMotion:
_getMotionTypeFromCMMotionActivity:
stationary
initWithMotionType:stationary:canPredictClipsGivenRecentMotion:
getMotionStringFromMotionType:
getMotionString
initWithFormat:
findMostCommonAndRecent:identityFunc:
canPredictClipsForActivityStream:
subarrayWithRange:
integerValue
numberWithUnsignedInteger:
indexesOfObjectsPassingTest:
objectsAtIndexes:
_getMotionStringFromCMMotionActivity:
print
motiontype
canPredictClipsGivenRecentMotion
_stationary
_canPredictClipsGivenRecentMotion
_motiontype
lastUpdated
isEqualToLocation:
decodeIntegerForKey:
encodeInteger:forKey:
encodeDouble:forKey:
initWithUUID:visits:coordinate:
addVisitFrom:to:
_visits
_coordinate
initWithName:type:
_name
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
@"CLLocation"
@32@0:8@16@24
@16@0:8
@"ATXLocationOfInterest"
@"NSArray"
@"NSDate"
@"ATXLocationManagerKnownLOIs"
@24@0:8^{_NSZone=}16
@20@0:8i16
i24@0:8@16
i16@0:8
v20@0:8i16
v20@0:8B16
v24@0:8d16
B24@0:8@16
Q16@0:8
d16@0:8
@"NSString"
{?="endDate"b1"startDate"b1"intValue"b1"mode"b1}
@"ATXModePBRecord"
{?="version"b1}
@40@0:8@16@?24d32
@24@0:8d16
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_queue>"
v40@0:8d16@24@?32
v32@0:8q16@?24
v32@0:8@16@?24
v52@0:8@16@24d32B40@?44
v44@0:8@16@24B32@?36
Q24@0:8@16
v40@0:8d16@"CLLocation"24@?<v@?@"ATXLocationOfInterest"@"NSError">32
v32@0:8q16@?<v@?@"CLLocation"@"NSError">24
v32@0:8@"NSDateInterval"16@?<v@?@"NSArray"@"NSError">24
v52@0:8@"CLLocation"16@"NSDate"24d32B40@?<v@?@"NSArray"@"NSError">44
v44@0:8@"CLLocation"16@"NSDate"24B32@?<v@?@"NSArray"@"NSError">36
Q24@0:8@"CLLocation"16
@"RTRoutineManager"
@24@0:8q16
q32@0:8@16^B24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"ATXModeFeatureSet"16@0:8
@"<ATXModeFeaturizerDelegate>"16@0:8
v24@0:8@"<ATXModeFeaturizerDelegate>"16
@"_CDClientContext"
@"_CDContextualChangeRegistration"
@"<ATXModeFeaturizerDelegate>"
@24@0:8@?16
@"ATXLocationManagerState"24@0:8@?<v@?@"ATXLocationManagerState">16
v24@0:8@"ATXLocationManagerState"16
@"<ATXLocationManagerStateStoreOnDiskEnv>"
i28@0:8@16i24
v24@0:8@?16
i28@0:8@"NSString"16i24
v24@0:8@?<v@?>16
@"ATXModeFeatureSet"
@"NSMutableArray"
v32@0:8@16@24
v32@0:8@"<ATXModeFeaturizer>"16@"ATXModeFeatureSet"24
@40@0:8@16d24@32
@28@0:8i16@20
v36@0:8@16B24@?28
@"ATXModeScheduler"
@"_PASQueueLock"
@"<_DKKnowledgeSaving>"
@"ATXModeLogger"
@"NSUserDefaults"
@24@0:8#16
@"NSDictionary"
@24@0:8Q16
v24@0:8Q16
{?="timestamp"b1"timezone"b1}
v24@0:8B16i20
v28@0:8@16i24
B20@0:8i16
@"NSMutableDictionary"
@"NSDateFormatter"
@"ATXModeDuetHelper"
@20@0:8C16
v24@0:8q16
v40@0:8@16d24q32
@"<ATXLocationManagerProtocol><ATXLocationOfInterestManagerProtocol>"
@"CLCircularRegion"
@"MTAlarmManager"
@"MTAlarm"
@"NSTimer"
v32@0:8@"<ATXLocationManagerGPS>"16@"NSString"24
q32@0:8@16d24
@"ATXLocationOfInterest"16@0:8
v24@0:8@?<v@?@"ATXLocationOfInterest"@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
@"CLLocation"16@0:8
v24@0:8@"CLRegion"16
v24@0:8@"NSString"16
q32@0:8@"CLRegion"16d24
B24@0:8@"NSDate"16
@"NSString"24@0:8q16
@"NSArray"16@0:8
@"NSArray"32@0:8@"NSString"16@"NSDate"24
B24@0:8q16
@48@0:8@16@24@32@40
@20@0:8B16
v32@0:8q16@24
v32@0:8@16q24
d24@0:8@16
@"<ATXLocationManagerGPS>"
@"<ATXLocationManagerRoutine>"
@"<ATXLocationManagerStateStore>"
@"_PASLock"
@"ATXLocationManagerState"
v40@0:8@16@24@32
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@28@0:8d16B24
@"CLLocation"28@0:8d16B24
v24@0:8@?<v@?@"CLLocation"@"NSError">16
@"<ATXLocationManagerGPSDelegate>"16@0:8
v24@0:8@"<ATXLocationManagerGPSDelegate>"16
@"CLLocationManager"
@"NSCondition"
@"NSMutableSet"
@"CLRegion"
@"<ATXLocationManagerGPSDelegate>"
@40@0:8@16@24Q32
@44@0:8@16@24B32Q36
@60@0:8@16@24@32B40@44Q52
@"CARSessionStatus"
@"CARAutomaticDNDStatus"
[5i]
@"ATXMotionManagerWrapper"
v24@0:8@"CARSession"16
v32@0:8@"CARSession"16@"CARSessionConfiguration"24
v28@0:8q16B24
@?16@0:8
@"CMMotionActivityManager"
@"NSOperationQueue"
@"CMMotionActivity"
q24@0:8@16
@32@0:8@16@?24
@32@0:8q16B24B28
@28@0:8@16B24
q16@0:8
@"ATXMotion"
@56@0:8@16@24{CLLocationCoordinate2D=dd}32q48
@48@0:8@16@24{CLLocationCoordinate2D=dd}32
v32@0:8Q16Q24
{CLLocationCoordinate2D=dd}16@0:8
@"NSUUID"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@32@0:8@16q24
