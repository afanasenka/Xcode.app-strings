@(#)PROGRAM:AMPIDService  PROJECT:MetricsKit-1
MetricsKit: AMPIDService shared secret store created
MetricsKit: AMPIDService XPC connection invalidated
MetricsKit: AMPIDService shared secret store released
MetricsKit: AMPIDService XPC connection from client interrupted!
MetricsKit: Failed to setup dir suffix for sandbox environment (error code: %d)
MetricsKit: AMPIDService temp directory: %@
MetricsKit: AMPIDService XPC Service started
MetricsKit: AMPIDService XPC Service stopped
MetricsKit: Expected a path but got a full url for MTFrameworkEnvironment.setLocalDataPath. Please remove file:// from %@
MetricsKit: Failed to read entitlement %@ error: %@
MetricsKit: Error occurred with code %ld: %@
MetricsKit: Someone is finishing a promise with both a result and an error. This will result in both the success and error blocks being called. result = %@ error = %@
MetricsKit: Someone is finishing a promise with neither a result nor an error. This will result in neither the success nor the error blocks being called.
MetricsKit: Someone is attempting to finish a finished MTPromise.
MetricsKit: The application is missing container %@ in %@ entitlement.
MetricsKit: AMPIDService is using iCloud container in the sandbox environment
MetricsKit: Error starting sync engine: %@
MetricsKit: Error getting user record: %@
MetricsKit: Pre-generating future IDs for %@
MetricsKit: Got pre-synchronized record with ID %@
MetricsKit: Timed out waiting for synchronized record with ID %@ wait time: %f
MetricsKit: Error: %@
MetricsKit: Failed to load metadata with error %@
MetricsKit: Failed to load user record ID with error %@
MetricsKit: Failed to write user record ID with error %@
MetricsKit: Saving synchronized record with ID %@ 
MetricsKit: Saving unsynchronized record with ID %@ 
MetricsKit: Failed to delete corrupted data file %@ error %@
MetricsKit: Failed to remove local record data %@ with error %@
MetricsKit: Failed to load local record data with ID %@ error %@
MetricsKit: Failed to save local record data with ID %@ error %@
MetricsKit: Creating new zone with ID %@
MetricsKit: Failed to sync record with ID %@ error %@
MetricsKit: Failed to save record zone with ID %@ error %@
MetricsKit: Failed to delete local record data with ID %@ error %@
MetricsKit: Failed to delete record with ID %@ error %@
MetricsKit: Failed to save record with ID %@ error %@
MetricsKit: Failed to save sync engine metadata with error %@
MetricsKit: Failed to remove local file %@ with error %@
MTXPCServiceInterface
NSObject
ServiceDelegate
NSXPCListenerDelegate
MTXPCConnection
MTFrameworkEnvironment
Utilities
SHA1Base62
Base62
MTInterprocessChangeNotifier
MTWeakRef
MTNonretainedCache
MTPromise
Composition
MTPromiseResult
MTPromiseCompletionBlocks
MTPromiseWithTimeout
MTIDScheme
NSSecureCoding
NSCoding
MTIDSecret
MTIDCloudKitStore
MTIDCloudKitLocalDBDelegate
MTIDSecretStore
MTIDCloudKitPromiseManager
MTIDCloudKitLocalDB
CKSyncEngineDataSource
MTIDFileStore
SyncState
MTIDCompositeSecretStore
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
secretForScheme:options:completion:
clearLocalData
debugInfo
interfaceWithProtocol:
setExportedInterface:
secretStore
initWithXPCConnection:secretStore:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
resume
listener:shouldAcceptNewConnection:
.cxx_destruct
_secretStore
bundleForClass:
bundleIdentifier
UTF8String
serviceListener
setDelegate:
init
secretForScheme:options:
addFinishBlock:
connection
_configuration
_connection
sharedEnvironment
setSharedEnvironment:
hasPrefix:
URLWithString:
path
stringByReplacingOccurrencesOfString:withString:
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
date
valueForEntitlement:
containsObject:
isInternalBuild
standardUserDefaults
valueForKey:
isEqualToString:
withEnvironment:execute:
initialize
setLocalDataPath:
localDataPath
useCloudKitSandbox
_localDataPath
count
objectAtIndexedSubscript:
null
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
mt_deepCopy
arrayWithObjects:count:
mutableCopy
addEntriesFromDictionary:
copy
mt_verifyEventData
mt_map:
mt_condensedArray
dataUsingEncoding:
bytes
length
initWithUUIDBytes:
mt_base62String
mt_SHA1Base62String
getUUIDBytes:
initWithBytes:length:encoding:
fullIdentifier:
stop
dealloc
stringWithFormat:
notify:
initWithIdentifier:onChange:
notify
_identifier
_token
localizedDescription
raise:format:
code
objectForKeyedSubscript:
setObject:forKeyedSubscript:
initWithDomain:code:userInfo:
initWithFormat:arguments:
dictionaryWithObjects:forKeys:count:
value
setValue:
_value
dictionary
setCache:
cache
objectForKeyedSubscript:creation:
_cache
initWithCondition:
_globalPromiseStorageAccessQueue
_globalPromiseStorage
finishWithError:
finishWithResult:
_configureAllPromise:withResults:promises:currentPromiseIndex:
_configureAnyPromise:withPromises:currentPromiseIndex:
stateLock
lock
_isFinished
promiseResult
error
_errorIsCanceledError:
unlock
completionBlocks
addErrorBlock:
callErrorBlock:withPromiseResult:
_addBlock:orCallWithResult:
addCompletionBlock:
callCompletionBlock:withPromiseResult:
addSuccessBlock:
callSuccessBlock:withPromiseResult:
lockWhenCondition:beforeDate:
result
distantFuture
resultBeforeDate:error:
dateWithTimeIntervalSinceNow:
resultWithError:
resultWithTimeout:error:
promiseWithResult:
_finishPromise:withPromise:
promiseWithError:
errorWithDomain:code:userInfo:
finishWithResult:error:
condition
initWithResult:error:
setPromiseResult:
unlockWithCondition:
flushCompletionBlocksWithPromiseResult:
removeObject:
numberWithBool:
cancel
domain
promiseWithAll:
promiseWithAny:
isCancelled
isFinished
waitUntilFinished
waitUntilFinishedWithTimeout:
catchWithBlock:
thenWithBlock:
boolCompletionHandlerAdapter
completionHandlerAdapter
errorOnlyCompletionHandlerAdapter
nilValueCompletionHandlerAdapter
setCompletionBlocks:
setStateLock:
_completionBlocks
_promiseResult
_stateLock
_resultOfComposition:errors:
dictionaryWithCapacity:
_findUnfinishedPromise:
_setupCompositePromise:composition:
cancelPromisesInComposition:
promiseWithComposition:
_error
_result
removeAllObjects
_shouldCallImmediately
setStartDate:
setPromise:
startDate
timeIntervalSinceNow
setDispatchSourceTimer:
promise
dispatchSourceTimer
initWithTimeout:queue:timeoutBlock:
_startDate
_promise
_dispatchSourceTimer
setIdNamespace:
compare:options:
setRotationSchedule:
setLifespan:
longLongValue
setCorrelations:
setVersion:
caseInsensitiveCompare:
setIdType:
setContainerIdentifier:
overrideLifespanMaybe
calculateHash
setLocalHash:
idNamespace
integerForKey:
localTimeZone
timeZone
isEqualToTimeZone:
initWithCalendarIdentifier:
setYear:
setMonth:
setDay:
rotationSchedule
localCalendar
components:fromDate:
referenceDateComponents
components:fromDateComponents:toDateComponents:options:
lifespan
timeIntervalSince1970
dateFromComponents:
timeBucketForDate:
dateWithTimeIntervalSince1970:
correlations
idType
version
containerIdentifier
localHash
correlationHash
numberWithLongLong:
topics
encodeObject:forKey:
encodeInt:forKey:
encodeInt64:forKey:
isDefault
encodeBool:forKey:
decodeObjectOfClass:forKey:
decodeIntForKey:
decodeInt64ForKey:
setCorrelationHash:
setTopics:
decodeBoolForKey:
setIsDefault:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithNamespace:options:
initWithNamespace:type:
rollingStartDateForDate:
rollingEndDateForDate:
secretKeyForDate:
rotatedSecretNameForDate:maxCount:
dictionaryRepresentation
_isDefault
_idNamespace
_idType
_rotationSchedule
_lifespan
_correlations
_version
_containerIdentifier
_localHash
_correlationHash
_topics
UUID
initWithKey:value:expirationDate:
setKey:
setExpirationDate:
componentsSeparatedByString:
doubleValue
expirationDate
isSynchronized
setIsSynchronized:
initWithScheme:date:
initWithRawValue:
rawValue
_isSynchronized
_expirationDate
_key
setEntitled:
entitled
stringByAppendingString:
setAccessQueue:
recordZoneID
initWithFolder:recordType:recordZoneID:
setLocalDB:
setGeneratedDates:
defaultCenter
accountDidChange:
addObserver:selector:name:object:
accessQueue
startSyncEngine
initWithCallbackQueue:
setPromiseManager:
initWithContainerIdentifier:environment:
initWithContainerID:
container
updateUserRecordID:
fetchUserRecordIDWithCompletionHandler:
setSyncEnginePromise:
localDB
recordName
setUserRecordIDName:clearDataIfChanged:
pendingRecordIDs
_beginTransaction
addRecordIDsToSave:recordIDsToDelete:
syncEnginePromise
containerID
environment
accountStatus
supportsDeviceToDeviceEncryption
privateCloudDatabase
metadata
initWithDatabase:dataSource:metadata:machServiceName:
accountInfoWithCompletionHandler:
_generateFutureSecretsForScheme:
generatedDates
dateByAddingTimeInterval:
compare:
recordIDForScheme:date:
values
populateRecord:withNewSecretForScheme:date:
recordWithID:updateRecordMaybe:error:
recordWithID:error:
recordType
initWithRecordType:recordID:
mt_setSynchronized:
writeRecord:error:
mt_isSynchronized
recordID
promiseManager
waitForRecordDidSync:timeout:
initWithZoneName:ownerName:
initWithRecordName:zoneID:
encryptedValuesByKey
setValue:forKey:
recordDidSync:
_endTransaction
transactionTimeout
boolValue
promiseForRecordWithID:timeout:updateRecordMaybe:
secretFromRecord:
generateFutureSecretsForScheme:
clearData
allRecords
setTransactionTimeout:
cloudKitLocalDB:didChangeRecord:
initWithContainerIdentifer:
transaction
setTransaction:
_entitled
_syncEnginePromise
_localDB
_accessQueue
_generatedDates
_transaction
_promiseManager
setCallbackQueue:
setDict:
callbackQueue
dict
array
_dict
_callbackQueue
setRecordType:
setRecordZoneID:
fileURLWithPath:
exceptionWithName:reason:userInfo:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
userInfo
setPathURL:
pathURL
dataWithContentsOfURL:options:error:
writeToURL:options:error:
deleteIfExists:error:
fileExistsAtPath:
removeItemAtURL:error:
dataForName:error:
initWithData:encoding:
userRecordIDName
writeData:forName:error:
setZoneCreated:
archivedDataWithRootObject:requiringSecureCoding:error:
mt_syncingFileName
mt_syncedFileName
delegate
fileExists:
unarchivedObjectOfClass:fromData:error:
mt_syncingFileExtension
enumeratorAtPath:
nextObject
hasSuffix:
substringToIndex:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
zoneID
zoneCreated
initWithZoneID:
addRecordZonesToSave:recordZoneIDsToDelete:
deleteRecordWithID:error:
mt_syncedFileExtension
syncEngine:recordToSaveForRecordID:
syncEngine:didSaveRecord:
syncEngine:failedToSaveRecord:error:
syncEngine:didDeleteRecordWithID:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:didFetchRecord:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:didUpdateMetadata:
syncEngine:nextBatchOfRecordsToModifyWithRecordIDsPendingSave:recordIDsPendingDelete:
syncEngine:didCompleteModifyRecordsBatch:withSavedRecords:deletedRecordIDs:error:
syncEngine:didSaveRecordZone:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:failedToSaveRecordZone:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
syncEngine:zoneWithIDWasPurged:
_zoneCreated
_delegate
_recordType
_recordZoneID
_pathURL
fileURLForScheme:date:
writeToURL:atomically:encoding:error:
stringWithContentsOfURL:encoding:error:
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
sanitizeFileName:
setStores:
stores
secretStoreForScheme:
enumerateKeysAndObjectsUsingBlock:
_stores
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v40@0:8@"MTIDScheme"16@"NSDictionary"24@?<v@?@"MTIDSecret"@"NSError">32
@"NSDictionary"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v16@0:8
@"<MTIDSecretStore>"
@32@0:8@16@24
@"NSDictionary"
@"NSXPCConnection"
v32@0:8@16@?24
v24@0:8@16
@24@0:8@16
@"NSString"
@24@0:8@?16
@32@0:8@16@?24
v32@0:8@16@24
@"NSMutableDictionary"
v48@0:8@16@24@32Q40
v40@0:8@16@24Q32
v24@0:8@?16
@32@0:8@16^@24
@24@0:8^@16
@32@0:8d16^@24
v24@0:8d16
@?16@0:8
v32@0:8@?16@?24
@"MTPromiseCompletionBlocks"
@"MTPromiseResult"
@"NSConditionLock"
@"NSError"
v32@0:8@?16@24
@"NSMutableArray"
@40@0:8d16@24@?32
@"NSDate"
@"MTPromise"
@"NSObject<OS_dispatch_source>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
q24@0:8@16
q16@0:8
v24@0:8q16
v24@0:8Q16
v20@0:8B16
@"NSArray"
@40@0:8@16@24@32
v40@0:8@16@24@32
d16@0:8
v32@0:8@"MTIDCloudKitLocalDB"16@"CKRecord"24
@"MTPromise"32@0:8@"MTIDScheme"16@"NSDictionary"24
@40@0:8@16@?24^@32
@40@0:8@16d24@?32
@"MTIDCloudKitLocalDB"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_os_transaction>"
@"MTIDCloudKitPromiseManager"
@32@0:8@16d24
v56@0:8@16@24@32@40@48
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
@"CKSyncEngineBatch"40@0:8@"CKSyncEngine"16@"NSArray"24@"NSArray"32
v56@0:8@"CKSyncEngine"16@"CKSyncEngineBatch"24@"NSArray"32@"NSArray"40@"NSError"48
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
B40@0:8@16@24^@32
B32@0:8@16^@24
B28@0:8@16B24
@"<MTIDCloudKitLocalDBDelegate>"
@"CKRecordZoneID"
@"NSURL"
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
v24@?0@"MTIDSecret"8@"NSError"16
connection
T@"NSXPCConnection",R,W,N,V_connection
secretStore
T@"<MTIDSecretStore>",R,N,V_secretStore
com.apple.AMPIDService
InternalBuild
file://
MTIDCompositeSecretStore
com.apple.security.exception.mach-lookup.global-name
MTIDXPCSecretStore
MTMetricsKitContainerEnvironment
com.apple.developer.icloud-container-environment
Development
sharedEnvironment
T@"MTFrameworkEnvironment",&
localDataPath
T@"NSString",C,N
Event data item at index %ld is of invalid type %@. Event data items must be of NSDictionary or MTPromise type.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
v12@?0i8
%@:%@
com.apple.amp-ae-eng.MetricsKit
general
MTError
MetricsKit error
MTException
value
T@,W,N,V_value
cache
T@"NSMutableDictionary",&,N,V_cache
v16@?0@"MTPromiseResult"8
v24@?0@8@"NSError"16
v20@?0B8@"NSError"12
v16@?0@"NSError"8
v16@?0@8
com.apple.MetricsKit.globalPromiseStorageAccessQueue
completionBlocks
T@"MTPromiseCompletionBlocks",&,N,V_completionBlocks
promiseResult
T@"MTPromiseResult",&,N,V_promiseResult
stateLock
T@"NSConditionLock",&,N,V_stateLock
cancelled
TB,R,N,GisCancelled
finished
TB,R,N,GisFinished
error
T@"NSError",R,C,N,V_error
result
T@,R,N,V_result
startDate
T@"NSDate",&,N,V_startDate
promise
T@"MTPromise",&,N,V_promise
dispatchSourceTimer
T@"NSObject<OS_dispatch_source>",&,N,V_dispatchSourceTimer
date
waitTime
idType
reset
namespace
type
lifespan
rotation
correlations
version
container
topics
MTCloudKitAccountDidChangeNotification
MTCloudKitRecordDidSyncNotification
userid
user
client
daily
com.apple.amp-ae.metricskit.identifiers
MTIDServiceLifespanOverride~%@
MTIDServiceLifespanOverride
%@_%llx_%llx
%@_%02llx
<%@: %p, namespace: %@, lifespan: %lld correlations: %@ >
interval
unknown
idNamespace
rotationSchedule
containerIdentifier
localHash
correlationHash
isDefault
supportsSecureCoding
TB,R
T@"NSString",C,N,V_idNamespace
Tq,N,V_idType
Tq,N,V_rotationSchedule
Tq,N,V_lifespan
T@"NSArray",C,N,V_correlations
T@"NSString",C,N,V_version
T@"NSString",C,N,V_containerIdentifier
TQ,N,V_localHash
TQ,N,V_correlationHash
T@"NSArray",C,N,V_topics
TB,N,V_isDefault
NotImplemented
Use initWithScheme:date: instead
%@|%@|%lld
<%@: %p, key: %@, value: %@, expiration: %@ >
expirationDate
isSynchronized
T@"NSString",C,N,V_key
T@"NSString",C,N,V_value
T@"NSDate",C,N,V_expirationDate
TB,N,V_isSynchronized
MT_IDSecret
MT_IDZone
secretKey
secretValue
expiration
com.apple.developer.icloud-container-identifiers
.accessqueue
MTIDCloudKitStore-%@
v24@?0@"CKRecordID"8@"NSError"16
v16@?0@"CKSyncEngine"8
iCloud account is not available. Account status: %ld
iCloud account for container %@ doesn't support device to device encryption
v24@?0@"CKSyncEngine"8@"NSError"16
v24@?0@"CKAccountInfo"8@"NSError"16
B16@?0@"CKRecord"8
v24@?0@"CKRecord"8@"NSError"16
MT_%@
@"MTPromise"16@?0@"CKRecord"8
com.apple.AMPIDService.SyncEngineQueue
iCloudStore
secrets
@16@?0@"CKRecord"8
transactionTimeout
Td,N
T@"NSString",&,N,V_containerIdentifier
entitled
TB,V_entitled
syncEnginePromise
T@"MTPromise",&,N,V_syncEnginePromise
localDB
T@"MTIDCloudKitLocalDB",&,N,V_localDB
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
generatedDates
T@"NSMutableDictionary",&,N,V_generatedDates
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
promiseManager
T@"MTIDCloudKitPromiseManager",&,N,V_promiseManager
v16@?0@"MTPromiseWithTimeout"8
dict
T@"NSMutableDictionary",&,N,V_dict
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
MetaData
UserRecordID
MTIDCloudKitLocalDB
MTFrameworkEnvironment.sharedEnvironment.localDataPath is not valid: %@
Application doesn't have write access to %@
recordType
T@"NSString",&,N,V_recordType
recordZoneID
T@"CKRecordZoneID",&,N,V_recordZoneID
pathURL
T@"NSURL",&,N,V_pathURL
zoneCreated
TB,N,V_zoneCreated
delegate
T@"<MTIDCloudKitLocalDBDelegate>",W,N,V_delegate
MTIDFileStore-%@
MTIDFileStore
MTFrameworkEnvironment.sharedEnvironment.localDataPath (%@) or containerIdentifier (%@) is not valid
MTIDFileStoreException
/\?%*|"<>
LocalFile
.syncing
.synced
mt_isSynchronized
TB,N,Gmt_isSynchronized,Smt_setSynchronized:
Cloud
Local
%@-%@
v32@?0@8@"<MTIDSecretStore>"16^B24
v32@?0@8@16^B24
CompositeStore
subStores
stores
T@"NSMutableDictionary",&,N,V_stores
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.AMPIDService</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.amp-ae.metricskit.identifiers</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.amp-ae.metricskit.identifiers</key>
<string>com.apple.amp-ae.metricskit.identifiers</string>
</dict>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.tcc.allow entitlement</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>Library/com.apple.AMPIDService/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.apsd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.AMPIDService</string>
</array>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.AMPIDService</string>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
