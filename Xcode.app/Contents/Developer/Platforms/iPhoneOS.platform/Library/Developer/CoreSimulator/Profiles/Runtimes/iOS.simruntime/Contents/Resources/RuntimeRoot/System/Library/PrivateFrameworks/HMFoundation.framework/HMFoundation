@(#)PROGRAM:HMFoundation  PROJECT:HMFoundation-607.3.2
fffff
%{public}@%{public}s
%{public}@%{public}@
HMF API Misuse: Unsupported type %@ with 'pii' annotation
HMFActivity
Identifier = %@, Parent = %@, Name = %@
Reason = %@
Identifier = %@, Name = %@
Missing internal location manager
Operation failed.
Unexpected internal state.
Marking as having received location
Failed to mark with exception: %@
Location.Authorization.Mark
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
%@ is unavailable
Creating transaction '%@'
Completed transaction '%@' - held for %.3fs
Releasing transaction '%@'
v8@?0
transaction
T@"NSObject<OS_os_transaction>",R,N,V_transaction
creationTime
Td,R,N,V_creationTime
Failed to mark
Successfully marked
internal
T@"NSObject<OS_os_transaction>",&,N,V_internal
Failed to unarchive with error: %@
Failed to unarchive due to invalid data: %@
%@ s, 
%@ m, 
%@ h, 
%@ d, 
%@ mo, 
hmf_localTimeDescription
@"HMFTimer"16@?0d8
Notify of expired value: %@ committed value: %@ delegate: %@
StagedValue
committedValue
T@,&,V_committedValue
timer
T@"HMFTimer",&,V_timer
timerFactory
T@?,C,V_timerFactory
value
T@,R
delegate
T@"<HMFStagedValueDelegate>",W,V_delegate
[HMFTimer] Expiration, %f, must be greater than 0
Timer
Running
Interval
Repeating
HMFTimer delegateQueue can only be set before activation (resume/fire)
T@"NSObject<OS_dispatch_source>",R,N,V_timer
options
TQ,R,N,V_options
T@"<HMFTimerDelegate>",W,V_delegate
delegateQueue
T@"NSObject<OS_dispatch_queue>",&
timeInterval
Td,R,N,V_timeInterval
leeway
TQ,R,N
running
TB,R,GisRunning
fireDate
T@"NSDate",R,C,V_fireDate
[HMFExponentialBackoffTimer] The exponential factor cannot be 0
[HMFExponentialBackoffTimer] The minimum time interval, %f, must be greater than 0
[HMFExponentialBackoffTimer] The maximum time interval, %f, must be greater than or equal to the minimum time interval, %f
increasing
TB,R,N,GisIncreasing,V_increasing
minimumTimeInterval
Td,R,N,V_minimumTimeInterval
maximumTimeInterval
Td,R,N,V_maximumTimeInterval
exponentialFactor
Tq,R,N,V_exponentialFactor
HMFLoggingDisabled
Disabling of event reporting not supported
HMF.logSession
UUID-based logging session is overriding existing logging session
eventReportingEnabled
TB,GisEventReportingEnabled
logSession
T@"HMFLogEventSession",R
You must override %@ in a subclass
keyPath
Exception while searching list (%@)
name
uuid
zoneID
uniqueIdentifier
contextSPIUniqueIdentifier
instanceID
characteristicType
shortDescription
privateDescription
propertyDescription
attributeDescriptions
T@"NSArray",R,C,N
<redacted>
The identifier is required
The public key is required
%@ %@
Identifier
Public Key
Private Key
HAP.identifier
HAP.publicKey
HAP.privateKey
supportsSecureCoding
TB,R
identifier
T@"NSString",R,C,N,V_identifier
publicKey
T@"HMFPairingKey",R,C,N,V_publicKey
privateKey
T@"HMFPairingKey",R,C,N,V_privateKey
publicPairingIdentity
T@"HMFPairingIdentity",R,C
HAPPairingKey
The pairing key data must be %tu bytes long
Data
HAP.data
data
T@"NSData",R,C,N,V_data
<[%tu] %@%@%@>
 ... 
v40@?0r^v8{_NSRange=QQ}16^B32
%02x
%02X
hmf_zeroed
TB,R,Ghmf_isZeroed
hmf_hexadecimalRepresentation
T@"NSString",R
EEE, d MMM yyyy HH:mm:ss z
en_US
message
T^{__CFHTTPMessage=},R,N,V_message
headerFields
T@"NSDictionary",R,N
body
T@"NSData",C,N
Parameter is requred: 'methodPredicate'
Invalid method predicate
Parameter is requred: 'URLPredicate'
Invalid URL predicate
methodPredicate
T@"NSPredicate",R,C,N,V_methodPredicate
URLPredicate
T@"NSPredicate",R,C,N,V_URLPredicate
matchBlock
T@?,R,C,N,V_matchBlock
requestBlock
T@?,C,N,V_requestBlock
softwareVersion
T@"HMFSoftwareVersion",R,C,N
Reachability changed to: %@
Notifying delegate address is reachable
Notifying delegate address is unreachable
Networking.Monitor
reachable
TB,GisReachable
T@"<HMFNetMonitorDelegate>",W,V_delegate
netAddress
T@"HMFNetAddress",R,C,N,V_netAddress
reachabilityPath
Host
Transfer-Encoding
Content-Length
Content-Type
Date
deallocationBlock
T@?,C,N,V_deallocationBlock
cachedHash
TQ,R,V_cachedHash
observedObject
T@,R,W,V_observedObject
T@?,C,V_deallocationBlock
HMFErrorDomain
hmfError
TB,R,N,GisHMFError
Already exists.
Not found.
Invalid parameter.
Unconfigured parameter.
Operation not supported.
Server failed to start.
Server failed to advertise.
Nil parameter.
Operation in progress.
Server search failed.
Generic error.
Operation cancelled.
Operation timed out.
Request not handled.
Unexpected result.
Exception.
Unknown error
State
Homed Version
Home Manager
Sync Manager
Home
Room
Zone
Metadata
Characteristic
Service
Pending Invites
Incoming Invites
Outgoing Invites
BulletinNotification
BulletinNotificationGroup
BulletinNotificationGroupServices
BulletinNotificationGroupCameras
Service Group
Accessory
Secondary Accessory
Bridge
Bridged Accessory
Category
Action Set
Trigger
Timer Trigger
Location
Event
Predicate
Recurrence
Execute Once
Execute Session
User
User Access Token
Removed User
Current User
Resident
Accessory Profile
Accessory Transport
Write Action
Media Action
Keychain
Keychain Item
Mesh
Application Data
HomeNotificationRegistrations
SetupHash
Pending Read Responses
Shared Home Source Version
Shared Home Update Handler
Shared Home Update Session
HMFWiFiManagerCurrentNetworkDidChangeNotification
manager
reason
T@"HMFWiFiManager",R,V_manager
TQ,R,V_options
Activating with options: %@
Deactivating
Updating activation with options: %@
Taking active assertion with reason: %@
Taking WoW assertion
Releasing WoW assertion
Networking.WiFi.Manager
Re-Enabling WoW
WiFi link is %@
Down
Current network SSID updated from %@ to %@
sharedManager
T@"HMFWiFiManager",R
MACAddress
T@"HMFMACAddress",R,C,V_MACAddress
currentNetworkSSID
active
TB,R,GisActive
None
Foreground
HMFLocationAuthorizationUpdatedNotification
isAuthorized
authorized
isMonitoring
monitoring
bundleIdentifier
bundle
Authorized
Cannot set queue once the location authorization has started.
Starting to monitor with observer: %@
Observer deallocated, stopping monitoring for observer: %@
Stopping to monitor with observer: %@
B24@?0@"HMFObjectObserver"8^B16
Location support not available, unable to request authorization
CoreLocation not available
Location authorization in progress
Failed to request authorization with error: %@
Received notification of authorization status changed to: %d
Location.Authorization
T@"NSString",R,C,V_bundleIdentifier
T@"NSBundle",R,V_bundle
T@"CLLocationManager",R,V_internal
status
Ti,R
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
TB,R,GisAuthorized
TB,R,GisMonitoring
CLLocationManager
Unable to find class %s
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
/System/Library/Frameworks/CoreLocation.framework/Contents/MacOS/CoreLocation
Get Location Authorization
Starting to monitor
Stop monitoring
Received notification authorized: %@
home
HMFMeta
ExceededSessionMax
HMFCorrespondingServiceName
HMFTimestamp
HMFMetaEventName
Sending event: %@
Queuing event: %@, %p
Flushing events without a RTC session.
Flushing queued event: %@
LogBackend
serviceName
T@"NSString",R,N
T@"<_HMFLogBackendSessionDelegate>",W,N,V_delegate
T@"NSString",R,N,V_serviceName
Session completed and no sessions are queued (%lu/%d active)
Session completed, activating queued session (%lu/%d active)
Creating active session (%lu/%d active, %lu queued)
More than %d sessions queued, creating a nil session.
Creating session for service name %@ that will queue events (%lu queued, %lu active).
LogBackendSessionManager
No configured backends were found for reporting session.
RTC reporting initialized
v16@?0@"NSArray"8
model
IOPlatformSerialNumber
serialNumber
T@"NSString",R,C,N
productPlatform
Tq,R,N
productClass
productVariant
modelIdentifier
IOPlatformExpertDevice
full
empty
Limit must be nonzero
Rate is invalid
Decrementing by %tu
Cannot decrement, not enough budget
Starting timer
Successfully decremented to: %tu
OperationBudget
Incrementing
Stopping timer
Incremented to: %tu
limit
TQ,R,N,V_limit
rate
T{_HMFRate=Qd},R,N,V_rate
TQ,R,V_value
TB,R,GisFull
TB,R,GisEmpty
^(\d+)(\.(\d+))?(\.(\d+))?.*$
Failed to create version string regex with error: %@
Invalid version string: %@
%tu.%tu.%tu
%tu.%tu
HM.major
HM.minor
HM.update
localizedDescription
majorVersion
TQ,R,V_majorVersion
minorVersion
TQ,R,V_minorVersion
updateVersion
TQ,R,V_updateVersion
versionString
^(\d+)(\.(\d+))?(\.(\d+))?((;(.*))|(\s*\((.*)\))|(\.(.*)))?.*$
%@ (%@)
%ld.%ld.%ld
HM.build
buildVersion
T@"NSString",R,C,V_buildVersion
shortVersionString
PreventUserIdleSystemSleep
Failed to create assertion with error: %ld
TI,N,V_identifier
HMFSessionIdentifier
HMFSubSessionIdentifier
HMFEventName
service
T@"NSUUID",R,N,V_uuid
[%@] Submitting event: %@
ReportingSession
backend
T@"<HMFLogBackendSession>",R,N,V_backend
voucher
T@"HMFLogEventSessionVoucher",R,N
signpostId
TQ,R,N,V_signpostId
rootUUID
T@"NSUUID",R,N,V_rootUUID
enabled
TB,R,N,GisEnabled
Failed to convert string to hardware address %@: %d
Failed to create hardware address with invalid length: %lu
Failed to create hardware address with data of invalid length: %@
 formattedString=%@
HMF.data
length
T@"NSData",R,C,V_data
formattedString
T@"NSString",R,C,V_formattedString
Failed to create MAC address with string of invalid length: %lu
Failed to create MAC address with data of invalid length: %@
Failed to deserialize object of classes: %@, from data %@, with error: %@
%@%@{
%@%@ = 
T@"<HMFMessageTransportDelegate>",W,V_delegate
com.apple.HMFoundation.%@%@%@.%tu
Failed to create internal net service browser
<%@%@, Domain = %@, Service Type = %@>
The browser is already browsing
Start browsing for %@%@
Stopping the browse
Networking.Service.Browser
%@ - %@
Browser started browsing
Browse did stop
Failed to browse
Failed to browse with error: %@
Failed to search for services.
Added service: %@
The browse domain, %@, was removed
The search domain was removed.
Removed service: %@
clientQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_clientQueue
T@"NSNetServiceBrowser",R,N,V_internal
browsing
TB,N,GisBrowsing,V_browsing
browseBlock
T@?,C,N,V_browseBlock
T@"<HMFNetServiceBrowserDelegate>",W,V_delegate
domain
T@"NSString",R,C,N,V_domain
serviceType
T@"NSString",R,C,N,V_serviceType
shouldCache
TB,N
cachedNetServices
HomeKitLinkTypeIP
HomeKitLinkTypeBluetoothLE
HomeKitLinkTypeUnknown
HMFMemoryMonitorSystemMemoryStateDidChangeNotification
HMFMemoryMonitorProcessMemoryPressureNotification
HMFSystemMemoryStateUpdateKey
HMFProcessMemoryStateUpdateKey
HMFSystemMemoryStateUnknown
HMFSystemMemoryStateNormal
HMFSystemMemoryStateWarning
HMFSystemMemoryStateCritical
HMFSystemMemoryStateUndefined
HMFProcessMemoryStateUnknown
HMFProcessMemoryStateWarning
HMFProcessMemoryStateCritical
HMFProcessMemoryStateUndefined
memoryMonitor
T@"HMFMemoryMonitor",R
lock
T@"HMFUnfairLock",R,N,V_lock
memoryPressureSource
T@"NSObject<OS_dispatch_source>",R,N,V_memoryPressureSource
TB,N,GisMonitoring,V_monitoring
systemMemoryState
Tq,N,V_systemMemoryState
Received system memory pressure source event: %@
Received process memory pressure source event: %@
port <= 65535
Failed to create server, server is invalid
Requiring TLS in anonymous mode
Failed to bind server
Networking.HTTP.Server.Internal
T^{_CFHTTPServer=},R,N,V_internal
connections
T@"NSMutableArray",R,N,V_connections
T@"<_HMFCFHTTPServerDelegate>",W,V_delegate
port
TQ,R,N,V_port
connectionIdleTimeout
valid
TB,R,N,GisValid
Server invalidated
Server received error: %@
Server did open connection: %@
Server did close connection: %@
    
width
TQ,R,V_width
level
TQ,R,V_level
Thread left active (%tu): %@
Started
Started child activity: %@
%@.%@
Failed to create memory assertion
Failed to create power assertion
%@ %@ (%@)
Parent
Assertions
Valid
Start
Beginning an invalidated activity is prohibited: %@
Marked with reason: %@
Marked
block
Activity
currentActivity
T@"HMFActivity",R
currentActivityForMarking
T@"<HMFActivityMarking>",R
T@"NSUUID",R,C,V_identifier
parent
T@"HMFActivity",R,W,V_parent
T@"NSString",R,C,V_name
assertions
TB,R,GisValid,V_valid
started
TB,R,GhasStarted
<Context: Thread = %@, Count = %tu>
currentContext
T@"__HMFThreadContext",R,C
thread
T@"NSThread",R,V_thread
count
TQ,N,V_count
T@"NSObject<OS_voucher>",&,N,V_voucher
shouldRestoreVoucher
TB,N,V_shouldRestoreVoucher
Invalidated after %fs
Stopped child activity: %@
Memory
Power
Unknown
Begining activity in context: %@
Adopting voucher: %@
Ending activity in context: %@
Restoring voucher: %@
statusCode
Tq,R,N,V_statusCode
T@"NSDictionary",C,N,V_headerFields
T@"NSData",C,N,V_body
activity
T@"HMFActivity",&,N,V_activity
Status Code
Headers
Body
Request
T@"HMFHTTPResponseInternal",R,N,V_internal
request
T@"HMFHTTPRequest",R,N,V_request
T@"NSData",R,N
T@"NSData",C,D,N
authorization
Unable to request authorization
Requesting authorization
Received notification of status: %d
Location.Authorization.Request
type
Tq,R,V_type
Invalidating during deallocation
Aquiring
Invalidating
Assertion
uniqueDescription
workQ
Invalid filter class '%@', must be subclass of %@
Processing pending index operations
B32@?0@"__HMFMessageHandler"8Q16^B24
v32@?0@"__HMFMessageHandler"8Q16^B24
Finished processing index operations
messageName
policies
selector
messageHandler
Removing handlers at indexes: %@
Dispatching message: %@
Filters: %@
Evaluating handler: %@
Evaulating filter: %@
Filter rejected message with error: %@
Invoking handler: %@
No handlers for message: %@
Successfully dispatched message: %@
Message %@ was not handled with error: %@
Invalid paramter.
The disatcher does not have a valid transport
Messaging.Dispatcher
indexed
TB,R,GisIndexed,V_indexed
shouldAutomaticallyIndex
TB,N,V_shouldAutomaticallyIndex
workQueue
T@"NSObject<OS_dispatch_queue>",R,V_workQueue
transport
T@"HMFMessageTransport",R,N,V_transport
filterClasses
T@"NSSet",C,V_filterClasses
Cannot send with response handler if the message already has a response handler
v24@?0@"NSError"8@"NSDictionary"16
v16@?0@"NSError"8
B24@?0Q8^B16
Registering handler: %@
Updating handler: %@
com.apple.HMFoundation.Message.Dispatcher.Index
Deferring index operation
v16@?0@?<v@?q>8
Handler is missing required policy '%@'
Handler does not satisfy filter policy
Failed to create connection, connection is invalid
Closed
Opened
Received request: %@
No body stream
Opening body stream
Failed to open request body stream
Sending a 500 (Internal Server Error) for the request: %@
Received complete request: %@
Sending a 501 (Not Implemented) for the request: %@
Closing body stream
Reading %ld bytes
Failed to read available data
Got zero bytes read and no accumulated read bytes
Received body stream error
Received unknown event: %ld
Failed to send internal response, %@, with error: %@
The response is invalid: %@
Sending response: %@
Sending
Completed sending response, %@, with error: %@
Failed to send response, %@, with error: %@
Successfully sent response: %@
Networking.HTTP.Server.Connection.Internal
pendingRequests
T@"NSMutableArray",R,N,V_pendingRequests
pendingRespones
T@"NSMutableArray",R,N,V_pendingRespones
T^{_CFHTTPServerConnection=},R,N,V_internal
T@"<_HMFCFHTTPServerConnectionDelegate>",W,V_delegate
address
T@"HMFNetAddress",R,N,V_address
Connection invalidated
Connection received error: %@
HMFPowerManagerBatteryStateDidChangeNotification
HMFPowerManagerBatteryLevelDidChangeNotification
CurrentCapacity
MaxCapacity
Unable to determine the current battery level
ExternalChargeCapable
FullyCharged
Unable to determine the current battery state
IOServiceFirstMatch
IOPMPowerSource
TB,N,GisRunning,V_running
notificationPort
T^{IONotificationPort=},R,N,V_notificationPort
interestNotification
TI,R,N,V_interestNotification
hasBattery
TB,R,V_hasBattery
batteryState
Tq,R,V_batteryState
batteryLevel
Tf,R,V_batteryLevel
BatteryInstalled
Battery state changed: %tu
IOGeneralInterest
HMF.wowAssertionKey
wowAssertion
T@"_HMFNetManagerWoWAssertion",W,V_wowAssertion
Mac OS X
macOS
iPhone OS
Watch OS
Apple TVOS
T@"<HMFSystemInfoNameDataSourceDelegate>",W
regionInfo
WiFiInterfaceMACAddress
T@"HMFMACAddress",R,C
supportsBLE
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
notificationToken
T^{MGNotificationTokenStruct=},R,V_notificationToken
T@"<HMFSystemInfoNameDataSourceDelegate>",W,V_delegate
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_model
T@"NSString",R,C,N,V_regionInfo
T@"NSString",R,C,N,V_serialNumber
Tq,R,N,V_productPlatform
Tq,R,N,V_productClass
Tq,R,N,V_productVariant
T@"NSString",R,C,N,V_modelIdentifier
T@"HMFSoftwareVersion",R,C,N,V_softwareVersion
T@"HMFMACAddress",R,C,V_WiFiInterfaceMACAddress
TB,R,V_supportsBLE
UserAssignedDeviceName
SerialNumber
ProductType
ModelNumber
RegionInfo
ProductName
DeviceClass
ReleaseType
BuildVersion
bluetooth-le
WifiAddress
iPhone
iPod
iPad
AppleTV
Watch
AudioAccessory
Beta
Carrier
Internal
v24@?0^{__CFString=}8^{__CFDictionary=}16
Cannot create HMFWiFiNetworkInfo with MACAddress: %@ and SSID: %@
 MACAddress=%@ SSID=%@
HMF.MACAddress
HMF.SSID
SSID
T@"NSString",R,C,V_SSID
type && [type length] > 0
%@ type: %@ length: %@
HMF.kt
HMF.ks
size
TQ,R,V_size
T@"NSString",R,C,V_type
HMFPreferenceUpdatedNotification
, Preferences = 
Adding new preference: %@
classRegistry
T@"HMFClassRegistry",R,V_classRegistry
preferences
T@"NSArray",R,C
Preference
T@"NSString",R,V_key
T@"<NSObject>",C,V_value
T@"HMFPreference",R,W,V_parent
boolValue
TB,R,N
numberValue
T@"NSNumber",R,C,N
stringValue
dataValue
T@"NSData",R,C,N
, Domain = %@, Key = %@, Value = %@
T@"NSString",R,C,V_domain
Load Default Preferences
Determining preference location
Preferences
plist
HMDHomeManager
/System/Library/PrivateFrameworks/HomeKitDaemon.framework
Parsing preferences
Invalid preference key representation: %@
Value
Customer
Developer
Unknown preference value: %@
Unable to determine current audit token
application-identifier
Process %d
Name
Application Identifier
ProcessInfo
processInfo
T@"HMFProcessInfo",R
Ti,R,V_identifier
executableURL
T@"NSURL",R,C,V_executableURL
mainBundleURL
T@"NSURL",R,C,V_mainBundleURL
mainBundle
T@"NSBundle",R,C
applicationIdentifier
codeSigned
T@"HMFBoolean",R,C,GisCodeSigned
platformBinary
T@"HMFBoolean",R,C,GisPlatformBinary
requiresEncryption
TB,V_requiresEncryption
allowsAnonymousConnection
TB,V_allowsAnonymousConnection
allowsCellularAccess
TB,V_allowsCellularAccess
supportsWakeOnLAN
TB,V_supportsWakeOnLAN
monitorsReachability
TB,V_monitorsReachability
Scheme is required
Host address is required
Port is required
%@://%@:%tu
Invalid base URL: %@
Network service is required
Registering for WOW assertion
No available IPv4 address, falling back to '%@', WoW may fail.
Starting net service reachability resolution
Starting confirmation for service: %@
Failed to confirm service, marking the client as unreachable
Confirmed service, requesting application ping
Service is unreachable, performing a one-time ping
Client ping in progress, dropping ping request
Requesting client to perform a ping
Delegated ping failed, marking the client as unreachable
Delegated ping succeeded, marking the client as reachable
v12@?0B8
Going to attempt to retry delegated ping later
Resolving
Resolved
Override the request URL to: %@
Sending request: %@
Received response, %@, to request, %@, with error: %@
Request cancelled, starting reachability probe
Invalid response scheme type
Failed to send request, %@, with error: %@
Received response: %@
Received response
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
Resuming task: %@
v24@?0@"NSURL"8@"NSError"16
Cancelling all pending requests
Canceling task: %@
Invalidating the client
v24@?0@"HMFNetAddress"8@"NSError"16
Networking.HTTP.Client
%@%@%@
Received notification that the client is now reachable
Received notification that the client is no longer reachable
Delegated ping timer fired
Retrying delegated ping
Session did become invalid with error: %@
Recevied challenge: %@
Received connection challenge, accepting the server's certificate as the client is set to allow anonymous connections
session
T@"NSURLSession",R,N,V_session
TB,N,GisActive,V_active
reachabilityMonitor
T@"HMFNetMonitor",R,N,V_reachabilityMonitor
reachabilityProbeQueue
T@"NSOperationQueue",R,N,V_reachabilityProbeQueue
delegatedPingTimer
T@"HMFExponentialBackoffTimer",&,N,V_delegatedPingTimer
pinging
TB,N,GisPinging,V_pinging
TB,N,GisReachable,V_reachable
T@"<HMFHTTPClientDelegate>",W,V_delegate
baseURL
T@"NSURL",R,C,N,V_baseURL
netService
T@"HMFNetService",R,C,N,V_netService
allowAnonymousConnection
TB,N,V_allowAnonymousConnection
configuration
T@"HMFHTTPClientConfiguration",R,C,V_configuration
https
http
Notifying delegate of reachablity change to %@
unreachable
Unable to determine the address of the server
Failed to resolve service with error: %@
Received notification that the server is now reachable
Cancelling pending confirmations due to reachability change
Received notification that the server is now unreachable
Precondition not satisfied: %@
HMFSystemInfoNameUpdatedNotification
HMFSystemInfoNameNotificationKey
HMFSystemInfoMigratingUpdatedNotification
Updated system name to '%@'
Updated migration status to '%@'
nameDataSource
T@"<HMFSystemInfoNameDataSource>",R,N,V_nameDataSource
marketingDataSource
T@"<HMFSystemInfoMarketingInformationDataSource>",R,N,V_marketingDataSource
serialNumberDataSource
T@"<HMFSystemInfoSerialNumberDataSource>",R,N,V_serialNumberDataSource
productInfoDataSource
T@"<HMFSystemInfoProductInfoDataSource>",R,N,V_productInfoDataSource
softwareVersionDataSource
T@"<HMFSystemInfoSoftwareVersionDataSource>",R,N,V_softwareVersionDataSource
migrationDataSource
T@"<HMFSystemInfoMigrationDataSource>",R,N,V_migrationDataSource
WiFiDataSource
T@"<HMFSystemInfoWiFiDataSource>",R,N,V_WiFiDataSource
bluetoothLEDataSource
T@"<HMFSystemInfoBluetoothLEDataSource>",R,N,V_bluetoothLEDataSource
Tq,R
T@"HMFSoftwareVersion",R,C
migrating
TB,R,GisMigrating
watchOS
tvOS
MacBook
Macmini
iMac
MacPro
<%@%@, Platform = %@, Class = %@, Variant = %@, Software Version = %@>
HMF.platform
HMF.class
HMF.variant
HMF.softwareVersion
HMF.majorVersion
HMF.minorVersion
HMF.patchVersion
Tq,R,V_productPlatform
Tq,R,V_productClass
Tq,R,V_productVariant
T@"HMFSoftwareVersion",R,N,V_softwareVersion
com.apple.HomeKit
com.apple.HMFoundation
[%@] 
loggingSubsystem
T@"NSString",R,N,V_loggingSubsystem
T@"NSObject<OS_os_log>",R,N,V_internal
loggingCategory
T@"NSString",R,N,V_loggingCategory
bodyData
T@"NSMutableData",R,N,V_bodyData
requestRef
T^{_CFHTTPServerRequest=},R,N,V_requestRef
bodyStream
T^{__CFReadStream=},R,N,V_bodyStream
connection
T@"_HMFCFHTTPServerConnection",R,W,N,V_connection
defaultCache
T@"HMFCache",R
T@"NSURL",R,C,V_URL
exists
TB,R,GisExists,V_exists
Unable to determine preferred cache directory
Library
Caches
Message:
Background
Default
Utility
User Initiated
User Interactive
Overriding unknown QoS, '%tu', to default
T@"NSUUID",C,N,V_identifier
T@"NSString",C,N,V_name
timeout
Td,N,V_timeout
qualityOfService
Tq,N,V_qualityOfService
destination
T@"HMFMessageDestination",&,N,V_destination
T@"HMFMessageTransport",W,N,V_transport
userInfo
T@"NSDictionary",C,N,V_userInfo
headers
T@"NSDictionary",C,N,V_headers
messagePayload
T@"NSDictionary",C,N,V_messagePayload
logEventSession
T@"HMFLogEventSession",&,N,V_logEventSession
responseHandler
T@?,C,N,V_responseHandler
%@%@
Name is a required argument
Destination is a required argument
%@ %@(%@)
<%@%@, Identifier = %@, Name = %@, QoS = %@, Destination = %@, Activity = %@, 
User Info = %@,
Headers = %@>
HMF.identifier
HMF.name
HMF.timeout
HMF.qos
HMF.destination
HMF.headers
HMF.payload
T@"HMFMessageInternal",R,N,V_internal
T@"NSUUID",C,N
T@"HMFMessageDestination",&,N
T@"NSDictionary",C,N
T@?,C,N
Td,R,N
T@"HMFMessageTransport",R,W,N
T@"HMFActivity",R,N
T@"NSDictionary",R,C,N
T@"HMFLogEventSession",R,N
Invalid userInfo class provided, %@, for message, see <rdar://problem/37677418>
T@"NSUUID",C,D,N
T@"NSString",C,D,N
Td,D,N
Tq,D,N
T@"HMFMessageDestination",&,D,N
T@"HMFMessageTransport",W,D,N
T@"HMFActivity",&,D,N
T@"NSDictionary",C,D,N
T@"HMFLogEventSession",&,D,N
T@?,C,D,N
store
T^{__SCDynamicStore=},R,N,V_store
HostNameChange
Failed to create store
Failed to set Notification on DynamicStore
Failed to set DispatchQueue on DynamicStore
Error Domain=%@ Code=%ld "%@"
Address
Opening
Failed to open connection
Failed to open connection.
Closing
Received unhandled request: %@
T@"_HMFCFHTTPServerConnection",R,N,V_internal
peerAddress
T@"HMFNetAddress",R,N
T@"<HMFHTTPClientConnectionDelegate>",W,V_delegate
Receiver does not respond to %@
Invalid receiver: %@
Destination
Policies
Receiver
Messaging.Handler
%@(%@)
T@"NSObject<OS_dispatch_queue>",R,V_queue
observer
T@"HMFObjectObserver",R,V_observer
receiver
T@"<HMFMessageReceiver>",R,W,V_receiver
T@"HMFMessageDestination",R,C,V_destination
T@"NSArray",R,C,V_policies
TQ,R,V_hash
BlockMessage Invocation
handler
T@?,R,C,V_handler
v@:@
SelectorMessage Invocation
T:,R,V_selector
default
DumpState
MM/dd/yyyy HH:mm:ss
hmf_dateComponents
T@"NSDateComponents",R,C
en_US_POSIX
YYYY_MM_dd_HH_mm_ss_SSS_ZZZ
yyyy-MM-dd'T'HH:mm:ssZZZZZ
localTimeDescription
dateComponents
iso8601Description
fileNameDescription
addressFamily
TQ,R,N,V_addressFamily
addressString
T@"NSString",R,C,N,V_addressString
Invalid sockaddr
T^{sockaddr_in=CCS{in_addr=I}[8c]},R,N,V_internal
T^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I},R,N,V_internal
Invalid hostname
hostname
T@"NSString",R,C,N,V_hostname
Invalid socket address family: 0x%02x
T@"HMFNetAddressInternal",R,N,V_internal
hmf_numeric
TB,R,Ghmf_isNumeric
hmf_integer
TB,R,Ghmf_isInteger
T@"HMFNetService",R,V_service
SHA-1
SHA-224
SHA-256
SHA-384
SHA-512
SHA1
SHA224
SHA256
SHA384
SHA512
, Algorithm = %@, Value = %@
HM.algorithm
HM.value;
algorithm
Tq,R,V_algorithm
T@"NSData",R,C,V_value
00:00:00:00:00:00
T@"<HMFWiFiManagerDataSourceDelegate>",W,N
assertionActive
TB,R,GisAssertionActive
assertionOptions
wowAsserted
TB,N,GisWoWAsserted,SsetWoWAsserted:
MACAddressString
isExecuting
isFinished
executing
finished
<%@, Identifier=%@>
Operation is already executing
Operation is already executing.
Operation is not ready
Operation is already complete, aborting.
Cancelled operation was not marked finished, marking finished
Operation:%@
Starting operation
Subclasses should override main
Cancelling with error: %@
Finishing operation
Cannot set an activity once an operation has started execuring
Cannot set an activity once an activity has been set
Operation
Operation timed out, cancelling
T@"NSUUID",R,V_identifier
T@"HMFTimer",R,N,V_timer
underlyingQueue
T@"NSObject<OS_dispatch_queue>",R
T@"HMFActivity",&,V_activity
timeoutDate
T@"NSDate",R,C
error
T@"NSError",R,C
Operation is already executing or has finished.
Executing %tu blocks
executionBlocks
T@"NSArray",R,C,V_executionBlocks
A valid object is required
objectHash
TQ,R,N,V_objectHash
object
T@,R,W,V_object
Target
HMF.target
allMessageDestinations
T@"HMFMessageDestination",R,C
target
T@"NSUUID",R,C,N,V_target
HTTPRequest
HTTPResponse
T@"NSURL",C,N,V_URL
method
T@"NSString",C,N,V_method
T@"NSDictionary",&,N,V_headerFields
T@"NSData",&,N,V_body
T@"HMFActivity",R,N,V_activity
Method
timeoutInterval
Td,N,V_timeoutInterval
T@"HMFHTTPRequestInternal",R,N,V_internal
T@"NSURL",R,C,N
urlRequest
T@"NSURLRequest",R,C,N
Test
Message is not supported: %@
Message
Messaging.Filter
policyClasses
T@"NSSet",R,C
T@"HMFMessage",R,C,V_message
shouldLogPrivateInformation
T@"<NSObject>",R,N,V_value
formatter
T@"NSFormatter",R,C,N,V_formatter
Attempting to privately log legacy attribute description for object: %@
<%@%@%@>
<private>
%@: %@
hmf_empty
TB,R,Ghmf_isEmpty
defaultClass
T#,R,N,V_defaultClass
Failed to create message
response
T@"_HMFCFHTTPMessage",R,N,V_response
T@"_HMFCFHTTPServerRequest",R,N,V_request
responseRef
T^{_CFHTTPServerResponse=},R,N,V_responseRef
completionHandler
T@?,C,N,V_completionHandler
ready
Marking as ready
Location.Authorization.Operation
T@"HMFLocationAuthorization",R,V_authorization
T@"CLLocationManager",R,V_manager
A valid name is required for publishing
_http
%@ %tu
Service Type
Port
Connection Idle Timeout
Starting
Failed to start server
Enabling WoW
Started server on port %tu
Publishing
Failed to publish net service with error: %@
Published
Stopped with error: %@
Adding request handler: %@
Removing request handler: %@
Received request, %@, from connection: %@
B32@?0@"HMFHTTPRequestHandler"8Q16^B24
Failed to handle request: %@
Found a matching request handler, %@, for the request, %@, but there was no request block
Found a matching request handler, %@, for the request, %@
Calling request handler
Received connection: %@
Accepted connection: %@
Failed to open connection, %@, with error: %@
Opened connection: %@
Rejecting connection: %@
Connection closed: %@
B32@?0@"HMFHTTPClientConnection"8Q16^B24
Closing connection: %@
Server invalidated.
Networking.HTTP.Server
T@"_HMFCFHTTPServer",&,N,V_internal
T@"<HMFHTTPServerDelegate>",W,V_delegate
TQ,R,V_port
Td,V_connectionIdleTimeout
T@"HMFMutableNetService",R,N,V_netService
T@"NSArray",R,C,V_connections
requestHandlers
Enabled
Disabled
[otherNumber isKindOfClass:NSNumber.class]
size == 1
HMF.value
Failed to create network reachability monitor%@.
for %@
Initial flags: %@
Failed to get initial reachability
%@ '%@'
localhost
Received notification of updated flags: %@
Updating reachabilty to: %@
networkReachabilityRef
T^{__SCNetworkReachability=},R,N,V_networkReachabilityRef
currentNetworkFlags
TI,N,V_currentNetworkFlags
Reachable
WWAN
The observed object must be an NSObject.
Deallocating
Invalidated
Cannot set a handler on an invalidated observer.
Registering
Unregistering
Received change: %@
KVO.observer
T@"NSString",R,C,V_keyPath
T@?,C,V_handler
com.apple.HMFoundation.Scheduler
%@%@(
isResolved
isPublishing
resolved
publishing
NSNetServiceErrorDomain
<%@%@, Domain = %@, Type = %@, Name = %@, Port = %tu, Addresses = %@>
Skipping resolving service, already have a cached address: %@
Starting to resolve service
Networking.Service
Net service will resolve
Net service resolved
Net service failed to resolve with error: %@
Failed to resolve.
Net service stopped resolving
Cancelled.
Net service stopped resolving.
Net service TXT record updated: %@
resolveBlocks
T@"NSMutableArray",R,N,V_resolveBlocks
state
Tq,N,V_state
T@"NSNetService",R,N,V_internal
TB,GisPublishing,V_publishing
T@"<HMFNetServiceDelegate>",W,V_delegate
TB,R,GisResolved,V_resolved
hostName
T@"HMFNetAddress",R,C,V_hostName
addresses
TXTRecord
T@"NSDictionary",R,C
Service domain is required
Service type is required
Service name is required
Invalid TXT record key, %@, error: %@
Invalid TXT record value, %@, error: %@
Failed to update TXT record
The service is already publishing
Cannot publish without a resolved port
Cannot publish without a resolved port.
Failed to create internal net service
Failed to create record.
Start publishing the net service
Stopping the net service
Net service will publish
Failed to publish
Failed to publish with error: %@
Failed to publish net service.
Net service did stop
Net service stopped publishing.
publishBlock
T@?,C,N,V_publishBlock
TQ,D
T@"NSDictionary",C,D
Failed to serialize TXT record key with exception: %@
Invalid TXT record key.
Failed to serialize TXT record value with exception: %@
Invalid TXT record value.
softlink:o:path:/System/Library/Frameworks/CoreLocation.framework/CoreLocation
softlink:o:path:/System/Library/Frameworks/CoreLocation.framework/CoreLocation
__HMFLocationAuthorizationMarkOperation
HMFLogging
NSObject
HMFOSTransaction
HMFMemoryAssertion
HMFoundation
HMFDeprecated
HMFCalendarCreation
HMFStagedValue
HMFTimerDelegate
HMFTimer
HMFExponentialBackoffTimer
EventReporting
HMFMessagePolicy
NSCopying
KeyPathLookup
HMFObject
HMFPrivateObjectFormatter
HMFPrivateDescriptionFormatter
HMFZeroing
HMFPairingIdentity
NSSecureCoding
NSCoding
HMFPairingKey
_HMFCFHTTPMessage
HMFHTTPRequestHandler
HMFLogEventCoding
__HMFSoftwareVersionDataSource
HMFSystemInfoSoftwareVersionDataSource
HMFNetMonitor
_HMFObjectObserverInternal
HMFObjectObserver
HMFError
HMFDumpCategory
__HMFWiFiAssertion
HMFWiFiManager
HMFWiFiManagerDataSourceDelegate
HMFLocationAuthorization
CLLocationManagerDelegate
__HMFRTCSessionFactory
HMFRTCSessionFactory
_HMFLogBackendSession
HMFLogBackendSession
HMFLogBackendSessionManager
_HMFLogBackendSessionDelegate
__HMFIOKitDataSource
HMFSystemInfoSerialNumberDataSource
HMFSystemInfoProductInfoDataSource
HMFOperationBudget
HMFVersion
HMFLocalizable
HMFSoftwareVersion
HMFPowerAssertion
HMFLogEventSessionVoucher
HMFLogEventSession
HMFLogEventSessionFactory
HMFLogEventReporter
HMFHardwareAddress
HMFMACAddress
HMFMerging
HMFMessageTransport
HMFNetServiceBrowser
NSNetServiceBrowserDelegate
HMFPowerLogger
HMFMemoryMonitor
_HMFCFHTTPServer
HMFStringIndentation
HMUIndent
__HMFActivityManager
HMFActivity
HMFActivityMarking
__HMFThreadContext
HMFHTTPResponseInternal
HMFHTTPResponse
NSMutableCopying
HMFMutableHTTPResponse
__HMFLocationAuthorizationRequest
HMFAssertion
HMFMessageDispatcher
HMFMessageTransportDelegate
Deprecated
_HMFCFHTTPServerConnection
HMFPowerManager
_HMFNetManagerWoWAssertion
HMFNetManager
HMFTimeZoneCreation
__HMFMobileGesaltDataSource
HMFSystemInfoNameDataSource
HMFSystemInfoMarketingInformationDataSource
HMFSystemInfoWiFiDataSource
HMFSystemInfoBluetoothLEDataSource
HMFWiFiNetworkInfo
HMFKey
HMFPreferences
HMFPreference
HMFSystemPreference
HMFProcessInfo
CodeSigning
HMFHTTPClientConfiguration
HMFHTTPClient
HMFNetMonitorDelegate
NSURLSessionDelegate
HMFSystemInfo
HMFSystemInfoNameDataSourceDelegate
HMFSystemInfoMigrationDataSourceDelegate
HMFProductInfo
HMFLogCategory
_HMFCFHTTPServerRequest
HMFCache
HMFMessageInternal
HMFMessage
MessagePayload
HMFMutableMessage
__HMFSystemConfigurationDataSource
HMFHTTPClientConnection
_HMFCFHTTPServerConnectionDelegate
__HMFMessageHandler
__HMFBlockMessageHandler
__HMFSelectorMessageHandler
Version5
__HMFEmbeddedSystemInfo
HMFNetAddressInternal
_HMFNetAddressIPV4
_HMFNetAddressIPV6
_HMFNetAddressHostname
HMFNetAddress
__HMFNetServiceMonitor
HMFDigest
HMFWiFiManagerDataSource
HMFOperation
HMFBlockOperation
HMFWeakObject
HMFMessageDestination
HMFHTTPRequestInternal
HMFHTTPRequest
HMFMutableHTTPRequest
HMFMessageFilter
HMFAttributeDescription
HMFClassRegistry
_HMFCFHTTPServerResponse
__HMFLocationManagerOperation
HMFCancellationHandler
HMFCancellable
HMFHTTPServer
_HMFCFHTTPServerDelegate
HMFHTTPClientConnectionDelegate
HMFBoolean
__HMFBoolean
__HMFBooleanTrue
__HMFBooleanFalse
__HMFNetAddressMonitor
HMFKeyValueBlockObserver
HMFKeyValueObserving
HMFLock
HMFLocking
NSLocking
HMFUnfairLock
__HMFOSUnfairLock
__HMFOSUnfairRecursiveLock
HMFScheduler
HMFQueue
HMFNetService
NSNetServiceDelegate
HMFMutableNetService
manager
internal
hmfErrorWithCode:description:reason:suggestion:
cancelWithError:
markAsHavingReceivedLocation
finish
stringWithFormat:
hmf_errorWithException:
hmfErrorWithCode:reason:suggestion:underlyingError:
categoryWithName:inSubsystem:
logCategory
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
logIdentifier
main
exceptionWithName:reason:userInfo:
init
timeIntervalSinceReferenceDate
UUID
UUIDString
stringByAppendingString:
UTF8String
transaction
creationTime
dealloc
initWithName:
.cxx_destruct
_transaction
_creationTime
uniqueDescription
invalidate
setInternal:
mark
_internal
initForReadingFromData:error:
setDecodingFailurePolicy:
setClass:forClassName:
decodeTopLevelObjectOfClass:forKey:error:
finishDecoding
hmf_unarchivedObjectOfClass:fromClassName:fromData:error:
unarchivedObjectOfClasses:fromData:error:
countByEnumeratingWithState:objects:count:
deserializeObjectWithData:allowedClasses:
deserializeObjectWithData:allowedClass:frameworkClasses:
unarchivedObjectOfClass:fromData:error:
hmf_unarchiveFromData:error:
second
numberWithInteger:
appendString:
minute
hour
month
copy
hmf_localTimeDescription
localTimeDescription
setWithObjects:
decodeDateComponents
decodeArrayOfDateComponents
decodeCalendar
lock
initWithTimeInterval:options:
_stageValue:withTimeout:
_commitValue:
assertOwner
_unstageValue
setDelegate:
resume
delegate
stagedValue:didExpireValue:
categoryWithName:
timerDidFire:
initWithValue:
stageValue:withTimeout:
commitValue:
value
committedValue
setCommittedValue:
timer
setTimer:
timerFactory
setTimerFactory:
_stagedValue
_isStaged
_lock
_committedValue
_timer
_delegate
_timerFactory
unlock
isRunning
initWithName:value:
timeInterval
numberWithDouble:
options
arrayWithObjects:count:
distantFuture
raise:format:
__fire
date
shortDescription
attributeDescriptions
leeway
fireDate
setFireDate:
delegateQueue
setDelegateQueue:
suspend
kick
fire
__handleExpiration
_delegateQueue
_timerQueue
_timeInterval
_leeway
_running
_fireDate
_options
initWithMinimumTimeInterval:maximumTimeInterval:exponentialFactor:options:
isIncreasing
exponentialFactor
maximumTimeInterval
minimumTimeInterval
reset
_increasing
_minimumTimeInterval
_maximumTimeInterval
_exponentialFactor
dateWithTimeIntervalSinceNow:
name
enableReportingWithServiceName:
parent
isEventReportingEnabled
logSession
setEventReportingEnabled:
enableReportingWithServiceName:rootUUID:
serviceName
identifier
sessionWithUUID:serviceName:parent:
sessionWithUUID:serviceName:rootUUID:
copyWithZone:
valueForKeyPath:
hmf_firstObjectWithValue:forKeyPath:
hmf_firstObjectWithName:
hmf_firstObjectWithUUID:
hmf_firstObjectWithZoneID:
hmf_firstObjectWithUniqueIdentifier:
hmf_firstObjectWithSPIUniqueIdentifier:
hmf_firstObjectWithInstanceID:
hmf_firstObjectWithCharacteristicType:
privateDescription
propertyDescription
defaultFormatter
privateStringForObjectValue:
stringForObjectValue:
bytes
length
_newZeroingDataWithBytes:length:
hmf_zeroingCopy
initWithPairingKeyData:
initWithIdentifier:publicKey:privateKey:
publicKey
isEqualToString:
privateKey
initWithName:value:options:formatter:
decodeObjectOfClass:forKey:
encodeObject:forKey:
pairingIdentity
supportsSecureCoding
encodeWithCoder:
initWithCoder:
publicPairingIdentity
_identifier
_publicKey
_privateKey
setClassName:forClass:
data
isEqualToData:
load
_data
characterSetWithCharactersInString:
subdataWithRange:
stringByTrimmingCharactersInSet:
stringByReplacingOccurrencesOfString:withString:
hasPrefix:
substringFromIndex:
dataWithCapacity:
substringWithRange:
appendBytes:length:
initWithData:
enumerateByteRangesUsingBlock:
stringWithCapacity:
appendFormat:
hmf_hexadecimalStringWithOptions:
hmf_initWithHexadecimalString:options:
hmf_isZeroed
hmf_hexadecimalRepresentation
setDateFormat:
initWithLocaleIdentifier:
setLocale:
timeZoneWithAbbreviation:
setTimeZone:
initWithMessageRef:
message
valueForHeaderField:
dateFormatter
dateFromString:
stringFromDate:
setValue:forHeaderField:
integerValue
setContentLength:
requestWithMethod:url:protocolVersion:
responseWithStatusCode:statusDescription:protocolVersion:
headerFields
setDate:
contentType
setContentType:
contentLength
body
setBody:
_message
_isValidMethodPrediate:
_isValidURLPredicate:
initWithMethodPredicate:URLPredicate:matchBlock:
methodPredicate
URLPredicate
matchBlock
requestBlock
setRequestBlock:
_methodPredicate
_URLPredicate
_matchBlock
_requestBlock
appendData:
dataWithLength:
mutableBytes
voucher
uuid
getUUIDBytes:
dataWithBytesNoCopy:length:freeWhenDone:
numberWithChar:
numberWithUnsignedChar:
numberWithShort:
numberWithUnsignedShort:
numberWithInt:
numberWithUnsignedInt:
numberWithLong:
numberWithUnsignedLong:
numberWithLongLong:
numberWithUnsignedLongLong:
logEventDictionary
stringWithUTF8String:
initWithBytes:length:encoding:
dataWithBytes:length:
initWithBytesNoCopy:length:encoding:freeWhenDone:
setObject:forKeyedSubscript:
productVariant
defaultCategory
getBytes:length:
initWithUUIDBytes:
dataUsingEncoding:
base64EncodedStringWithOptions:
processInfo
operatingSystemVersion
initWithMajorVersion:minorVersion:updateVersion:buildVersion:
softwareVersion
initWithNetAddress:
initWithNetService:
networkMonitorIsReachable:
networkMonitorIsUnreachable:
isReachable
setReachable:
reachabilityPath
netAddress
_reachable
_netAddress
deallocationBlock
setDeallocationBlock:
_deallocationBlock
_startObserving
_stopObserving
cachedHash
observedObject
initWithObservedObject:
_observedObject
_cachedHash
dictionary
mainBundle
localizedStringForKey:value:table:
reason
hmfErrorWithCode:userInfo:
hmfErrorWithCode:description:reason:suggestion:underlyingError:
errorWithDomain:code:userInfo:
domain
isHMFError
hmfErrorWithCode:reason:suggestion:
hmfErrorWithCode:
stringByAppendingFormat:
acquire:
isValid
initWithOptions:manager:reason:
_manager
initWithWorkQueue:
initWithWorkQueue:dataSource:
weakObjectsHashTable
MACAddressString
initWithMACAddressString:
currentNetworkDidChangeForDataSource:
isAssertionActive
activateWithOptions:
deactivate
assertionOptions
addObject:
removeObject:
setWoWAsserted:
performBlockAfterWoWReassertionDelay:
currentNetworkSSID
defaultCenter
postNotificationName:object:
sharedManager
dataSource:didChangeWoWState:
dataSource:didChangeLinkAvailability:
isActive
beginActiveAssertionWithOptions:reason:
endActiveAssertion:
takeWoWAssertion
releaseWoWAssertion
MACAddress
_shouldAssertWoW
_currentNetworkSSID
_MACAddress
_workQueue
_dataSource
_activeAssertions
array
componentsJoinedByString:
containsObject:
isAuthorized
status
hmf_isEmpty
objectsPassingTest:
initWithType:authorization:
setQualityOfService:
error
setCompletionBlock:
defaultScheduler
performOperation:
initWithAuthorization:
bundlePath
processName
initialize
automaticallyNotifiesObserversForKey:
sharedAuthorization
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
initWithBundleIdentifier:
initWithBundle:
queue
setQueue:
isMonitoring
registerObserver:
unregisterObserver:
requestAuthorization:completionHandler:
bundleIdentifier
bundle
_status
_state
_observers
_request
_queue
_bundleIdentifier
_bundle
initWithName:parent:options:
authorizationStatusForBundleIdentifier:
authorizationStatusForBundle:
authorizationStatus
initWithEffectiveBundleIdentifier:delegate:onQueue:
initWithEffectiveBundle:delegate:onQueue:
_initWithDelegate:onQueue:
willChangeValueForKey:
didChangeValueForKey:
initWithSessionInfo:userInfo:frameworksToCheck:
sessionWithServiceName:
sendMessageWithCategory:type:payload:error:
_flushQueuedEvents
count
removeAllObjects
didCompleteActiveSession
sendMessage:
initWithSession:serviceName:delegate:
activateWithSession:
_queuedEvents
_session
_serviceName
weakObjectsPointerArray
initWithFactory:
timeIntervalSince1970
addPointer:
compact
objectAtIndexedSubscript:
hmf_addObject:
removeObjectAtIndex:
__sendMetaEventWithName:correspondingServiceName:
sharedSessionManager
logBackendSessionWithServiceName:
_activeSessions
_queuedSessions
_rtcFactory
newSecureHierarchyTokenFromParentToken:
dictionaryWithObjects:forKeys:count:
startConfigurationWithCompletionHandler:
serialNumber
productPlatform
productClass
modelIdentifier
initWithData:encoding:
decrementByCount:
isFull
initWithLimit:rate:
isEmpty
decrement
limit
rate
_value
_limit
_rate
regularExpressionWithPattern:options:error:
matchesInString:options:range:
numberOfRanges
rangeAtIndex:
initWithMajorVersion:minorVersion:updateVersion:
updateVersion
majorVersion
minorVersion
localizedDescription
versionString
isEqualToVersion:
compare:
decodeIntegerForKey:
encodeInteger:forKey:
initWithVersionString:
isAtLeastVersion:
isGreaterThanVersion:
_majorVersion
_minorVersion
_updateVersion
buildVersion
productInfo
compare:options:
versionFromOperatingSystemVersion:
shortVersionString
_buildVersion
setIdentifier:
initWithUUID:serviceName:
initWithServiceName:
_uuid
rootUUID
backend
initWithUUID:rootUUID:backend:
submitEventWithName:payload:
signpostId
_signpostId
_rootUUID
_backend
backendWithServiceName:
systemInfo
initWithSystemInfo:
sharedReporter
startSessionForServiceName:signpostId:finalizeBlock:
adoptVoucher:signpostId:finalizeBlock:
submitSingleEventWithName:payload:
isEnabled
mutableCopy
initWithAddressData:
formattedString
isEqualToAddress:
initWithAddressString:length:
_formattedString
minusSet:
intersectSet:
hmf_addedObjectsFromSet:
hmf_removedObjectsFromSet:
hmf_commonObjectsFromSet:
member:
mergeObject:
shouldMergeObject:
secureDescriptionWithIndent:newLine:blacklistedKeys:
dictionaryWithCapacity:
keyEnumerator
objectForKeyedSubscript:
hmf_stringForKey:
initWithBase64EncodedString:options:
hmf_boolForKey:isPresent:
hmf_numberForKey:
boolValue
initWithUUIDString:
setWithArray:
hmf_dataForKey:
hmf_arrayForKey:
hmf_mutableArrayForKey:
hmf_base64EncodedDataForKey:
hmf_boolForKey:
hmf_calendarForKey:
hmf_dateForKey:
hmf_dateComponentsForKey:
hmf_dictionaryForKey:
hmf_mutableDictionaryForKey:
hmf_errorForKey:
hmf_nullForKey:
hmf_setForKey:
hmf_mutableSetForKey:
hmf_timeZoneForKey:
hmf_URLForKey:
hmf_UUIDForKey:
hmf_valueForKey:
hmf_unarchivedObjectForKey:ofClasses:
string
indentationByLevels:
indentation
allKeys
sortedArrayUsingSelector:
decodeTimeZone
dateComponentsFromDataForKey:
setWithObject:
secureDescriptionWithBlacklistKeys:
uuidForKey:
uuidFromStringForKey:
stringForKey:
numberForKey:
boolForKey:
boolForKey:keyPresent:
dictionaryForKey:
mutableDictionaryForKey:
mutableArrayForKey:
arrayForKey:
mutableSetForKey:
setForKey:
dataForKey:
base64EncodedDataForKey:
dateForKey:
timeZoneForKey:
timeZoneFromDataForKey:
dateComponentsForKey:
errorForKey:
errorFromDataForKey:
calendarForKey:
calendarFromDataForKey:
predicateFromDataForKey:
nullForKey:
nsValueForKey:
urlForKey:
arrayOfDateComponentsFromDataForKey:
sendMessage:completionHandler:
currentRunLoop
removeFromRunLoop:forMode:
mainRunLoop
scheduleInRunLoop:forMode:
serviceType
descriptionWithPointer:
orderedSet
isPublishing
clientQueue
isBrowsing
setBrowsing:
setBrowseBlock:
searchForServicesOfType:inDomain:
_stopBrowsingWithError:
stop
browseBlock
errorFromNetServiceErrorDict:
setPublishing:
addNetServiceToCache:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
initWithDomain:serviceType:
shouldCache
setShouldCache:
cachedNetServices
startBrowsingWithCompletionHandler:
stopBrowsing
_netServices
_cachedNetServices
_browsing
_domain
_serviceType
_clientQueue
_browseBlock
netServiceBrowser:didStopBrowsingWithError:
netServiceBrowser:didAddService:
netServiceBrowser:didRemoveService:
sharedPowerLogger
linkTypeDescription:
reportConnection:linkType:
reportIncomingAdvertisementChange:
reportIncomingIPEvent:
reportIncomingIDSPush:fromToken:
reportIncomingCloudPush:
reportIncomingLoxyMessage:
memoryPressureSource
setMonitoring:
memoryMonitor
start
systemMemoryState
setSystemMemoryState:
_monitoring
_memoryPressureSource
_systemMemoryState
performBlock:
postNotificationName:object:userInfo:
initWithWeakObject:
unsignedIntegerValue
doubleValue
port
initWithPort:options:
connectionIdleTimeout
setConnectionIdleTimeout:
watchdogTimeout
setWatchdogTimeout:
connections
_port
_connections
object
serverDidInvalidate:
initWithConnectionRef:
server:didOpenConnection:
close
server:didCloseConnection:
indentationWithWidth:
initWithWidth:
width
level
stringByPaddingToLength:withString:startingAtIndex:
_width
_level
indentWithLevel:
indentByFactor:
_activities
activityWithName:parent:options:block:
currentActivityForMarking
markWithReason:
initWithFormat:arguments:
initWithIdentifier:name:parent:options:
thread
hasStarted
markWithFormat:
arrayWithCapacity:
assertions
blockWithBlock:
activityWithName:block:
activityWithName:parent:block:
activityWithName:parent:assertions:block:
currentActivity
markCurrentActivity
markCurrentActivityWithReason:
markCurrentActivityWithFormat:
initWithName:parent:
initWithName:parent:assertions:
begin
blockWithQualityOfService:block:
_voucher
_threadContexts
_valid
_parent
_name
_internalAssertions
_startDate
currentThread
__init
currentContext
setCount:
setVoucher:
shouldRestoreVoucher
setShouldRestoreVoucher:
_shouldRestoreVoucher
_thread
_count
timeIntervalSinceDate:
getBytes:range:
allocWithZone:
initWithStatusCode:headerFields:body:
statusCode
setObject:forKey:
removeObjectForKey:
setHeaderValue:forHeaderKey:
activity
setActivity:
setHeaderFields:
_activity
_statusCode
_headerFields
_body
request
initWithRequest:internalResponse:
mutableCopyWithZone:
initWithTimeout:
authorization
removeObserver:forKeyPath:context:
addObserver:forKeyPath:options:context:
requestAlwaysAuthorization
requestWhenInUseAuthorization
isExecuting
underlyingQueue
observeValueForKeyPath:ofObject:change:context:
initWithType:
type
_requested
_type
isSubclassOfClass:
isIndexed
receiver
indexesOfObjectsWithOptions:passingTest:
removeObjectsAtIndexes:
destination
objectForKey:
indexSetWithIndex:
addIndex:
enumerateObjectsUsingBlock:
initWithDictionary:copyItems:
registerForMessage:receiver:policies:selector:
registerForMessage:receiver:policies:messageHandler:
handlerWithReceiver:name:policies:selector:
handlerWithReceiver:name:policies:handler:
objectsAtIndexes:
handlersForMessage:
invokeWithMessage:
responseHandler
transport
dispatchMessage:
messageTransport:didReceiveMessage:
initWithTransport:
filterClasses
setFilterClasses:
index
registerForMessage:receiver:selector:
registerForMessage:receiver:messageHandler:
deregisterForMessage:receiver:
deregisterReceiver:
shouldAutomaticallyIndex
setShouldAutomaticallyIndex:
workQueue
_handlers
_indexWatchdog
_indexScheduler
_destinationHandlerIndexes
_nameHandlerIndexes
_indexed
_shouldAutomaticallyIndex
_filterClasses
_transport
target
initWithTarget:
setDestination:
sendMessage:target:responseQueue:responseHandler:completionHandler:
setResponseHandler:
dispatchMessage:target:
sendMessage:target:
sendMessage:target:responseQueue:responseHandler:
sendMessage:target:andInvokeCompletionHandler:
allMessageDestinations
containsIndex:
indexesPassingTest:
indexOfObject:
replaceObjectAtIndex:withObject:
observer
initWithIdentifier:
scheduleWithBlock:
canInitWithMessage:
initWithMessage:
policyClasses
policies
acceptWithPolicies:error:
initWithConnection:requestRef:
bodyStream
_handleCompletedReceivedRequest:error:
handleRequest:bodyReadStream:eventType:
_stopReadBody:
_sendStatusCode:forRequest:
connection:didReceiveRequest:
appendBodyData:
_sendStatusCode:forRequest:bodyData:
initWithRequest:statusCode:
setCompletionHandler:
sendResponse:
completionHandler
pendingRespones
responseRef
address
addressString
open
_handleReceivedRequestRef:
_handleCompletedResponse:error:
pendingRequests
_address
_pendingRequests
_pendingRespones
initWithSocketAddress:
connection
_deregisterForPowerSourceNotifications:
setRunning:
_registerForPowerSourceNotifications
notificationPort
interestNotification
batteryState
batteryLevel
updateBatteryState:
hasBattery
_hasBattery
_batteryLevel
_interestNotification
_batteryState
_notificationPort
deregisterWoWAssertionForObject:
wowAssertion
setWowAssertion:
deregisterObject:
registerWoWAssertionForObject:
_wowAssertion
model
regionInfo
WiFiInterfaceMACAddress
supportsBLE
notificationToken
_supportsBLE
_modelIdentifier
_model
_regionInfo
_serialNumber
_productPlatform
_productClass
_productVariant
_softwareVersion
_WiFiInterfaceMACAddress
_notificationToken
lowercaseString
containsString:
dataSource:didUpdateName:
SSID
isEqualToNetworkInfo:
initWithMACAddress:SSID:
_SSID
size
containsValueForKey:
initWithType:size:data:
_size
initWithDefaultClass:
classRegistry
classForKey:
setClass:forKey:
defaultValues
preferences
preferenceClassForPreferenceKey:
allValues
defaultValueForPreferenceKey:
initWithKey:options:defaultValue:
sharedPreferences
setPreferenceClass:forPreferenceKey:
setDefaultValue:forPreferenceKey:
preferenceForKey:
_preferences
_classRegistry
initWithKey:options:defaultValue:parent:
numberValue
setNumberStyle:
numberFromString:
stringValue
dataValue
setValue:
_key
initWithKey:options:domain:defaultValue:parent:
initWithKey:options:domain:defaultValue:
URLForResource:withExtension:
bundleForClass:
bundleWithPath:
dictionaryWithContentsOfURL:
auditToken
initWithAuditToken:
valueForEntitlement:
applicationIdentifier
mainBundleURL
bundleWithURL:
processInfoForXPCConnection:
getAuditToken:
executableURL
_auditToken
_applicationIdentifier
_executableURL
_mainBundleURL
booleanWithBool:
isCodeSigned
isPlatformBinary
initWithUTF8String:
initFileURLWithPath:isDirectory:
requiresEncryption
allowsAnonymousConnection
allowsCellularAccess
supportsWakeOnLAN
monitorsReachability
defaultConfiguration
setRequiresEncryption:
setAllowsAnonymousConnection:
setAllowsCellularAccess:
setSupportsWakeOnLAN:
setMonitorsReachability:
_requiresEncryption
_allowsAnonymousConnection
_allowsCellularAccess
_supportsWakeOnLAN
_monitorsReachability
URLWithString:
initWithBaseURL:configuration:
baseURL
__initializeWithConfiguration:
initWithService:configuration:
defaultSessionConfiguration
setHTTPCookieAcceptPolicy:
setHTTPCookieStorage:
setHTTPShouldSetCookies:
setURLCredentialStorage:
setURLCache:
setHTTPShouldUsePipelining:
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
setName:
setMaxConcurrentOperationCount:
host
initWithHostname:
resolveWithCompletionHandler:
hostName
addresses
firstObject
addressFamily
baseURLWithScheme:hostAddress:port:
isCancelled
reachabilityProbeQueue
cancelAllOperations
requestClientReachabilityPingWithRetry:
confirmWithTimeout:completionHandler:
addExecutionBlock:
addOperation:
isPinging
client:didRequestPingWithCompletionHandler:
setPinging:
startDelegatedPingTimer
stopDelegatedPingTimer
delegatedPingTimer
setDelegatedPingTimer:
startReachabilityProbe
setActive:
urlRequest
relativePath
URLWithString:relativeToURL:
setURL:
valueForHTTPHeaderField:
setValue:forHTTPHeaderField:
session
code
responseWithStatusCode:
allHeaderFields
dataTaskWithRequest:completionHandler:
cancel
getAllTasksWithCompletionHandler:
invalidateAndCancel
resolveWithTimeout:completionHandler:
absoluteString
allowAnonymousConnection
protectionSpace
serverTrust
credentialForTrust:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initWithBaseURL:options:
initWithNetService:options:
configuration
sendRequest:completionHandler:
cancelPendingRequests
netService
setAllowAnonymousConnection:
reachabilityMonitor
_pinging
_allowAnonymousConnection
_active
_configuration
_baseURL
_netService
_reachabilityMonitor
_reachabilityProbeQueue
_delegatedPingTimer
scheme
clientDidBecomeReachable:
clientDidBecomeUnreachable:
isResolved
operations
nameDataSource
marketingDataSource
serialNumberDataSource
productInfoDataSource
softwareVersionDataSource
migrationDataSource
isMigrating
WiFiDataSource
bluetoothLEDataSource
dataSource:didUpdateMigrating:
_nameDataSource
_marketingDataSource
_serialNumberDataSource
_productInfoDataSource
_softwareVersionDataSource
_migrationDataSource
_WiFiDataSource
_bluetoothLEDataSource
initWithPlatform:class:variant:softwareVersion:
decodeSoftwareVersionWithCoder:
encodeSoftwareVersion:withCoder:
initWithPlatform:class:softwareVersion:
strongToStrongObjectsMapTable
initCategory:inSubsystem:
loggingCategory
loggingSubsystem
_loggingCategory
_loggingSubsystem
requestRef
bodyData
method
setMethod:
setHeaders:
_requestRef
_bodyStream
_connection
_bodyData
defaultCache
isExists
_exists
_URL
defaultManager
URLsForDirectory:inDomains:
URLByAppendingPathComponent:
path
fileExistsAtPath:isDirectory:
fileURLWithPathComponents:
timeout
qualityOfService
userInfo
headers
messagePayload
logEventSession
setTimeout:
setTransport:
setUserInfo:
setMessagePayload:
setLogEventSession:
_timeout
_qualityOfService
_destination
_userInfo
_headers
_messagePayload
_logEventSession
_responseHandler
initWithName:destination:payload:
initWithName:qualityOfService:destination:payload:
initWithName:qualityOfService:destination:userInfo:headers:payload:
__initWithInternalMessage:
respondWithPayload:
initWithInternalMessage:
decodeDoubleForKey:
supportedClasses
decodeObjectOfClasses:forKey:
encodeDouble:forKey:
activityNameWithMessageName:
messageWithName:destination:payload:
messageWithName:qualityOfService:destination:payload:
respondWithSuccess
respondWithError:
respondWithPayload:error:
initWithName:identifier:messagePayload:responseHandler:
messageWithName:messagePayload:
messageWithName:messagePayload:responseHandler:
messageWithName:identifier:messagePayload:
messageWithMessage:messagePayload:
messageWithMessage:messagePayload:responseHandler:
hmf_objectsAreKindOfClass:
predicateForKey:
arrayOfDateComponentsForKey:
unarchivedObjectForKey:ofClasses:
setUserInfoValue:forKey:
setHeaderValue:forKey:
store
_store
peerAddress
connection:didCloseWithError:
initWithInternalRequest:
initWithConnection:
openWithCompletionHandler:
sendResponse:completionHandler:
initWithReceiver:name:policies:
messageTargetUUID
initWithArray:copyItems:
_hash
_receiver
_policies
_observer
handler
_handler
signatureWithObjCTypes:
invocationWithMethodSignature:
setTarget:
selector
setSelector:
setArgument:atIndex:
retainArguments
invoke
_selector
messageReceiveQueue
hmf_zeroUUID
hmf_isEqualToUUID:
hmf_isEqualToUUIDString:
zeroUUID
initWithNamespace:data:
hmf_UUIDWithNamespace:data:
initWithTimeInterval:sinceDate:
currentCalendar
components:fromDate:toDate:options:
components:fromDate:
hmf_dateComponents
localeWithLocaleIdentifier:
dateComponents
iso8601Description
fileNameDescription
timeIntervalDescription:
dateFromFileNameDescription:
_addressFamily
_addressString
rangeOfString:options:
stringByReplacingCharactersInRange:withString:
normalizedHostname:
hostname
_hostname
localAddress
hmf_isInteger
whitespaceCharacterSet
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
hmf_isNumeric
removeObserver:forKeyPath:
service
_service
caseInsensitiveCompare:
algorithm
initWithAlgorithm:value:
_algorithm
isWoWAsserted
cancelAllOperationsWithError:
_willChangeValuesForKeys:
isReady
_didChangeValuesForKeys:
isAsynchronous
isFinished
timeoutDate
_executing
_finished
_error
arrayByAddingObject:
executionBlocks
blockOperationWithBlock:
_executionBlocks
pointerAtIndex:
removePointerAtIndex:
hmf_removePointer:
hmf_removeObject:
objectHash
_object
_objectHash
_target
_method
timeoutInterval
initWithURL:cachePolicy:timeoutInterval:
setHTTPBody:
setHTTPMethod:
setAllHTTPHeaderFields:
setTimeoutInterval:
_timeoutInterval
initWithURL:method:body:timeoutInterval:
capitalizedString
formatter
_formatter
floatValue
isEqualToNumber:
allObjects
defaultClass
_classes
_defaultClass
response
_responseRef
_completionHandler
_response
_ready
_authorization
initWithBlock:
_block
initWithDomain:type:name:port:
stopPublishing
numberWithUnsignedInteger:
setPort:
startPublishingWithCompletionHandler:
stopWithError:
_stopWithError:
server:didStopWithError:
requestHandlers
evaluateWithObject:
hmf_objectPassingTest:
server:shouldAcceptConnection:
addConnection:
removeConnection:
_handleOpenedConnection:
_handleClosedConnection:
_handleReceivedRequest:connection:
initWithServiceType:name:port:options:
startWithCompletionHandler:
registerRequestHandler:
unregisterRequestHandler:
_requestHandlers
_connectionIdleTimeout
getValue:size:
encodeBool:forKey:
numberWithFloat:
numberWithBool:
initWithBool:
getValue:
objCType
charValue
classForCoder
decodeBoolForKey:
initWithChar:
initWithUnsignedChar:
initWithShort:
initWithUnsignedShort:
initWithInt:
initWithUnsignedInt:
initWithLong:
initWithUnsignedLong:
initWithLongLong:
initWithUnsignedLongLong:
initWithFloat:
initWithDouble:
initWithInteger:
initWithUnsignedInteger:
currentNetworkFlags
setCurrentNetworkFlags:
handleNetworkReachabilityChange:
networkReachabilityRef
_currentNetworkFlags
_networkReachabilityRef
initWithKeyPath:object:options:
__invalidate
keyPath
initWithKeyPath:object:
setHandler:
_observing
_keyPath
hmf_registerObserverForKeyPath:options:handler:
lockWithOptions:
initWithOptions:
assertNotOwner
_internalOptions
initWithQueue:
mainScheduler
performWithQualityOfService:block:
performSelector:target:argument:
performSelector:target:argument:qualityOfService:
_operationQueue
queuePriority
setQueuePriority:
initWithTarget:selector:object:
hmf_objectWithOptions:passingTest:
indexOfObjectWithOptions:passingTest:
objectAtIndex:
hmf_objectsWithOptions:passingTest:
hmf_objectsPassingTest:
describeElements:
hmf_removeFirstObject
hmf_dequeue
addObjectsFromArray:
hmf_maybeDequeue
hmf_enqueue:
hmf_enqueueMultiple:
initWithDomain:type:name:
TXTRecordData
updateTXTRecordWithData:
startMonitoring
stopMonitoring
netServiceDidStartPublishing:
netServiceDidStopPublishing:
notifyUpdatedAddresses:
netService:didUpdateAddresses:
isEqualToDictionary:
dictionaryFromTXTRecordData:
setTXTRecord:
removeAllTXTRecordObjects
state
bestAddress
_reallyResolveWithTimeout:completionHandler:
resolveBlocks
setState:
resolveWithTimeout:
setHostname:
setAddresses:
setResolved:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
TXTRecord
_addresses
_TXTRecord
_resolved
_publishing
_hostName
_resolveBlocks
updateTXTRecord
dataFromTXTRecordDictionary:
setTXTRecordData:
setPublishBlock:
publishWithOptions:
publishBlock
setTXTRecordValue:forKey:
removeTXTRecordValueForKey:
_publishBlock
netService:didUpdateTXTRecord:
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"HMFLogCategory"16@0:8
v16@0:8
@24@0:8@16
d16@0:8
@"NSObject<OS_os_transaction>"
v24@0:8@16
@48@0:8#16@24@32^@40
@32@0:8@16@24
@40@0:8@16#24@32
@32@0:8@16^@24
v24@0:8@"HMFTimer"16
v32@0:8@16d24
@?16@0:8
v24@0:8@?16
@"HMFUnfairLock"
@"HMFTimer"
@"<HMFStagedValueDelegate>"
@32@0:8d16Q24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSObject<OS_dispatch_queue>"
@"NSDate"
@"<HMFTimerDelegate>"
@"NSObject<OS_dispatch_source>"
@48@0:8d16d24q32Q40
q16@0:8
v20@0:8B16
v32@0:8@16@24
@24@0:8^{_NSZone=}16
@"NSArray"16@0:8
@"NSString"24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16@24@32
@"NSString"
@"HMFPairingKey"
@"NSData"
@32@0:8@16Q24
@24@0:8Q16
@40@0:8@16@24q32
@40@0:8q16@24q32
@24@0:8^{__CFHTTPMessage=}16
v24@0:8q16
^{__CFHTTPMessage=}16@0:8
^{__CFHTTPMessage=}
@40@0:8@16@24@?32
@"NSPredicate"
@"NSDictionary"16@0:8
@"HMFSoftwareVersion"16@0:8
@"<HMFNetMonitorDelegate>"
@"HMFNetAddress"
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@56@0:8q16@24@32@40@48
@24@0:8q16
@32@0:8q16@24
@40@0:8Q16@24@32
B24@0:8^@16
@"HMFWiFiManager"
v28@0:8@16B24
v28@0:8@"<HMFWiFiManagerDataSource>"16B24
v24@0:8@"<HMFWiFiManagerDataSource>"16
@32@0:8Q16@24
@"HMFMACAddress"
@"<HMFWiFiManagerDataSource>"
@"NSHashTable"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
i16@0:8
v32@0:8q16@?24
{hmf_unfair_data_lock_s="lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}}
@"NSMutableSet"
@"__HMFLocationAuthorizationRequest"
@"NSBundle"
@"CLLocationManager"
@"RTCReporting"24@0:8@"NSString"16
B24@0:8@"NSDictionary"16
@"NSMutableArray"
@"RTCReporting"
@"<_HMFLogBackendSessionDelegate>"
@"NSPointerArray"
@"<HMFRTCSessionFactory>"
@40@0:8Q16{_HMFRate=Qd}24
B24@0:8Q16
{_HMFRate=Qd}16@0:8
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
{_HMFRate="value"Q"period"d}
@40@0:8Q16Q24Q32
q24@0:8@16
@40@0:8{?=qqq}16
@48@0:8Q16Q24Q32@40
{?=qqq}16@0:8
I16@0:8
v20@0:8I16
@"NSUUID"
@"<HMFLogBackendSession>"
@40@0:8@16Q24@?32
B32@0:8@16^B24
@36@0:8@16B24@28
v32@0:8@16@?24
@"<HMFMessageTransportDelegate>"
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
@20@0:8B16
@"NSMutableOrderedSet"
@"<HMFNetServiceBrowserDelegate>"
@"NSNetServiceBrowser"
v32@0:8@16q24
@32@0:8Q16Q24
v24@0:8d16
^{_CFHTTPServer=}16@0:8
@"<_HMFCFHTTPServerDelegate>"
^{_CFHTTPServer=}
v40@0:8@16@24@?32
v48@0:8@16@24Q32@?40
v24@0:8@"NSString"16
@40@0:8@16@24Q32
@48@0:8@16@24@32Q40
@?24@0:8@?16
@?32@0:8q16@?24
@"NSObject<OS_os_activity>"
@"NSObject<OS_voucher>"
@"HMFActivity"
@"NSArray"
v24@0:8Q16
@"NSThread"
@"NSDictionary"
@"HMFHTTPResponseInternal"
@"HMFHTTPRequest"
@24@0:8d16
v48@0:8@16@24@32^v40
v32@0:8@"HMFMessageTransport"16@"HMFMessage"24
v40@0:8@16@24:32
v48@0:8@16@24@32:40
v48@0:8@16@24@32@?40
@"NSBackgroundActivityScheduler"
@"NSSet"
@"HMFMessageTransport"
v56@0:8@16@24@32@?40@?48
@24@0:8^{_CFHTTPServerConnection=}16
v24@0:8^{_CFHTTPServerRequest=}16
v40@0:8@16^{__CFReadStream=}24Q32
v32@0:8q16@24
v40@0:8q16@24@32
v32@0:8^{_CFHTTPServerResponse=}16@24
^{_CFHTTPServerConnection=}16@0:8
@"<_HMFCFHTTPServerConnectionDelegate>"
^{_CFHTTPServerConnection=}
f16@0:8
^{IONotificationPort=}16@0:8
^{IONotificationPort=}
@"_HMFNetManagerWoWAssertion"
@"<HMFSystemInfoNameDataSourceDelegate>"16@0:8
v24@0:8@"<HMFSystemInfoNameDataSourceDelegate>"16
@"HMFMACAddress"16@0:8
^{MGNotificationTokenStruct=}16@0:8
@"<HMFSystemInfoNameDataSourceDelegate>"
@"HMFSoftwareVersion"
^{MGNotificationTokenStruct=}
@40@0:8@16Q24@32
#24@0:8@16
v32@0:8#16@24
@"NSMutableDictionary"
@"HMFClassRegistry"
@48@0:8@16Q24@32@40
@"<NSObject>"
@"HMFPreference"
@56@0:8@16Q24@32@40@48
@48@0:8{?=[8I]}16
@20@0:8i16
B24@0:8^{?=[8I]}16
^{?=[8I]}
@"NSURL"
v24@0:8@"HMFNetMonitor"16
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
B20@0:8B16
@"HMFHTTPClientConfiguration"
@"<HMFHTTPClientDelegate>"
@"HMFNetService"
@"NSURLSession"
@"HMFNetMonitor"
@"NSOperationQueue"
@"HMFExponentialBackoffTimer"
v32@0:8@"<HMFSystemInfoNameDataSource>"16@"NSString"24
v28@0:8@"<HMFSystemInfoMigrationDataSource>"16B24
@"<HMFSystemInfoNameDataSource>"
@"<HMFSystemInfoMarketingInformationDataSource>"
@"<HMFSystemInfoSerialNumberDataSource>"
@"<HMFSystemInfoProductInfoDataSource>"
@"<HMFSystemInfoSoftwareVersionDataSource>"
@"<HMFSystemInfoMigrationDataSource>"
@"<HMFSystemInfoWiFiDataSource>"
@"<HMFSystemInfoBluetoothLEDataSource>"
@40@0:8q16q24@32
@48@0:8q16q24q32@40
@"NSObject<OS_os_log>"
@32@0:8@16^{_CFHTTPServerRequest=}24
^{_CFHTTPServerRequest=}16@0:8
^{__CFReadStream=}16@0:8
^{_CFHTTPServerRequest=}
^{__CFReadStream=}
@"_HMFCFHTTPServerConnection"
@"NSMutableData"
@"HMFMessageDestination"
@"HMFLogEventSession"
@48@0:8@16q24@32@40
@64@0:8@16q24@32@40@48@56
B32@0:8@16@24
@"HMFMessageInternal"
@48@0:8@16@24@32@?40
^{__SCDynamicStore=}16@0:8
^{__SCDynamicStore=}
v32@0:8@"_HMFCFHTTPServerConnection"16@"_HMFCFHTTPServerRequest"24
@"<HMFHTTPClientConnectionDelegate>"
@48@0:8@16@24@32:40
@"<HMFMessageReceiver>"
@"HMFObjectObserver"
:16@0:8
@24@0:8r^{sockaddr=CC[14c]}16
^{sockaddr_in=CCS{in_addr=I}[8c]}16@0:8
^{sockaddr_in=CCS{in_addr=I}[8c]}
^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}16@0:8
^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}
@"HMFNetAddressInternal"
v24@0:8@?<v@?>16
@"<HMFWiFiManagerDataSourceDelegate>"16@0:8
v24@0:8@"<HMFWiFiManagerDataSourceDelegate>"16
@"NSError"
@24@0:8@?16
B24@0:8^v16
@"HMFHTTPRequestInternal"
@48@0:8@16@24@32d40
B32@0:8@16^@24
@"HMFMessage"
@48@0:8@16@24Q32@40
@"NSFormatter"
@24@0:8#16
@32@0:8@16q24
^{_CFHTTPServerResponse=}16@0:8
^{_CFHTTPServerResponse=}
@"_HMFCFHTTPServerRequest"
@"_HMFCFHTTPMessage"
@"HMFLocationAuthorization"
v24@0:8@"_HMFCFHTTPServer"16
v32@0:8@"_HMFCFHTTPServer"16@"_HMFCFHTTPServerConnection"24
v32@0:8@"HMFHTTPClientConnection"16@"HMFHTTPRequest"24
v32@0:8@"HMFHTTPClientConnection"16@"NSError"24
@48@0:8@16@24Q32Q40
@"_HMFCFHTTPServer"
@"<HMFHTTPServerDelegate>"
@"HMFMutableNetService"
@20@0:8c16
@20@0:8C16
@20@0:8s16
@20@0:8S16
@20@0:8I16
@20@0:8f16
v24@0:8^v16
v32@0:8^v16Q24
r*16@0:8
c16@0:8
^{__SCNetworkReachability=}16@0:8
^{__SCNetworkReachability=}
@32@0:8q16@?24
@48@0:8:16@24@32q40
@32@0:8Q16@?24
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v32@0:8d16@?24
@"NSNetService"
@"<HMFNetServiceDelegate>"
