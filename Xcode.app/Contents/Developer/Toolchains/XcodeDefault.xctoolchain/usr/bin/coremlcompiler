@(#)PROGRAM:coremlcompiler  PROJECT:CoreML-1
_N6CoreML3MIL11MLModelInfoE
NSt3__120__shared_ptr_pointerIPN6CoreML3MIL7Backend8Espresso19EspressoMLModelInfoENS_14default_deleteIS5_EENS_9allocatorIS5_EEEE
NSt3__114default_deleteIN6CoreML3MIL7Backend8Espresso19EspressoMLModelInfoEEE
NSt3__120__shared_ptr_pointerIPN3MIL10MILContextENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPN3MIL9IRProgramENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN3MIL9IRProgramEEE
22MLCustomLayerException
NSt3__120__shared_ptr_emplaceIN8Archiver13_OArchiveImplENS_9allocatorIS2_EEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__120__shared_ptr_emplaceIN8Archiver13_IArchiveImplENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPhZ80-[MLNeuralNetworkEngine bindInputFeatures:bufferIndex:allocatedImageData:error:]E3$_1NS_9allocatorIhEEEE
Z80-[MLNeuralNetworkEngine bindInputFeatures:bufferIndex:allocatedImageData:error:]E3$_1
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIcLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIcLi1EEE
N6CoreML3MIL7Backend8Espresso15EspressoBackendE
N6CoreML16MultiArrayBufferE
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ERKNS_6vectorImNS_9allocatorImEEEENS2_10ScalarTypeENS2_12StorageOrderEmE3$_0NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1ERKNSt3__16vectorImNS1_9allocatorImEEEENS_10ScalarTypeENS_12StorageOrderEmE3$_0
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ERKNS_6vectorImNS_9allocatorImEEEENS2_10ScalarTypeENS2_12StorageOrderEmE3$_1NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1ERKNSt3__16vectorImNS1_9allocatorImEEEENS_10ScalarTypeENS_12StorageOrderEmE3$_1
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ES1_RKNS_6vectorImNS_9allocatorImEEEES9_NS2_10ScalarTypeEE3$_2NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1EPhRKNSt3__16vectorImNS2_9allocatorImEEEES8_NS_10ScalarTypeEE3$_2
N3MIL13IRTensorValueIiEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification18FeatureDescriptionENS_9allocatorIS3_EEEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N6CoreML3MIL7Backend8Espresso19EspressoMLModelInfoE
N6CoreML3MIL7Backend13NeuralNetwork37UpdatableNeuralNetworkEspressoBackendE
N6CoreML16MLModelExceptionE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification5ModelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML24BayesianProbitRegression24BayesianProbitRegressionENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML24BayesianProbitRegression13FeatureValuesENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1INS_11__wrap_iterIPPS3_EEEET_S9_mNS2_10ScalarTypeENS2_12StorageOrderEEUlS1_E_NS_9allocatorIhEEEE
ZN6CoreML16MultiArrayBufferC1INSt3__111__wrap_iterIPPS0_EEEET_S7_mNS_10ScalarTypeENS_12StorageOrderEEUlPhE_
NSt3__120__shared_ptr_pointerIP21_MLModelSpecificationNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI21_MLModelSpecificationEE
N6CoreML17ObjCCodeGeneratorE
]6MNw<@
X_<p
@ko#!(
f}/@
il]@
G!c?m
rKa@
yTW 
2d@&x
NSt3__120__shared_ptr_pointerIPN8Archiver14_ODataBlobImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver14_ODataBlobImplEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_ODataBlobImplENS_9allocatorIS2_EEEE
N6CoreML18SwiftCodeGeneratorE
N3MIL11IRListValueINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
N3MIL11IRListValueIxEE
NSt3__114default_deleteIN6CoreML3MIL16MLClassifierInfoEEE
NSt3__120__shared_ptr_pointerIPN6CoreML3MIL28ImagePreprocessingParametersENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
N6CoreML3MIL8Frontend13NeuralNetwork22NeuralNetworkSpecProxyE
N12_GLOBAL__N_126NeuralNetworkSpecProxyImplIN6CoreML13Specification13NeuralNetworkEEE
N12_GLOBAL__N_126NeuralNetworkSpecProxyImplIN6CoreML13Specification22NeuralNetworkRegressorEEE
N12_GLOBAL__N_126NeuralNetworkSpecProxyImplIN6CoreML13Specification23NeuralNetworkClassifierEEE
CN6CoreML13TreeEnsembles8Internal30incompatible_execution_profileE
NSt3__120__shared_ptr_emplaceIN6CoreML11Recommender30_ItemSimilarityRecommenderDataENS_9allocatorIS3_EEEE
N6CoreML13CodeGeneratorE
NSt3__110__function6__funcIPFbRKN6CoreML13Specification5ModelEENS_9allocatorIS8_EES7_EE
NSt3__110__function6__baseIFbRKN6CoreML13Specification5ModelEEEE
PFbRKN6CoreML13Specification5ModelEE
FbRKN6CoreML13Specification5ModelEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification8MetadataENS_9allocatorIS3_EEEE
N8Archiver14_IDataBlobImplE
NSt3__120__shared_ptr_pointerIPNS_14basic_ifstreamIcNS_11char_traitsIcEEEENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteINS_14basic_ifstreamIcNS_11char_traitsIcEEEEEE
NSt3__120__shared_ptr_pointerIPN8Archiver11MMappedFileENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver11MMappedFileEEE
N8Archiver11MMappedFileE
NSt3__110__function6__funcIZN6CoreML13TreeEnsembles8Internal16gatherPropertiesERKNS_10shared_ptrINS3_13_TreeEnsembleEEEE3$_2NS_9allocatorISA_EEFvRKNS5_INS3_20_TreeComputationNodeEEEEEE
NSt3__110__function6__baseIFvRKNS_10shared_ptrIN6CoreML13TreeEnsembles20_TreeComputationNodeEEEEEE
ZN6CoreML13TreeEnsembles8Internal16gatherPropertiesERKNSt3__110shared_ptrINS0_13_TreeEnsembleEEEE3$_2
N8Archiver18_IDataBlobENMLImplE
NSt3__120__shared_ptr_emplaceIN8Archiver7mmapbufENS_9allocatorIS2_EEEE
N8Archiver7mmapbufE
NSt3__120__shared_ptr_emplaceINS_13basic_istreamIcNS_11char_traitsIcEEEENS_9allocatorIS4_EEEE
N6CoreML3MIL7Backend13NeuralNetwork28NeuralNetworkEspressoBackendE
NSt3__110__function6__funcIZL13ConvertLayersRKN6CoreML13Specification5ModelERKNS2_3MIL7Backend8Espresso19EspressoMLModelInfoERN8Espresso18sequential_builderERNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENSD_11layer_shapeENS_4lessISM_EENSK_INS_4pairIKSM_SN_EEEEEERN17EspressoConverter18compileModelResultERU8__strongP7NSErrorE3$_1NSK_IS13_EEFbvEEE
NSt3__110__function6__baseIFbvEEE
ZL13ConvertLayersRKN6CoreML13Specification5ModelERKNS_3MIL7Backend8Espresso19EspressoMLModelInfoERN8Espresso18sequential_builderERNSt3__13mapINSD_12basic_stringIcNSD_11char_traitsIcEENSD_9allocatorIcEEEENSA_11layer_shapeENSD_4lessISK_EENSI_INSD_4pairIKSK_SL_EEEEEERN17EspressoConverter18compileModelResultERU8__strongP7NSErrorE3$_1
NSt3__110__function6__funcIZL15BuildFromShapesRN8Espresso18sequential_builderERKNS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_11layer_shapeENS_4lessISB_EENS9_INS_4pairIKSB_SC_EEEEEEbRU8__strongP7NSErrorPbE3$_0NS9_ISR_EEFNS_10shared_ptrINS2_3netEEEvEEE
NSt3__110__function6__baseIFNS_10shared_ptrIN8Espresso3netEEEvEEE
ZL15BuildFromShapesRN8Espresso18sequential_builderERKNSt3__13mapINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_11layer_shapeENS2_4lessIS9_EENS7_INS2_4pairIKS9_SA_EEEEEEbRU8__strongP7NSErrorPbE3$_0
NSt3__110__function6__funcIZL8OptimizeRKNS_10shared_ptrIN8Espresso3netEEERKN6CoreML13Specification5ModelERKN17EspressoConverter18compileModelResultERU8__strongP7NSErrorE3$_2NS_9allocatorISL_EEFS5_vEEE
ZL8OptimizeRKNSt3__110shared_ptrIN8Espresso3netEEERKN6CoreML13Specification5ModelERKN17EspressoConverter18compileModelResultERU8__strongP7NSErrorE3$_2
NSt3__110__function6__funcINS_6__bindIMN6CoreML3MIL7Backend8Espresso15LayerTranslatorEFN17EspressoConverter18compileLayerResultERKN3MIL11IROperationEEJPS7_RKNS_12placeholders4__phILi1EEEEEENS_9allocatorISM_EEFS9_SD_EEE
NSt3__110__function6__baseIFN17EspressoConverter18compileLayerResultERKN3MIL11IROperationEEEE
NSt3__16__bindIMN6CoreML3MIL7Backend8Espresso15LayerTranslatorEFN17EspressoConverter18compileLayerResultERKN3MIL11IROperationEEJPS5_RKNS_12placeholders4__phILi1EEEEEE
NSt3__118__weak_result_typeIMN6CoreML3MIL7Backend8Espresso15LayerTranslatorEFN17EspressoConverter18compileLayerResultERKN3MIL11IROperationEEEE
NSt3__115binary_functionIPN6CoreML3MIL7Backend8Espresso15LayerTranslatorERKN3MIL11IROperationEN17EspressoConverter18compileLayerResultEEE
N3MIL13IRTensorValueIdEE
N3MIL13IRTensorValueIxEE
NSt3__120__shared_ptr_emplaceIN8Archiver18_IDataBlobENMLImplENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Archiver20MMappedInputENMLFileENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_IDataBlobImplENS_9allocatorIS2_EEEE
N6CoreML3MIL7Backend7Program22ProgramEspressoBackendE
NSt3__120__shared_ptr_pointerIPN6CoreML3MIL16MLClassifierInfoENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML3MIL28ImagePreprocessingParametersEEE
N8Archiver20MMappedInputENMLFileE
N8Espresso30gradient_not_implemented_errorE
N8Espresso23pass_control_flow_graphE
N8Espresso18control_flow_graphE
NSt3__120__shared_ptr_emplaceIN8Espresso18control_flow_graphENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11basic_blockENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16pass_bind_labelsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23pass_control_flow_graphENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13pass_make_ssaENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22pass_tag_dynamic_blobsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20pass_block_transformENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24pass_re_lower_to_networkENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13pass_livenessENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15pass_allocationENS_9allocatorIS2_EEEE
N8Espresso27pass_multi_head_program_genE
N8Espresso31analysis_multi_head_program_genE
36rule_remove_fused_conv_ip_activation
19rule_bake_batchnorm
N36rule_remove_fused_conv_ip_activation8status_tE
N19rule_bake_batchnorm8status_tE
NSt3__120__shared_ptr_emplaceIN8Espresso26network_optimization_graphENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN36rule_remove_fused_conv_ip_activation8status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN19rule_bake_batchnorm8status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceI36rule_remove_fused_conv_ip_activationNS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI19rule_bake_batchnormNS_9allocatorIS1_EEEE
N8Espresso12rnn_arch_cpuE
N8Espresso27sequence_reverse_kernel_cpuE
N8Espresso26sequence_concat_kernel_cpuE
N8Espresso26sequence_repeat_kernel_cpuE
N8Espresso4blobIfLi2EEE
N8Espresso13CPUFP16Engine13blob_cpu_fp16E
N8Espresso17cf_for_kernel_cpuE
N8Espresso31cf_kernel_with_br_label_to_bindE
N8Espresso20cf_branch_kernel_cpuE
N8Espresso18cf_jump_kernel_cpuE
N8Espresso18cf_call_kernel_cpuE
N8Espresso20cf_return_kernel_cpuE
N8Espresso20get_shape_kernel_cpuE
N8Espresso16alloc_kernel_cpuE
N8Espresso22load_global_kernel_cpuE
N8Espresso23store_global_kernel_cpuE
N8Espresso16cf_if_kernel_cpuE
N8Espresso18cf_loop_kernel_cpuE
N8Espresso18cf_else_kernel_cpuE
N8Espresso17cf_end_kernel_cpuE
N8Espresso18builtin_kernel_cpuE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15return_status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20blob_container_arrayENS_9allocatorIS2_EEEE
N8Espresso19abstract_executor_tE
N8Espresso18pass_unpack_layersE
N8Espresso27analysis_pass_unpack_layersE
NSt3__120__shared_ptr_emplaceIN8Espresso27analysis_pass_unpack_layersENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23rule_convolution_groupsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27pass_constant_if_conditionsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceI19rule_fuse_bias_convNS_9allocatorIS1_EEEE
19rule_fuse_bias_conv
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_26generic_convolution_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_26generic_elementwise_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_28generic_load_constant_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI28rule_fuse_bias_inner_productNS_9allocatorIS1_EEEE
28rule_fuse_bias_inner_product
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_28generic_inner_product_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_fuse_scale_convNS_9allocatorIS1_EEEE
20rule_fuse_scale_conv
NSt3__120__shared_ptr_emplaceI17rule_fuse_bn_convNS_9allocatorIS1_EEEE
17rule_fuse_bn_conv
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_24generic_batchnorm_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_concat_fuse_fixNS_9allocatorIS1_EEEE
20rule_concat_fuse_fix
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_21generic_concat_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12graph_node_tINS1_19generic_pool_kernelEEENS_9allocatorIS4_EEEE
NSt3__120__shared_ptr_emplaceI20rule_input_underflowNS_9allocatorIS1_EEEE
20rule_input_underflow
N8Espresso26pass_params_graph_coloringE
N8Espresso28analysis_pass_graph_coloringE
N8Espresso19pass_graph_coloringE
NSt3__110__function6__funcIZL45alias_blob_loaded_from_or_stored_to_to_globalRN8Espresso3netERKNS2_30pass_blob_name_indexing_resultERKNS2_32pass_global_name_indexing_resultERKNS_13unordered_mapIiNS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEESE_SG_NSH_INS_4pairIKiSJ_EEEEEEE3$_2NSH_ISR_EEFvRNSK_INS_12basic_stringIcNS_11char_traitsIcEENSH_IcEEEENS_10shared_ptrINS2_23abstract_blob_containerEEEEEEEE
ZL45alias_blob_loaded_from_or_stored_to_to_globalRN8Espresso3netERKNS_30pass_blob_name_indexing_resultERKNS_32pass_global_name_indexing_resultERKNSt3__113unordered_mapIiNS8_13unordered_setIiNS8_4hashIiEENS8_8equal_toIiEENS8_9allocatorIiEEEESC_SE_NSF_INS8_4pairIKiSH_EEEEEEE3$_2
NSt3__110__function6__funcIZN8Espresso24force_aliased_blob_index45map_global_to_blob_loaded_from_or_store_to_itERNS_13unordered_mapIiiNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiiEEEEEEE3$_0NS9_ISG_EEFvRNSA_INS_12basic_stringIcNS_11char_traitsIcEENS9_IcEEEENS_10shared_ptrINS2_23abstract_blob_containerEEEEEEEE
ZN8Espresso24force_aliased_blob_index45map_global_to_blob_loaded_from_or_store_to_itERNSt3__113unordered_mapIiiNS1_4hashIiEENS1_8equal_toIiEENS1_9allocatorINS1_4pairIKiiEEEEEEE3$_0
NSt3__120__shared_ptr_emplaceIN8Espresso28analysis_pass_graph_coloringENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25pass_global_name_indexingENS_9allocatorIS2_EEEE
N8Espresso20abstract_batch_metalE
?N8Espresso27convolution_grad_kernel_cpuE
N8Espresso35convolution_weights_grad_kernel_cpuE
N8Espresso20pool_grad_kernel_cpuE
N8Espresso21nonlinearity_grad_cpuE
N8Espresso22concat_grad_kernel_cpuE
N8Espresso28softmax_loss_grad_kernel_cpuE
N8Espresso15bias_kernel_cpuE
N8Espresso20bias_grad_kernel_cpuE
N8Espresso25batchnorm_grad_kernel_cpuE
N8Espresso28l2_normalize_grad_kernel_cpuE
N8Espresso29inner_product_grad_kernel_cpuE
N8Espresso37inner_product_weights_grad_kernel_cpuE
N8Espresso27elementwise_grad_kernel_cpuE
N8Espresso23dropout_grad_kernel_cpuE
N8Espresso20abstract_data_sourceE
N8Espresso20pass_block_transformE
N8Espresso24analysis_block_transformE
?N8Espresso24inner_product_kernel_cpuE
N8Espresso20batchnorm_kernel_cpuE
N8Espresso22convolution_kernel_cpuE
N8Espresso17pool3d_kernel_cpuE
N8Espresso15pool_kernel_cpuE
N8Espresso14lrn_kernel_cpuE
N8Espresso18softmax_kernel_cpuE
N8Espresso17concat_kernel_cpuE
N8Espresso19upsample_kernel_cpuE
N8Espresso22elementwise_kernel_cpuE
N8Espresso16split_kernel_cpuE
N8Espresso26general_padding_kernel_cpuE
N8Espresso15crop_kernel_cpuE
N8Espresso21activation_kernel_cpuE
N8Espresso16axpby_kernel_cpuE
N8Espresso27context_transfer_kernel_cpuE
N8Espresso18reshape_kernel_cpuE
N8Espresso15tile_kernel_cpuE
N8Espresso18flatten_kernel_cpuE
N8Espresso20transpose_kernel_cpuE
N8Espresso23l2_normalize_kernel_cpuE
N8Espresso24deconvolution_kernel_cpuE
N8Espresso31prediction_smoothing_kernel_cpuE
N8Espresso18dropout_kernel_cpuE
N8Espresso25space_to_depth_kernel_cpuE
N8Espresso16slice_kernel_cpuE
N8Espresso20broadcast_kernel_cpuE
N8Espresso15cast_kernel_cpuE
N8Espresso24compute_stats_kernel_cpuE
N8Espresso17lambda_kernel_cpuE
N8Espresso26patch_extractor_kernel_cpuE
N8Espresso26crop_and_resize_kernel_cpuE
N8Espresso15topk_kernel_cpuE
N8Espresso17gather_kernel_cpuE
N8Espresso27dynamic_quantize_kernel_cpuE
N8Espresso29dynamic_dequantize_kernel_cpuE
N8Espresso27quantized_gather_kernel_cpuE
N8Espresso25general_concat_kernel_cpuE
N8Espresso30spatial_transformer_kernel_cpuE
N8Espresso15copy_kernel_cpuE
N8Espresso18scatter_kernel_cpuE
N8Espresso22load_random_kernel_cpuE
N8Espresso16range_kernel_cpuE
N8Espresso27matrix_band_part_kernel_cpuE
N8Espresso15fill_kernel_cpuE
N8Espresso23batch_matmul_kernel_cpuE
N8Espresso26tensor_zero_pad_kernel_cpuE
N8Espresso18squeeze_kernel_cpuE
N8Espresso22expand_dims_kernel_cpuE
N8Espresso23array_gather_kernel_cpuE
N8Espresso22multinomial_kernel_cpuE
N8Espresso26instancenorm_1d_kernel_cpuE
N8Espresso21gumbel_max_kernel_cpuE
N8Espresso21transplant_kernel_cpuE
N8Espresso24general_slice_kernel_cpuE
N8Espresso19stack_nd_kernel_cpuE
N8Espresso19split_nd_kernel_cpuE
N8Espresso21softmax_nd_kernel_cpuE
N8Espresso26sliding_windows_kernel_cpuE
N8Espresso22reverse_seq_kernel_cpuE
N8Espresso24cross_entropy_kernel_cpuE
N8Espresso14sgd_kernel_cpuE
N8Espresso15adam_kernel_cpuE
N8Espresso34non_maximum_suppression_kernel_cpuE
N8Espresso20gather_nd_kernel_cpuE
N8Espresso21scatter_nd_kernel_cpuE
N8Espresso18nonzero_kernel_cpuE
N8Espresso30precompiled_segment_kernel_cpuE
N8Espresso18one_hot_kernel_cpuE
N8Espresso17cumsum_kernel_cpuE
N8Espresso31sparse_inner_product_kernel_cpuE
N8Espresso17dev_op_kernel_cpuE
N8Espresso24grid_sampling_kernel_cpuE
N8Espresso18argsort_kernel_cpuE
N8Espresso28local_correlation_kernel_cpuE
N8Espresso17conv3d_kernel_cpuE
N8Espresso23slice_update_kernel_cpuE
N8Espresso26static_quantize_kernel_cpuE
N8Espresso28static_dequantize_kernel_cpuE
N8Espresso33fused_convolution_grad_kernel_cpuE
N8Espresso35fused_inner_product_grad_kernel_cpuE
N8Espresso19deconv3d_kernel_cpuE
N8Espresso22conv3d_kernel_cpu_baseINS_23generic_deconv3d_kernelEEE
N8Espresso21kernel_with_uniforms_INS_22general_slice_params_tENS_11base_kernelEEE
N8Espresso4blobIfLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso24argmax_tree_approximatorENS_9allocatorIS2_EEEE
N8Espresso4blobIhLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIsLi2EEENS_9allocatorIS3_EEEE
N8Espresso4blobIiLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobItLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso24quantized_weights_helperENS_9allocatorIS2_EEEE
N8Espresso4blobIcLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIaLi1EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18dropout_kernel_cpu14random_state_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20espresso_async_cacheENS_9allocatorIS2_EEEE
?N8Espresso34dispatch_error_fallback_at_c_levelE
N8Espresso30dispatch_error_use_mps_buffersE
N8Espresso29dispatch_error_use_cpu_scriptE
NSt3__120__shared_ptr_emplaceIN8Espresso27kernels_validation_status_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27cpu_context_transfer_algo_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13net_info_ir_tENS_9allocatorIS2_EEEE
N8Espresso32pass_multi_head_prune_undeclaredE
N8Espresso36analysis_multi_head_prune_undeclaredE
NSt3__120__shared_ptr_emplaceIN8Espresso36analysis_multi_head_prune_undeclaredENS_9allocatorIS2_EEEE
CN8Espresso4blobItLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIaLi4EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIiLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIaLi1EEE
N8Espresso12net_compilerE
N8Espresso26net_compiler_segment_basedE
N8Espresso30pass_blob_name_indexing_resultE
N8Espresso23pass_blob_name_indexingE
N8Espresso32pass_global_name_indexing_resultE
N8Espresso25pass_global_name_indexingE
N8Espresso27pass_constant_if_conditionsE
N8Espresso34pass_constant_if_conditions_resultE
NSt3__120__shared_ptr_emplaceIN8Espresso13interpreter_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30pass_blob_name_indexing_resultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso32pass_global_name_indexing_resultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17net_fast_reshaperENS_9allocatorIS2_EEEE
N8Espresso19espresso_error_baseE
N8Espresso19invalid_state_errorE
N8Espresso22invalid_argument_errorE
N8Espresso24invalid_blob_shape_errorE
N8Espresso21not_implemented_errorE
N8Espresso31unsupported_configuration_errorE
N8Espresso12memory_errorE
N8Espresso8io_errorE
N8Espresso13generic_errorE
N8Espresso13pass_livenessE
N8Espresso17analysis_livenessE
NSt3__120__shared_ptr_emplaceIN8Espresso17analysis_livenessENS_9allocatorIS2_EEEE
)>N8Espresso26generic_convolution_kernelE
N8Espresso28abstract_kernel_with_weightsINS_20convolution_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_20convolution_uniformsENS_29abstract_kernel_with_weights_EEE
N8Espresso29abstract_kernel_with_weights_E
N8Espresso35abstract_kernel_with_named_weights_E
N8Espresso34abstract_kernel_with_weights_grad_E
N8Espresso12no_op_kernelE
N8Espresso20kernel_with_uniformsINS_23no_op_kernel_parametersEEE
N8Espresso21kernel_with_uniforms_INS_23no_op_kernel_parametersENS_11base_kernelEEE
N8Espresso18generic_lrn_kernelE
N8Espresso20kernel_with_uniformsINS_10lrn_paramsEEE
N8Espresso21kernel_with_uniforms_INS_10lrn_paramsENS_11base_kernelEEE
N8Espresso19generic_pool_kernelE
N8Espresso28abstract_kernel_with_weightsINS_11pool_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11pool_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso22generic_softmax_kernelE
N8Espresso20kernel_with_uniformsINS_14softmax_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14softmax_paramsENS_11base_kernelEEE
N8Espresso28generic_inner_product_kernelE
N8Espresso28abstract_kernel_with_weightsINS_22inner_product_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_29abstract_kernel_with_weights_EEE
N8Espresso21generic_concat_kernelE
N8Espresso20kernel_with_uniformsINS_13concat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_13concat_paramsENS_11base_kernelEEE
N8Espresso23generic_upsample_kernelE
N8Espresso20kernel_with_uniformsINS_22upsample_kernel_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22upsample_kernel_paramsENS_11base_kernelEEE
N8Espresso26generic_elementwise_kernelE
N8Espresso20kernel_with_uniformsINS_18elementwise_paramsEEE
N8Espresso21kernel_with_uniforms_INS_18elementwise_paramsENS_11base_kernelEEE
N8Espresso20generic_split_kernelE
N8Espresso20kernel_with_uniformsINS_12split_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12split_paramsENS_11base_kernelEEE
N8Espresso30generic_general_padding_kernelE
N8Espresso20kernel_with_uniformsINS_22general_padding_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22general_padding_paramsENS_11base_kernelEEE
N8Espresso19generic_crop_kernelE
N8Espresso20kernel_with_uniformsINS_11crop_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11crop_paramsENS_11base_kernelEEE
N8Espresso28generic_deconvolution_kernelE
N8Espresso31generic_convolution_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_20convolution_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_20convolution_uniformsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso39generic_convolution_weights_grad_kernelE
N8Espresso24generic_pool_grad_kernelE
N8Espresso20kernel_with_uniformsINS_11pool_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11pool_paramsENS_11base_kernelEEE
N8Espresso26generic_concat_grad_kernelE
N8Espresso32generic_softmax_loss_grad_kernelE
N8Espresso25generic_activation_kernelE
N8Espresso20kernel_with_uniformsINS_17activation_paramsEEE
N8Espresso21kernel_with_uniforms_INS_17activation_paramsENS_11base_kernelEEE
N8Espresso30generic_activation_grad_kernelE
N8Espresso19generic_bias_kernelE
N8Espresso28abstract_kernel_with_weightsINS_11bias_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11bias_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso24generic_bias_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_11bias_paramsEEE
N8Espresso21kernel_with_uniforms_INS_11bias_paramsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso24generic_batchnorm_kernelE
N8Espresso28abstract_kernel_with_weightsINS_16batchnorm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_16batchnorm_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso29generic_batchnorm_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_16batchnorm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_16batchnorm_paramsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso27generic_l2_normalize_kernelE
N8Espresso20kernel_with_uniformsINS_14l2_norm_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14l2_norm_paramsENS_11base_kernelEEE
N8Espresso32generic_l2_normalize_grad_kernelE
N8Espresso33generic_inner_product_grad_kernelE
N8Espresso33abstract_kernel_with_weights_gradINS_22inner_product_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_34abstract_kernel_with_weights_grad_EEE
N8Espresso41generic_inner_product_weights_grad_kernelE
N8Espresso31generic_elementwise_grad_kernelE
N8Espresso22generic_dropout_kernelE
N8Espresso20kernel_with_uniformsINS_14dropout_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14dropout_paramsENS_11base_kernelEEE
N8Espresso27generic_dropout_grad_kernelE
N8Espresso20generic_axpby_kernelE
N8Espresso20kernel_with_uniformsINS_12axpby_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12axpby_paramsENS_11base_kernelEEE
N8Espresso28generic_load_constant_kernelE
N8Espresso28abstract_kernel_with_weightsINS_20load_constant_paramsEEE
N8Espresso21kernel_with_uniforms_INS_20load_constant_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso31generic_context_transfer_kernelE
N8Espresso20kernel_with_uniformsINS_23context_transfer_paramsEEE
N8Espresso21kernel_with_uniforms_INS_23context_transfer_paramsENS_11base_kernelEEE
N8Espresso33generic_load_constant_kernel_implE
N8Espresso36generic_context_transfer_kernel_implE
N8Espresso22generic_reshape_kernelE
N8Espresso20kernel_with_uniformsINS_14reshape_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14reshape_paramsENS_11base_kernelEEE
N8Espresso19generic_tile_kernelE
N8Espresso20kernel_with_uniformsINS_13tile_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13tile_params_tENS_11base_kernelEEE
N8Espresso22generic_flatten_kernelE
N8Espresso20kernel_with_uniformsINS_14flatten_paramsEEE
N8Espresso21kernel_with_uniforms_INS_14flatten_paramsENS_11base_kernelEEE
N8Espresso21generic_reduce_kernelE
N8Espresso20kernel_with_uniformsINS_15reduce_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15reduce_params_tENS_11base_kernelEEE
N8Espresso24generic_transpose_kernelE
N8Espresso20kernel_with_uniformsINS_18transpose_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18transpose_params_tENS_11base_kernelEEE
N8Espresso18generic_rnn_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_10rnn_paramsEEE
N8Espresso21kernel_with_uniforms_INS_10rnn_paramsENS_35abstract_kernel_with_named_weights_EEE
N8Espresso35generic_prediction_smoothing_kernelE
N8Espresso20kernel_with_uniformsINS_27prediction_smoothing_paramsEEE
N8Espresso21kernel_with_uniforms_INS_27prediction_smoothing_paramsENS_11base_kernelEEE
N8Espresso29generic_space_to_depth_kernelE
N8Espresso20kernel_with_uniformsINS_23space_to_depth_params_tEEE
N8Espresso21kernel_with_uniforms_INS_23space_to_depth_params_tENS_11base_kernelEEE
N8Espresso20generic_slice_kernelE
N8Espresso20kernel_with_uniformsINS_14slice_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14slice_params_tENS_11base_kernelEEE
N8Espresso24generic_broadcast_kernelE
N8Espresso20kernel_with_uniformsINS_18broadcast_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18broadcast_params_tENS_11base_kernelEEE
N8Espresso19generic_cast_kernelE
N8Espresso20kernel_with_uniformsINS_13cast_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13cast_params_tENS_11base_kernelEEE
N8Espresso28generic_compute_stats_kernelE
N8Espresso20kernel_with_uniformsINS_22compute_stats_params_tEEE
N8Espresso21kernel_with_uniforms_INS_22compute_stats_params_tENS_11base_kernelEEE
N8Espresso30generic_patch_extractor_kernelE
N8Espresso20kernel_with_uniformsINS_24patch_extractor_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24patch_extractor_params_tENS_11base_kernelEEE
N8Espresso30generic_crop_and_resize_kernelE
N8Espresso20kernel_with_uniformsINS_24crop_and_resize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24crop_and_resize_params_tENS_11base_kernelEEE
N8Espresso31generic_dynamic_quantize_kernelE
N8Espresso20kernel_with_uniformsINS_25dynamic_quantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_25dynamic_quantize_params_tENS_11base_kernelEEE
N8Espresso31generic_quantized_gather_kernelE
N8Espresso28abstract_kernel_with_weightsINS_25quantized_gather_params_tEEE
N8Espresso21kernel_with_uniforms_INS_25quantized_gather_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso24generic_cf_branch_kernelE
N8Espresso20kernel_with_uniformsINS_18cf_branch_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18cf_branch_params_tENS_11base_kernelEEE
N8Espresso33generic_dynamic_dequantize_kernelE
N8Espresso20kernel_with_uniformsINS_27dynamic_dequantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_27dynamic_dequantize_params_tENS_11base_kernelEEE
N8Espresso34generic_spatial_transformer_kernelE
N8Espresso20kernel_with_uniformsINS_28spatial_transformer_params_tEEE
N8Espresso21kernel_with_uniforms_INS_28spatial_transformer_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_call_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_call_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_call_params_tENS_11base_kernelEEE
N8Espresso24generic_cf_return_kernelE
N8Espresso20kernel_with_uniformsINS_18cf_return_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18cf_return_params_tENS_11base_kernelEEE
N8Espresso24generic_get_shape_kernelE
N8Espresso20kernel_with_uniformsINS_18get_shape_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18get_shape_params_tENS_11base_kernelEEE
N8Espresso19generic_topk_kernelE
N8Espresso20kernel_with_uniformsINS_13topk_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13topk_params_tENS_11base_kernelEEE
N8Espresso21generic_gather_kernelE
N8Espresso20kernel_with_uniformsINS_15gather_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15gather_params_tENS_11base_kernelEEE
N8Espresso29generic_general_concat_kernelE
N8Espresso20kernel_with_uniformsINS_23general_concat_params_tEEE
N8Espresso21kernel_with_uniforms_INS_23general_concat_params_tENS_11base_kernelEEE
N8Espresso20generic_alloc_kernelE
N8Espresso20kernel_with_uniformsINS_14alloc_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14alloc_params_tENS_11base_kernelEEE
N8Espresso26generic_load_global_kernelE
N8Espresso20kernel_with_uniformsINS_20load_global_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20load_global_params_tENS_11base_kernelEEE
N8Espresso27generic_store_global_kernelE
N8Espresso20kernel_with_uniformsINS_21store_global_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21store_global_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_jump_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_jump_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_jump_params_tENS_11base_kernelEEE
N8Espresso20generic_cf_if_kernelE
N8Espresso20kernel_with_uniformsINS_14cf_if_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14cf_if_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_loop_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_loop_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_loop_params_tENS_11base_kernelEEE
N8Espresso21generic_cf_for_kernelE
N8Espresso20kernel_with_uniformsINS_15cf_for_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15cf_for_params_tENS_11base_kernelEEE
N8Espresso21generic_cf_end_kernelE
N8Espresso20kernel_with_uniformsINS_15cf_end_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15cf_end_params_tENS_11base_kernelEEE
N8Espresso22generic_cf_else_kernelE
N8Espresso20kernel_with_uniformsINS_16cf_else_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16cf_else_params_tENS_11base_kernelEEE
N8Espresso19generic_copy_kernelE
N8Espresso20kernel_with_uniformsINS_13copy_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13copy_params_tENS_11base_kernelEEE
N8Espresso22generic_scatter_kernelE
N8Espresso20kernel_with_uniformsINS_16scatter_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16scatter_params_tENS_11base_kernelEEE
N8Espresso26generic_load_random_kernelE
N8Espresso20kernel_with_uniformsINS_20load_random_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20load_random_params_tENS_11base_kernelEEE
N8Espresso20generic_range_kernelE
N8Espresso20kernel_with_uniformsINS_14range_params_tEEE
N8Espresso21kernel_with_uniforms_INS_14range_params_tENS_11base_kernelEEE
N8Espresso31generic_matrix_band_part_kernelE
N8Espresso20kernel_with_uniformsINS_25matrix_band_part_params_tEEE
N8Espresso21kernel_with_uniforms_INS_25matrix_band_part_params_tENS_11base_kernelEEE
N8Espresso27generic_batch_matmul_kernelE
N8Espresso20kernel_with_uniformsINS_21batch_matmul_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21batch_matmul_params_tENS_11base_kernelEEE
N8Espresso19generic_fill_kernelE
N8Espresso20kernel_with_uniformsINS_13fill_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13fill_params_tENS_11base_kernelEEE
N8Espresso30generic_tensor_zero_pad_kernelE
N8Espresso20kernel_with_uniformsINS_24tensor_zero_pad_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24tensor_zero_pad_params_tENS_11base_kernelEEE
N8Espresso22generic_squeeze_kernelE
N8Espresso20kernel_with_uniformsINS_16squeeze_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16squeeze_params_tENS_11base_kernelEEE
N8Espresso26generic_expand_dims_kernelE
N8Espresso20kernel_with_uniformsINS_20expand_dims_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20expand_dims_params_tENS_11base_kernelEEE
N8Espresso27generic_array_gather_kernelE
N8Espresso20kernel_with_uniformsINS_21array_gather_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21array_gather_params_tENS_11base_kernelEEE
N8Espresso26generic_multinomial_kernelE
N8Espresso20kernel_with_uniformsINS_20multinomial_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20multinomial_params_tENS_11base_kernelEEE
N8Espresso30generic_instancenorm_1d_kernelE
N8Espresso20kernel_with_uniformsINS_24instancenorm_1d_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24instancenorm_1d_params_tENS_11base_kernelEEE
N8Espresso26generic_phi_virtual_kernelE
N8Espresso20kernel_with_uniformsINS_20phi_virtual_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20phi_virtual_params_tENS_11base_kernelEEE
N8Espresso25generic_gumbel_max_kernelE
N8Espresso20kernel_with_uniformsINS_19gumbel_max_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19gumbel_max_params_tENS_11base_kernelEEE
N8Espresso22generic_builtin_kernelE
N8Espresso20kernel_with_uniformsINS_16builtin_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16builtin_params_tENS_11base_kernelEEE
N8Espresso25generic_transplant_kernelE
N8Espresso28abstract_kernel_with_weightsINS_19transplant_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19transplant_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso28generic_general_slice_kernelE
N8Espresso20kernel_with_uniformsINS_22general_slice_params_tEEE
N8Espresso23generic_stack_nd_kernelE
N8Espresso20kernel_with_uniformsINS_17stack_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_17stack_nd_params_tENS_11base_kernelEEE
N8Espresso23generic_split_nd_kernelE
N8Espresso20kernel_with_uniformsINS_17split_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_17split_nd_params_tENS_11base_kernelEEE
N8Espresso25generic_softmax_nd_kernelE
N8Espresso20kernel_with_uniformsINS_19softmax_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19softmax_nd_params_tENS_11base_kernelEEE
N8Espresso30generic_sliding_windows_kernelE
N8Espresso20kernel_with_uniformsINS_24sliding_windows_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24sliding_windows_params_tENS_11base_kernelEEE
N8Espresso26generic_reverse_seq_kernelE
N8Espresso20kernel_with_uniformsINS_20reverse_seq_params_tEEE
N8Espresso21kernel_with_uniforms_INS_20reverse_seq_params_tENS_11base_kernelEEE
N8Espresso28generic_cross_entropy_kernelE
N8Espresso20kernel_with_uniformsINS_22cross_entropy_params_tEEE
N8Espresso21kernel_with_uniforms_INS_22cross_entropy_params_tENS_11base_kernelEEE
N8Espresso38generic_non_maximum_suppression_kernelE
N8Espresso20kernel_with_uniformsINS_32non_maximum_suppression_params_tEEE
N8Espresso21kernel_with_uniforms_INS_32non_maximum_suppression_params_tENS_11base_kernelEEE
N8Espresso18generic_sgd_kernelE
N8Espresso20kernel_with_uniformsINS_12sgd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_12sgd_params_tENS_11base_kernelEEE
N8Espresso19generic_adam_kernelE
N8Espresso20kernel_with_uniformsINS_13adam_params_tEEE
N8Espresso21kernel_with_uniforms_INS_13adam_params_tENS_11base_kernelEEE
N8Espresso25generic_scatter_nd_kernelE
N8Espresso20kernel_with_uniformsINS_19scatter_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_19scatter_nd_params_tENS_11base_kernelEEE
N8Espresso24generic_gather_nd_kernelE
N8Espresso20kernel_with_uniformsINS_18gather_nd_params_tEEE
N8Espresso21kernel_with_uniforms_INS_18gather_nd_params_tENS_11base_kernelEEE
N8Espresso22generic_nonzero_kernelE
N8Espresso20kernel_with_uniformsINS_16nonzero_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16nonzero_params_tENS_11base_kernelEEE
N8Espresso34generic_precompiled_segment_kernelE
N8Espresso20kernel_with_uniformsINS_28precompiled_segment_params_tEEE
N8Espresso21kernel_with_uniforms_INS_28precompiled_segment_params_tENS_11base_kernelEEE
N8Espresso22generic_one_hot_kernelE
N8Espresso20kernel_with_uniformsINS_16one_hot_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16one_hot_params_tENS_11base_kernelEEE
N8Espresso21generic_cumsum_kernelE
N8Espresso20kernel_with_uniformsINS_15cumsum_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15cumsum_params_tENS_11base_kernelEEE
N8Espresso21generic_dev_op_kernelE
N8Espresso20kernel_with_uniformsINS_15dev_op_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15dev_op_params_tENS_11base_kernelEEE
N8Espresso35generic_sparse_inner_product_kernelE
N8Espresso28abstract_kernel_with_weightsINS_29sparse_inner_product_params_tEEE
N8Espresso21kernel_with_uniforms_INS_29sparse_inner_product_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso23generic_rnn_arch_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_15rnn_arch_paramsEEE
N8Espresso21kernel_with_uniforms_INS_15rnn_arch_paramsENS_35abstract_kernel_with_named_weights_EEE
N8Espresso31generic_sequence_reverse_kernelE
N8Espresso20kernel_with_uniformsINS_23sequence_reverse_paramsEEE
N8Espresso21kernel_with_uniforms_INS_23sequence_reverse_paramsENS_11base_kernelEEE
N8Espresso30generic_sequence_concat_kernelE
N8Espresso20kernel_with_uniformsINS_22sequence_concat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22sequence_concat_paramsENS_11base_kernelEEE
N8Espresso30generic_sequence_repeat_kernelE
N8Espresso20kernel_with_uniformsINS_22sequence_repeat_paramsEEE
N8Espresso21kernel_with_uniforms_INS_22sequence_repeat_paramsENS_11base_kernelEEE
N8Espresso28generic_grid_sampling_kernelE
N8Espresso20kernel_with_uniformsINS_22grid_sampling_params_tEEE
N8Espresso21kernel_with_uniforms_INS_22grid_sampling_params_tENS_11base_kernelEEE
N8Espresso32generic_local_correlation_kernelE
N8Espresso20kernel_with_uniformsINS_26local_correlation_params_tEEE
N8Espresso21kernel_with_uniforms_INS_26local_correlation_params_tENS_11base_kernelEEE
N8Espresso33generic_bahdanau_attention_kernelE
N8Espresso34composed_kernel_with_named_weightsINS_27bahdanau_attention_params_tEEE
N8Espresso29generic_self_attention_kernelE
N8Espresso21kernel_with_uniforms_INS_23self_attention_params_tENS_35abstract_kernel_with_named_weights_EEE
N8Espresso22generic_loopkit_kernelE
N8Espresso20kernel_with_uniformsINS_16loopkit_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16loopkit_params_tENS_11base_kernelEEE
N8Espresso21generic_conv3d_kernelE
N8Espresso28abstract_kernel_with_weightsINS_15conv3d_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15conv3d_params_tENS_29abstract_kernel_with_weights_EEE
N8Espresso21generic_pool3d_kernelE
N8Espresso20kernel_with_uniformsINS_15pool3d_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15pool3d_params_tENS_11base_kernelEEE
N8Espresso41generic_hierarchical_inner_product_kernelE
N8Espresso20kernel_with_uniformsINS_22inner_product_uniformsEEE
N8Espresso21kernel_with_uniforms_INS_22inner_product_uniformsENS_11base_kernelEEE
N8Espresso22generic_argsort_kernelE
N8Espresso20kernel_with_uniformsINS_16argsort_params_tEEE
N8Espresso21kernel_with_uniforms_INS_16argsort_params_tENS_11base_kernelEEE
N8Espresso27generic_slice_update_kernelE
N8Espresso20kernel_with_uniformsINS_21slice_update_params_tEEE
N8Espresso21kernel_with_uniforms_INS_21slice_update_params_tENS_11base_kernelEEE
N8Espresso30generic_static_quantize_kernelE
N8Espresso20kernel_with_uniformsINS_24static_quantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_24static_quantize_params_tENS_11base_kernelEEE
N8Espresso32generic_static_dequantize_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_26static_dequantize_params_tEEE
N8Espresso21kernel_with_uniforms_INS_26static_dequantize_params_tENS_35abstract_kernel_with_named_weights_EEE
N8Espresso37generic_fused_convolution_grad_kernelE
N8Espresso20kernel_with_uniformsINS_31fused_convolution_grad_params_tEEE
N8Espresso21kernel_with_uniforms_INS_31fused_convolution_grad_params_tENS_11base_kernelEEE
N8Espresso39generic_fused_inner_product_grad_kernelE
N8Espresso20kernel_with_uniformsINS_33fused_inner_product_grad_params_tEEE
N8Espresso21kernel_with_uniforms_INS_33fused_inner_product_grad_params_tENS_11base_kernelEEE
N8Espresso23generic_deconv3d_kernelE
N8Espresso33generic_wg_transform_4_in_kernel_E
N8Espresso20kernel_with_uniformsINS_19wg_transform_paramsEEE
N8Espresso21kernel_with_uniforms_INS_19wg_transform_paramsENS_11base_kernelEEE
N8Espresso34generic_wg_transform_4_out_kernel_E
N8Espresso28abstract_kernel_with_weightsINS_19wg_transform_paramsEEE
N8Espresso21kernel_with_uniforms_INS_19wg_transform_paramsENS_29abstract_kernel_with_weights_EEE
N8Espresso28generic_rnn_arch_kernel_implE
N8Espresso31generic_meta_convolution_kernelE
N8Espresso21generic_lambda_kernelE
N8Espresso20kernel_with_uniformsINS_15lambda_params_tEEE
N8Espresso21kernel_with_uniforms_INS_15lambda_params_tENS_11base_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi5EEENS_9allocatorIS3_EEEE
N8Espresso4blobIfLi5EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi4EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi6EEENS_9allocatorIS3_EEEE
N8Espresso4blobIfLi6EEE
N8Espresso4blobIhLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi3EEENS_9allocatorIS3_EEEE
NSt3__110__function6__funcIZN8Espresso37generic_fused_convolution_grad_kernel6unpackERNS2_14unpack_optionsEE3$_0NS_9allocatorIS6_EEFNS_12basic_stringIcNS_11char_traitsIcEENS7_IcEEEES5_RKSD_EEE
NSt3__110__function6__baseIFNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERN8Espresso14unpack_optionsERKS7_EEE
ZN8Espresso37generic_fused_convolution_grad_kernel6unpackERNS_14unpack_optionsEE3$_0
NSt3__110__function6__funcIZN8Espresso39generic_fused_inner_product_grad_kernel6unpackERNS2_14unpack_optionsEE3$_1NS_9allocatorIS6_EEFNS_12basic_stringIcNS_11char_traitsIcEENS7_IcEEEES5_RKSD_EEE
ZN8Espresso39generic_fused_inner_product_grad_kernel6unpackERNS_14unpack_optionsEE3$_1
NSt3__120__shared_ptr_emplaceIN8Espresso31abstract_blob_container_optionsENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi2EEENS_9allocatorIS3_EEEE
?N8Espresso29espresso_training_data_sourceE
N8Espresso20blob_container_arrayE
N8Espresso13interpreter_tE
NSt3__123enable_shared_from_thisIN8Espresso13interpreter_tEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19interpreter_state_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23per_network_phi_state_tENS_9allocatorIS2_EEEE
N8Espresso29bahdanau_attention_kernel_cpuE
N8Espresso25self_attention_kernel_cpuE
N8Espresso34abstract_kernel_with_named_weightsINS_23self_attention_params_tEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi1EEENS_9allocatorIS3_EEEE
N8Espresso22pass_tag_dynamic_blobsE
N8Espresso26analysis_tag_dynamic_blobsE
NSt3__120__shared_ptr_emplaceIN8Espresso26analysis_tag_dynamic_blobsENS_9allocatorIS2_EEEE
N8Espresso4blobIsLi2EEE
NSt3__120__shared_ptr_emplaceIN8Espresso18pass_unpack_layersENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26pass_params_graph_coloringENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso40abstract_blob_container_options_aliasingENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso44pass_update_absolute_indexes_after_transformENS_9allocatorIS2_EEEE
4@N8Espresso17blob_storage_rootE
N8Espresso14blob_rtti_rootE
<N8Espresso10BNNSEngine18convolution_kernelE
N8Espresso10BNNSEngine16base_bnns_kernelINS_26generic_convolution_kernelEEE
N8Espresso10BNNSEngine11pool_kernelE
N8Espresso10BNNSEngine14softmax_kernelE
N8Espresso10BNNSEngine20inner_product_kernelE
N8Espresso10BNNSEngine16transpose_kernelE
N8Espresso10BNNSEngine23dynamic_quantize_kernelE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi2EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine22convolution_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine15pool_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIcLi4EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIsLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIsLi1EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi2EEENS_9allocatorIS3_EEEE
N8Espresso19blob_storage_memoryE
N8Espresso21blob_storage_abstractE
N8Espresso17blob_storage_mmapE
NSt3__120__shared_ptr_emplaceIN8Espresso29espresso_training_data_sourceENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZ46-[ETTaskDefinition saveNetwork:inplace:error:]E3$_0NS_9allocatorIS2_EEFvRNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEENS_10shared_ptrIN8Espresso23abstract_blob_containerEEEEEEEE
NSt3__110__function6__baseIFvRNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN8Espresso23abstract_blob_containerEEEEEEEE
Z46-[ETTaskDefinition saveNetwork:inplace:error:]E3$_0
NSt3__110__function6__funcIZ57-[ETTaskDefinition saveTrainingNetwork:checkpoint:error:]E3$_1NS_9allocatorIS2_EEFvRNS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS3_IcEEEENS_10shared_ptrIN8Espresso23abstract_blob_containerEEEEEEEE
Z57-[ETTaskDefinition saveTrainingNetwork:checkpoint:error:]E3$_1
NSt3__120__shared_ptr_emplaceIN8Espresso23pass_blob_name_indexingENS_9allocatorIS2_EEEE
N8Espresso6SerDes21generic_serdes_objectE
N8Espresso4passE
N8Espresso15analysis_resultE
N8Espresso16pass_params_baseE
N8Espresso8net_passE
>N8Espresso12brick_kernelE
N8Espresso34abstract_kernel_with_named_weightsINS_12brick_paramsEEE
N8Espresso21kernel_with_uniforms_INS_12brick_paramsENS_35abstract_kernel_with_named_weights_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_12brick_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_12brick_kernelEEE
N8Espresso9factory_tINS_6SerDes13layer_io_baseEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9factory_tINS1_6SerDes13layer_io_baseEEENS_9allocatorIS5_EEEE
St8__nestedISt9exceptionE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi1EEENS_9allocatorIS3_EEEE
N8Espresso4blobIhLi1EEE
N8Espresso16pass_bind_labelsE
N8Espresso20dummy_blob_containerE
N8Espresso8IREngine14blob_containerE
N8Espresso14DummyMPSEngine14blob_containerE
N8Espresso15DummyBNNSEngine14blob_containerE
N8Espresso21DummyMPSBuffersEngine14blob_containerE
N8Espresso14DummyMPSEngine50generic_inner_product_kernel_with_null_set_weightsE
N8Espresso14DummyMPSEngine12slice_kernelE
N8Espresso14DummyMPSEngine13reduce_kernelE
N8Espresso14DummyMPSEngine13concat_kernelE
N8Espresso14DummyMPSEngine14softmax_kernelE
N8Espresso14DummyMPSEngine20inner_product_kernelE
N8Espresso14DummyMPSEngine14flatten_kernelE
N8Espresso14DummyMPSEngine12split_kernelE
N8Espresso14DummyMPSEngine17activation_kernelE
N8Espresso14DummyMPSEngine20grid_sampling_kernelE
N8Espresso14DummyMPSEngine24local_correlation_kernelE
N8Espresso14DummyMPSEngine18elementwise_kernelE
N8Espresso14DummyMPSEngine17softmax_nd_kernelE
N8Espresso14DummyMPSEngine16transpose_kernelE
N8Espresso14DummyMPSEngine14reshape_kernelE
N8Espresso14DummyMPSEngine21general_concat_kernelE
N8Espresso14DummyMPSEngine15split_nd_kernelE
N8Espresso14DummyMPSEngine6engineE
N8Espresso15DummyBNNSEngine6engineE
N8Espresso8IREngine6engineE
N8Espresso21DummyMPSBuffersEngine19batch_matmul_kernelE
N8Espresso21DummyMPSBuffersEngine21general_concat_kernelE
N8Espresso21DummyMPSBuffersEngine14reshape_kernelE
N8Espresso21DummyMPSBuffersEngine20inner_product_kernelE
N8Espresso21DummyMPSBuffersEngine13reduce_kernelE
N8Espresso21DummyMPSBuffersEngine13concat_kernelE
N8Espresso21DummyMPSBuffersEngine17activation_kernelE
N8Espresso21DummyMPSBuffersEngine18elementwise_kernelE
N8Espresso21DummyMPSBuffersEngine14softmax_kernelE
N8Espresso21DummyMPSBuffersEngine20general_slice_kernelE
N8Espresso21DummyMPSBuffersEngine15split_nd_kernelE
N8Espresso21DummyMPSBuffersEngine11tile_kernelE
N8Espresso21DummyMPSBuffersEngine16gather_nd_kernelE
N8Espresso21DummyMPSBuffersEngine11fill_kernelE
N8Espresso21DummyMPSBuffersEngine6engineE
N8Espresso27convolution_kernel_cpu_baseINS_26generic_convolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15pool_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine20inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine17activation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24deconvolution_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26general_padding_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine12split_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14flatten_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine18elementwise_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine13concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine21general_concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine12slice_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine13reduce_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine20grid_sampling_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine24local_correlation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine17softmax_nd_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine16transpose_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14reshape_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine15split_nd_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15DummyBNNSEngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8IREngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine14softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine20inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine18elementwise_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine17activation_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine13concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine13reduce_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18squeeze_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine19batch_matmul_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine14reshape_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22expand_dims_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine20general_slice_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine15split_nd_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26instancenorm_1d_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine11tile_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine16gather_nd_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine11fill_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine21general_concat_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine14blob_containerENS_9allocatorIS3_EEEE
N8Espresso8blob_cpuE
N8Espresso10engine_cpuE
N8Espresso9batch_cpuE
N8Espresso11context_cpuE
N8Espresso4blobIfLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIiLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIiLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine13blob_cpu_fp16ENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8blob_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22convolution_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine18convolution_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine11pool_kernelENS_9allocatorIS3_EEEE
N8Espresso10BNNSEngine16base_bnns_kernelINS_19generic_pool_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14lrn_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine14lrn_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18softmax_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine18softmax_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24inner_product_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine17concat_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19upsample_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine19upsample_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22elementwise_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine22elementwise_kernel_cpuENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16split_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso13CPUFP16Engine16split_kernel_cpuENS_9allocatorIS3_EEEE
N8Espresso27convolution_kernel_cpu_baseINS_28generic_deconvolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16axpby_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21activation_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20batchnorm_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14rnn_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17reduce_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27context_transfer_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12rnn_arch_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20transpose_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18reshape_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15tile_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18flatten_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23l2_normalize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27sequence_reverse_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sequence_concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sequence_repeat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15crop_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31prediction_smoothing_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18dropout_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25space_to_depth_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16slice_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20broadcast_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15cast_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24compute_stats_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17lambda_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26patch_extractor_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26crop_and_resize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27dynamic_quantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29dynamic_dequantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27quantized_gather_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30spatial_transformer_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20cf_branch_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_jump_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_call_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20cf_return_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20get_shape_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15topk_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17gather_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25general_concat_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16alloc_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22load_global_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23store_global_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16cf_if_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_loop_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17cf_for_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17cf_end_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18cf_else_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15copy_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18scatter_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22load_random_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16range_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23batch_matmul_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27matrix_band_part_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15fill_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26tensor_zero_pad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23array_gather_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22multinomial_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26generic_phi_virtual_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21gumbel_max_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18builtin_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21transplant_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24general_slice_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19stack_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19split_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21softmax_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26sliding_windows_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22reverse_seq_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24cross_entropy_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14sgd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15adam_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso34non_maximum_suppression_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20gather_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21scatter_nd_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18nonzero_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30precompiled_segment_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18one_hot_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17cumsum_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17dev_op_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31sparse_inner_product_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27convolution_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso35convolution_weights_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20pool_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21nonlinearity_grad_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso22concat_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28softmax_loss_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15bias_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso20bias_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25batchnorm_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28l2_normalize_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29inner_product_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso37inner_product_weights_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27elementwise_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23dropout_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso24grid_sampling_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28local_correlation_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29bahdanau_attention_kernel_cpuENS_9allocatorIS2_EEEE
N8Espresso34abstract_kernel_with_named_weightsINS_27bahdanau_attention_params_tEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25self_attention_kernel_cpuENS_9allocatorIS2_EEEE
N8Espresso34composed_kernel_with_named_weightsINS_23self_attention_params_tEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18loopkit_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17pool3d_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso37hierarchical_inner_product_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17conv3d_kernel_cpuENS_9allocatorIS2_EEEE
N8Espresso22conv3d_kernel_cpu_baseINS_21generic_conv3d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18argsort_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23slice_update_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso26static_quantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso28static_dequantize_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso33fused_convolution_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso35fused_inner_product_grad_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19deconv3d_kernel_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11context_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9batch_cpuENS_9allocatorIS2_EEEE
N8Espresso10BNNSEngine6engineE
N8Espresso10BNNSEngine7contextE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine14softmax_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine20inner_product_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine16transpose_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine23dynamic_quantize_kernelENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23convolution_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31convolution_weights_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso16pool_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17nonlinearity_gradENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso25inner_product_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso33inner_product_weights_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso29fused_convolution_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31fused_inner_product_grad_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine7contextENS_9allocatorIS3_EEEE
N8Espresso18loopkit_kernel_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso31dump_network_layers_blobs_stateENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso19blob_storage_memoryENS_9allocatorIS2_EEEE
N8Espresso14QuantSimEngine7contextE
N8Espresso14QuantSimEngine14blob_containerE
N8Espresso14QuantSimEngine6engineE
NSt3__120__shared_ptr_emplaceIN8Espresso14QuantSimEngine14blob_containerENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14QuantSimEngine7contextENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15pool_kernel_cpuENS2_11pool_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15pool_kernel_cpuENS0_11pool_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso22convolution_kernel_cpuENS3_20convolution_uniformsEES5_ENS_9allocatorIS7_EEEE
14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso22convolution_kernel_cpuENS1_20convolution_uniformsEES3_E
27wrapper_kernel_with_weightsIN8Espresso22convolution_kernel_cpuENS0_20convolution_uniformsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24deconvolution_kernel_cpuENS3_20convolution_uniformsEES5_ENS_9allocatorIS7_EEEE
14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24deconvolution_kernel_cpuENS1_20convolution_uniformsEES3_E
27wrapper_kernel_with_weightsIN8Espresso24deconvolution_kernel_cpuENS0_20convolution_uniformsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24inner_product_kernel_cpuENS3_22inner_product_uniformsEES5_ENS_9allocatorIS7_EEEE
14wrapper_kernelI27wrapper_kernel_with_weightsIN8Espresso24inner_product_kernel_cpuENS1_22inner_product_uniformsEES3_E
27wrapper_kernel_with_weightsIN8Espresso24inner_product_kernel_cpuENS0_22inner_product_uniformsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22elementwise_kernel_cpuENS2_18elementwise_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22elementwise_kernel_cpuENS0_18elementwise_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18flatten_kernel_cpuENS2_14flatten_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18flatten_kernel_cpuENS0_14flatten_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18softmax_kernel_cpuENS2_14softmax_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18softmax_kernel_cpuENS0_14softmax_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17concat_kernel_cpuENS2_13concat_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17concat_kernel_cpuENS0_13concat_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18reshape_kernel_cpuENS2_14reshape_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18reshape_kernel_cpuENS0_14reshape_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21activation_kernel_cpuENS2_17activation_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21activation_kernel_cpuENS0_17activation_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20batchnorm_kernel_cpuENS2_16batchnorm_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20batchnorm_kernel_cpuENS0_16batchnorm_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26general_padding_kernel_cpuENS2_22general_padding_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26general_padding_kernel_cpuENS0_22general_padding_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso19upsample_kernel_cpuENS2_22upsample_kernel_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso19upsample_kernel_cpuENS0_22upsample_kernel_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso16slice_kernel_cpuENS2_14slice_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso16slice_kernel_cpuENS0_14slice_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15crop_kernel_cpuENS2_11crop_paramsEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15crop_kernel_cpuENS0_11crop_paramsEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17reduce_kernel_cpuENS2_15reduce_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17reduce_kernel_cpuENS0_15reduce_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15copy_kernel_cpuENS2_13copy_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15copy_kernel_cpuENS0_13copy_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso25general_concat_kernel_cpuENS2_23general_concat_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso25general_concat_kernel_cpuENS0_23general_concat_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20transpose_kernel_cpuENS2_18transpose_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20transpose_kernel_cpuENS0_18transpose_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15cast_kernel_cpuENS2_13cast_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15cast_kernel_cpuENS0_13cast_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15tile_kernel_cpuENS2_13tile_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15tile_kernel_cpuENS0_13tile_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso27quantized_gather_kernel_cpuENS2_25quantized_gather_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso27quantized_gather_kernel_cpuENS0_25quantized_gather_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso30spatial_transformer_kernel_cpuENS2_28spatial_transformer_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso30spatial_transformer_kernel_cpuENS0_28spatial_transformer_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20cf_branch_kernel_cpuENS2_18cf_branch_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20cf_branch_kernel_cpuENS0_18cf_branch_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18cf_jump_kernel_cpuENS2_16cf_jump_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18cf_jump_kernel_cpuENS0_16cf_jump_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18cf_call_kernel_cpuENS2_16cf_call_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18cf_call_kernel_cpuENS0_16cf_call_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20cf_return_kernel_cpuENS2_18cf_return_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20cf_return_kernel_cpuENS0_18cf_return_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20get_shape_kernel_cpuENS2_18get_shape_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20get_shape_kernel_cpuENS0_18get_shape_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15topk_kernel_cpuENS2_13topk_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15topk_kernel_cpuENS0_13topk_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17gather_kernel_cpuENS2_15gather_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17gather_kernel_cpuENS0_15gather_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso16alloc_kernel_cpuENS2_14alloc_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso16alloc_kernel_cpuENS0_14alloc_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso27dynamic_quantize_kernel_cpuENS2_25dynamic_quantize_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso27dynamic_quantize_kernel_cpuENS0_25dynamic_quantize_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso29dynamic_dequantize_kernel_cpuENS2_27dynamic_dequantize_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso29dynamic_dequantize_kernel_cpuENS0_27dynamic_dequantize_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22load_global_kernel_cpuENS2_20load_global_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22load_global_kernel_cpuENS0_20load_global_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso23store_global_kernel_cpuENS2_21store_global_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso23store_global_kernel_cpuENS0_21store_global_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso16cf_if_kernel_cpuENS2_14cf_if_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso16cf_if_kernel_cpuENS0_14cf_if_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18cf_loop_kernel_cpuENS2_16cf_loop_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18cf_loop_kernel_cpuENS0_16cf_loop_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17cf_for_kernel_cpuENS2_15cf_for_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17cf_for_kernel_cpuENS0_15cf_for_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17cf_end_kernel_cpuENS2_15cf_end_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17cf_end_kernel_cpuENS0_15cf_end_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18cf_else_kernel_cpuENS2_16cf_else_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18cf_else_kernel_cpuENS0_16cf_else_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18scatter_kernel_cpuENS2_16scatter_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18scatter_kernel_cpuENS0_16scatter_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22load_random_kernel_cpuENS2_20load_random_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22load_random_kernel_cpuENS0_20load_random_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso16range_kernel_cpuENS2_14range_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso16range_kernel_cpuENS0_14range_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso23batch_matmul_kernel_cpuENS2_21batch_matmul_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso23batch_matmul_kernel_cpuENS0_21batch_matmul_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso27matrix_band_part_kernel_cpuENS2_25matrix_band_part_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso27matrix_band_part_kernel_cpuENS0_25matrix_band_part_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15fill_kernel_cpuENS2_13fill_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15fill_kernel_cpuENS0_13fill_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26tensor_zero_pad_kernel_cpuENS2_24tensor_zero_pad_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26tensor_zero_pad_kernel_cpuENS0_24tensor_zero_pad_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18squeeze_kernel_cpuENS2_16squeeze_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18squeeze_kernel_cpuENS0_16squeeze_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22expand_dims_kernel_cpuENS2_20expand_dims_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22expand_dims_kernel_cpuENS0_20expand_dims_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso23array_gather_kernel_cpuENS2_21array_gather_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso23array_gather_kernel_cpuENS0_21array_gather_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22multinomial_kernel_cpuENS2_20multinomial_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22multinomial_kernel_cpuENS0_20multinomial_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26instancenorm_1d_kernel_cpuENS2_24instancenorm_1d_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26instancenorm_1d_kernel_cpuENS0_24instancenorm_1d_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26generic_phi_virtual_kernelENS2_20phi_virtual_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26generic_phi_virtual_kernelENS0_20phi_virtual_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21gumbel_max_kernel_cpuENS2_19gumbel_max_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21gumbel_max_kernel_cpuENS0_19gumbel_max_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18builtin_kernel_cpuENS2_16builtin_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18builtin_kernel_cpuENS0_16builtin_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21transplant_kernel_cpuENS2_19transplant_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21transplant_kernel_cpuENS0_19transplant_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso24general_slice_kernel_cpuENS2_22general_slice_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso24general_slice_kernel_cpuENS0_22general_slice_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso19stack_nd_kernel_cpuENS2_17stack_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso19stack_nd_kernel_cpuENS0_17stack_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso19split_nd_kernel_cpuENS2_17split_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso19split_nd_kernel_cpuENS0_17split_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21softmax_nd_kernel_cpuENS2_19softmax_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21softmax_nd_kernel_cpuENS0_19softmax_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26sliding_windows_kernel_cpuENS2_24sliding_windows_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26sliding_windows_kernel_cpuENS0_24sliding_windows_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso22reverse_seq_kernel_cpuENS2_20reverse_seq_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso22reverse_seq_kernel_cpuENS0_20reverse_seq_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso24cross_entropy_kernel_cpuENS2_22cross_entropy_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso24cross_entropy_kernel_cpuENS0_22cross_entropy_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso14sgd_kernel_cpuENS2_12sgd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso14sgd_kernel_cpuENS0_12sgd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso15adam_kernel_cpuENS2_13adam_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso15adam_kernel_cpuENS0_13adam_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso34non_maximum_suppression_kernel_cpuENS2_32non_maximum_suppression_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso34non_maximum_suppression_kernel_cpuENS0_32non_maximum_suppression_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso20gather_nd_kernel_cpuENS2_18gather_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso20gather_nd_kernel_cpuENS0_18gather_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso21scatter_nd_kernel_cpuENS2_19scatter_nd_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso21scatter_nd_kernel_cpuENS0_19scatter_nd_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18nonzero_kernel_cpuENS2_16nonzero_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18nonzero_kernel_cpuENS0_16nonzero_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso30precompiled_segment_kernel_cpuENS2_28precompiled_segment_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso30precompiled_segment_kernel_cpuENS0_28precompiled_segment_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18one_hot_kernel_cpuENS2_16one_hot_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18one_hot_kernel_cpuENS0_16one_hot_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17cumsum_kernel_cpuENS2_15cumsum_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17cumsum_kernel_cpuENS0_15cumsum_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17dev_op_kernel_cpuENS2_15dev_op_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17dev_op_kernel_cpuENS0_15dev_op_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso31sparse_inner_product_kernel_cpuENS2_29sparse_inner_product_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso31sparse_inner_product_kernel_cpuENS0_29sparse_inner_product_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso24grid_sampling_kernel_cpuENS2_22grid_sampling_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso24grid_sampling_kernel_cpuENS0_22grid_sampling_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso28local_correlation_kernel_cpuENS2_26local_correlation_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso28local_correlation_kernel_cpuENS0_26local_correlation_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso29bahdanau_attention_kernel_cpuENS2_27bahdanau_attention_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso29bahdanau_attention_kernel_cpuENS0_27bahdanau_attention_params_tEE
N8Espresso21kernel_with_uniforms_INS_27bahdanau_attention_params_tENS_35abstract_kernel_with_named_weights_EEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso25self_attention_kernel_cpuENS2_23self_attention_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso25self_attention_kernel_cpuENS0_23self_attention_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17pool3d_kernel_cpuENS2_15pool3d_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17pool3d_kernel_cpuENS0_15pool3d_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso17conv3d_kernel_cpuENS2_15conv3d_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso17conv3d_kernel_cpuENS0_15conv3d_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso18argsort_kernel_cpuENS2_16argsort_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso18argsort_kernel_cpuENS0_16argsort_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso23slice_update_kernel_cpuENS2_21slice_update_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso23slice_update_kernel_cpuENS0_21slice_update_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso26static_quantize_kernel_cpuENS2_24static_quantize_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso26static_quantize_kernel_cpuENS0_24static_quantize_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso28static_dequantize_kernel_cpuENS2_26static_dequantize_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso28static_dequantize_kernel_cpuENS0_26static_dequantize_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso33fused_convolution_grad_kernel_cpuENS2_31fused_convolution_grad_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso33fused_convolution_grad_kernel_cpuENS0_31fused_convolution_grad_params_tEE
NSt3__120__shared_ptr_emplaceI14wrapper_kernelIN8Espresso35fused_inner_product_grad_kernel_cpuENS2_33fused_inner_product_grad_params_tEENS_9allocatorIS5_EEEE
14wrapper_kernelIN8Espresso35fused_inner_product_grad_kernel_cpuENS0_33fused_inner_product_grad_params_tEE
NSt3__120__shared_ptr_emplaceIN8Espresso33generic_load_constant_kernel_implENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso36generic_context_transfer_kernel_implENS_9allocatorIS2_EEEE
N8Espresso4blobItLi4EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIhLi4EEENS_9allocatorIS3_EEEE
N8Espresso4blobIaLi4EEE
N8Espresso13pass_make_ssaE
N8Espresso17analysis_make_ssaE
NSt3__120__shared_ptr_emplaceIN8Espresso17analysis_make_ssaENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso11basic_block11instructionENS_9allocatorIS3_EEEE
N8Espresso23convolution_grad_kernelE
N8Espresso31convolution_weights_grad_kernelE
N8Espresso16pool_grad_kernelE
N8Espresso17nonlinearity_gradE
N8Espresso25inner_product_grad_kernelE
N8Espresso33inner_product_weights_grad_kernelE
N8Espresso29fused_convolution_grad_kernelE
N8Espresso31fused_inner_product_grad_kernelE
N8Espresso16wrong_batch_typeE
N8Espresso23abstract_blob_containerE
N8Espresso14abstract_batchE
N8Espresso16abstract_contextE
N8Espresso31abstract_blob_container_optionsE
N8Espresso15abstract_engineE
N8Espresso40abstract_blob_container_options_aliasingE
N8Espresso11base_kernelE
N8Espresso19switch_engine_batchE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobIfLi4EEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceINS_26linear_congruential_engineIjLj48271ELj0ELj2147483647EEENS_9allocatorIS2_EEEE
N8Espresso13CPUFP16Engine22convolution_kernel_cpuE
N8Espresso13CPUFP16Engine15pool_kernel_cpuE
N8Espresso13CPUFP16Engine14lrn_kernel_cpuE
N8Espresso13CPUFP16Engine18softmax_kernel_cpuE
N8Espresso13CPUFP16Engine17concat_kernel_cpuE
N8Espresso13CPUFP16Engine22elementwise_kernel_cpuE
N8Espresso13CPUFP16Engine16split_kernel_cpuE
N8Espresso13CPUFP16Engine19upsample_kernel_cpuE
N8Espresso4blobIfLi3EEE
NSt3__120__shared_ptr_emplaceIN8Espresso4blobItLi3EEENS_9allocatorIS3_EEEE
N8Espresso4blobItLi3EEE
N8Espresso6SerDes23serdes_object_json_objcE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes23serdes_object_json_objcENS_9allocatorIS3_EEEE
>N13EspressoLight17espresso_root_objE
N13EspressoLight13espresso_planE
NSt3__120__shared_ptr_emplaceIN8Espresso20espresso_plan_tracerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso32pass_multi_head_prune_undeclaredENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN13EspressoLight11plan_task_tENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10profiler_tENS_9allocatorIS2_EEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10engine_cpuENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso10BNNSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14QuantSimEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso14DummyMPSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso15DummyBNNSEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso21DummyMPSBuffersEngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso8IREngine6engineENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso12brick_kernelENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso23abstract_engine_factoryENS_9allocatorIS2_EEEE
N8Espresso6SerDes13layer_io_baseE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_12no_op_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_12no_op_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_convolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_convolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_lrn_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_lrn_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_pool_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_pool_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_softmax_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_softmax_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_inner_product_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_inner_product_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_38generic_inner_product_quantized_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_38generic_inner_product_quantized_kernelEEE
N8Espresso38generic_inner_product_quantized_kernelE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_upsample_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_upsample_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_elementwise_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_elementwise_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_split_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_split_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_deconvolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_deconvolution_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_convolution_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_convolution_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_39generic_convolution_weights_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_39generic_convolution_weights_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_pool_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_pool_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_concat_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_concat_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_softmax_loss_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_softmax_loss_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_activation_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_activation_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_activation_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_activation_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_bias_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_bias_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_bias_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_bias_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_batchnorm_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_batchnorm_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_batchnorm_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_batchnorm_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_l2_normalize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_l2_normalize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_l2_normalize_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_l2_normalize_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_inner_product_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_inner_product_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_41generic_inner_product_weights_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_41generic_inner_product_weights_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_elementwise_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_elementwise_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_dropout_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_dropout_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_dropout_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_dropout_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_axpby_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_axpby_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_load_constant_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_load_constant_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_context_transfer_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_context_transfer_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_reshape_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_reshape_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_tile_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_tile_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_reduce_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_reduce_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_rnn_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_rnn_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_rnn_arch_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_rnn_arch_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_general_padding_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_general_padding_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_transpose_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_transpose_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_flatten_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_flatten_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sequence_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sequence_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_sequence_reverse_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_sequence_reverse_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sequence_repeat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sequence_repeat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_crop_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_crop_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_35generic_prediction_smoothing_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_35generic_prediction_smoothing_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_space_to_depth_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_space_to_depth_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_slice_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_slice_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_broadcast_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_broadcast_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_cast_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_cast_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_compute_stats_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_compute_stats_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_lambda_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_lambda_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_patch_extractor_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_patch_extractor_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_crop_and_resize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_crop_and_resize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_dynamic_quantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_dynamic_quantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_dynamic_dequantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_dynamic_dequantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_quantized_gather_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_quantized_gather_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_34generic_spatial_transformer_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_34generic_spatial_transformer_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_cf_branch_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_cf_branch_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_jump_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_jump_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_call_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_call_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_cf_return_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_cf_return_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_get_shape_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_get_shape_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_topk_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_topk_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_gather_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_gather_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_general_concat_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_general_concat_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_alloc_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_alloc_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_load_global_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_load_global_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_store_global_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_store_global_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_cf_if_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_cf_if_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_loop_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_loop_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_cf_for_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_cf_for_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_cf_end_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_cf_end_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_cf_else_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_cf_else_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_copy_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_copy_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_scatter_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_scatter_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_load_random_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_load_random_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_20generic_range_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_20generic_range_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_batch_matmul_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_batch_matmul_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_matrix_band_part_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_matrix_band_part_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_fill_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_fill_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_tensor_zero_pad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_tensor_zero_pad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_squeeze_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_squeeze_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_expand_dims_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_expand_dims_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_array_gather_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_array_gather_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_multinomial_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_multinomial_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_instancenorm_1d_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_instancenorm_1d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_phi_virtual_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_phi_virtual_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_gumbel_max_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_gumbel_max_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_builtin_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_builtin_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_transplant_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_transplant_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_general_slice_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_general_slice_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_stack_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_stack_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_split_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_split_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_softmax_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_softmax_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_sliding_windows_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_sliding_windows_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_26generic_reverse_seq_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_26generic_reverse_seq_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_cross_entropy_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_cross_entropy_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_38generic_non_maximum_suppression_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_38generic_non_maximum_suppression_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_18generic_sgd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_18generic_sgd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_19generic_adam_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_19generic_adam_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_24generic_gather_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_24generic_gather_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_25generic_scatter_nd_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_25generic_scatter_nd_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_nonzero_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_nonzero_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_34generic_precompiled_segment_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_34generic_precompiled_segment_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_one_hot_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_one_hot_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_cumsum_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_cumsum_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_dev_op_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_dev_op_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_35generic_sparse_inner_product_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_35generic_sparse_inner_product_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_28generic_grid_sampling_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_28generic_grid_sampling_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_local_correlation_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_local_correlation_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_bahdanau_attention_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_bahdanau_attention_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_29generic_self_attention_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_29generic_self_attention_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_loopkit_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_loopkit_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_pool3d_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_pool3d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_41generic_hierarchical_inner_product_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_41generic_hierarchical_inner_product_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_21generic_conv3d_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_21generic_conv3d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_22generic_argsort_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_22generic_argsort_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_27generic_slice_update_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_27generic_slice_update_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_30generic_static_quantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_30generic_static_quantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_32generic_static_dequantize_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_32generic_static_dequantize_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_37generic_fused_convolution_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_37generic_fused_convolution_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_39generic_fused_inner_product_grad_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_39generic_fused_inner_product_grad_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_23generic_deconv3d_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_23generic_deconv3d_kernelEEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_33generic_wg_transform_4_in_kernel_EEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_33generic_wg_transform_4_in_kernel_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_34generic_wg_transform_4_out_kernel_EEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_34generic_wg_transform_4_out_kernel_EEE
NSt3__120__shared_ptr_emplaceIN8Espresso6SerDes8layer_ioINS1_31generic_meta_convolution_kernelEEENS_9allocatorIS5_EEEE
N8Espresso6SerDes8layer_ioINS_31generic_meta_convolution_kernelEEE
N8Espresso14rnn_kernel_cpuE
N8Espresso44pass_update_absolute_indexes_after_transformE
N8Espresso48analysis_update_absolute_indexes_after_transformE
N13EspressoLight14espresso_errorE
N13EspressoLight22abstract_espresso_planE
?N8Espresso17reduce_kernel_cpuE
NSt3__110__function6__funcIZNK8Espresso11basic_block31is_blob_defined_in_predecessorsERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_13unordered_mapIS9_PS3_NS_4hashIS9_EENS_8equal_toIS9_EENS7_INS_4pairISA_SD_EEEEEEE3$_0NS7_ISO_EEFvRKNS3_11walk_statusEEEE
NSt3__110__function6__baseIFvRKN8Espresso11basic_block11walk_statusEEEE
ZNK8Espresso11basic_block31is_blob_defined_in_predecessorsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_13unordered_mapIS7_PS0_NS1_4hashIS7_EENS1_8equal_toIS7_EENS5_INS1_4pairIS8_SB_EEEEEEE3$_0
N8Espresso14factory_objectE
N8Espresso17generic_factory_tE
N8Espresso23graph_optimization_ruleE
N8Espresso30graph_optimization_rule_simpleE
N8Espresso23rule_convolution_groupsE
N8Espresso30graph_optimization_rule_statusE
N8Espresso23rule_convolution_groups8status_tE
NSt3__120__shared_ptr_emplaceIN8Espresso23rule_convolution_groups8status_tENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18sequential_builderENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso30graph_optimization_rule_statusENS_9allocatorIS2_EEEE
N8Espresso18pass_reset_pre_ssaE
N8Espresso22analysis_reset_pre_ssaE
N8Espresso37hierarchical_inner_product_kernel_cpuE
NSt3__120__shared_ptr_emplaceIN8Espresso13network_shapeENS_9allocatorIS2_EEEE
?N8Espresso15pass_allocationE
N8Espresso19analysis_allocationE
N8Espresso24pass_re_lower_to_networkE
N8Espresso28analysis_re_lower_to_networkE
N@N8Espresso5layerE
N8Espresso21sgd_optimizer_builderE
N8Espresso17optimizer_builderE
N8Espresso22adam_optimizer_builderE
NSt3__120__shared_ptr_emplaceINS_19basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_emplaceIN8Espresso17blob_storage_mmapENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso34pass_constant_if_conditions_resultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso31analysis_multi_head_program_genENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso5layerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso18pass_reset_pre_ssaENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso27pass_multi_head_program_genENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso3net31info_needed_to_reload_network_tENS_9allocatorIS3_EEEE
N8Espresso9factory_tINS_6SerDes21generic_serdes_objectEEE
NSt3__120__shared_ptr_emplaceIN8Espresso9factory_tINS1_6SerDes21generic_serdes_objectEEENS_9allocatorIS5_EEEE
NSt3__120__shared_ptr_emplaceIN8Espresso3netENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN8Espresso19dump_network_layersENS_10shared_ptrINS2_3netEEEiRNS2_31dump_network_layers_blobs_stateERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEE3$_2NSB_ISG_EEFvRNS_4pairISD_NS3_INS2_23abstract_blob_containerEEEEEEEE
ZN8Espresso19dump_network_layersENSt3__110shared_ptrINS_3netEEEiRNS_31dump_network_layers_blobs_stateERKNS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEE3$_2
N3MIL7IRBlockE
NSt3__114default_deleteIN3MIL11IROperationEEE
NSt3__120__shared_ptr_pointerIPN3MIL11IROperationENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN3MIL7IRScopeEEE
NSt3__120__shared_ptr_pointerIPN3MIL7IRScopeENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
N12_GLOBAL__N_111IRBlockImplE
N3MIL7IRScopeE
N12_GLOBAL__N_111IRScopeImplE
NSt3__114default_deleteIN3MIL7IRBlockEEE
NSt3__120__shared_ptr_pointerIPN3MIL7IRBlockENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__117bad_function_callE
ZN3MIL6Passes21FlattenBlockNamespace3RunERKNS_7IRBlockEE3$_1
NSt3__110__function6__funcIZN3MIL6Passes21FlattenBlockNamespace3RunERKNS2_7IRBlockEE3$_1NS_9allocatorIS8_EEFNS_10unique_ptrIS5_NS_14default_deleteIS5_EEEES7_EEE
NSt3__110__function6__baseIFNS_10unique_ptrIN3MIL7IRBlockENS_14default_deleteIS4_EEEERKS4_EEE
N3MIL6Passes21FlattenBlockNamespaceE
NSt3__114default_deleteIKN3MIL11IRListValueIxEEEE
NSt3__120__shared_ptr_pointerIPKN3MIL11IRListValueIxEENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIKN3MIL11IRListValueIiEEEE
NSt3__120__shared_ptr_pointerIPKN3MIL11IRListValueIiEENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIKN3MIL11IRListValueIdEEEE
NSt3__120__shared_ptr_pointerIPKN3MIL11IRListValueIdEENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIKN3MIL11IRListValueIfEEEE
NSt3__120__shared_ptr_pointerIPKN3MIL11IRListValueIfEENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIKN3MIL11IRListValueINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEEE
NSt3__120__shared_ptr_pointerIPKN3MIL11IRListValueINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS_14default_deleteISA_EENS6_ISA_EEEE
NSt3__114default_deleteIKN3MIL11IRListValueIbEEEE
NSt3__120__shared_ptr_pointerIPKN3MIL11IRListValueIbEENS_14default_deleteIS4_EENS_9allocatorIS4_EEEE
NSt3__114default_deleteIKN3MIL12IRTupleValueEEE
NSt3__120__shared_ptr_pointerIPKN3MIL12IRTupleValueENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIKN3MIL7IRValueEEE
NSt3__120__shared_ptr_pointerIPKN3MIL7IRValueENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN3MIL11IRFileValueEEE
NSt3__120__shared_ptr_pointerIPN3MIL11IRFileValueENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
PFN3MIL16ValidationResultERKNS_11IROperationEE
FN3MIL16ValidationResultERKNS_11IROperationEE
NSt3__110__function6__funcIPFN3MIL16ValidationResultERKNS2_11IROperationEENS_9allocatorIS8_EES7_EE
NSt3__110__function6__baseIFN3MIL16ValidationResultERKNS2_11IROperationEEEE
NSt3__114default_deleteIN3MIL11IRParameterEEE
NSt3__120__shared_ptr_pointerIPN3MIL11IRParameterENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
PFN6CoreML6ResultERKNS_13Specification5ModelERKN3MIL11IROperationEE
FN6CoreML6ResultERKNS_13Specification5ModelERKN3MIL11IROperationEE
NSt3__110__function6__funcIPFN6CoreML6ResultERKNS2_13Specification5ModelERKN3MIL11IROperationEENS_9allocatorISD_EESC_EE
NSt3__110__function6__baseIFN6CoreML6ResultERKNS2_13Specification5ModelERKN3MIL11IROperationEEEE
PFbRKN3MIL11IROperationEE
FbRKN3MIL11IROperationEE
NSt3__110__function6__funcIPFbRKN3MIL11IROperationEENS_9allocatorIS7_EES6_EE
NSt3__110__function6__baseIFbRKN3MIL11IROperationEEEE
N3MIL15ValidationErrorE
NSt3__114default_deleteIN3MIL10MILContextEEE
NSt3__114default_deleteIN3MIL10IRFunctionEEE
NSt3__120__shared_ptr_pointerIPN3MIL10IRFunctionENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
N3MIL4PassE
N3MIL9IRProgramE
N12_GLOBAL__N_113IRProgramImplE
N3MIL11IROperationE
N12_GLOBAL__N_115IROperationImplE
NSt3__114default_deleteIKN3MIL7IRScopeEEE
NSt3__120__shared_ptr_pointerIPKN3MIL7IRScopeENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
N3MIL11IRDimensionE
N3MIL19IRConstantDimensionE
N3MIL19IRSymbolicDimensionE
N3MIL11IRValueTypeE
N3MIL17IRTensorValueTypeE
N3MIL15IRListValueTypeE
NSt3__123enable_shared_from_thisIN3MIL15IRListValueTypeEEE
N3MIL16IRTupleValueTypeE
N3MIL21IRDictionaryValueTypeE
NSt3__123enable_shared_from_thisIN3MIL21IRDictionaryValueTypeEEE
N12_GLOBAL__N_123IRConstantDimensionImplE
N12_GLOBAL__N_123IRSymbolicDimensionImplE
N12_GLOBAL__N_121IRTensorValueTypeImplE
NSt3__114default_deleteINS_6vectorIPKN3MIL11IRDimensionENS_9allocatorIS5_EEEEEE
NSt3__120__shared_ptr_pointerIPNS_6vectorIPKN3MIL11IRDimensionENS_9allocatorIS5_EEEENS_14default_deleteIS8_EENS6_IS8_EEEE
N12_GLOBAL__N_119IRListValueTypeImplE
N12_GLOBAL__N_120IRTupleValueTypeImplE
N12_GLOBAL__N_125IRDictionaryValueTypeImplE
N3MIL10MILContextE
N12_GLOBAL__N_114MILContextImplE
NSt3__114default_deleteINS_6vectorIPKN3MIL11IRValueTypeENS_9allocatorIS5_EEEEEE
NSt3__120__shared_ptr_pointerIPNS_6vectorIPKN3MIL11IRValueTypeENS_9allocatorIS5_EEEENS_14default_deleteIS8_EENS6_IS8_EEEE
N3MIL11IRParameterE
N3MIL10IROperatorE
15IRParameterImpl
NSt3__120__shared_ptr_emplaceINS_13unordered_setIPKN3MIL11IRValueTypeENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEEENSA_ISC_EEEE
NSt3__114default_deleteINS_13unordered_mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN3MIL11IRParameterEEENS_4hashIS7_EENS_8equal_toIS7_EENS5_INS_4pairIKS7_SB_EEEEEEEE
NSt3__120__shared_ptr_pointerIPNS_13unordered_mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN3MIL11IRParameterEEENS_4hashIS7_EENS_8equal_toIS7_EENS5_INS_4pairIKS7_SB_EEEEEENS_14default_deleteISK_EENS5_ISK_EEEE
14IROperatorImpl
NSt3__120__shared_ptr_emplaceINS_13unordered_mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN3MIL11IRParameterEEENS_4hashIS7_EENS_8equal_toIS7_EENS5_INS_4pairIKS7_SB_EEEEEENS5_ISK_EEEE
NSt3__121__basic_string_commonILb1EEE
N6google8protobuf8internal29InternalMetadataWithArenaBaseINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_29InternalMetadataWithArenaLiteEE9ContainerE
N6CoreML13Specification2V59ListValueE
N6CoreML13Specification2V59ValueTypeE
N6CoreML13Specification2V59DimensionE
N6CoreML13Specification2V510TupleValueE
N6CoreML13Specification2V511TensorValueE
N6CoreML13Specification2V527TensorValue_RepeatedStringsE
N6CoreML13Specification2V525TensorValue_RepeatedBoolsE
N6CoreML13Specification2V524TensorValue_RepeatedIntsE
N6CoreML13Specification2V526TensorValue_RepeatedFloatsE
N6CoreML13Specification2V520Value_ImmediateValueE
N6CoreML13Specification2V514DictionaryTypeE
N6CoreML13Specification2V58ListTypeE
N6CoreML13Specification2V59TupleTypeE
N6CoreML13Specification2V510TensorTypeE
N6CoreML13Specification2V514NamedValueTypeE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN6CoreML13Specification2V55ValueEE8InnerMapE
N6google8protobuf4hashINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_E8InnerMapE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_LNS1_14WireFormatLite9FieldTypeE9ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_LNS1_14WireFormatLite9FieldTypeE9ELSC_9ELi0EEENS0_11MessageLiteESA_SA_LSC_9ELSC_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_LNS1_14WireFormatLite9FieldTypeE9ELSC_9ELi0EEENS0_11MessageLiteESA_SA_LSC_9ELSC_9ELi0EE15MapEntryWrapperE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6CoreML13Specification2V55ValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification2V55ValueELNS1_14WireFormatLite9FieldTypeE9ELSG_11ELi0EEENS0_11MessageLiteESA_SE_LSG_9ELSG_11ELi0EEE
N6CoreML13Specification2V55BlockE
N6CoreML13Specification2V59OperationE
N6CoreML13Specification2V58FunctionE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification2V58FunctionELNS1_14WireFormatLite9FieldTypeE9ELSG_11ELi0EEENS0_11MessageLiteESA_SE_LSG_9ELSG_11ELi0EEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6CoreML13Specification2V58FunctionELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEE
N6CoreML13Specification2V515Value_FileValueE
N6CoreML13Specification2V55ValueE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification2V55ValueELNS1_14WireFormatLite9FieldTypeE9ELSG_11ELi0EEENS0_11MessageLiteESA_SE_LSG_9ELSG_11ELi0EE15MapEntryWrapperE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification2V58FunctionELNS1_14WireFormatLite9FieldTypeE9ELSG_11ELi0EEENS0_11MessageLiteESA_SE_LSG_9ELSG_11ELi0EE15MapEntryWrapperE
N6CoreML13Specification2V57ProgramE
N3MIL10IRFunctionE
N12_GLOBAL__N_114IRFunctionImplE
N6CoreML3MIL6Opsets12CoreML4OpsetE
N3MIL11PassManagerE
15PassManagerImpl
N3MIL7IRValueE
N3MIL13IRTensorValueIfEE
N3MIL13IRTensorValueIbEE
N3MIL13IRTensorValueINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
N3MIL12IRTupleValueE
N3MIL11IRListValueIfEE
N3MIL11IRListValueIdEE
N3MIL11IRListValueIiEE
N3MIL11IRListValueIbEE
N3MIL11IRFileValueE
N3MIL7IROpsetE
N6CoreML13Specification18CategoricalMappingE
N6CoreML13Specification18FeatureDescriptionE
N6CoreML13Specification16ModelDescriptionE
N6CoreML13Specification8MetadataE
N6CoreML13Specification17PipelineRegressorE
N6CoreML13Specification18PipelineClassifierE
N6CoreML13Specification15SerializedModelE
N6CoreML13Specification5ModelE
N6CoreML13Specification8PipelineE
N6CoreML5ModelE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
NSt3__114default_deleteIN6CoreML13Specification5ModelEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification5ModelENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEEE
N6CoreML13Specification8IdentityE
N6CoreML13Specification12CoreMLModels18VisionFeaturePrintE
N6CoreML13Specification12CoreMLModels26VisionFeaturePrint_ObjectsE
N6CoreML13Specification12CoreMLModels24VisionFeaturePrint_SceneE
N6CoreML13Specification13OneHotEncoderE
N6CoreML13Specification12CoreMLModels14TextClassifierE
N6CoreML13Specification6ScalerE
N6CoreML19HashOutputStreamBufE
NSt3__114default_deleteIN6CoreML6detail23HashOutputStreamBufImplEEE
NSt3__120__shared_ptr_pointerIPN6CoreML6detail23HashOutputStreamBufImplENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
N6CoreML13Specification12CoreMLModels26SoundAnalysisPreprocessingE
N6CoreML13Specification12CoreMLModels33SoundAnalysisPreprocessing_VggishE
N6CoreML13Specification13GLMClassifierE
N6CoreML13Specification25GLMClassifier_DoubleArrayE
N6CoreML13Specification7ImputerE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueEE8InnerMapE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueELNS1_14WireFormatLite9FieldTypeE9ELSE_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EE15MapEntryWrapperE
N6CoreML13Specification11CustomModelE
N6CoreML13Specification33CustomModel_CustomModelParamValueE
N6CoreML13Specification12CoefficientsE
N6CoreML13Specification11DenseVectorE
N6CoreML13Specification10SparseNodeE
N6CoreML13Specification12SparseVectorE
N6CoreML13Specification23SupportVectorClassifierE
N6CoreML13Specification22SupportVectorRegressorE
N6CoreML13Specification19DenseSupportVectorsE
N6CoreML13Specification20SparseSupportVectorsE
N6CoreML13Specification6KernelE
N6CoreML13Specification13SigmoidKernelE
N6CoreML13Specification10PolyKernelE
N6CoreML13Specification9RBFKernelE
N6CoreML13Specification12LinearKernelE
N6CoreML13Specification12CoreMLModels9GazetteerE
N6CoreML13Specification10NormalizerE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSC_3ELi0EEENS0_11MessageLiteESA_xLSC_9ELSC_3ELi0EEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSB_3ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSC_3ELi0EEENS0_11MessageLiteESA_xLSC_9ELSC_3ELi0EE15MapEntryWrapperE
N6CoreML13Specification11DoubleRangeE
N6CoreML13Specification8Int64SetE
N6CoreML13Specification10Int64RangeE
N6CoreML13Specification12DoubleVectorE
N6CoreML13Specification11FloatVectorE
N6CoreML13Specification11Int64VectorE
N6CoreML13Specification12StringVectorE
N6google8protobuf8internal12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS4_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS5_1ELi0EEENS0_11MessageLiteExdLS5_3ELS5_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS5_1ELi0EEENS0_11MessageLiteExdLS5_3ELS5_1ELi0EE15MapEntryWrapperE
N6CoreML13Specification16Int64ToDoubleMapE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSB_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSC_1ELi0EEENS0_11MessageLiteESA_dLSC_9ELSC_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSC_1ELi0EEENS0_11MessageLiteESA_dLSC_9ELSC_1ELi0EE15MapEntryWrapperE
N6CoreML13Specification17StringToDoubleMapE
N6google8protobuf8internal12MapEntryLiteIxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSC_9ELi0EEENS0_11MessageLiteExSA_LSC_3ELSC_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSC_9ELi0EEENS0_11MessageLiteExSA_LSC_3ELSC_9ELi0EE15MapEntryWrapperE
N6CoreML13Specification16Int64ToStringMapE
N6CoreML13Specification16StringToInt64MapE
N6CoreML13Specification42BayesianProbitRegressor_FeatureValueWeightE
N6CoreML13Specification37BayesianProbitRegressor_FeatureWeightE
N6CoreML13Specification23BayesianProbitRegressorE
N6CoreML13Specification32BayesianProbitRegressor_GaussianE
N6CoreML13Specification12CoreMLModels13WordEmbeddingE
N6CoreML13Specification13BoolParameterE
N6CoreML13Specification15StringParameterE
N6CoreML13Specification15DoubleParameterE
N6CoreML13Specification14Int64ParameterE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles13_TreeEnsembleENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles20_TreeComputationNodeENS_9allocatorIS3_EEEE
N6CoreML13Specification21NonMaximumSuppressionE
N6CoreML13Specification29NonMaximumSuppression_PickTopE
N6CoreML13Specification38ItemSimilarityRecommender_SimilarItemsE
N6CoreML13Specification25ItemSimilarityRecommenderE
N6CoreML13Specification39ItemSimilarityRecommender_ConnectedItemE
N6CoreML13Specification17FeatureVectorizerE
N6CoreML13Specification29FeatureVectorizer_InputColumnE
N6CoreML13Specification12CoreMLModels10WordTaggerE
N6CoreML13Specification31TreeEnsembleParameters_TreeNodeE
N6CoreML13Specification21TreeEnsembleRegressorE
N6CoreML13Specification22TreeEnsembleClassifierE
N6CoreML13Specification22TreeEnsembleParametersE
N6CoreML13Specification46TreeEnsembleParameters_TreeNode_EvaluationInfoE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification11FeatureTypeENS_9allocatorIS3_EEEE
N6CoreML13Specification14DictVectorizerE
N6CoreML13Specification39CustomLayerParams_CustomLayerParamValueE
N6CoreML13Specification13AdamOptimizerE
N6CoreML13Specification12SGDOptimizerE
N6CoreML13Specification9OptimizerE
N6CoreML13Specification25MeanSquaredErrorLossLayerE
N6CoreML13Specification32CategoricalCrossEntropyLossLayerE
N6CoreML13Specification9LossLayerE
N6CoreML13Specification23NetworkUpdateParametersE
N6CoreML13Specification26NeuralNetworkPreprocessingE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSE_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EEE
N6CoreML13Specification12WeightParamsE
N6CoreML13Specification16LSTMWeightParamsE
N6CoreML13Specification16ActivationParamsE
N6CoreML13Specification23BorderAmounts_EdgeSizesE
N6CoreML13Specification6TensorE
N6CoreML13Specification18NeuralNetworkLayerE
N6CoreML13Specification22NeuralNetworkRegressorE
N6CoreML13Specification17CumSumLayerParamsE
N6CoreML13Specification17OneHotLayerParamsE
N6CoreML13Specification23NeuralNetworkClassifierE
N6CoreML13Specification22SliceBySizeLayerParamsE
N6CoreML13Specification18ArgSortLayerParamsE
N6CoreML13Specification22ClampedReLULayerParamsE
N6CoreML13Specification32NonMaximumSuppressionLayerParamsE
N6CoreML13Specification29LayerNormalizationLayerParamsE
N6CoreML13Specification25SlidingWindowsLayerParamsE
N6CoreML13Specification23RangeDynamicLayerParamsE
N6CoreML13Specification22RangeStaticLayerParamsE
N6CoreML13Specification15GeluLayerParamsE
N6CoreML13Specification14ErfLayerParamsE
N6CoreML13Specification19GetShapeLayerParamsE
N6CoreML13Specification15TileLayerParamsE
N6CoreML13Specification23SliceDynamicLayerParamsE
N6CoreML13Specification22SliceStaticLayerParamsE
N6CoreML13Specification15ClipLayerParamsE
N6CoreML13Specification15SignLayerParamsE
N6CoreML13Specification16FloorLayerParamsE
N6CoreML13Specification16RoundLayerParamsE
N6CoreML13Specification15CeilLayerParamsE
N6CoreML13Specification18SplitNDLayerParamsE
N6CoreML13Specification17ArgMinLayerParamsE
N6CoreML13Specification17ArgMaxLayerParamsE
N6CoreML13Specification15TopKLayerParamsE
N6CoreML13Specification18SqueezeLayerParamsE
N6CoreML13Specification25ReshapeDynamicLayerParamsE
N6CoreML13Specification22ReshapeLikeLayerParamsE
N6CoreML13Specification24ReshapeStaticLayerParamsE
N6CoreML13Specification22FlattenTo2DLayerParamsE
N6CoreML13Specification21ExpandDimsLayerParamsE
N6CoreML13Specification26ReduceLogSumExpLayerParamsE
N6CoreML13Specification26ReduceSumSquareLayerParamsE
N6CoreML13Specification23ReduceLogSumLayerParamsE
N6CoreML13Specification21ReduceMeanLayerParamsE
N6CoreML13Specification21ReduceProdLayerParamsE
N6CoreML13Specification20ReduceSumLayerParamsE
N6CoreML13Specification20ReduceMinLayerParamsE
N6CoreML13Specification20ReduceMaxLayerParamsE
N6CoreML13Specification19ReduceL2LayerParamsE
N6CoreML13Specification19ReduceL1LayerParamsE
N6CoreML13Specification34CategoricalDistributionLayerParamsE
N6CoreML13Specification33RandomBernoulliDynamicLayerParamsE
N6CoreML13Specification32RandomBernoulliStaticLayerParamsE
N6CoreML13Specification30RandomBernoulliLikeLayerParamsE
N6CoreML13Specification31RandomUniformDynamicLayerParamsE
N6CoreML13Specification30RandomUniformStaticLayerParamsE
N6CoreML13Specification28RandomUniformLikeLayerParamsE
N6CoreML13Specification30RandomNormalDynamicLayerParamsE
N6CoreML13Specification29RandomNormalStaticLayerParamsE
N6CoreML13Specification27RandomNormalLikeLayerParamsE
N6CoreML13Specification26ConstantPaddingLayerParamsE
N6CoreML13Specification32RankPreservingReshapeLayerParamsE
N6CoreML13Specification16StackLayerParamsE
N6CoreML13Specification27ScatterAlongAxisLayerParamsE
N6CoreML13Specification26GatherAlongAxisLayerParamsE
N6CoreML13Specification20ScatterNDLayerParamsE
N6CoreML13Specification19GatherNDLayerParamsE
N6CoreML13Specification18ScatterLayerParamsE
N6CoreML13Specification17GatherLayerParamsE
N6CoreML13Specification30DivideBroadcastableLayerParamsE
N6CoreML13Specification32MultiplyBroadcastableLayerParamsE
N6CoreML13Specification32SubtractBroadcastableLayerParamsE
N6CoreML13Specification32FloorDivBroadcastableLayerParamsE
N6CoreML13Specification27ModBroadcastableLayerParamsE
N6CoreML13Specification27MinBroadcastableLayerParamsE
N6CoreML13Specification27MaxBroadcastableLayerParamsE
N6CoreML13Specification27AddBroadcastableLayerParamsE
N6CoreML13Specification29BroadcastToDynamicLayerParamsE
N6CoreML13Specification28BroadcastToStaticLayerParamsE
N6CoreML13Specification26BroadcastToLikeLayerParamsE
N6CoreML13Specification26LowerTriangularLayerParamsE
N6CoreML13Specification26UpperTriangularLayerParamsE
N6CoreML13Specification25MatrixBandPartLayerParamsE
N6CoreML13Specification23WhereNonZeroLayerParamsE
N6CoreML13Specification15Exp2LayerParamsE
N6CoreML13Specification27PowBroadcastableLayerParamsE
N6CoreML13Specification16AtanhLayerParamsE
N6CoreML13Specification16AcoshLayerParamsE
N6CoreML13Specification16AsinhLayerParamsE
N6CoreML13Specification15TanhLayerParamsE
N6CoreML13Specification15CoshLayerParamsE
N6CoreML13Specification15SinhLayerParamsE
N6CoreML13Specification15AtanLayerParamsE
N6CoreML13Specification15AcosLayerParamsE
N6CoreML13Specification15AsinLayerParamsE
N6CoreML13Specification14TanLayerParamsE
N6CoreML13Specification14CosLayerParamsE
N6CoreML13Specification14SinLayerParamsE
N6CoreML13Specification29WhereBroadcastableLayerParamsE
N6CoreML13Specification22FillDynamicLayerParamsE
N6CoreML13Specification21FillStaticLayerParamsE
N6CoreML13Specification19FillLikeLayerParamsE
N6CoreML13Specification25LoadConstantNDLayerParamsE
N6CoreML13Specification21ReverseSeqLayerParamsE
N6CoreML13Specification18ReverseLayerParamsE
N6CoreML13Specification20SoftmaxNDLayerParamsE
N6CoreML13Specification19ConcatNDLayerParamsE
N6CoreML13Specification24BatchedMatMulLayerParamsE
N6CoreML13Specification20TransposeLayerParamsE
N6CoreML13Specification17CustomLayerParamsE
N6CoreML13Specification28BiDirectionalLSTMLayerParamsE
N6CoreML13Specification29UniDirectionalLSTMLayerParamsE
N6CoreML13Specification10LSTMParamsE
N6CoreML13Specification14GRULayerParamsE
N6CoreML13Specification26SimpleRecurrentLayerParamsE
N6CoreML13Specification25SequenceRepeatLayerParamsE
N6CoreML13Specification32MeanVarianceNormalizeLayerParamsE
N6CoreML13Specification21DotProductLayerParamsE
N6CoreML13Specification14MinLayerParamsE
N6CoreML13Specification14MaxLayerParamsE
N6CoreML13Specification18AverageLayerParamsE
N6CoreML13Specification15CropLayerParamsE
N6CoreML13Specification17ReduceLayerParamsE
N6CoreML13Specification16SliceLayerParamsE
N6CoreML13Specification25ReorganizeDataLayerParamsE
N6CoreML13Specification18PermuteLayerParamsE
N6CoreML13Specification18ReshapeLayerParamsE
N6CoreML13Specification18FlattenLayerParamsE
N6CoreML13Specification22L2NormalizeLayerParamsE
N6CoreML13Specification23LoadConstantLayerParamsE
N6CoreML13Specification16ScaleLayerParamsE
N6CoreML13Specification15BiasLayerParamsE
N6CoreML13Specification21CropResizeLayerParamsE
N6CoreML13Specification25ResizeBilinearLayerParamsE
N6CoreML13Specification19UpsampleLayerParamsE
N6CoreML13Specification24UnaryFunctionLayerParamsE
N6CoreML13Specification19MultiplyLayerParamsE
N6CoreML13Specification14AddLayerParamsE
N6CoreML13Specification16SplitLayerParamsE
N6CoreML13Specification18SoftmaxLayerParamsE
N6CoreML13Specification14LRNLayerParamsE
N6CoreML13Specification17ConcatLayerParamsE
N6CoreML13Specification18PaddingLayerParamsE
N6CoreML13Specification37PaddingLayerParams_PaddingReplicationE
N6CoreML13Specification36PaddingLayerParams_PaddingReflectionE
N6CoreML13Specification34PaddingLayerParams_PaddingConstantE
N6CoreML13Specification26GlobalPooling3DLayerParamsE
N6CoreML13Specification20Pooling3DLayerParamsE
N6CoreML13Specification18PoolingLayerParamsE
N6CoreML13Specification39PoolingLayerParams_ValidCompletePaddingE
N6CoreML13Specification20BatchnormLayerParamsE
N6CoreML13Specification22EmbeddingNDLayerParamsE
N6CoreML13Specification20EmbeddingLayerParamsE
N6CoreML13Specification23InnerProductLayerParamsE
N6CoreML13Specification24Convolution3DLayerParamsE
N6CoreML13Specification22ConvolutionLayerParamsE
N6CoreML13Specification29LookUpTableQuantizationParamsE
N6CoreML13Specification24LinearQuantizationParamsE
N6CoreML13Specification18QuantizationParamsE
N6CoreML13Specification18BoxCoordinatesModeE
N6CoreML13Specification12SamplingModeE
N6CoreML13Specification11SamePaddingE
N6CoreML13Specification12ValidPaddingE
N6CoreML13Specification13BorderAmountsE
N6CoreML13Specification21LogicalNotLayerParamsE
N6CoreML13Specification21LogicalXorLayerParamsE
N6CoreML13Specification20LogicalOrLayerParamsE
N6CoreML13Specification21LogicalAndLayerParamsE
N6CoreML13Specification19NotEqualLayerParamsE
N6CoreML13Specification16EqualLayerParamsE
N6CoreML13Specification20LessEqualLayerParamsE
N6CoreML13Specification19LessThanLayerParamsE
N6CoreML13Specification23GreaterEqualLayerParamsE
N6CoreML13Specification22GreaterThanLayerParamsE
N6CoreML13Specification15CopyLayerParamsE
N6CoreML13Specification23LoopContinueLayerParamsE
N6CoreML13Specification20LoopBreakLayerParamsE
N6CoreML13Specification15LoopLayerParamsE
N6CoreML13Specification17BranchLayerParamsE
N6CoreML13Specification28ActivationParametricSoftplusE
N6CoreML13Specification18ActivationSoftplusE
N6CoreML13Specification18ActivationSoftsignE
N6CoreML13Specification25ActivationThresholdedReLUE
N6CoreML13Specification13ActivationELUE
N6CoreML13Specification15ActivationPReLUE
N6CoreML13Specification21ActivationSigmoidHardE
N6CoreML13Specification16ActivationLinearE
N6CoreML13Specification17ActivationSigmoidE
N6CoreML13Specification20ActivationScaledTanhE
N6CoreML13Specification14ActivationTanhE
N6CoreML13Specification19ActivationLeakyReLUE
N6CoreML13Specification14ActivationReLUE
N6CoreML13Specification22NeuralNetworkMeanImageE
N6CoreML13Specification24NeuralNetworkImageScalerE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EE15MapEntryWrapperE
N6CoreML13Specification13NeuralNetworkE
N6CoreML13Specification24SquaredEuclideanDistanceE
N6CoreML13Specification17SingleKdTreeIndexE
N6CoreML13Specification11LinearIndexE
N6CoreML13Specification16UniformWeightingE
N6CoreML13Specification21NearestNeighborsIndexE
N6CoreML13Specification24InverseDistanceWeightingE
N6CoreML13Specification27KNearestNeighborsClassifierE
N6CoreML13Specification15LinkedModelFileE
N6CoreML13Specification11LinkedModelE
N6CoreML13Specification21ArrayFeatureExtractorE
NSt3__113basic_fstreamIcNS_11char_traitsIcEEEE
N6CoreML13Specification12GLMRegressorE
N6CoreML13Specification24GLMRegressor_DoubleArrayE
N6CoreML13Specification9SizeRangeE
N6CoreML13Specification22ArrayFeatureType_ShapeE
N6CoreML13Specification26ImageFeatureType_ImageSizeE
N6CoreML13Specification11FeatureTypeE
N6CoreML13Specification19SequenceFeatureTypeE
N6CoreML13Specification21DictionaryFeatureTypeE
N6CoreML13Specification16ArrayFeatureTypeE
N6CoreML13Specification27ArrayFeatureType_ShapeRangeE
N6CoreML13Specification33ArrayFeatureType_EnumeratedShapesE
N6CoreML13Specification16ImageFeatureTypeE
N6CoreML13Specification31ImageFeatureType_ImageSizeRangeE
N6CoreML13Specification37ImageFeatureType_EnumeratedImageSizesE
N6CoreML13Specification17StringFeatureTypeE
N6CoreML13Specification17DoubleFeatureTypeE
N6CoreML13Specification16Int64FeatureTypeE
N6google8protobuf14FatalExceptionE
N6google8protobuf7ClosureE
N6google8protobuf8internal16FunctionClosure0E
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io25CopyingInputStreamAdaptorE
N6google8protobuf2io26CopyingOutputStreamAdaptorE
N6google8protobuf2io18CopyingInputStreamE
N6google8protobuf2io19CopyingOutputStreamE
N6google8protobuf2io19ZeroCopyInputStreamE
N6google8protobuf2io20ZeroCopyOutputStreamE
N6google8protobuf2io18IstreamInputStreamE
N6google8protobuf2io18IstreamInputStream25CopyingIstreamInputStreamE
N6google8protobuf2io19OstreamOutputStreamE
N6google8protobuf2io19OstreamOutputStream26CopyingOstreamOutputStreamE
N6google8protobuf11MessageLiteE
=n
?}
?}
?}
=q
=q
=q
=n
?}
3b
stringWithUTF8String:
registerBrickClass:
dictionaryWithObjects:forKeys:count:
initWithDictionary:
numberWithDouble:
numberWithInt:
numberWithLongLong:
numberWithBool:
setValue:forKey:
dataWithJSONObject:options:error:
initWithData:encoding:
UTF8String
hasDirectoryPath
path
stringWithFormat:
URLByDeletingLastPathComponent
sandboxExtensionPathsForModelURL:
coreChannel
hasPrefix:
IOErrorWithFormat:
initWithServiceName:
secureModelWithContentsOfURL:sandboxExtensionToken:configuration:internalSettings:decryptCredential:withReply:
securePredictionFromLazyFeatures:options:internalSettings:withReply:
securePredictionFromLazyBatch:options:internalSettings:withReply:
secureParameterValueForKey:withReply:
secureModelMLFeatureValue:withReply:
secureModelMLDictionaryFeatureProvider:withReply:
secureModelMLModelDescription:withReply:
secureModelMLFeatureDescription:withReply:
createPersistentKeyBlobForKeyID:usesCodeSigningIdentityForEncryption:completionBlock:
startDecryptionOfModelAtPath:usingKeyBlob:completionBlock:
stopDecryptionOfModelAtPath:completionBlock:
extractTeamIdentifierWithReply:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
clientFeatureValueForName:uniqueKeyForProvider:withReply:
clientFeatureNames:withReply:
setExportedInterface:
setExportedObject:
resume
synchronousRemoteObjectProxyWithErrorHandler:
sandboxExtensionTokenForModelURL:
globalSettings
setConnectionToModelSecurityService:
setSecureModelProxy:
hash
connectionToModelSecurityService
exportedObject
setServiceToClientQueue:
defaultConfiguration
modelWithContentsOfURL:configuration:decryptCredential:error:
numberWithUnsignedInteger:
serviceToClientQueue
featureProviderCount
addObject:
featureProviderMap
setObject:forKeyedSubscript:
secureModelProxy
countForObject:
removeObject:
removeObjectForKey:
defaultOptions
predictionFromFeatures:options:error:
count
arrayWithCapacity:
featuresAtIndex:
setObject:atIndexedSubscript:
objectAtIndexedSubscript:
predictionsFromBatch:options:error:
configuration
encodeObject:forKey:
modelDescription
initWithConfiguration:
decodeObjectOfClass:forKey:
setConfiguration:
setModelDescription:
invalidate
dealloc
modelWithContentsOfURL:decryptCredential:error:
supportsSecureCoding
predictionFromFeatures:error:
predictionsFromBatch:error:
executionSchedule
setModelPath:modelName:
modelPath
interface
metadata
encodeWithCoder:
initWithCoder:
parameterValueForKey:error:
.cxx_destruct
_connectionToModelSecurityService
_secureModelProxy
cryptoKey
encodeInteger:forKey:
init
decodeIntegerForKey:
setCryptoKey:
_cryptoKey
dictionary
objectForKeyedSubscript:
featureValueForName:
featureNames
setFeatureProviderMap:
setFeatureProviderCount:
_featureProviderMap
_featureProviderCount
_serviceToClientQueue
array
arrayWithObjects:count:
addObjectsFromArray:
allowedClasses
unionSet:
decodeObjectOfClasses:forKey:
initWithDictionaryFeatureProviderArray:
_array
numberWithUnsignedLongLong:
stringValue
fileURLWithPath:
URLByAppendingPathComponent:
defaultManager
fileExistsAtPath:
hashFileAt:error:
archiveModelDetails:withName:toArchive:error:
serializeMetadataAndInterfaceFromSpecification:archive:error:
sharedFeatureFlags
isNNv2Enabled
genericErrorWithFormat:
collectNNModelDetailsFromArchive:spec:error:
versionInfoWithMajor:minor:patch:variant:
compileSpecification:toArchive:options:error:
compiledVersionForSpecification:options:error:
resultWithOutputFiles:
classLabels
classifyTopK
classScoreVectorName
type
multiArrayValue
dataType
shape
initWithShape:dataType:error:
vectorizeIntoMultiArray:storageOrder:error:
dataPointer
initWithCapacity:
probabilityDictionaryForLabels:
replaceDoubleVectorWith:
copy
classLabelOfMaxProbability:
resultWithClassProbability:additionalFeatures:classLabelOfMaxProbability:
convertPredictionToClassifierResult:withOptions:error:
predictedClassFeatureDescription
classProbabilityFeatureDescription
asFeatureDictionaryWithPredictedClassDescription:classProbabilityDescription:
predictedFeatureName
resultWithValue:
containerClass
containerFromCompiledArchive:modelVersionInfo:compilerVersionInfo:configuration:error:
initWithContainer:configuration:error:
processInfo
globallyUniqueString
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
fileSystemRepresentation
loadModelFromCompiledArchive:modelVersionInfo:compilerVersionInfo:configuration:error:
usesCPUOnly
restrictNeuralNetworksToUseCPUOnly
computeUnits
_deallocContextAndPlan
_setupContextAndPlanWithForceCPU:error:
neuralNetworkFromContainer:configuration:error:
setClassScoreVectorName:
setClassLabels:
initWithContainer:error:
deviceHasANE
inputLayerNames
outputLayerNames
modelFilePath
imagePreprocessingParams
optionalInputDefaultValues
imageParameters
countByEnumeratingWithState:objects:count:
boolValue
floatValue
hasOptionalInputSequenceConcat
hasBidirectionalLayer
optionalInputTypes
ndArrayInterpretation
modelVersionInfo
allowBackgroundGPUCompute
transformDesc
initWithInterface:metadata:configuration:
collectParametersFromContainer:configuration:
_setupContextAndPlanWithConfiguration:error:
fillInInitialShapeFromEspressoNet:
mutableCopy
length
replaceOccurrencesOfString:withString:options:range:
container
modelIsEncrypted
dataWithBytesNoCopy:length:freeWhenDone:
JSONObjectWithData:options:error:
numInputs
inputLayers
intValue
_setupContextAndPlanWithConfiguration:usingCPU:error:
restrictNeuralNetworksFromUsingANE
_espressoDeviceForConfiguration:error:
allowLowPrecisionAccumulationOnGPU
enableTestVectorMode
customLayerErrorWithUnderlyingError:withFormat:
blobNameToLastPtrFlags
removeAllObjects
profilingOptions
setEspressoProfileInfo:
rebuildPlan:
evaluateInputs:options:error:
inputDescriptionsByName
isOptional
multiArrayConstraint
isAllowedValue:isNeuralNetworkInputOrOutput:usingRank5Mapping:featureName:error:
componentsJoinedByString:
errorWithDomain:code:userInfo:
imageConstraint
isAllowedValue:error:
objectForKey:
fillWithNumber:
featureValueWithMultiArray:
arrayWithArray:
initWithFeatureValueDictionary:
bindInputFeatures:bufferIndex:allocatedImageData:error:
bindOutputBuffers:outputBackings:automaticOutputBackingMode:error:
imageBufferValue
numberWithUnsignedLong:
initWithDataPointer:shape:dataType:strides:deallocator:error:
integerValue
copyIntoMultiArray:error:
unsignedIntValue
strides
name
isAllowedValue:
_espressoOutputShapeForFeatureName:matchesShapeOfMLMultiArray:
_setMultiArrayOutputBacking:forOutputFeatureName:toEbuf:error:
outputDescriptionsByName
tryToSetOutputBacking:forFeature:toEbuf:reportPointerFlags:error:
isEqual:
numberWithUnsignedInt:
verifyInputs:error:
resetSizes:error:
obtainBuffer
evaluateInputs:bufferIndex:options:error:
releaseBuffer:
shapeConstraint
populateShapeAndStrideFor:inputShape:outputShape:outputStrides:error:
majorVersion
shapeSet
enumerateObjectsUsingBlock:
stridesForShape:
populateMultiArrayShape:strides:forEbuf:featureDescription:ndArrayInterpretation:
initWithShape:dataType:storageOrder:bufferAlignment:
updateDynamicOutputBlobIndicatorCacheAndReturnError:
outputBackings
automaticOutputBackingMode
completeOutputBackings:automaticOutputBackingMode:error:
plan
executePlan:error:
unlockCVPixelBuffers:error:
bindDynamicOutputBuffers:error:
populateOutputs:outputBackings:error:
submitSemaphore
imageFeatureValueFromEbuf:backingCVPixelBuffer:description:error:
multiArrayFeatureValueFromEbuf:backingMultiArray:description:outputName:error:
renderToCVPixelBuffer:channelOrderIsBGR:error:
featureTypeErrorWithFormat:
sizeConstraint
allowedImageSizeClosestToPixelsWide:pixelsHigh:preferDownScaling:preferInputAspectRatio:
pixelsWide
pixelsHigh
pixelType
copyEbuf:ofPixelType:toPixelBuffer:error:
_pixelBufferFromEbuf:description:error:
featureValueWithPixelBuffer:
localizedDescription
pixelBufferGray8FromMultiArrayHW:error:
pixelBufferBGRA8FromMultiArrayCHW:channelOrderIsBGR:error:
allKeys
containsObject:
stringWithString:
appendString:
description
appendFormat:
getFeatureSize:ndArrayMode:
numberWithInteger:
setObject:forKey:
lazyBatchIndexIntoBatch:indices:error:
usingEspressoConfigurations
resetSizesWithEspressoConfigurations:error:
resetSizesNoAutoRelease:error:
network
engine
setIsANEPathForbidden:
setHardwareFallbackDetected:
_matchEngineToOptions:error:
addClassifierInformationToOutput:options:error:
predictionsFromLoopingOverBatch:model:options:error:
null
sortBatchByShape:withMap:error:
evaluateBatch:options:error:
unsignedIntegerValue
initWithFeatureProviderArray:
parameterErrorWithUnderlyingError:format:
espressoProfileInfo
layers
selected_runtime_engine
debug_name
initWithScheduledDevice:layerName:layerError:
scopedModelNames
initWithScopedModelAndLayerName:layerName:
addEntriesFromDictionary:
setModelExecutionSchedule:
modelExecutionSchedule
loadModelFromSpecification:configuration:error:
neuralNetworkFromContainer:error:
neuralNetworkFromContainer:classScoreVectorName:classLabels:error:
evaluate:error:
classify:options:error:
regress:options:error:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
sequenceConcatConsumesOptionalInputNamed:
sequenceNamed:
availableOutputBlobList
bindInputsAndOutputs:allocatedImageData:bufferIndex:error:
dumpTestVectorsToPath:
outputLayers
hardwareFallbackDetected
imagePreprocessingParameters
setImagePreprocessingParameters:
espressoInputShapes
setEspressoInputShapes:
espressoInputStrides
setEspressoInputStrides:
setNdArrayInterpretation:
numOutputs
usingCPU
setUsingCPU:
setPlan:
setNetwork:
precision
setPrecision:
setEngine:
setQos:
context
setContext:
isEspresoBiasPreprocessingShared
setIsEspresoBiasPreprocessingShared:
probDict
setProbDict:
setModelFilePath:
defaultOptionalValues
setDefaultOptionalValues:
setHasBidirectionalLayer:
setHasOptionalInputSequenceConcat:
bufferSemaphore
setBufferSemaphore:
espressoQueue
setEspressoQueue:
predictionsQueue
setPredictionsQueue:
setSubmitSemaphore:
isGPUPathForbidden
setIsGPUPathForbidden:
isANEPathForbidden
setContainer:
.cxx_construct
_inputBuffers
_outputBuffers
_params
_widths
_heights
_batches
_sequences
_ranks
_optionalInputTypes
_bufferAvailable
_flexibleShapesConfigNamesInNet
_currentConfigurationName
_OutputBlobIsDynamic
_hardwareFallbackDetected
_ndArrayInterpretation
_usingCPU
_isEspresoBiasPreprocessingShared
_hasBidirectionalLayer
_hasOptionalInputSequenceConcat
_isGPUPathForbidden
_isANEPathForbidden
_precision
_engine
_qos
_classLabels
_classScoreVectorName
_inputLayers
_outputLayers
_imagePreprocessingParameters
_espressoInputShapes
_espressoInputStrides
_modelVersionInfo
_numInputs
_numOutputs
_plan
_context
_probDict
_modelFilePath
_defaultOptionalValues
_bufferSemaphore
_espressoQueue
_predictionsQueue
_submitSemaphore
_blobNameToLastPtrFlags
_espressoProfileInfo
_container
_network
sharedHandle
allObjects
undefinedFeatureValueWithType:
featureNamesInBatch:
dictionaryFromBatch:featureNames:
setWithObjects:
dictionaryFromBatch:
featureDescriptionWithName:consistentWithFeatureValues:error:
featureProviderArrayFromBatch:
featureValueArrayForName:batch:error:
featureDescriptionsByNameForBatch:error:
lazyProviderWithFeaturesProvidedBy:addedToFeaturesProvidedBy:
initWithFeaturesFrom:addedToFeaturesFrom:error:
first
setFirst:
second
setSecond:
_first
_second
errorWithCode:format:
initWithBatch:startIndex:windowLength:error:
fullBatch
setFullBatch:
startIndex
setStartIndex:
windowLength
setWindowLength:
_fullBatch
_startIndex
_windowLength
initWithBatch:indices:error:
indices
setIndices:
_indices
providerWithSubsetOfFeaturesNamed:providedBy:
lazyBatchWindowIntoBatch:startIndex:windowLength:error:
lazyBatchWithFeaturesInBatch:addedToBatch:error:
batchFromConcatinatingBatches:
batchWithSubsetOfFeaturesNamed:fromBatch:
vectorizeFeaturesProvidedBy:featureNames:intoDoubleVector:length:stride:error:
vectorizeFeaturesNamed:fromBatch:intoRowsOfDoubleMatrix:error:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
featureTypeForValuesInArray:error:
errorWithCode:underlyingError:format:
featureValueOfType:fromObject:error:
initWithDictionary:error:
initWithModelDescription:parameterDictionary:error:
customModelWithName:modelDescription:parameterDictionary:error:
dataWithBytes:length:
initWithModelDescriptionSpecification:error:
parametersFromCustomModelSpec:error:
initWithModelDescription:customModel:configuration:
initWithDescription:configuration:
customModel
setCustomModel:
_customModel
renderToOneComponent8PixelBuffer:error:
isContiguousInOrder:
initWithShape:dataType:storageOrder:error:
numberWithLong:
renderTo32BGRAPixelBuffer:channelOrderIsBGR:error:
writeToFile:atomically:
initUnspecified
orderedSetWithArray:
valueWithRange:
rangeValue
enumeratedShapes
isAllowedShape:error:
canShapeArrayBePromotedFrom:to:
sizeRangeForDimension
initWithSizeRangeForDimension:
initWithEnumeratedShapes:
findAvailableShape:
_type
_sizeRangeForDimension
_shapeSet
deserializeMetadataAndInterfaceFromArchive:error:
initModelFromMetadataAndArchive:versionInfo:interface:metadata:configuration:error:
updateErrorWithFormat:
models
modelNames
parameters
deScopeParameters:byDeletingPrefixingScope:
setParameters:
loadUpdatableModelFromArchive:configuration:error:
replaceModelAtIndex:with:
updateParameterDescriptionsByKeyBasedOnSubModel
initFromCompiledArchive:modelVersionInfo:compilerVersionInfo:configuration:error:
setProgressHandlers:
setDispatchQueue:
setUpdateProgressHandlers:dispatchQueue:
updateModelWithData:
progressHandlers
dispatchQueue
dispatchTrainingCompletionHandlerWithError:onQueue:
resumeUpdate
resumeUpdateWithParameters:
cancelUpdate
writeToURL:error:
removeItemAtPath:error:
updatableModelIndicies
_progressHandlers
_dispatchQueue
_updatableModelIndicies
initWithKeyType:
isUndefined
dictionaryValue
descriptionForType:
allocWithZone:
keyType
constraintWithStringKeys
constraintWithInt64Keys
copyWithZone:
_keyType
numDimensions
numDataPoints
setNumDataPoints:
encodeInt64:forKey:
encodeBytes:length:forKey:
decodeInt64ForKey:
decodeBytesForKey:returnedLength:
containsValueForKey:
findNearestNeighbors:toQueryPoint:
updateWithData:error:
dataPointCount
initWithDataset:numberOfDimensions:
setNumDimensions:
vData
vDataL2Squared
_numDataPoints
_numDimensions
initWithUsesCPUOnly:
encodeBool:forKey:
maxComputationBatchSize
decodeBoolForKey:
setUsesCPUOnly:
setClassifyTopK:
setMaxComputationBatchSize:
setOutputBackings:
setAutomaticOutputBackingMode:
initWithUseCPUOnly:
useCPUOnly
setUseCPUOnly:
_usesCPUOnly
_classifyTopK
_outputBackings
_automaticOutputBackingMode
_maxComputationBatchSize
setRestrictNeuralNetworksFromUsingANE:
setRestrictNeuralNetworksToUseCPUOnly:
globalSettingsFromSettings:
isNeuralNetworkGPUPathForbidden
_restrictNeuralNetworksToUseCPUOnly
_restrictNeuralNetworksFromUsingANE
_isNeuralNetworkGPUPathForbidden
_modelExecutionSchedule
dictionaryWithCapacity:
featureTypeForObject:
setWithArray:
setDictionary:
_dictionary
initWithFeatureProvider:featureNames:
initWithFeatureProvider:
loadModelFromAssetAtURL:configuration:error:
checkResourceIsReachableAndReturnError:
isModelEncrypted:
usePreloadedKey
decryptSessionForModelAtURL:error:
loadModelFromAssetAtURL:configuration:loaderEvent:error:
setModelLoadError:
code
reporter
logMetric:
checkAssetPath:error:
createDecryptSessionForModelAtURL:configuration:decryptSession:error:
loadModelFromArchive:configuration:loaderEvent:error:
setDecryptSession:
modelDecryptionErrorWithUnderlyingError:format:
loadModelFromArchive:configuration:error:
codedObjectURLFromInputArchiver:
fileExistsAtPath:isDirectory:
initWithContentsOfURL:options:error:
unarchivedObjectOfClasses:fromData:error:
setModelURL:
extractAndSetModelDetailsFromArchive:
unarchiveCodedModelFrom:to:error:
setModelType:
sharedInstance
classForLoadingModelType:
deserializeVersionInfoFromArchive:error:
versionNumberString
setCompilerVersion:
setModelVersion:
loadFromModelSpecificationInArchive:withClass:versionInfo:configuration:error:
modelName
URLByDeletingPathExtension
lastPathComponent
setModelName:
setIsUpdatable:
setModelLoadTime:
setComputeUnits:
modelOriginNumberFromUserDefinedDictionary:
setModelOrigin:
mainBundle
bundleIdentifier
setBundleIdentifier:
setFirstPartyExecutable:
classForLoadingModelType:isUpdatable:
loadModelFromAssetAtURL:error:
loadUpdatableModelFromAssetAtURL:configuration:error:
loadModelFromArchive:error:
dryRun
setDryRun:
platform
setPlatform:
platformVersion
setPlatformVersion:
containerIsCloud
setContainerIsCloud:
encryptModel
setEncryptModel:
keyInfoVersion
setKeyInfoVersion:
keyID
setKeyID:
setKey:
usesCodeSigningIdentityForEncryption
setUsesCodeSigningIdentityForEncryption:
setIv:
sinf
setSinf:
mlsinf
setMlsinf:
_dryRun
_containerIsCloud
_encryptModel
_usesCodeSigningIdentityForEncryption
_platform
_platformVersion
_keyInfoVersion
_keyID
_key
_sinf
_mlsinf
setOutputFiles:
outputFiles
_outputFiles
stringByDeletingPathExtension
stringByAppendingPathExtension:
fingerprintSpecificationAtURL:toArchive:error:
encryptCompiledModelAtURL:options:error:
removeItemAtURL:error:
contentsOfDirectoryAtURL:error:
modelEncryptionErrorWithUnderlyingError:format:
encryptFileAtURL:options:error:
storeEncryptionInfoInCompiledArchive:options:error:
encryptFile:withKey:iv:saveToFile:error:
copyItemAtURL:toURL:error:
writeToURL:atomically:
initWithUUIDString:
addEncryptionHeaderToUnencryptedFile:saveToFile:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
serializeVersionInfo:archive:error:
classForCompilingModelType:
userInfo
serializeSpecification:toArchive:error:
versionForSerializedSpecification:options:error:
compileSpecificationAtURL:toURL:options:error:
versionInfo
compiledVersionForSpecificationAtURL:options:error:
dictionaryRepresentation
base64EncodedStringWithOptions:
codedObjectURLFromOutputArchiver:
initWithData:language:inputFeatureName:outputFeatureName:modelData:labelNames:metadata:error:
revision
setRevision:
language
setLanguage:
inputFeatureName
setInputFeatureName:
outputFeatureName
setOutputFeatureName:
modelParameterData
setModelParameterData:
labelNames
setLabelNames:
setMetadata:
_revision
_language
_inputFeatureName
_outputFeatureName
_modelParameterData
_labelNames
_metadata
isValid
initWithParameters:modelDescription:nlpHandle:configuration:error:
initializeGazetteerModelWithData:error:
predictLabelForWordString:inputString:error:
stringByAppendingString:
bytes
stringByAppendingFormat:
stringByReplacingCharactersInRange:withString:
saveAppleGazetteerModelToURL:gazetteerParameters:error:
gazetteerModel
_parameters
format
setFormat:
confidenceFeatureName
setConfidenceFeatureName:
coordinatesFeatureName
setCoordinatesFeatureName:
_format
_confidenceFeatureName
_coordinatesFeatureName
lastObject
objectBoundingBoxOutputDescription
initWithArray:type:
encodeInt:forKey:
values
decodeIntForKey:
emptySequenceWithType:
sequenceFromArray:error:
sequenceWithStringArray:
sequenceWithInt64Array:
stringValues
int64Values
_values
initWrappingSequence:
objectAtIndex:
sequence
_sequence
featureValues
initWithMajor:minor:patch:variant:
scannerWithString:
scanInteger:
decimalDigitCharacterSet
scanUpToCharactersFromSet:intoString:
scanUpToString:intoString:
minorVersion
patchVersion
versionInfoWithString:
versionString
olderThan:
variantString
_majorVersion
_minorVersion
_patchVersion
_variantString
_featureEmbeddingModel
_modelDescription
initWithInputDescriptionsAndFeatureNames:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:trainingInputDescriptions:inputFeatureNames:outputFeatureNames:metadata:
initWithInterfaceFormat:error:
metadataWithFormat:
inputDescription
outputDescription
predictedProbabilitiesName
trainingInputDescription
inputFeatureNames
outputFeatureNames
trainingInputDescriptionsByName
parameterDescriptionsByKey
string
isUpdatable
isEqualToDescription:
isEqualToString:
modelURL
decodeTopLevelObjectOfClasses:forKey:error:
initWithInputDescriptions:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:trainingInputDescriptions:metadata:
setParameterDescriptionsByKey:
metadataWithSpecification:
initWithInputDescriptions:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:metadata:
verifyInput:error:
setInputFeatureNames:
setOutputFeatureNames:
setTrainingInputDescriptionsByName:
setModelPath:
_isUpdatable
_inputDescriptionsByName
_outputDescriptionsByName
_predictedFeatureName
_predictedProbabilitiesName
_inputFeatureNames
_outputFeatureNames
_modelURL
_trainingInputDescriptionsByName
_parameterDescriptionsByKey
_modelPath
setDefaultValue:
setNumericConstraint:
defaultValue
numericConstraint
parameterDescriptionForKey:defaultValue:numericConstraint:
_defaultValue
_numericConstraint
arrayByAddingObject:
setScopedModelNames:
layerName
setLayerName:
isEqualToArray:
isEqualToMLLayerPath:
appendPathComponent:
_scopedModelNames
_layerName
initWithSpecification:error:
initDescriptionOnlyWithSpecification:configuration:error:
modelAssetWithURL:configuration:error:
initWithURL:configuration:error:
uniqueDirectoryURLInPath:
modelAssetWithSpecificationURL:error:
removeItemAndReturnError:
_compileModelAtURL:error:
initWithURL:error:
stringWithCString:encoding:
setRootModelURL:
compiledURL
loadConfiguration
modelWithError:
load:
classifierWithError:
regressorWithError:
hasSuffix:
relativePath
URLByAppendingPathComponent:isDirectory:
isANESupported
fetchNetworkURLFromCompiledModelAtURL:error:
purgeANEBinaryForModelAtURL:error:
modelAssetWithURL:error:
modelAssetWithSpecification:error:
needsANECompilationForModelAtURL:result:error:
purgeANEIRForModelAtURL:error:
model
classifier
regressor
ranLoad
setRanLoad:
asset
setAsset:
_ranLoad
_compiledURL
_asset
_loadConfiguration
initWithFilePath:inputLayerNames:outputLayerNames:parameters:
readIsClassifier:
numberWithFloat:
arrayWithObjects:
doubleValue
stringByReplacingOccurrencesOfString:withString:
isReadableFileAtPath:
unarchiveUpdatableParamsAtURL:error:
containsString:
defaultCStringEncoding
initWithCString:encoding:
initWithFeatureDescriptions:transformDesc:outputLayerNames:parameters:configurations:classScoreVectorName:classLabels:hasBidirectionalLayer:hasOptionalInputSequenceConcat:hasDynamicLayer:
setOptionalInputTypes:
setHasDynamicLayer:
setUpdatableModelCompiledParams:
setImagePreprocessingParams:
setOptionalInputDefaultValues:
setModelIsEncrypted:
setModelVersionInfo:
containerFromFilePath:inputLayerNames:outputLayerNames:parameters:
setName:
setInputDescription:
setOutputDescription:
setImageParameters:
configurationList
setConfigurationList:
hasDynamicLayer
setTransformDesc:
updatableModelCompiledParams
_hasDynamicLayer
_modelIsEncrypted
_inputLayerNames
_outputLayerNames
_name
_inputDescription
_outputDescription
_imageParameters
_configurationList
_transformDesc
_imagePreprocessingParams
_updatableModelCompiledParams
_optionalInputDefaultValues
initWithData:language:inputFeatureName:outputFeatureName:modelData:labelNames:error:
initializeSentenceClassifierModelWithData:error:
predictLabelsForSentenceString:inputString:error:
saveAppleTextClassifierModelToURL:textClassifierParameters:error:
textClassifierModel
numberOfDimensions
setNumberOfDimensions:
weightingScheme
setWeightingScheme:
indexType
setIndexType:
leafSize
setLeafSize:
defaultLabel
setDefaultLabel:
nearestLabelsFeatureName
setNearestLabelsFeatureName:
nearestDistancesFeatureName
setNearestDistancesFeatureName:
_numberOfDimensions
_weightingScheme
_indexType
_leafSize
_defaultLabel
_nearestLabelsFeatureName
_nearestDistancesFeatureName
loadModelFromSpecificationWithCompilationOptions:options:error:
serializeInterfaceAndMetadata:toArchive:error:
longValue
initInterfaceAndMetadataWithCompiledArchive:error:
unsignedLongValue
sequenceValue
_mapItemSequence:dest:error:
int64Value
_model_data
_itemForIndex:error:
featureValueWithDictionary:error:
insertObject:atIndex:
featureValueWithSequence:
m_mmapped_model
m_cached_model
m_num_items
m_item_data_feature_name
m_num_recommendations_feature_name
m_item_restriction_feature_name
m_item_exclusion_feature_name
m_item_list_output_feature_name
m_item_score_output_feature_name
m_item_mapping
m_item_string_list
m_item_integer_list
_m_scores
_m_items
_m_item_buffer
_m_item_invalid_mask
_m_item_predictions
_m_item_heap
lossType
optimizerType
optimizerParameters
lossParameters
trainableLayerNames
updateParameters
decodeObjectForKey:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToURL:options:error:
setClass:forClassName:
initWithLossType:optimizerType:optimizerParameters:lossParameters:trainableLayerNames:updateParameters:
writeUpdatableParamsToURL:error:
setLossType:
setOptimizerType:
setOptimizerParameters:
setLossParameters:
setTrainableLayerNames:
setUpdateParameters:
_lossType
_optimizerType
_optimizerParameters
_lossParameters
_trainableLayerNames
_updateParameters
initWithComputeUnits:
setAllowLowPrecisionAccumulationOnGPU:
preferredMetalDevice
setPreferredMetalDevice:
allowBackgroundGPUComputeSetting
useWatchSPIForScribble
setUseWatchSPIForScribble:
setAllowBackgroundGPUCompute:
setEnableTestVectorMode:
rootModelURL
setProfilingOptions:
setUsePreloadedKey:
isEqualToModelConfiguration:
computeUnitsToString:
allowFloat16AccumulationOnGPU
setAllowFloat16AccumulationOnGPU:
preferredMTLDevice
setPreferredMTLDevice:
setAllowBackgroundGPUComputeSetting:
_allowBackgroundGPUComputeSetting
_useWatchSPIForScribble
_allowLowPrecisionAccumulationOnGPU
_enableTestVectorMode
_usePreloadedKey
_computeUnits
_preferredMetalDevice
_rootModelURL
_profilingOptions
pixelFormatType
valueDescription
getImageFeatureTypeFromConstraint:
getArrayFeatureTypeFromConstraint:
dictionaryConstraint
getDictionaryFeatureTypeFromConstraint:error:
sequenceConstraint
getSequenceFeatureTypeFromConstraint:error:
createFeatureTypeFromFeatureDescription:error:
createMetaData:
copyFeatureDescriptionFrom:to:error:
createModelDescription:error:
saveModelDescription:toSpecification:error:
vectorizeFeaturesProvidedBy:featureNames:error:
vectorizeInput:error:
predictionsFromSubbatchingBatch:maxSubbatchLength:predictionBlock:options:error:
validateRegressorInterfaceWithError:
predictionFromFeatures:regressor:options:error:
initWithInterface:metadata:error:
crossEntropyLossWithInputName:targetInputName:lossOutputName:
L2LossWithInputName:targetInputName:lossOutputName:
epochs
shuffle
seed
learningRate
miniBatchSize
momentum
beta1
beta2
initWithInferenceNetworkPath:inferenceInputs:inferenceOutputs:error:
initForLayers:error:
initWithModelDefinition:lossDefinition:variablesDefinition:optimizerDefinition:forPlatform:error:
initWithOptimizationAlgorithm:parameters:error:
validateClassifierInterfaceWithError:
predictionFromFeatures:classifier:options:error:
initWithInterface:metadata:configuration:error:
classifierResultFromOutputFeatures:error:
pipeline
initWithEngine:interface:metadata:configuration:error:
initScenePrintParameters:error:
scenePrintVersion
_scenePrintVersion
initObjectPrintParameters:expectedShapes:expectedKeys:error:
objectPrintVersion
expectedShapes
expectedKeys
_objectPrintVersion
_expectedShapes
_expectedKeys
initWithScenePrintParameters:error:
initWithObjectPrintParameters:error:
featureExtractorParameters
_featureExtractorParameters
allValues
elementCountForScenePrintRequestRevision:
detectionPrintSupportedRevisions
detectionPrintShapes:
indexOfObject:
initWithParameters:modelDescription:featureExtractorType:configuration:error:
scenePrintsFromPixelBuffers:version:augmentationOptions:useCPUOnly:error:
featureValueFromScenePrint:elementSize:
computeScenePrintFeatures:handle:useCPUOnly:error:
detectionPrintsFromPixelBuffers:version:augmentationOptions:useCPUOnly:error:
firstObject
featureValueFromObjectPrint:key:shape:
_outputDataType
_extractorType
compare:
keysSortedByValueUsingComparator:
initWithSpecification:configuration:error:
setFeatureName:to:descriptions:
setInputFeatureName:to:
setOutputFeatureName:to:
validateModelDescription:
initWithDescription:
initWithDescription:numberOfFeatures:priorMean:regressionInputName:optimismInputName:samplingScaleInputName:samplingTruncationInputName:meanOutputName:varianceOutputName:pessimisticProbabilityOutputName:sampledProbabilityOutputName:
getArrayFeatureValue:
featureValueWithDouble:
resultWithValue:additionalFeatures:
getFeatureValue:forName:withType:
getOneHotFeatureValues:error:
getOptimism:
getSamplingScale:
getSamplingTruncation:
createRegressorResult:
updateModelFromFeatures:toTarget:error:
convertOutputFeatureToPredictionValues:event:importance:error:
isEqualToBopr:
reset
modelWithContentsOfURL:error:
updateModelFromFeatures:toTarget:options:error:
saveModelToSpecification:
setFeatureCount:
FeatureCount
initWithDescription:numberOfFeatures:priorMean:
createCheckpoint
resetToLastCheckpointBeforeDate:
_model
_regressionInputFeatureName
_optimismInputFeatureName
_meanOutputFeatureName
_varianceOutputFeatureName
_pessimisticProbabilityOutputFeatureName
_sampledProbabilityOutputFeatureName
_samplingScaleInputFeatureName
_samplingTruncationInputFeatureName
stringForDataType:
fillIndexVector:fromArray:error:
numberAtOffset:
setNumber:atOffset:
offsetForKeyedSubscript:
unsignedLongLongValue
numberOfBytesPerElement
arrayFromIndexVector:
_pArray
_managingData
_deallocator
_shape
_strides
cppStorageOrder:
isEqualToMultiArray:
isManagingData
isContiguous
doublePointer
float32Pointer
initWithMultiArrayBuffer:
getShapeOfArrayOfSameLengthArrays:numberOfRows:numberOfColumns:error:
doubleMultiArrayWithCopyOfMultiArray:
doubleVectorWithValues:
doubleMultiArrayWithShape:valueArray:error:
doubleMatrixWithValues:error:
float32MatrixWithValues:error:
validateMultiArrays:forConcatenatingAlongAxis:normalizedAxis:reason:
exceptionWithName:reason:userInfo:
multiArrayByConcatenatingMultiArrays:alongAxis:dataType:
initWrappingMultiArray:
setRangeWithRawData:destIndex:error:
numberArray
multiArray
setMultiArray:
_multiArray
isSqueezableShape:
squeezeShape:strides:resultingShape:resultingStrides:
isSqueezableShape:dimensions:
indexSet
addIndex:
removeObjectsAtIndexes:
subarrayWithRange:
initSlicingMultiArray:origin:shape:squeeze:error:
initSqueezingMultiArray:dimensions:error:
initExpandingDimensionsOfMultiArray:axis:
parent
_parent
sliceAtOrigin:shape:squeeze:error:
squeeze
squeezeDimensions:error:
multiArrayViewExpandingDimensionsAtAxis:
multiArrayBuffer
_convertStringClassVector:int64ClassVector:dimensions:toClassLabel:classType:andReturnError:
_setSingleArrayLookupField
initWithDescription:configuration:indexToStringLabelArray:indexToIntLabelArray:modelURL:error:
resultWithIntClassProbability:
resultWithStringClassProbability:
_buildClassificationClasses:topk:error:
_mmapped_model
_cached_model
num_dimensions
_classes_by_string
_classes_by_int64_t
_class_type
_class_values
_single_array_key
loadNeuralNetworkClass:
initWithData:language:inputFeatureName:tokensFeatureName:tokenTagsFeatureName:tokenLocationsFeatureName:tokenLengthsFeatureName:modelData:tagNames:metadata:error:
initWithData:language:inputFeatureName:tokensFeatureName:tokenTagsFeatureName:tokenLocationsFeatureName:tokenLengthsFeatureName:modelData:tagNames:error:
tokensOutputFeatureName
setTokensOutputFeatureName:
tokenTagsOutputFeatureName
setTokenTagsOutputFeatureName:
tokenLocationsOutputFeatureName
setTokenLocationsOutputFeatureName:
tokenLengthsOutputFeatureName
setTokenLengthsOutputFeatureName:
tagNames
setTagNames:
_tokensOutputFeatureName
_tokenTagsOutputFeatureName
_tokenLocationsOutputFeatureName
_tokenLengthsOutputFeatureName
_tagNames
initializeWordTaggingModelWithData:error:
predictTokensLabelsLocationsLengthsForString:inputString:error:
saveAppleWordTaggingModelToURL:wordTaggerParameters:error:
wordTaggingModel
saveModelToArchive:model:error:
saveModelToArchive:model:compilerOptions:error:
createFileAtPath:contents:attributes:
copyItemAtPath:toPath:error:
saveModelToAssetAtURL:model:error:
copyModelAtURL:toURL:error:
substringToIndex:
uppercaseString
substringFromIndex:
populateConstraintsForImageFeatureDescriptionElement:
addFeature:withControlName:defaultValue:
isFeatureEnabled:
standardUserDefaults
defineFeatures
flags
controlKeyForFeature:
userDefaults
registerDefaults:
environment
boolForKey:
overrideOriginalValues
setOverride:forFeature:
removeOverrideForFeature:
_userDefaults
_flags
_overrideOriginalValues
initWithDataset:numberOfDimensions:leafSize:error:
numberOfNeighbors
parameterContainerFor:descriptions:
setCurrentValue:forKey:error:
parameterContainer
currentParameterValues
index
labelsForDataPoints
labelsSet
labelType
inputMultiArray:error:
computeKClosestLabels:
computeClassProbabilities:from:
extractNearestNeighborLabels:distances:from:
packageOutputWithPredictedLabel:classProbabilities:nearestLabels:nearestDistances:
parameterDescriptionForKey:int64ParameterSpec:
appendParameterDescriptions:toModelDescription:
initWithDescription:configuration:parameters:dataPoints:labels:error:
setProgressHandlersDispatchQueue:
setContinueWithUpdate:
initWithArray:copyItems:
progressHandlersDispatchQueue
dispatchTrainingBeginProgressHandlerWithMetrics:parameters:onQueue:
continueWithUpdate
setLabelsForDataPoints:
setLabelsSet:
dispatchTrainingCompletionHandlerWithMetrics:parameters:onQueue:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
hasGlobalScope
decodeTopLevelObjectOfClass:forKey:error:
setParameterContainer:
setIndex:
setLabelType:
_continueWithUpdate
_progressHandlersDispatchQueue
_parameterContainer
_index
_labelType
_labelsForDataPoints
_labelsSet
archivePipelineUpdateParameterForModels:to:updatable:
archiveCustomModelNames:to:
archivePipelineModelDetailsFrom:toArchive:error:
compileWithModelsInPipeline:toArchive:options:updatable:error:
scopedTo:
extractModelNamesFromArchive:numModels:
classLabelsForPipelineFromSubModelArray:predictedFeatureName:
setModels:
deletingPrefixingScope:
setModelNames:
_models
_modelNames
isWritableFileAtPath:
orderedSet
weights
hasSameNameAsKey:
scope
paramsForLayer:parameterType:error:
biases
createCoreMLToEspressoParamsMap
initWithCompiledArchive:nnContainer:configuration:error:
parameterValueForKey:
weightsForLayer:error:
biasForLayer:error:
lossTargetName
setLossTargetName:
classLabelToIndexMap
coreMLToEspressoParamsMap
setCoreMLToEspressoParamsMap:
lossOutputName
setLossOutputName:
shuffableTrainingData
setShuffableTrainingData:
_lossTargetName
_classLabelToIndexMap
_coreMLToEspressoParamsMap
_lossOutputName
_shuffableTrainingData
featureValueWithString:
featureValueWithInt64:
initWithMapping:valueOnUnknown:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
initWithName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
validateSingleFeatureInDescription:withSet:
mapFeature:error:
objectValue
mapping
valueOnUnknown
_mapping
_valueOnUnknown
invalid
toolName
invalidError
commandName
sourceUrl
destinationDirectoryUrl
outputPlistFilename
packageMetadataJSON
modelKeyFile
writeToURL:atomically:encoding:error:
modelArchiveDestinationUrl
URLByAppendingPathExtension:
setCurrentDirectoryPath:
setLaunchPath:
setArguments:
launch
waitUntilExit
setDestinationDirectoryUrl:
dryrun
moveItemAtURL:toURL:error:
targetLanguage
options
globalModule
setGlobalModule:
noDocumentation
setDocumentation:
publicAccess
setPublicAccess:
generateSwift:generatedCodePath:options:dryRun:error:
generateObjC:generatedCodePath:documentation:dryRun:error:
setCommandName:
setInvalidError:
setInvalid:
setTargetLanguage:
setSwiftVersion:
setModelKeyFile:
setModelArchiveDestinationUrl:
setTeamID:
setDeploymentTarget:
setPackageMetadataJSON:
setNoDocumentation:
setDetailedTypeInfo:
setDryrun:
setOutputPlistFilename:
setDisableWarnings:
disableWarnings
toolPath
setToolPath:
setSourceUrl:
dictionaryWithContentsOfURL:
batchProvider
useForPrediction
nnEngine
initWithMLFeatureProvider:forPrediction:neuralNetworkEngine:error:
dataPointAtIndex:error:
numberOfDataPoints
prepareForEpoch
initWithMLBatchProvider:forPrediction:neuralNetworkEngine:error:
_useForPrediction
_batchProvider
_nnEngine
rank
width
height
channels
batch
espressoShapeToCoremlShape:ndMode:
setRank:
setWidth:
setHeight:
setChannels:
setBatch:
setSequence:
coremlShapeToEspressoShape:ndMode:
getStrides:
rawPointer
texture
espressoTensorToCoremlTensor:ndMode:
espressoShapesToCoremlShapes:ndMode:
factory
createCustomLayer:withParameters:error:
initWithParameterDictionary:error:
setWeightData:error:
outputShapesForInputShapes:error:
evaluateOnCPUWithInputs:outputs:error:
encodeToCommandBuffer:inputs:outputs:error:
coremlShapesToEspressoShapes:ndMode:
espressoTensorsToCoremlTensors:ndMode:
espressoTensorsToCoremlTensorsGPU:
setupForInputShapes:withParameters:
initWithParameters:
hasGPUSupport
setMappedWeights:sizeInBytes:
computeOnCPUWithInputTensors:outputTensors:
encodeToMetalCommandBuffer:inputTensors:outputTensors:
hasDynamicOutputShape:
computeDynamicOutputShape:
ndMode
className
customImpl
setCustomImpl:
_ndMode
_className
_customImpl
characterSetWithCharactersInString:
componentsSeparatedByCharactersInSet:
pathForResource:ofType:
characterAtIndex:
stringByTrimmingCharactersInSet:
bundleWithIdentifier:
isAbsolutePath
stringByStandardizingPath
allowsValuesWithDescription:
linkedModelFileName
parameterDescriptionForKey:stringParameterSpec:
linkedModelSearchPath
stringForKey:inDictionary:
stringByDeletingLastPathComponent
findFile:inSearchPath:basePath:
modelWithContentsOfURL:configuration:error:
areFeaturesIn:modelNamed:aSubsetOf:error:
initWithLinkedModel:modelFileName:modelSearchPath:configuration:
updateParameterDescriptionsByUnarchivingSpecification:
linkedModel
modelFileName
modelSearchPath
setLinkedModel:
setModelFileName:
setModelSearchPath:
_linkedModel
_modelFileName
_modelSearchPath
swiftVersion
deploymentTarget
teamID
detailedTypeInfo
_detailedTypeInfo
_disableWarnings
_teamID
_modelKeyFile
_modelArchiveDestinationUrl
_outputPlistFilename
lowercaseString
splitIndex
splitDimension
encodeFloat:forKey:
startingIndex
rightChild
leftChild
boundingBox
isLeaf
decodeFloatForKey:
splitValue
setSplitIndex:
findMin:andMax:alongDimension:data:indices:numDimensions:
setSplitDimension:
setSplitValue:
partitionDataPoints:indices:numDimensions:
assignSplitsForData:indices:numDimensions:
print
setStartingIndex:
setCount:
setLeftChild:
setRightChild:
setBoundingBox:
setIsLeaf:
_isLeaf
_splitValue
_splitDimension
_splitIndex
_startingIndex
_count
_leftChild
_rightChild
_boundingBox
constructTree
root
findK:nearestNeighbors:toQueryPoint:inTree:
constructTreeForPointsBoundedBy:startingIndex:count:
calculateDistancesForNodesBetweenLeft:andRight:toQueryPoint:
setRoot:
vIndices
_root
_frontendProcessingModel
initWith:dimensionEncoding:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
replaceObjectAtIndex:withObject:
vectorizeOneHotEncoderDict:index:error:
columnNameEncoding
dimensionEncoding
_output_array_shape
index_mapping
_columnNameEncoding
_dimensionEncoding
confidenceOutputFeatureName
coordinatesOutputFeatureName
suppressionMethod
setSuppressionMethod:
iouThreshold
setIouThreshold:
confidenceThreshold
setConfidenceThreshold:
minBoxes
setMinBoxes:
maxBoxes
setMaxBoxes:
numClasses
setNumClasses:
perClass
setPerClass:
confidenceInputFeatureName
setConfidenceInputFeatureName:
coordinatesInputFeatureName
setCoordinatesInputFeatureName:
iouThresholdInputFeatureName
setIouThresholdInputFeatureName:
confidenceThresholdInputFeatureName
setConfidenceThresholdInputFeatureName:
setConfidenceOutputFeatureName:
setCoordinatesOutputFeatureName:
_perClass
_suppressionMethod
_iouThreshold
_confidenceThreshold
_minBoxes
_maxBoxes
_numClasses
_confidenceInputFeatureName
_coordinatesInputFeatureName
_iouThresholdInputFeatureName
_confidenceThresholdInputFeatureName
_confidenceOutputFeatureName
_coordinatesOutputFeatureName
initWithParameters:modelDescription:configuration:error:
initWithShape:dataType:shapeConstraint:
constraintWithShape:dataType:shapeConstraint:
isAllowedDataType:error:
constraintWithShape:dataType:
_dataType
_shapeConstraint
initWithCompiledArchive:configuration:error:
classesByString
classesByInt
loadParameterDescriptionsAndContainerFromConfiguration:modelDescription:error:
parameterDescriptionForKey:doubleParameterSpec:
maxDepth
minChildWeight
numTrees
objective
updateType
xgBoostDataFormatFromBatchProvider:needLabels:error:
interestedEvents
booster
setPersonalization:
setBooster:
setBoosterParameters:error:
personalization
setClassesByString:
setClassesByInt:
mmappedModel
setMmappedModel:
cachedModel
setCachedModel:
_personalization
_mmappedModel
_classesByString
_classesByInt
_cachedModel
initWithUTF8String:
initWith:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
extractArrayElement:indices:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
extractArrayElement:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
arrayColumnName
extractIndices
outputType
_arrayColumnName
_extractIndices
_outputType
scenePrintRequestRevision
_scenePrintRequestRevision
_configuration
version
setVersion:
setFeatureExtractorParameters:
postVisionFeaturePrintModel
setPostVisionFeaturePrintModel:
_version
_postVisionFeaturePrintModel
visionFeaturePrintInfo
initWithEngine:interface:metadata:error:
isInputSizeLowerBoundOnly
inputSize
predict:
cValue
initWithKeyName:
initWithName:type:optional:contraints:
valueConstraints
featureDescriptionWithName:type:optional:constraints:
setValueConstraints:
multiArrayConstraintCached
imageConstraintCached
dictionaryConstraintCached
sequenceConstraintCached
_optional
_valueConstraints
_multiArrayConstraintCached
_imageConstraintCached
_dictionaryConstraintCached
_sequenceConstraintCached
longLongValue
numberOfClasses
hasProbabilityPredictionEnabled
predictProbabilities:probabilities:
featureValueWithObject:
initializeAndvalidateObjectiveAndNumClassesWithConfiguration:error:
loadLabelsWithStringLabels:intLabels:
initializeBoosterIfOneExists
xgBoostDataFormatFromFeatureProvider:error:
featureProviderFromXGboostResults:length:error:
batchProviderFromXGboostResults:length:error:
featureProviderArrayFromXGBoostResult:length:error:
packageOutputWithPredictedLabel:classProbabilities:
setObjective:
_objective
_booster
probabilityDictionaryForStringLabels:
probabilityDictionaryForInt64Labels:
initWithObjects:forKeys:count:
initWithStrLabels:
enumeratorFromMap:
keyEnumerator
mapStrLabelToIndex
setMapStrLabelToIndex:
_mapStrLabelToIndex
initWithIntLabels:
mapIntLabelToIndex
setMapIntLabelToIndex:
_mapIntLabelToIndex
initWithStrMap:
nextObject
iter
setIter:
iterEnd
setIterEnd:
_iter
_iterEnd
initWithIntMap:
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:error:
initWithArray:
constructDictionary:error:
categoryName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName
_categoryName
cropAndScaleBufferWithWidth:height:cropRect:format:imageCropAndScaleOption:options:error:calculatedNormalizedOriginOffset:calculatedScaleX:calculatedScaleY:
initWithURL:options:
createPixelBufferFromVNImageBuffer:constraint:cropRect:cropAndScaleOption:options:error:
initWithCGImage:options:
addOrientation:toOptions:
lengthInBytesForScenePrintRequestRevision:
createPixelBufferFromImageAtURL:constraint:cropRect:cropAndScaleOption:options:error:
createPixelBufferFromCGImage:constraint:cropRect:cropAndScaleOption:options:error:
scenePrintsFromPixelBuffersImpl
scenePrintsFromPixelBuffersUsesCPUOnlyImpl
scenePrintElementCountImpl
scenePrintLengthImpl
VNImageBufferClass
detectionPrintsFromPixelBuffersImpl
detectionPrintsFromPixelBuffersUsesCPUOnlyImpl
detectionPrintShapesImpl
detectionPrintSupportedRevisionsImpl
_validForSceneprint
_validForObjectprint
_scenePrintsFromPixelBuffersImpl
_scenePrintsFromPixelBuffersUsesCPUOnlyImpl
_scenePrintElementCountImpl
_scenePrintLengthImpl
_VNImageBufferClass
_detectionPrintsFromPixelBuffersImpl
_detectionPrintsFromPixelBuffersUsesCPUOnlyImpl
_detectionPrintShapesImpl
_detectionPrintSupportedRevisionsImpl
initWithValue:additionalFeatures:
predictedValue
additionalFeatures
_predictedValue
_additionalFeatures
initWithData:language:inputFeatureName:outputFeatureName:modelData:metadata:error:
initWithData:language:inputFeatureName:outputFeatureName:modelData:error:
initializeEmbeddingModelWithData:error:
predictVectorForString:inputString:error:
saveAppleWordEmbeddingModelToURL:wordEmbeddingParameters:error:
wordEmbeddingModel
cStringUsingEncoding:
initWithLRSpec:configuration:error:
intercept
postEvalTransForm
m_spec
deserializeInterfaceFormat:archive:error:
serializeInterfaceFormat:archive:error:
initWithUndefinedValueAndType:
initWithValue:type:
value
isEqualToNumber:
isEqualToDictionary:
isEqualToFeatureValue:
featureValueWithStringKeyDictionary:
featureValueWithInt64KeyDictionary:
getFeatureSize:
setValue:
setObjectValue:
_undefined
_value
_objectValue
stringWithCapacity:
NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
NLPSequenceModelCreateWithDataImpl
NLPSequenceModelGetRevisionImpl
NLPSequenceModelIsRevisionSupportedImpl
NLPSequenceModelGetCurrentRevisionImpl
NLPClassifierModelCopyPredictedLabelForTextImpl
NLPClassifierModelCreateWithDataImpl
NLPClassifierModelGetRevisionImpl
NLPClassifierModelIsRevisionSupportedImpl
NLPClassifierModelGetCurrentRevisionImpl
NLPGazetteerModelCopyLabelForStringImpl
NLPGazetteerModelCreateWithDataImpl
NLPGazetteerModelGetRevisionImpl
NLPGazetteerModelIsRevisionSupportedImpl
NLPGazetteerModelGetCurrentRevisionImpl
NLPEmbeddingModelCopyVectorForStringImpl
NLPEmbeddingModelCreateWithDataImpl
NLPEmbeddingModelGetRevisionImpl
NLPEmbeddingModelIsRevisionSupportedImpl
NLPEmbeddingModelGetCurrentRevisionImpl
_valid
_NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
_NLPSequenceModelCreateWithDataImpl
_NLPSequenceModelGetRevisionImpl
_NLPSequenceModelIsRevisionSupportedImpl
_NLPSequenceModelGetCurrentRevisionImpl
_NLPClassifierModelCopyPredictedLabelForTextImpl
_NLPClassifierModelCreateWithDataImpl
_NLPClassifierModelGetRevisionImpl
_NLPClassifierModelIsRevisionSupportedImpl
_NLPClassifierModelGetCurrentRevisionImpl
_NLPGazetteerModelCopyLabelForStringImpl
_NLPGazetteerModelCreateWithDataImpl
_NLPGazetteerModelGetRevisionImpl
_NLPGazetteerModelIsRevisionSupportedImpl
_NLPGazetteerModelGetCurrentRevisionImpl
_NLPEmbeddingModelCopyVectorForStringImpl
_NLPEmbeddingModelCreateWithDataImpl
_NLPEmbeddingModelGetRevisionImpl
_NLPEmbeddingModelIsRevisionSupportedImpl
_NLPEmbeddingModelGetCurrentRevisionImpl
isValidRegressorInterface
isValidClassifierInterface
initWithName:
modelInterfaceWithInputDescription:orderedInputFeatureNames:outputDescription:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:trainingInputDescription:
initWithLayerError:
loadContentsOfURL:configuration:completionHandler:
decryptSession
_interface
_decryptSession
initWithBase64EncodedString:options:
filePathURL
sinfData
regressorResultFromOutputFeatures:error:
initWith:imputeValue:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:error:
modelInterfaceWithInputDescription:orderedInputFeatureNames:outputDescription:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:
imputeValueFrom:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValueFrom:replaceValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValue
replaceValue
_imputeValue
_replaceValue
_sentenceClassifierModel
initWithPixelsWide:pixelsHigh:
initWithEnumeratedImageSizes:
isAllowedImageSize:error:
rangeFromAllowedSizeRangeProtoMessage:
initWithPixelsWideRange:pixelsHighRange:
constraintWithPixelsWide:pixelsHigh:pixelType:sizeConstraint:
populateConstraintsForImageFeatureDescription:
initWithValueDescription:countRange:
populateConstraintsForFeatureDescription:
descriptionFromProto:
orderedNamesFromProto:
inputDescriptionFromInterface:
outputDescriptionFromInterface:
trainingInputDescriptionFromInterface:
orderedFeatureNamesFromInterface:forInput:
dictionaryWithDictionary:
populateEspressoShapeAndStridesFromInputShape:ndRepresentation:espressoShape:espressoStrides:error:
initWithData:type:shape:strides:
initWithCVPixelBuffer:imageParameters:error:
dataTensorDictionary
setDataTensorDictionary:
_dataTensorDictionary
imagePixelTypeFromOSType:
featureValuesWithConsistentTypeFromArray:error:
objectForKey:class:dictionary:
numberForKey:inDictionary:
initWithPixelsWide:pixelsHigh:pixelType:sizeConstraint:
osType:isAcceptedForPixelType:
_stringForAllowedOSTypes
_stringForOSType:
constraintWithPixelsWide:pixelsHigh:pixelType:
osType
imageHeight
imageWidth
_pixelsHigh
_pixelsWide
_sizeConstraint
_pixelType
_featureValuesForNames:providedBy:error:
_vectorizedSizeOfFeatureValues:error:
_vectorizeWithoutSizeCheckFeatureValues:intoDoubleVector:stride:error:
canVectorizeFeatureWithDescription:
canVectorizeAllFeaturesWithDescriptions:
setByAddingObjectsFromSet:
initWithFeaturesFrom:addedToFeaturesFrom:
unionFeatureProvider
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:classLabels:
allocSVMNodeVector:
fillSVMNodeVector:values:count:
deallocSVMNodeVector:
initWithLibSVMFile:classLabels:
setModel:
freeModelOnDealloc
setFreeModelOnDealloc:
setIsInputSizeLowerBoundOnly:
setInputSize:
_freeModelOnDealloc
_isInputSizeLowerBoundOnly
_inputSize
modelOrigin
modelType
modelVersion
compilerVersion
modelLoadTime
modelHash
modelDimension
nnModelNetHash
nnModelShapeHash
nnModelWeightsHash
modelLoadError
firstPartyExecutable
setModelHash:
setNnModelNetHash:
setNnModelShapeHash:
setNnModelWeightsHash:
numberFromCString:
setModelDimension:
_modelType
_modelLoadTime
_modelVersion
_compilerVersion
_modelOrigin
_modelLoadError
_bundleIdentifier
_modelName
_firstPartyExecutable
_modelHash
_nnModelNetHash
_nnModelShapeHash
_nnModelWeightsHash
_modelDimension
initWith:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
encodeFeatureValue:
encodeFeatureValueIntString:
handleUnknown
unknownDenseVector
featureEncoderFrom:inputDescription:orderedInputFeatureNames:
featureEncoderFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoderFrom:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoding
ouputSparse
_ouputSparse
_handleUnknown
_featureEncoding
_wordTaggingModel
featureValueFromDetectionPrint:featureName:
detectionPrintRequestRevision
expectedOutputShapeV1
_detectionPrintRequestRevision
_expectedOutputShapeV1
initWithDescription:configuration:error:
setCurrentParameterValues:
setParameterKeys:
setParameterDescriptions:
parameterKeys
parameterDescriptions
isSubclassOfClass:
validateParameterValue:givenConstraint:
enumeratedNumbers
minNumber
maxNumber
_currentParameterValues
_parameterKeys
_parameterDescriptions
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:
initWithLibSVMFile:
setMinNumber:
setMaxNumber:
setEnumeratedNumbers:
valueForKeyPath:
numericConstraintWithEnumeratedNumbers:
numericConstraintWithMinNumber:maxNumber:
_minNumber
_maxNumber
_enumeratedNumbers
initWithName:shortDescription:versionString:author:license:creatorDefined:
shortDescription
author
license
creatorDefined
_shortDescription
_versionString
_author
_license
_creatorDefined
initWithInputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:trainingInputDescription:
setWithSet:
minusSet:
_trainingInputDescription
predictedValueFeatureDescription
initWithKeyName:scope:
_scope
documentation
_cValue
scalarRegress:error:
scalarRegress:
vectorRegress:dest:
output_classes
initWithFormat:arguments:
errorWithIntegerCode:underlyingError:format:args:
errorWithCode:underlyingError:format:args:
errorWithCode:format:args:
privateErrorWithCode:underlyingError:format:args:
modelDecryptionKeyFetchErrorWithUnderlyingError:format:
countRange
_valueDescription
_countRange
initWith:scaleValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:error:
shiftValue
scaleValue
_shiftValue
_scaleValue
initWithStringClassProbability:classFeatureType:additionalFeatures:
initWithIntClassProbability:classFeatureType:additionalFeatures:
initWithClassProbability:additionalFeatures:classLabelOfMaxProbability:
resultWithStringClassProbability:additionalFeatures:
resultWithIntClassProbability:additionalFeatures:
predictedClass
classProbability
predictedClassFeatureType
_predictedClass
_classProbability
_predictedClassFeatureType
calculateClassProbability:input:error:
classify:error:
classify:topK:error:
classType
classEncoding
layerError
setLayerError:
deviceName
setDeviceName:
_layerError
_deviceName
arrayByAddingObjectsFromArray:
batchProviderFromEspressoDataProvider:neuralNetworkEngine:options:error:
espressoDataProviderFromFeatureProvider:forPrediction:neuralNetworkEngine:error:
espressoDataProviderFromBatchProvider:forPrediction:neuralNetworkEngine:error:
featureProviderFromEspressoDataProvider:neuralNetworkEngine:options:error:
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
inputDescriptionFrom:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
norm
_norm
isEqualToImageSize:
imageSizeSet
pixelsWideRange
pixelsHighRange
enumeratedImageSizes
_imageSizeSet
_pixelsWideRange
_pixelsHighRange
locationClosestTo:inRange:
closestImageSizeInArray:toImageSize:preferDownScaling:
closestImageSizeInPixelsWideRange:pixelsHighRange:toImageSize:preferInputAspectRatio:
optimizationParameters
_optimizationParameters
initWithMode:inputName:targetName:lossOutputName:
BuiltInLoss:
inputName
targetInputName
mode
outputName
setOutputName:
_inputName
_targetInputName
_mode
_outputName
dataArray
float_buffer
blob
initWithBlobContainer:
setMaxNumberOfElements:
setDataPointer:
setDataArray:
setType:
setShape:
setStrides:
maxNumberOfElements
imageBuffer
setImageBuffer:
allocatedImageData
setAllocatedImageData:
setFloat_buffer:
setBlob:
_dataPointer
_dataArray
_maxNumberOfElements
_blob
_allocatedImageData
_float_buffer
_imageBuffer
setLayerNames:
blobShapes
dataStorage
setDataStorage:
setBlobShapes:
number_of_data_points
setNumber_of_data_points:
setBatchSize:
nonBatchBlobNames
setNonBatchBlobNames:
_number_of_data_points
_batchSize
_nonBatchBlobNames
_dataStorage
_blobShapes
currentDirectoryPath
processIdentifier
start_t
setStart_t:
end_t
setEnd_t:
_start_t
_end_t
error_public
setError_public:
error_private
setError_private:
supported
setSupported:
exists
setExists:
has_perf_warning
setHas_perf_warning:
internal_layer
setInternal_layer:
_supported
_exists
_has_perf_warning
_internal_layer
_error_public
_error_private
setDebug_name:
setSelected_runtime_engine:
main_engine_support
setMain_engine_support:
per_platform_support
setPer_platform_support:
runtimes
setRuntimes:
average_runtime
setAverage_runtime:
_selected_runtime_engine
_debug_name
_main_engine_support
_per_platform_support
_runtimes
_average_runtime
setLayers:
network_at_path
setNetwork_at_path:
_layers
_network_at_path
componentsSeparatedByString:
URLWithString:
requestWithURL:
setHTTPMethod:
setValue:forHTTPHeaderField:
setHTTPBody:
sharedSession
dataTaskWithRequest:completionHandler:
context_for_runtime_platform:
trainingGraphNetPtr
setTrainingGraphNetPtr:
inferenceGraphNetPtr
setInferenceGraphNetPtr:
shareWeights
setupShapes:forBlobs:withError:
setInferenceModel:
setOptimizer:
setupInputOutputShapes:
reloadOnRuntimePlatform:
initWithBlobShapes:numberOfDataPoints:batchSize:error:
checkShapes:withSample:withError:
dataAtIndex:key:
privateDoTrainingOnData:forNumberOfEpochs:withCallback:error:
setInferenceNetworkWeights:error:
initWithNetwork:
taskState
networkPointer
getTensorNamed:
setTensorNamed:withValue:error:
doInferenceOnData:error:
saveNetwork:inplace:error:
initWithTrainingModelDefinition:forPlatform:error:
namesVectorToFoundationArray:
doTrainingOnData:forNumberOfEpochs:withCallback:error:
saveTrainingNetwork:checkpoint:error:
setWeightsOfInferenceNetworkLoadedFrom:AndSaveTo:error:
dataTypeForParameterOfType:fromLayerNamed:
getParameterOfType:forLayerNamed:error:
setParameterOfType:forLayerNamed:withValue:error:
platformForLayerNamed:error:
inferenceModel
optimizer
setTaskState:
inference_layer_index
varsDef
runtimePlatform
batchSize
training_control_name
training_control_end_name
gradient_control_name
gradient_control_end_name
optimizer_control_name
optimizer_control_end_name
infInputNames
infOutputNames
trainInputNames
trainOutputNames
infInputBlobShapes
trainInputBlobShapes
infOutputBlobShapes
trainOutputBlobShapes
_inferenceModel
_optimizer
_taskState
_inferenceGraphNetPtr
_trainingGraphNetPtr
runOnNetwork:
dataUsingEncoding:
_width
_height
_channels
_batch
_rank
setRawPointer:
_rawPointer
setTexture:
_texture
bundleForClass:
executablePath
shortValue
unsignedShortValue
numberWithShort:
numberWithUnsignedShort:
initWithBytesNoCopy:length:freeWhenDone:
initWithBlobMap:
blobs
setBlobs:
setNetworkPointer:
_networkPointer
_blobs
dataWithContentsOfFile:
contentsOfDirectoryAtPath:error:
pathExtension
initWithInferenceNetworkPath:error:
initWithTrainingNetworkPath:inferenceInputs:inferenceOutputs:trainingInputs:trainingOutputs:trainingControlVariableName:withInitializer:error:
layerNames
inputs
outputs
trainingInputs
trainingOutputs
isTrainingGlobalName
initializer
_layerNames
_inputs
_outputs
_trainingInputs
_trainingOutputs
_isTrainingGlobalName
_initializer
MLCustomLayerWrapper
engineName
In custom layer 
, parameter key 
 has no value.
_internal_NDMode
brick
MLCustomLayerWeights
slice
map::at:  key not found
Unable to read pad values for layer: 
Parameter pad_type must be a tensor.
mode
constant
constant_val
reflect
replicate
Padding Type not set
general_padding
tensor_zero_pad
Unsupported configuration for Pad!! Only Constant mode works for more than 2 dimension. Provided                                     mode: 
 dimensions: 
flatten
/System/Library/
com.apple.app-sandbox.read
nil value for URL
com.apple.CoreMLModelSecurityService
v8@?0
v16@?0@"NSError"8
v24@?0@"MLSecureModel"8@"NSError"16
com.apple.CoreMLModelSecutiyServiceToClient.%lu
v24@?0@"MLDictionaryFeatureProvider"8@"NSError"16
v24@?0@"MLArrayDictionaryFeatureProvider"8@"NSError"16
v24@?0@8@"NSError"16
congfiguration
modelDescription
T@"MLModelDescription",&,N
interface
T@"MLModelInterface",R
metadata
T@"MLModelMetadata",R
supportsSecureCoding
Tc,R
connectionToModelSecurityService
T@"NSXPCConnection",&,N,V_connectionToModelSecurityService
secureModelProxy
T@"NSObject<CoreMLModelSecurityProtocol>",&,N,V_secureModelProxy
cryptoKey
Tq,N,V_cryptoKey
featureProviderMap
T@"NSMutableDictionary",&,N,V_featureProviderMap
featureProviderCount
T@"NSCountedSet",&,N,V_featureProviderCount
serviceToClientQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serviceToClientQueue
array
count
Tq,R,N
T@"NSArray",R,N,V_array
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
FailedToComputeHash
Attempted to compile a non-neural-network model as a neural network.
Encountered an unexpected error while compiling a neural network model.
Encountered an error while compiling a neural network model: %@
generic
placeHolderInputName
Neural network classifier does not contain class labels.
The size of the output layer '%@' in the neural network does not match the number of classes in the classifier.
Classify can only be called on neural network classifiers.
Regress can only be called on neural network regressors.
com.apple.CoreMLBatchProcessingQueue
com.apple.CoreMLNNProcessingQueue
Invalid path %@ to compiled model.
.net
.shape
Invalid path to compiled model: %@
Unable to load information from compiled model path %@.
layer_shapes
Model .net file not found.
Error in declaring network.
For input feature '%@', the provided shape (%@) is not compatible with the model's feature description.
The model expects input feature %@ to be an image, but the input (%@) is of type %ld.
Input image feature %@ does not match model description
Required input feature not passed to neural network.
Image inputs are not supported on watchOS.
Failed to lock pixel buffer
Error binding image input buffer %@.
Error binding input buffer %@.
Error passing input %@ to NN engine.
Unsupported input type for neural network.
Espresso doesn't report the output shape; we cannot verify the output backing's shape. Error: %d
Failed to set shape of rank %zu to Espresso Buffer. Error: %d
The output backing MLMultiArray's shape (shape.count = %zu) doesn't match to Espresso's output shape (shape.count = %zu) even after squeezed. This is most likely a framework programming error.
Output feature %@ doesn't support an output backing.
Output backing for %@ is not compatible with the model's output feature description.
Output backings cannot be used for a dynamic output feature: %@.
Forced automatic output backings was requested but we couldn't bind the output buffer for feature: %@
Error binding output buffer: %@
Image value is nil.
Error checking if an output blob is dynamic or not, %@, %d.
v32@?0@"NSNumber"8Q16^c24
v32@?0@"NSArray"8Q16^c24
Forced automatic output backings was requested but we couldn't fabricate the output buffer for feature: %@
Error computing NN outputs.
Failure in binding dynamic outputs. (err=%d)
Image output %@ is missing width, height, and pixel info in its description
Batch or sequence image output is unsupported for image output %@
Invalid shape for output feature '%@': %@
Failed to convert output %@ to image
None of the features required to evaulate this model are produced by the feature provider which is first among the batch of input feature providers.
The model requires these input features:
    %@
The first batch input feature provider provides these input features:
Ensure that each of the batch input feature providers provides all the input features with types matching those required to evaluate the model.
Failed to build clean before reshape.
Unable to select network configuration for: %@
Passing empty input dictionary for resetSizes.
Incorrect input number of dimensions (must be between 1, 3, or 5 dimensions.
Incorrect input number of dimensions (must be 1 or greater).
Cannot evaluate a batch of size %@, which is larger than maximum of %@.
Cannot evaluate a sequence of length %@, which is longer than maximum of %@ for bidirectional models.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length.
Error in re-declaring input '%@'.
Error in declaring output '%@'.
Error in passing image pre-processing parameters to network.
Error in building plan.
Failure checking availability of plan submit.
This neural network model does not have a parameter for requested key %@. Note: only updatable neural network models can provide parameter values and these values are only accessible in the context of an MLUpdateTask completion or progress handler.
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
numInputs
TQ,R,N,V_numInputs
numOutputs
TQ,R,N,V_numOutputs
usingCPU
Tc,N,V_usingCPU
plan
T^v,N,V_plan
network
T{?=^vi},N,V_network
precision
Ti,N,V_precision
engine
Ti,N,V_engine
Ti,N,V_qos
context
T^v,N,V_context
isEspresoBiasPreprocessingShared
TB,N,V_isEspresoBiasPreprocessingShared
classLabels
T@"NSArray",&,N,V_classLabels
classScoreVectorName
T@"NSString",&,N,V_classScoreVectorName
probDict
T@"MLProbabilityDictionary",&,N,V_probDict
modelFilePath
T@"NSString",&,N,V_modelFilePath
defaultOptionalValues
T@"NSDictionary",&,N,V_defaultOptionalValues
hasBidirectionalLayer
TB,N,V_hasBidirectionalLayer
hasOptionalInputSequenceConcat
TB,N,V_hasOptionalInputSequenceConcat
bufferSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_bufferSemaphore
espressoQueue
T@"NSObject<OS_dispatch_queue>",&,V_espressoQueue
predictionsQueue
T@"NSObject<OS_dispatch_queue>",&,V_predictionsQueue
submitSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_submitSemaphore
isGPUPathForbidden
Tc,V_isGPUPathForbidden
isANEPathForbidden
Tc,V_isANEPathForbidden
blobNameToLastPtrFlags
T@"NSMutableDictionary",R,N,V_blobNameToLastPtrFlags
ndArrayInterpretation
Tc,N,V_ndArrayInterpretation
imagePreprocessingParameters
T@"NSDictionary",&,N,V_imagePreprocessingParameters
espressoProfileInfo
T@"EspressoProfilingNetworkInfo",&,N,V_espressoProfileInfo
container
T@"MLNeuralNetworkContainer",W,N,V_container
inputLayers
T@"NSArray",R,&,N,V_inputLayers
outputLayers
T@"NSArray",R,&,N,V_outputLayers
hardwareFallbackDetected
Tc,N,V_hardwareFallbackDetected
espressoInputShapes
T@"NSDictionary",&,N,V_espressoInputShapes
espressoInputStrides
T@"NSDictionary",&,N,V_espressoInputStrides
modelVersionInfo
T@"MLVersionInfo",R,N,V_modelVersionInfo
 layer: weight size incorrect
 layer : insufficient units in quantized weight byte stream
 layer : all the weight matrices must have same type
 layer: weight matrix size incorrect
 layer : all the weight matrices must have same quantization level
 layer : all quantized weight matrices must have same number of bytes
 layer : all weight matrices must have either linear quantization or LUT
_per_ch_qscale
_per_ch_qbias
_lut_to_float32
 layer: bias size incorrect
 layer: insufficient units in quantized bias byte stream
/System/Library/Frameworks/SoundAnalysis.framework/SoundAnalysis
Feature '%@' is not provided
Cannot merge batch of size %@ with batch of size %@
first
T@"<MLBatchProvider>",&,N,V_first
second
T@"<MLBatchProvider>",&,N,V_second
Invalid window starting at %@ of length %@ for batch size %@
fullBatch
T@"<MLBatchProvider>",&,N,V_fullBatch
startIndex
Tq,N,V_startIndex
windowLength
Tq,N,V_windowLength
indices
T@"NSArray",&,N,V_indices
Expected to vectorize into matrix, but was passed a %@ multiarray
Row count of matrix (%@) does not match batch size (%@)
axes
expand_dims
The must be the same value count for each feature. Feature '%@' has %@ values. Expected %@
Failed to determine type of feature '%@'.
Error initializing sample %@ of feature `%@`
_max_loop_iters
load_constant
_load_iterator
cf_loop
_loop_start
_loop_cond_check
elementwise
_loop_count_check
_loop_joint_condition
cf_if
_increment_iterator
cf_jump
_jump
cf_end
_end_loop_if
_end_loop
Custom model implmenetantion class named '%@' does not conform to MLCustomModel protocol
Parameter '%@' has no value
Model type is not a CustomModel
customModel
T@"NSObject<MLCustomModel>",&,V_customModel
Shape must have at least 3 dimensions, The third dimension to the last (channels) must be 3, and any earlier dimensions must have a size of 1.
Shape must have at least 2 dimensions, and if more, the first dimensions should have a size of 1.
Invalid array shape [%@] for converting to gray image. %@
Failed to create BGRA image %@ x %@
Failed to create temporary buffer for conversion to image
Failed to convert planar to OneComponent8: Code=%@
Invalid array shape [%@] for converting to BGR image. %@
Shape's width (%d) doesn't match the pixel buffer's width (%d)
Shape's height (%d) doesn't match the pixel buffer's height (%d)
Failed to convert planar to BGRAX888: Code=%@
pixel format type %c%c%c%c is not supported.
Duplicate image preprocessing directive for feature '%s'.
Unable to map image preprocessing feature name to any given image input name.
is_output
neural_network_optionals
model
Error in serializing blob name to rank dictionary to json.
model.rank.info.json
MultiArray %@-d shape is not allowed, expected %@-d
Size (%@) of dimension (%@) is not in allowed range (%@..%@)
MultiArray shape (%@) does not match the shape (%@) specified in the model description
MultiArray Shape (%@) was not in enumerated set of allowed shapes
sizeRangeForDimension
type
shapeSet
T@"NSOrderedSet",R,N,V_shapeSet
Tq,R,N,V_type
T@"NSArray",R,N,V_sizeRangeForDimension
enumeratedShapes
T@"NSArray",R,N
Pipeline is not marked as updatable to perform update.
Updatable model index is out of range.
Failed to load updatable sub-model at %lu
Failed to carry forward results for model %llu in pipeline
model%llu
%@/%@
updatableModelIndicies
T{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}},R,V_updatableModelIndicies
progressHandlers
T@"MLUpdateProgressHandlers",&,V_progressHandlers
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQueue
updateParameters
MLDictionaryConstraint cannot check undefined values
MLDictionaryConstraint only allows Dictionary values
Dicitonary keys are not all expected type %@
String
Int64
keyType
Tq,R,N,V_keyType
kVPoints
kVPointsL2Squared
kNumDataPoints
kNumDimensions
Unexpected dimensionality of update data
Training data is empty
numDataPoints
TQ,N,V_numDataPoints
numDimensions
TQ,N,V_numDimensions
Transpose Utility Error: # elements mismatch between source tensor (
and provided shape (
Transpose Utility Error: axes out of bound: 
 must be within 0 and 
MLAutomaticOutputBackingModeDisabled
MLAutomaticOutputBackingModeForced
usesCPUOnly
classifyTopK
maxComputationBatchSize
TQ,V_classifyTopK
useCPUOnly
outputBackings
T@"NSDictionary",C,N,V_outputBackings
automaticOutputBackingMode
T@"NSDictionary",C,N,V_automaticOutputBackingMode
TQ,V_maxComputationBatchSize
Tc,N,V_usesCPUOnly
general_slice
load_random
log_
gumbel_max
Convolution3D layer: '
', convolution3D does not support weight as input tensor.
', input channels must be divisible by the number of groups.
', output channels cannot be 0
', input channels cannot be 0
Convolution 3D layer: '
' , if set, output shape must be of length 3
Convolution3D padding type not set
deconv3d
conv3d
' , size of weight parameter not equal to the product of kernel sizes, number of kernels, and kernel channels
' quantized weights are not currently supported
' , size of bias parameter not equal to the number of output channels
' quantized bias is not currently supported
restrictNeuralNetworksToUseCPUOnly
restrictNeuralNetworksFromUsingANE
Tc,V_restrictNeuralNetworksToUseCPUOnly
Tc,V_restrictNeuralNetworksFromUsingANE
isNeuralNetworkGPUPathForbidden
Tc,R,N,V_isNeuralNetworkGPUPathForbidden
modelExecutionSchedule
T@"NSDictionary",C,N,V_modelExecutionSchedule
dictionary
featureNames
T@"NSSet",R,N
T@"NSDictionary",&,N,V_dictionary
Invalid URL for .mlmodel.
Unable to load model at %@ with error: %@
Updating encrypted model %@ is not supported.
Model at %@ is not in the expected format
Failed to open model at %@
Failed to unarchive model at %@
Unable to extract model type from stream in compiled model: %@
No known class for loading model type %@
IO Error loading model from compiled model archive: %@
Unable to load model
Loading class must conform to serializable protocols
com.apple.
Model type %@ is not updatable.
MLModelType_pipelineClassifier
MLModelType_pipelineRegressor
MLModelType_pipeline
MLModelType_glmRegressor
MLModelType_supportVectorRegressor
MLModelType_treeEnsembleRegressor
MLModelType_neuralNetworkRegressor
MLModelType_bayesianProbitRegressor
MLModelType_glmClassifier
MLModelType_supportVectorClassifier
MLModelType_treeEnsembleClassifier
MLModelType_neuralNetworkClassifier
MLModelType_kNearestNeighborsClassifier
MLModelType_neuralNetwork
MLModelType_itemSimilarityRecommender
MLModelType_customModel
MLModelType_linkedModel
MLModelType_oneHotEncoder
MLModelType_imputer
MLModelType_featureVectorizer
MLModelType_dictVectorizer
MLModelType_scaler
MLModelType_categoricalMapping
MLModelType_normalizer
MLModelType_arrayFeatureExtractor
MLModelType_nonMaximumSuppression
MLModelType_identity
MLModelType_textClassifier
MLModelType_wordTagger
MLModelType_visionFeaturePrint
MLModelType_soundAnalysisPreprocessing
MLModelType_gazetteer
MLModelType_wordEmbedding
MLModelType_serializedModel
INVALID
dryRun
Tc,V_dryRun
platform
T@"NSString",&,V_platform
platformVersion
T@"NSString",&,V_platformVersion
containerIsCloud
Tc,V_containerIsCloud
encryptModel
Tc,V_encryptModel
keyInfoVersion
T@"NSNumber",C,V_keyInfoVersion
keyID
T@"NSString",C,V_keyID
T@"NSData",C,V_key
usesCodeSigningIdentityForEncryption
Tc,V_usesCodeSigningIdentityForEncryption
T@"NSData",C,V_iv
sinf
T@"NSData",C,V_sinf
mlsinf
T@"NSData",C,V_mlsinf
outputFiles
T@"NSArray",&,V_outputFiles
compiler error: 
Error reading protobuf spec. %s
mlmodelc
%@ %@
enc_%@
SC_Info
%@.sinf
%@.mlsinf
Key ID has to be specified while encrypting model.
Specified Key ID %@ is not in UUID format.
encryptionInfo
c24@?0@"NSURL"8@"NSError"16
%@ No known class for compiling model type %@
%@ Invalid compiling class %@ for model type %@
%@ Error reading protobuf spec. %s
No known class for compiling model type %@
Invalid compiling class %@ for model type %@
strides must be 
 elements for shape
Shape must have at least one element
@"NSDictionary"8@?0
fileURL is nil
Input file too large to hash
Failed to hash the input file.
Failed to hash the input file: %s
gather_nd
begin
size
_mask_cmp_name
_is_end_mask
_end_ids
_stride_name
_beginmask_name
general_concat
Lookup table size incorrect.
Unrecognizable quantization parameters
Unrecognizable linear quantization scale parameter length.
Quantization bias should have the same length as scale if it exists
per_ch_qscale
per_ch_qbias
lut_to_float32
Models must have one or more inputs
Feature missing a name
Feature description 
 must specify a valid feature type.
Description of multiarray feature '
' has an invalid shape. The shape has zero-length or is missing.
' has an invalid shape. Element 
 has non-positive value 
Filled in missing dataType of multiarray feature '
' to be DOUBLE
Description of dictionary feature '
' must contain a key type of either Int64 or String.
Description of image feature '
' has missing or non-positive width 
' has missing or non-positive height 
' has missing or invalid colorspace. It must be RGB, BGR or GRAYSCALE.
Feature description has an unspecified or invalid type for feature '
Upgraded specification version from 
 to 
 because this model makes use of functionality only available on iOS 12+
 because this model makes use of functionality only available on iOS 11.2+
alpha
beta
CodedObject
matrix_band_part
Initialization of Gazetteer parameters failed
revision
TQ,V_revision
language
T@"NSString",&,V_language
inputFeatureName
T@"NSString",&,V_inputFeatureName
outputFeatureName
T@"NSString",&,V_outputFeatureName
modelParameterData
T@"NSData",&,V_modelParameterData
labelNames
T@"NSArray",&,V_labelNames
T@"NSDictionary",&,V_metadata
Model type is not a Gazetteer
Model description is invalid
NaturalLanguage framework not available on this OS version
Invalid parameters for Gazetteer
parameters.modelParameterData does not exist or is not a NSData
initialization of gazetteer model with model data failed
Input string feature '%@' not found
Gazette does not contain input string '%@'. 
word
label
This is a gazetteer model (version %lu) which classifies %@ text according to set {
This is a gazetteer model (version %lu) which classifies text according to set {
Unable to save model to %@. %s
parameters
T@"MLAppleGazetteerParameters",R,V_parameters
format
Ti,V_format
confidenceFeatureName
T@"NSString",&,V_confidenceFeatureName
coordinatesFeatureName
T@"NSString",&,V_coordinatesFeatureName
values
T@"NSArray",R,N,V_values
stringValues
int64Values
sequence
T@"MLSequence",R,N,V_sequence
featureValues
%lld.%lld.%lld
%@%@
majorVersion
Tq,R,V_majorVersion
minorVersion
Tq,R,V_minorVersion
patchVersion
Tq,R,V_patchVersion
variantString
T@"NSString",R,V_variantString
versionNumberString
T@"NSString",R,N
versionString
_SNVGGishFeatureEmbeddingCustomModel
Framework not available on this version
com.apple
Feature embedding not available on this version
Frontend processing does not conform to custom model protocol
Feature embedding failed to init
T@"MLModelDescription",R,N,V_modelDescription
Execution Profile not recognized.
ERROR: profile=
; idx=
; ref_value=
; pred=
Validation failure loading ML tree model; possibly corrupt image.
sequence_concat
concat
inputs: %@
outputs: %@
predictedFeatureName: %@
predictedProbabilitiesName: %@
updatable: %@
trainingInputs: %@
parameters: %@
metadata: %@
inputDescriptionsByName
outputDescriptionsByName
predictedFeatureName
predictedProbabilitiesName
trainingInputDescriptionsByName
isUpdatable
parameterDescriptionsByKey
modelURL
inputFeatureNames
T@"NSOrderedSet",&,V_inputFeatureNames
outputFeatureNames
T@"NSOrderedSet",&,V_outputFeatureNames
T@"NSArray",C,N,V_classLabels
T@"NSURL",&,N,V_modelURL
Tc,N,V_isUpdatable
T@"NSDictionary",&,N,V_trainingInputDescriptionsByName
T@"NSDictionary",&,N,V_parameterDescriptionsByKey
modelPath
T@"MLLayerPath",&,N,V_modelPath
T@"NSDictionary",R,N,V_inputDescriptionsByName
T@"NSDictionary",R,N,V_outputDescriptionsByName
T@"NSString",R,C,N,V_predictedFeatureName
T@"NSString",R,C,N,V_predictedProbabilitiesName
T@"NSDictionary",R,N,V_metadata
defaultValue
numericConstraint
parameterKey: %@
defaultValue: %@
numericConstraint: %@
T@"MLParameterKey",&,N,V_key
T@,&,N,V_defaultValue
T@"MLNumericConstraint",&,N,V_numericConstraint
range
layerName
T@"NSString",C,N,V_layerName
scopedModelNames
T@"NSArray",C,N,V_scopedModelNames
space_to_depth
block_size
upscale_factor
activation
_leaky_relu
model.mlmodel
%@ does not exist
(Loaded)
(Failed Load)
(Not loaded)
Model is not a classifier.
MLModelAsset: classifierWithError: load failed.
Model is not a regressor.
.espresso.net
Failed to check ANE IR: argument result must not be nil
Failed to check ANE IR because espresso_ane_cache_has_network returned status=%d for network at %@.
Failed to purge ANE IR because espresso_ane_cache_has_network returned status=%d for network at %@, before purging.
Failed to purge ANE IR because espresso_ane_cache_purge_network returned status=%d for network at %@
Failed to purge ANE IR because espresso_ane_cache_has_network returned status=%d for network at %@, after purging.
Failed to purge ANE IR: ANE cache for network at %@ persists after purging
ranLoad
Tc,V_ranLoad
asset
T@"NSObject<MLModeling>",&,V_asset
loadConfiguration
T@"MLModelConfiguration",R,N,V_loadConfiguration
compiledURL
T@"NSURL",R,V_compiledURL
T@"<MLModeling>",R,N
regressor
T@"<MLRegressor>",R,N
classifier
T@"<MLClassifier>",R,N
isOrderedBgr
isGrayScale
blueBias
greenBias
redBias
grayBias
scale
compiler major version for compiled model is %@ and is more recent than this framework major version %@.
Error in reading the network.
transform_params
layers
rnn_arch
encoder_bidirectional_mode
model.espresso.net
model_updatable.params
Error in unarchiving updatable params.
bottom
optionalInputTypes
T{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_optionalInputTypes
inputLayerNames
T@"NSArray",R,&,N,V_inputLayerNames
outputLayerNames
T@"NSArray",R,&,N,V_outputLayerNames
name
T@"NSString",&,N,V_name
inputDescription
T@"NSDictionary",&,N,V_inputDescription
outputDescription
T@"NSDictionary",&,N,V_outputDescription
imageParameters
T@"NSDictionary",&,N,V_imageParameters
configurationList
T@"NSArray",&,N,V_configurationList
hasDynamicLayer
TB,N,V_hasDynamicLayer
T@"NSArray",&,V_classLabels
T@"NSString",&,V_classScoreVectorName
transformDesc
T@"MLModel",&,V_transformDesc
Tc,V_ndArrayInterpretation
imagePreprocessingParams
T@"NSDictionary",&,N,V_imagePreprocessingParams
updatableModelCompiledParams
T@"MLNeuralNetworksCompileTimeParams",&,N,V_updatableModelCompiledParams
optionalInputDefaultValues
T@"NSDictionary",&,N,V_optionalInputDefaultValues
modelIsEncrypted
Tc,N,V_modelIsEncrypted
T@"MLVersionInfo",&,N,V_modelVersionInfo
Initialization of Text classifier parameters failed
Model type is not a Word tagger
Invalid parameters for Text Classifier
initialization of text classifier model with model data failed
Prediction failed
Input text
Text label
This model is a text classifier (version %lu) which classifies %@ text according to set {
This model is a text classifier (version %lu) which classifies text according to set {
T@"MLAppleTextClassifierParameters",R,V_parameters
numberOfDimensions
TQ,V_numberOfDimensions
weightingScheme
Tq,V_weightingScheme
indexType
Tq,V_indexType
leafSize
TQ,V_leafSize
defaultLabel
T@"NSObject",&,V_defaultLabel
nearestLabelsFeatureName
T@"NSString",&,V_nearestLabelsFeatureName
nearestDistancesFeatureName
T@"NSString",&,V_nearestDistancesFeatureName
Interface type is not an ItemSimilarityRecommender
Could not construct item similarity recommender: %s
Internal error: model too large to be compiled.
Internal Error: item index out of bounds.
Input sequence of items for item similarity recommender must be strings or integers.
Input sequence of items for item similarity recommender with string item ids must be strings.
Input sequence of items for item similarity recommender with integer item ids must be integers.
String items require string item ids to be be set.
Input sequence of items for item similarity recommender must be integers or strings.
Input items for item similarity recommender must be a dictionary or a sequence.
Input restriction list of items for item similarity recommender must be a sequence.
Input exclusion list of items for item similarity recommender must be a sequence.
sequence_repeat
lower
upper
lossType
optimizerType
optimizerParameters
lossParameters
trainableLayerNames
Error in archiving updatable params.
MLNeuralNetworksCompileTimeParams
Tq,N,V_lossType
Tq,N,V_optimizerType
T@"NSDictionary",&,N,V_optimizerParameters
T@"NSDictionary",&,N,V_lossParameters
T@"NSArray",&,N,V_trainableLayerNames
T@"NSDictionary",&,N,V_updateParameters
CPU Only
GPU and CPU
Unknown
computeUnits
useSPIforScribble
allowLowPrecisionAccumulationOnGPU
allowBackgroundGPUCompute
enableTestVectorMode
MPSDeviceOptions
rootModelURL
usePreloadedKey
 computeUnits: %@, 
 allowLowPrecisionAccumulationOnGPU: %s, 
 preferredMetalDevice: %@
allowBackgroundGPUComputeSetting
Tc,V_allowBackgroundGPUComputeSetting
useWatchSPIForScribble
Tc,N,V_useWatchSPIForScribble
allowFloat16AccumulationOnGPU
Tc,N
Tc,V_allowLowPrecisionAccumulationOnGPU
preferredMTLDevice
T@"<MTLDevice>",&,N
preferredMetalDevice
T@"<MTLDevice>",&,N,V_preferredMetalDevice
Tc,N,V_enableTestVectorMode
T@"NSDictionary",&,V_parameters
T@"NSURL",&,V_rootModelURL
profilingOptions
Tq,N,V_profilingOptions
Tc,N,V_usePreloadedKey
Tq,V_computeUnits
sparse features not yet supported
an error occurred when trying to create specification for BayesianProbitRegression
Unsupported key type for dictionary feature
Unsupported sequence type
Could not save MLModelDescription to MLModelSpecification
Batch produced nil feature provider for index %@
Failed to obtain prediction for sample %@
regress:error must be implemented by derived class!
transpose
Load Constant: shape must be of size 3
Load Constant: data size does not match provided shape
copy
numerator
denominator
_numerator_reduce_mean_
reduce_mean
reduce
_temp
temp
_denominator_reduce_l2_
reduce_l2
square_of_denominator
_denominator_
numerator_div_denominator
gamma
numerator_div_denominator_mul_gamma
NetworkUpdateParameters
Failed to archive update parameters.
unable to serialize object
_lossValue
Error in initalizing categorical cross entropy loss layer. This loss layer might be invalid.
Error in initalizing mean squared error loss layer. This loss layer might be invalid.
Current loss layer is not supported.
Current optimizer is not supported.
Error in initializing updatable model.
Error in creating updatable model.
kUpdateLossTargetName
kUpdateLossInputName
kUpdateLossOutputName
Error in initalizing optimizer. The parameters might be invalid..
classify:topK:error be implemented by derived class!
output size = 
 not allowed in layer 
input size = 
Recurrent layer: too many output blobs.
Recurrent layer: too few output blobs.
Recurrent layer: too many input blobs.
GRU layer: must provide 2 activations
_prereverse
sequence_reverse
GRU layer: '
': height dimension of the input blob must be 1.
': width dimension of the input blob must be 1.
T@"MLPipeline",&,V_engine
pipeline
T@"MLPipeline",R
Recurrent layer: too few input blobs.
SimpleRecurrent
Recurrent layer: '
one_hot
softmax
cf_else
_else
_end
weight
Cannot load weights for linear layer: '
Weights parameter for linear layer must be a tensor.
Invalid weights shape: number of dimensions needs to be 2
in linear layer: '
Unexpected non-constant dimension in weights shape for linear layer '
number of output channels = 
number of input channels = 
inner_product
bias
Size of weights = 
 is not equal to size of the product of input and output channels = 
 in layer 
Size of bias = 
 is not equal to the output channels = 
Average Layer must have exactly 1 output
sum_out
_sum
_sum_
perm
Unable to read permutation parameter for transpose layer: '
Permutation parameter for transpose layer must be a tensor.
Length of Permutation parameter for transpose layer must be between 1 and 5 (inclusive).
squeeze
Upsample layer: 
 , Fractional scaling only compatible with align_corners=true or align_corners=false bilinear mode.
 , Only one of scalingFactor and fractionalScalingFactor can be set, and if set, must be of size 2.
Upsample layer: '
': unknown value for parameter 'mode'.
': unknown value for parameter 'linearupsamplemode'.
Initialization of sceneprint parameters failed
scenePrintVersion
TQ,R,V_scenePrintVersion
objectPrintVersion
TQ,R,V_objectPrintVersion
expectedShapes
T@"NSArray",R,V_expectedShapes
expectedKeys
T@"NSArray",R,V_expectedKeys
Initialization of image feature extractor parameters failed
featureExtractorParameters
T@,R,V_featureExtractorParameters
Invalid parameters for vision feature print
Model type is not a vision feature print
Must only have one input image feature
Vision framework not available for scene print on this OS version
Must only have one output multiarray feature
Must allow %lu-element vector as output
Vision framework not available for object print on this OS version
ObjectPrint unable to get expected shapes
Output count %lu does not match expected %lu from object print
Output count %lu does not match expected %lu in the request revision %lu
Output name %@ not found in the outputs specified in object print
Output %@ is not a MultiArray
Must allow (%@, %@, %@) vector for output feature %@
Feature extractor type not set
v16@?0^v8
Input image feature '%@' not found
Vision framework for scene print not available on this OS version
Vision framework for object print not available on this OS version
T@"MLAppleImageFeatureExtractorParameters",R,V_parameters
q24@?0@"NSArray"8@"NSArray"16
Could not save BOPR model to MLModelSpecification
Interface type is not a Bayesian Online Probit Regressor
no features
require feature type of MLMultiArray with one of Int32 values
incorrect number of features: expected %d but got %d
invalid prediction feature type
invalid prediction features
updateModelFromFeatures failed
Double
Float32
Int32
MLMultiArrayDataTypeInvalid (%d)
 vector
 matrix
 array
dataType
shape
strides
dataPointer
T^v,R,N
T@"NSArray",R,N,V_shape
T@"NSArray",R,N,V_strides
numberOfBytesPerElement
TQ,R,N
managingData
Tc,R,N,GisManagingData
contiguous
Tc,R,N,GisContiguous
Unable to copy %@ into %@
Unable to vectorize %@ into %@
value count (%@) does not match array count (%@)
The array of array is not a matrix: some row's length is %lu, but another row's length is %lu
multiArrays shall not be empty.
The first input MLMultiArray has too many dimensions (%@)
%@-th input MLMultiArray has shape (%@), which is different from the first input's shape: (%@).
%@-th input MLMultiArray has shape (%@), but %@-th dimension shall not be negative.
%@-th input MLMultiArray has shape (%@) but the first input's shape is (%@); %@-th dimension doesn't match.
v32@?0@"MLMultiArray"8Q16^c24
The sum of the dimensions at the concatenating axis was too big and caused an integer overflow.
setRangeWithRawData: range out of bounds.
setRangeWithRawData: non-contiguous %@d destination unsupported
setRangeWithRawData: failed to vectorize source
multiArray
T@"MLMultiArray",&,V_multiArray
Invalid origin %@ for slicing %@
Invalid shape %@ for slicing %@
Slice at %@ with shape %@ is out of bounds
Shape %@ is not squeezable at dimensions %@
parent
T@"MLMultiArray",R,N,V_parent
Nothing to concatenate.
The first multi array has a shape with size 
 but another multi array's shape size is 
The first multi array has a shape 
 but another multi array's shape is 
; they cannot be concatenate along with axis: 
%80s
unknown svm type.
unknown kernel function.
unknown text in model file: [%s]
ERROR: fscanf failed to read model
Exceeds max_iter in multiclass_prob
c_svc
nu_svc
one_class
epsilon_svr
nu_svr
linear
polynomial
sigmoid
precomputed
Interface type is not an TreeEnsembleClassifier
Could not construct tree ensemble regressor.
.mlmodelc
.xgboost
Cannot initialize Tree Ensemble Classifier model which contains a trained model.
INTERNAL ERROR -- feature not present that should have been.
Incorrect number of classes given (TreeEnsembleClassifier).
Crop resize bilinear layer: 
 , target size must be of length 2, if set
Sampling mode not set in crop resize layer.
Box coordinates mode not set in crop resize layer.
crop_and_resize
Initialization of word tagger parameters failed
tokensOutputFeatureName
T@"NSString",&,V_tokensOutputFeatureName
tokenTagsOutputFeatureName
T@"NSString",&,V_tokenTagsOutputFeatureName
tokenLocationsOutputFeatureName
T@"NSString",&,V_tokenLocationsOutputFeatureName
tokenLengthsOutputFeatureName
T@"NSString",&,V_tokenLengthsOutputFeatureName
tagNames
T@"NSArray",&,V_tagNames
Model type is not a word tagger
Invalid parameters for Word Tagger
initialization of word tagger model with model data failed
Token tags
Token lengths
Token locations
Tokens
This model is a word tagger (version %lu) which tags %@ words according to set {
This model is a word tagger (version %lu) which tags words according to set {
T@"MLAppleWordTaggerParameters",R,V_parameters
URL has nil fileSystemRepresentation
model does not implement protocol MLModelSpecificationSaver
0.0.0
Serializing model to compiled format is not yet supported.  Try with compilerOptions=nil
Could not find model at %@
Cloning %s to %s FAILED with (%d : %s)
Failed to copy model from %@ to %@
nullable 
URL of the underlying .mlmodelc directory.
+ (nullable NSURL *)URLOfModelInThisBundle
Initialize 
 instance from the model URL.
@param modelURL URL to the .mlmodelc directory for 
@param error If an error occurs, upon return contains an NSError object that describes the problem. If you are not interested in possible errors, pass in NULL.
- (nullable instancetype)initWithContentsOfURL:(NSURL *)modelURL error:(NSError * _Nullable __autoreleasing * _Nullable)error
 instance with the model in this bundle.
@param configuration The model configuration object
- (nullable instancetype)initWithConfiguration:(MLModelConfiguration *)configuration error:(NSError * _Nullable __autoreleasing * _Nullable)error
- (nullable instancetype)initWithContentsOfURL:(NSURL *)modelURL configuration:(MLModelConfiguration *)configuration error:(NSError * _Nullable __autoreleasing * _Nullable)error
- (nullable instancetype)init
 instance from an existing MLModel object.
Usually the application does not use this initializer unless it makes a subclass of 
Such application may want to use `-[MLModel initWithContentsOfURL:configuration:error:]` and `+URLOfModelInThisBundle` to create a MLModel object to pass-in.
- (instancetype)initWithMLModel:(MLModel *)model
Construct 
 instance asynchronously with configuration.
Model loading may take time when the model content is not immediately available (e.g. encrypted model). Use this factory method especially when the caller is on the main thread.
@param configuration The model configuration
@param handler When the model load completes successfully or unsuccessfully, the completion handler is invoked with a valid 
 instance or NSError object.
+ (void)loadWithConfiguration:(MLModelConfiguration *)configuration completionHandler:(void (^)(
 * _Nullable model, NSError * _Nullable error))handler
 instance asynchronously with URL of .mlmodelc directory and optional configuration.
@param modelURL The model URL.
+ (void)loadContentsOfURL:(NSURL *)modelURL configuration:(MLModelConfiguration *)configuration completionHandler:(void (^)(
Make a prediction using the convenience interface
@param 
@return the prediction as 
Make a prediction using the standard interface
@param input an instance of 
 to predict from
@param options prediction options
Batch prediction
@param inputArray array of 
 instances to obtain predictions from
@return the predictions as NSArray<
 error:(NSError * _Nullable __autoreleasing * _Nullable)error
predictionFrom
)input error:(NSError * _Nullable __autoreleasing * _Nullable)error
)input options:(MLPredictionOptions *)options error:(NSError * _Nullable __autoreleasing * _Nullable)error
- (nullable NSArray<
 *> *)predictionsFromInputs
:(NSArray<
*> *
)inputArray options:(MLPredictionOptions *)options error:(NSError * _Nullable __autoreleasing * _Nullable)error
/// Model Prediction Input Type
@interface 
 : NSObject<MLFeatureProvider>
@end
/// Model Update Input Type
- (instancetype)init NS_UNAVAILABLE;
- (nullable instancetype)
- (instancetype)
initWith
 NS_DESIGNATED_INITIALIZER
/// Model Prediction Output Type
/// 
@property (readwrite, nonatomic
, strong
, nullable
#import <Foundation/Foundation.h>
#import <CoreML/CoreML.h>
#include <stdint.h>
#include <os/log.h>
NS_ASSUME_NONNULL_BEGIN
/// Class for model loading and prediction
 : NSObject
@property (readonly, nonatomic, nullable) MLModel * model;
 NS_DESIGNATED_INITIALIZER;
NS_ASSUME_NONNULL_END
@implementation 
NSString *assetPath = [[NSBundle bundleForClass:[self class]] pathForResource:@"
" ofType:@"mlmodelc"];
if (nil == assetPath) { os_log_error(OS_LOG_DEFAULT, "Could not load 
.mlmodelc in the bundle resource"); return nil; }
return [NSURL fileURLWithPath:assetPath];
self = [super init];
if (!self) { return nil; }
_model = model;
if (_model == nil) { return nil; }
return self;
return [self initWithContentsOfURL:self.class.URLOfModelInThisBundle error:nil];
return [self initWithContentsOfURL:self.class.URLOfModelInThisBundle configuration:configuration error:error];
MLModel *model = [MLModel modelWithContentsOfURL:modelURL error:error];
if (model == nil) { return nil; }
return [self initWithMLModel:model];
MLModel *model = [MLModel modelWithContentsOfURL:modelURL configuration:configuration error:error];
[self loadContentsOfURL:[self URLOfModelInThisBundle]
          configuration:configuration
      completionHandler:handler];
[MLModel loadContentsOfURL:modelURL
             configuration:configuration
         completionHandler:^(MLModel *model, NSError *error) {
    if (model != nil) {
        
 *typedModel = [[
 alloc] initWithMLModel:model];
        handler(typedModel, nil);
    } else {
        handler(nil, error);
    }
return [self predictionFromFeatures:input options:[[MLPredictionOptions alloc] init] error:error];
id<MLFeatureProvider> outFeatures = [_model predictionFromFeatures:input options:options error:error];
return 
outFeatures
 *input_ = [[
 alloc] initWith
return [self 
:input_ error:error];
id<MLBatchProvider> inBatch = [[MLArrayBatchProvider alloc] initWithFeatureProviderArray:inputArray];
id<MLBatchProvider> outBatch = [_model predictionsFromBatch:inBatch options:options error:error];
NSMutableArray<
*> *results = [NSMutableArray arrayWithCapacity:(NSUInteger)outBatch.count];
for (NSInteger i = 0; i < outBatch.count; i++)
id<MLFeatureProvider> resultProvider = [outBatch featuresAtIndex:i];
 * result = 
resultProvider
[results addObject:result];
return results;
if (self)
CVPixelBufferRetain(
- (void)dealloc
CVPixelBufferRelease(
NSError *localError;
BOOL result = YES;
id retVal = nil;
@autoreleasepool
kCVPixelFormatType_OneComponent8
kCVPixelFormatType_32ARGB
kCVPixelFormatType_32BGRA
MLFeatureValue * __
 = nil;
if (
 = [MLFeatureValue 
 pixelsWide:
 pixelsHigh:
 pixelFormatType:
 options:nil
 error:&localError
 == nil)
result = NO;
break;
retVal = [self 
(CVPixelBufferRef)
.imageBufferValue
while(0);
if (error != NULL)
*error = localError;
return result ? retVal : nil;
-(BOOL)set
BOOL result = NO;
 != nil)
 =  (CVPixelBufferRef)
.imageBufferValue;
result = YES;
return result;
else 
*error = [NSError errorWithDomain:@"com.apple" code:0 
userInfo: @{NSLocalizedDescriptionKey : @"
 is nil."}];
return NO;
 error:(NSError * _Nullable __autoreleasing * _Nullable)error 
- (NSSet<NSString *> *)featureNames
return [NSSet setWithArray:@[
- (nullable MLFeatureValue *)featureValueForName:(NSString *)featureName
if ([featureName isEqualToString:@"
 == nil ? nil : 
[MLFeatureValue 
:[MLSequence sequenceWithInt64Array
:[MLSequence sequenceWithStringArray
INVALID_SEQUENCE
(NSString *)
(MLMultiArray *)
(NSDictionary *)
(NSArray<NSNumber *> *)
(NSArray<NSString *> *)
 error:nil
.longLongValue
.doubleValue
return nil;
#import "
MLMultiArray *
NSArray<NSNumber *> *
NSArray<NSString *> *
NSDictionary<NSNumber *, NSNumber *> *
NSDictionary<NSString *, NSNumber *> *
NSNumber *
double
CVPixelBufferRef
int64_t
NSString *
multiArrayValue
sequenceValue
dictionaryValue
doubleValue
imageBufferValue
int64Value
stringValue
predictionFromFeatures
macos
watchos
tvos
API_AVAILABLE(
%@(%@)
 API_UNAVAILABLE(
 __attribute__((visibility("hidden")))
AtURL
FromCGImage
CGImage
CGImageRef
NSURL *
(NSDictionary<NSNumber *, NSNumber *> *)
(NSDictionary<NSString *, NSNumber *> *)
 featureValueForName:@"
.int64Values
.stringValues
WithURL
WithCGImage
featureValueWithCGImage
featureValueWithImageAtURL
featureValueWithPixelBuffer
featureValueWithInt64
featureValueWithDouble
featureValueWithString
featureValueWithDictionary
featureValueWithMultiArray
featureValueWithSequence
NNv2
true
features.%@
userDefaults
T@"NSUserDefaults",R,N,V_userDefaults
flags
T@"NSMutableDictionary",R,N,V_flags
overrideOriginalValues
T@"NSMutableDictionary",R,N,V_overrideOriginalValues
kDescription
kLabelsForDataPoints
kLabelType
kIndexType
kIndex
kDefaultLabel
kWeightingScheme
kNearestLabelsFeatureName
kNearestDistancesFeatureName
kParameterContainer
Index type is invalid for this model.
Missing input name for K Nearest Neighbor model.
K Nearest Neighbor models only accept multi array input types.
_debugNearestLabels
_debugNearestDistances
Missing MLMultiArray for MLFeatureProvider
Shape of input MLMultiArray is %@, expected %@
Error computing pairwise distances in k-nearest neighbors model.
Error predicting class due to missing data points and default label.
Unable to load class labels for k-Nearest-Neighbor model.
Invalid k-nearest neighbor model -- the length of the data vector is not a multiple of the given dimensionality.
numberOfNeighbors
Failed to unarchive model parameters.
Failed to archive model parameters.
notreesyet
Received nil MLFeatureProvider for index %d from training data MLBatchProvider
Missing MLMultiArrayValue for feature named %@
Shape of training data point %d MLMultiArray is %@, expected %@
Failed to convert training data to the right format
Missing MLFeatureValue for feature named %@
Label type must be one of MLFeatureTypeString or MLFeatureTypeInt64
Failed to update model with training data
Failed to create directory at %@
Failed archive updated model
Failed save updated model to %@
Nearest Neighbor Classifier Model does not have a parameter for requested key %@.
T@"MLUpdateProgressHandlers",&,N,V_progressHandlers
progressHandlersDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_progressHandlersDispatchQueue
continueWithUpdate
Tc,N,V_continueWithUpdate
parameterContainer
T@"MLParameterContainer",&,N,V_parameterContainer
TQ,N,V_numberOfDimensions
Tq,N,V_indexType
index
T@"<MLNearestNeighborsIndex>",&,N,V_index
labelType
Tq,N,V_labelType
labelsForDataPoints
T@"NSArray",&,N,V_labelsForDataPoints
labelsSet
T@"NSOrderedSet",&,N,V_labelsSet
T@"NSObject",&,N,V_defaultLabel
Tq,N,V_weightingScheme
T@"NSString",&,N,V_nearestLabelsFeatureName
T@"NSString",&,N,V_nearestDistancesFeatureName
modelParameters
unable to deserialize object
outputChannels = 
inputDim = 
 is not equal to size of the product of input dims and output channels = 
Embedding layer '
' has insufficient bytes for 
units in weight
 is not equal to the output dims = 
units in bias
Embedding layer: '
': channel dimension of the input blob must be 1.
_load_constant_
coreml
com.apple.coreml
modelNames
.model%lluv%@
Failed to evaluate model %@ in pipeline
Failed to carry forward results for model %@ in pipeline
Failed to copy original model files to the new destionation: %@
Pipeline Model contains multiple models that have parameter for requested key %@. Use parameter scoping to disambiguate.
Pipeline Model does not contain a model that has a parameter for requested key %@.
models
T@"NSArray",&,V_models
T@"NSArray",&,V_modelNames
Error: Attempted multiple write-open of data blob 
.DAT
non-directory file already exists at archive path
existing archive path is not a writable directory
error creating directory: %@
get_shape
Interface type is not an Support Vector Classifier
modelType
generatedClassName
predict
method
shortDescription
version
license
author
specificationVersion
metadataOutputVersion
dependencies
className
customLayers
customModels
outputSchema
inputSchema
trainingInputSchema
availability
userDefinedMetadata
neuralNetworkLayerTypeHistogram
error
{"error":"unknown error"}
MLModelType_imageClassifier
structure
layerDescription
Color
formattedType
epochs
Default number of iterations during training
shuffle
Controls whether data is shuffled on each epoch
seed
Random seed
learningRate
Controls learning step size. Adjustable in progress
miniBatchSize
Number of examples used to compute single gradient step
momentum
Helps accelerate gradients vectors in the right directions
beta1
Controls the exponential decay rate for the first moment estimates
beta2
Controls the exponential decay rate for the second moment estimates
A very small number to prevent any division by zero in the implementation
model%d
%lld
[%lld, %lld]
allowedRange
allowedSet
scope
Bool
false
[%f, %f]
linkedModelFileName
File name of linked model
linkedModelSearchPath
Search path used to resolve model file name
Number of neighbors to use for prediction
MLNeuralNetworkLayerlayer_
MLActivationParamsNonlinearityType_
MLPaddingLayerParamsPaddingType_
Deconvolution
Convolution
Sqrt
Rsqrt
Inverse
Power
Threshold
<Unspecified>
Unary
Prod
LogSum
SumSquare
Argmax
Reduce
NearestNeighbor
BiLinear
Upsample
Average
Pooling
SpaceToDepth
DepthToSpace
PixelShuffle
ReorganizeData
InstanceBatchNorm
BatchNorm
Padding
Activation
Branch
Loop
MLPaddingLayerParamsPaddingType_constant
MLPaddingLayerParamsPaddingType_reflection
MLPaddingLayerParamsPaddingType_replication
MLActivationParamsNonlinearityType_linear
MLActivationParamsNonlinearityType_ReLU
MLActivationParamsNonlinearityType_leakyReLU
MLActivationParamsNonlinearityType_thresholdedReLU
MLActivationParamsNonlinearityType_PReLU
MLActivationParamsNonlinearityType_tanh
MLActivationParamsNonlinearityType_scaledTanh
MLActivationParamsNonlinearityType_sigmoid
MLActivationParamsNonlinearityType_sigmoidHard
MLActivationParamsNonlinearityType_ELU
MLActivationParamsNonlinearityType_softsign
MLActivationParamsNonlinearityType_softplus
MLActivationParamsNonlinearityType_parametricSoftplus
MLNeuralNetworkLayerlayer_convolution
MLNeuralNetworkLayerlayer_pooling
MLNeuralNetworkLayerlayer_activation
MLNeuralNetworkLayerlayer_innerProduct
MLNeuralNetworkLayerlayer_embedding
MLNeuralNetworkLayerlayer_batchnorm
MLNeuralNetworkLayerlayer_mvn
MLNeuralNetworkLayerlayer_l2normalize
MLNeuralNetworkLayerlayer_softmax
MLNeuralNetworkLayerlayer_lrn
MLNeuralNetworkLayerlayer_crop
MLNeuralNetworkLayerlayer_padding
MLNeuralNetworkLayerlayer_upsample
MLNeuralNetworkLayerlayer_resizeBilinear
MLNeuralNetworkLayerlayer_cropResize
MLNeuralNetworkLayerlayer_unary
MLNeuralNetworkLayerlayer_add
MLNeuralNetworkLayerlayer_multiply
MLNeuralNetworkLayerlayer_average
MLNeuralNetworkLayerlayer_scale
MLNeuralNetworkLayerlayer_bias
MLNeuralNetworkLayerlayer_max
MLNeuralNetworkLayerlayer_min
MLNeuralNetworkLayerlayer_dot
MLNeuralNetworkLayerlayer_reduce
MLNeuralNetworkLayerlayer_loadConstant
MLNeuralNetworkLayerlayer_reshape
MLNeuralNetworkLayerlayer_flatten
MLNeuralNetworkLayerlayer_permute
MLNeuralNetworkLayerlayer_concat
MLNeuralNetworkLayerlayer_split
MLNeuralNetworkLayerlayer_sequenceRepeat
MLNeuralNetworkLayerlayer_reorganizeData
MLNeuralNetworkLayerlayer_slice
MLNeuralNetworkLayerlayer_simpleRecurrent
MLNeuralNetworkLayerlayer_gru
MLNeuralNetworkLayerlayer_uniDirectionalLSTM
MLNeuralNetworkLayerlayer_biDirectionalLSTM
MLNeuralNetworkLayerlayer_custom
MLNeuralNetworkLayerlayer_copy
MLNeuralNetworkLayerlayer_branch
MLNeuralNetworkLayerlayer_loop
MLNeuralNetworkLayerlayer_loopBreak
MLNeuralNetworkLayerlayer_loopContinue
MLNeuralNetworkLayerlayer_rangeStatic
MLNeuralNetworkLayerlayer_rangeDynamic
MLNeuralNetworkLayerlayer_clip
MLNeuralNetworkLayerlayer_ceil
MLNeuralNetworkLayerlayer_floor
MLNeuralNetworkLayerlayer_sign
MLNeuralNetworkLayerlayer_round
MLNeuralNetworkLayerlayer_exp2
MLNeuralNetworkLayerlayer_sin
MLNeuralNetworkLayerlayer_cos
MLNeuralNetworkLayerlayer_tan
MLNeuralNetworkLayerlayer_asin
MLNeuralNetworkLayerlayer_acos
MLNeuralNetworkLayerlayer_atan
MLNeuralNetworkLayerlayer_sinh
MLNeuralNetworkLayerlayer_cosh
MLNeuralNetworkLayerlayer_tanh
MLNeuralNetworkLayerlayer_asinh
MLNeuralNetworkLayerlayer_acosh
MLNeuralNetworkLayerlayer_atanh
MLNeuralNetworkLayerlayer_erf
MLNeuralNetworkLayerlayer_gelu
MLNeuralNetworkLayerlayer_equal
MLNeuralNetworkLayerlayer_notEqual
MLNeuralNetworkLayerlayer_lessThan
MLNeuralNetworkLayerlayer_lessEqual
MLNeuralNetworkLayerlayer_greaterThan
MLNeuralNetworkLayerlayer_greaterEqual
MLNeuralNetworkLayerlayer_logicalOr
MLNeuralNetworkLayerlayer_logicalXor
MLNeuralNetworkLayerlayer_logicalNot
MLNeuralNetworkLayerlayer_logicalAnd
MLNeuralNetworkLayerlayer_modBroadcastable
MLNeuralNetworkLayerlayer_minBroadcastable
MLNeuralNetworkLayerlayer_maxBroadcastable
MLNeuralNetworkLayerlayer_addBroadcastable
MLNeuralNetworkLayerlayer_powBroadcastable
MLNeuralNetworkLayerlayer_divideBroadcastable
MLNeuralNetworkLayerlayer_floorDivBroadcastable
MLNeuralNetworkLayerlayer_multiplyBroadcastable
MLNeuralNetworkLayerlayer_subtractBroadcastable
MLNeuralNetworkLayerlayer_tile
MLNeuralNetworkLayerlayer_stack
MLNeuralNetworkLayerlayer_gather
MLNeuralNetworkLayerlayer_scatter
MLNeuralNetworkLayerlayer_gatherND
MLNeuralNetworkLayerlayer_scatterND
MLNeuralNetworkLayerlayer_softmaxND
MLNeuralNetworkLayerlayer_gatherAlongAxis
MLNeuralNetworkLayerlayer_scatterAlongAxis
MLNeuralNetworkLayerlayer_reverse
MLNeuralNetworkLayerlayer_reverseSeq
MLNeuralNetworkLayerlayer_splitND
MLNeuralNetworkLayerlayer_concatND
MLNeuralNetworkLayerlayer_transpose
MLNeuralNetworkLayerlayer_sliceStatic
MLNeuralNetworkLayerlayer_sliceDynamic
MLNeuralNetworkLayerlayer_slidingWindows
MLNeuralNetworkLayerlayer_topK
MLNeuralNetworkLayerlayer_argMin
MLNeuralNetworkLayerlayer_argMax
MLNeuralNetworkLayerlayer_embeddingND
MLNeuralNetworkLayerlayer_batchedMatmul
MLNeuralNetworkLayerlayer_getShape
MLNeuralNetworkLayerlayer_loadConstantND
MLNeuralNetworkLayerlayer_fillLike
MLNeuralNetworkLayerlayer_fillStatic
MLNeuralNetworkLayerlayer_fillDynamic
MLNeuralNetworkLayerlayer_broadcastToLike
MLNeuralNetworkLayerlayer_broadcastToStatic
MLNeuralNetworkLayerlayer_broadcastToDynamic
MLNeuralNetworkLayerlayer_squeeze
MLNeuralNetworkLayerlayer_expandDims
MLNeuralNetworkLayerlayer_flattenTo2D
MLNeuralNetworkLayerlayer_reshapeLike
MLNeuralNetworkLayerlayer_reshapeStatic
MLNeuralNetworkLayerlayer_reshapeDynamic
MLNeuralNetworkLayerlayer_rankPreservingReshape
MLNeuralNetworkLayerlayer_constantPad
MLNeuralNetworkLayerlayer_randomNormalLike
MLNeuralNetworkLayerlayer_randomNormalStatic
MLNeuralNetworkLayerlayer_randomNormalDynamic
MLNeuralNetworkLayerlayer_randomUniformLike
MLNeuralNetworkLayerlayer_randomUniformStatic
MLNeuralNetworkLayerlayer_randomUniformDynamic
MLNeuralNetworkLayerlayer_randomBernoulliLike
MLNeuralNetworkLayerlayer_randomBernoulliStatic
MLNeuralNetworkLayerlayer_randomBernoulliDynamic
MLNeuralNetworkLayerlayer_categoricalDistribution
MLNeuralNetworkLayerlayer_reduceL1
MLNeuralNetworkLayerlayer_reduceL2
MLNeuralNetworkLayerlayer_reduceMax
MLNeuralNetworkLayerlayer_reduceMin
MLNeuralNetworkLayerlayer_reduceSum
MLNeuralNetworkLayerlayer_reduceProd
MLNeuralNetworkLayerlayer_reduceMean
MLNeuralNetworkLayerlayer_reduceLogSum
MLNeuralNetworkLayerlayer_reduceSumSquare
MLNeuralNetworkLayerlayer_reduceLogSumExp
MLNeuralNetworkLayerlayer_whereNonZero
MLNeuralNetworkLayerlayer_matrixBandPart
MLNeuralNetworkLayerlayer_lowerTriangular
MLNeuralNetworkLayerlayer_upperTriangular
MLNeuralNetworkLayerlayer_whereBroadcastable
MLNeuralNetworkLayerlayer_layerNormalization
MLNeuralNetworkLayerlayer_NonMaximumSuppression
MLNeuralNetworkLayerlayer_oneHot
MLNeuralNetworkLayerlayer_cumSum
MLNeuralNetworkLayerlayer_clampedReLU
MLNeuralNetworkLayerlayer_argSort
MLNeuralNetworkLayerlayer_pooling3d
MLNeuralNetworkLayerlayer_globalPooling3d
MLNeuralNetworkLayerlayer_sliceBySize
MLNeuralNetworkLayerlayer_convolution3d
/dev/urandom
Error in initalizing container.
Updated neural network model does not have a parameter for requested key %@.
coreMLToEspressoParamsMap
T@"NSDictionary",&,N,V_coreMLToEspressoParamsMap
lossOutputName
T@"NSString",&,N,V_lossOutputName
lossTargetName
T@"NSString",&,N,V_lossTargetName
shuffableTrainingData
T@"MLShufflingBatchProvider",&,N,V_shuffableTrainingData
classLabelToIndexMap
T@"NSDictionary",R,N,V_classLabelToIndexMap
reverse_seq
Input image has invalid colorspace.
Model output names must not be duplicated.
categorical mapping
MLCategoricalMapping: Unknown input value.
mapping
T@"NSDictionary",R,N,V_mapping
valueOnUnknown
T@"MLFeatureValue",R,N,V_valueOnUnknown
.swift
import CoreML
class var urlOfModelInThisBundle : URL
 instance with explicit path to mlmodelc file
- parameters:
   - modelURL: the file url of the model
- throws: an NSError object that describes the problem
convenience init(contentsOf modelURL: URL) throws
 instance by automatically loading the model from the app's bundle.
@available(*, deprecated, message: "Use init(configuration:) instead and handle errors appropriately.")
convenience 
override 
init()
 instance with an existing MLModel object.
Such application may want to use `MLModel(contentsOfURL:configuration:)` and `
.urlOfModelInThisBundle` to create a MLModel object to pass-in.
  - model: MLModel object
init(model: MLModel)
 instance asynchronously with optional configuration.
  - configuration: the desired model configuration
  - handler: the completion handler to be called when the model loading completes successfully or unsuccessfully
func 
load(configuration: MLModelConfiguration = MLModelConfiguration(), completionHandler handler: @escaping (Swift.Result<
, Error>) -> Void)
 instance asynchronously with URL of the .mlmodelc directory with optional configuration.
  - modelURL: the URL to the model
load(contentsOf modelURL: URL, configuration: MLModelConfiguration = MLModelConfiguration(), completionHandler handler: @escaping (Swift.Result<
Construct a model with configuration
   - configuration: the desired model configuration
convenience init(configuration: MLModelConfiguration) throws
convenience init(configuration: MLModelConfiguration = MLModelConfiguration()) throws
Construct a model with URL of the .mlmodelc directory and configuration
convenience init(contentsOf modelURL: URL, configuration: MLModelConfiguration) throws
    - 
- returns: the result of the prediction as 
Make a prediction using the structured interface
   - input: the input to the prediction as 
   - options: prediction options 
Make a batch prediction using the structured interface
   - inputs: the inputs to the prediction as [
- returns: the result of the prediction as [
) throws -> 
(input: 
, options: MLPredictionOptions) throws -> 
predictions(inputs: [
], options: MLPredictionOptions = MLPredictionOptions()) throws -> 
@objc 
public 
class 
:NSObject
let model: MLModel
/// URL of model assuming it was installed in the same bundle as this class
let bundle = Bundle(for: 
self)
let bundle = Bundle.module
return bundle.url(forResource: "
", withExtension:"mlmodelc")!
self.model = model
try! self.init(contentsOf: type(of:self).urlOfModelInThisBundle)
try self.init(contentsOf: type(of:self).urlOfModelInThisBundle, configuration: configuration)
try self.init(model: MLModel(contentsOf: modelURL))
try self.init(model: MLModel(contentsOf: modelURL, configuration: configuration))
return self.load(contentsOf: self.urlOfModelInThisBundle, configuration: configuration, completionHandler: handler)
MLModel.__loadContents(of: modelURL, configuration: configuration) { (model, error) in
    if let error = error {
        handler(.failure(error))
    } else if let model = model {
        handler(.success(
(model: model)))
        fatalError("SPI failure: -[MLModel loadContentsOfURL:configuration::completionHandler:] vends nil for both model and error.")
return try self.prediction(input: input, options: MLPredictionOptions())
let outFeatures = try model.prediction(from: input, options:options)
(features: outFeatures)
let input_ = 
return try self.
(input: input_)
let batchIn = MLArrayBatchProvider(array: inputs)
let batchOut = try model.predictions(from: batchIn, options: options)
var results : [
] = []
results.reserveCapacity(inputs.count)
for i in 0..<batchOut.count
let outProvider = batchOut.features(at: i)
let result =  
(features: outProvider)
results.append(result)
return results
var featureNames: Set<String>
return [
return self.provider.featureNames
func featureValue(for featureName: String) -> MLFeatureValue?
if (featureName == "
try! 
MLFeatureValue(
 as [NSObject : NSNumber]
 as [NSNumber]
return nil
return self.provider.featureValue(for: featureName)
convenience init(
 = nil
) throws
var __
if let _
try MLFeatureValue(
 pixelsWide: 
 pixelsHigh: 
 pixelFormatType: 
 options: nil
).imageBufferValue!
let __
self.init(
func set
(with 
?) throws 
) throws 
self.
init(
With
From
cgImage
imageAt
self.provider = try! MLDictionaryFeatureProvider(dictionary: [
" : 
 as [AnyHashable : NSNumber]
init(features: MLFeatureProvider)
self.provider = features
 : MLFeatureProvider
var 
/// Source provided by CoreML
private let provider : MLFeatureProvider
lazy var 
[unowned self] in 
return self.provider.featureValue(for: "
")!.
dictionaryValue as! 
sequenceValue!
 as! 
prediction
macOS
tvOS
watchOS
@available(
@available(
, unavailable)
pixelBuffer
int64
string
sequence: MLSequence(int64s
sequence: MLSequence(strings
sequence: InvalidSequence(
MLMultiArray
[String : Double]
[Int64 : Double]
[String]
[Int64]
CVPixelBuffer
compile
generate
variant
repair
generate-key
upload-key
dry-run
command
inputdocument
outputpath
globalmodule
no-documentation
detailed-type-info
swift-version
output-partial-info-plist
model-key-file
teamID
public-access
encrypt
create-archive
deployment-target
package-metadata-json
disable-warnings
LSBundleContainsCoreMLmlmodelc
%s: error: %s
usage: %@ <%@> <%@> <%@> [options ...]
Examples:
   %@ %@ /path/to/model.mlmodel /desired/path/to/output/directory
       Compiles the specified .mlmodel to a binary format and places the results in the output directory.
   %@ %@ /path/to/model.mlmodel /desired/path/to/output/source
       Generates source code for an interface to the compiled .mlmodel and places the results in the specified output directory.
Commands:
   --%@
      This help.
   --%@
      Disable Warnings.
   %@ <model.mlmodel> </desired/path/to/output/directory> 
      Create a compiled asset from a CoreML .mlmodel with the following options:
      --%@ <cloud> : no files will be written to output directory. this is relevant when the model is being deployed via cloud.
      --%@ <YES|NO> : should code generation incorporate model metadata in the output directory (default YES).
      --%@ <macos|ios|watchos|tvos|maccatalyst> : check mlmodel version compatability for this platform.
      --%@ xx.yy.zz : check mlmodel version compatability for this version.
      --%@ <path/to/model_key_file> : encrypt compiled model with given key.
      --%@ </desired/path/to/archive/directory> : archive compiled model using zip(1).
      --%@ </desired/path/to/partial_plist> : (internal).
   %@ <model.mlmodel> </desired/path/to/output/directory>
      Generate source code interface for supplied CoreML *.mlmodel with the following options:
      --%@ </desired/path/to/output/directory> : where to place the generated interface files.
      --%@ <Swift|Objective-C> : interface language.
      --%@ x.y : generated interface requires Swift version x.y (swift only).
      --%@ : classes and members get public access specifier (swift only).
      --%@ : generate objc compatible model classes (swift only).
      --%@ <macos|ios|watchos|tvos|maccatalyst> : check mlmodel version compatability for this platform.
      --%@ xx.yy.zz : check mlmodel version compatability for this version.
      --%@ <bundle-resources|swift-package> : code generation variants (internal).
      --%@ : suppress inline documentation.
      --%@ : don't write generated code to output directory.
   %@
      Display information about a CoreML .mlmodel file.
   %@
      Display the current version of this tool.
   %@
      Display information about the variant of the compiler used with a CoreML .mlmodel.
   %@
      Attempt to repair a model by fixing invalid feature descriptions.
unable to read document: %@
detail: %@
%@ command missing model file path
%@ command missing destination path
%@ failed to write partial plist
metadata.json
%@pkg
mlarchive
/usr/bin/zip
Error reading model. %s
Found %d issues
%s %d of of them:
Can fix
Fixed
    Fix %2d = %s
Issues still remain that cannot be automatically fixed:
    Issue %2d = %s
    Issue = %s
Please contact the model author or use coremltools to manually fix these issues
backup
Moving model to backup: %s
Failed to move model to backup. %s
Saving model with fixes to %s
Error saving fixed model. %s
%@ is not supported in coremlcompiler. Please use Xcode model utils.
help
missing parameter to option "%s"
Objective-C
Swift
unrecognized target language "%s".  Expected one of: Swift, Objective-C.
unrecognized Swift version "%s".  Expected one of: 3.0, 3.1, 3.2, 4.0, 4.1, 4.2, 5.0 or greater
"%s" option missing model key file
specified model key file does not exist at path "%s".
"%s" option missing destination path
specified destination for model archive does not exist at path "%s".
"%s" option missing team id
"%s" option missing deployment target
"%s" option missing platform
"%s" option missing YES or NO
"%s" option must specify YES or NO
bundle-resources
swift-package
cloud
unrecognized container specification "%s".  Expected one of: bundle-resources, swift-package.
Warning: ignoring unrecognized command line argument --
Warning: ignoring unrecognized command line argument -
unexpected command name %s
unrecognized positional argument %s
batchProvider
T@"<MLBatchProvider>",R,N,V_batchProvider
nnEngine
T@"MLNeuralNetworkEngine",R,N,V_nnEngine
useForPrediction
Tc,R,N,V_useForPrediction
Error creating Core ML custom layer implementation from factory for layer "
Core ML custom Layer implementation '
' does not conform to the MLCustomLayer protocol
Error getting Core ML custom layer output shapes for layer "
Evaluation on Core ML custom layer "
" called before the layer is constructed.
Error evaluating Core ML custom layer "
" on CPU.
' does not conform to the MLCustomLayer protocol'
Error initializing Core ML custom layer implementation with parameter dictionary for layer "
Error setting weights in Core ML custom layer "
" on GPU.
ndMode
Tc,R,N,V_ndMode
T@"NSString",R,N,V_className
customImpl
T@"NSObject<MLCustomLayer>",&,N,V_customImpl
$BUNDLE_MAIN
$BUNDLE_IDENTIFIER
%@ is missing feature '%@'
%@ feature '%@' is inconsistent with '%@'
Model type is not linked model as expected
Model linking could not find model (%@) in search path (%@) relative to (%@)
Linked model
Root/Loaded model
Linked Model does not have a parameter for requested key %@.
linkedModel
T@"MLModel",&,V_linkedModel
modelFileName
T@"NSString",&,V_modelFileName
modelSearchPath
T@"NSString",&,V_modelSearchPath
_lrn_out
_mul
toolName
T@"NSString",R
toolPath
T@"NSString",&,VtoolPath
commandName
T@"NSString",&,VcommandName
sourceUrl
T@"NSURL",&,VsourceUrl
destinationDirectoryUrl
T@"NSURL",&,VdestinationDirectoryUrl
dryrun
Tc,Vdryrun
T@"NSString",&,V_teamID
modelKeyFile
T@"NSURL",&,V_modelKeyFile
modelArchiveDestinationUrl
T@"NSURL",&,V_modelArchiveDestinationUrl
targetLanguage
Ti,VtargetLanguage
swiftVersion
Ti,VswiftVersion
globalModule
Tc,VglobalModule
noDocumentation
Tc,VnoDocumentation
detailedTypeInfo
Tc,V_detailedTypeInfo
publicAccess
Tc,VpublicAccess
Tq,Vcontainer
deploymentTarget
T@"NSString",&,VdeploymentTarget
T@"NSString",&,Vplatform
outputPlistFilename
T@"NSString",&,V_outputPlistFilename
packageMetadataJSON
Tc,VpackageMetadataJSON
disableWarnings
Tc,V_disableWarnings
invalid
Tc,Vinvalid
invalidError
T@"NSString",&,VinvalidError
maccatalyst
%@ command --platform must be one of: [macos, ios, watchos, tvos, maccatalyst]
%@ command model encryption is not supported on the specified deployment target %@.
%@ command --deployment-target invalid major version value: %@
%@ command --deployment-target excess characters following $major.$minor.$patch: %@
%@ command model at %@ not supported on --platform %@
%@ command internal error, malformed availabilityOfSpecification: %@
%@ command This model is not supported on specified deployment target of %@ %@. It requires %@ or greater
%@ command both --platform AND --deployment-target must be provided
%@ command contents of --encrypt key file %@ is invalid
%s: warning: %s
analytics
SpecificationDetails
NeuralNetworkModelDetails
PipelineModelDetails
model.espresso.shape
model.espresso.weights
kLeafSize
kVData
kVIndices
kRoot
splitIndex
splitDimension
splitValue
startingIndex
rightChild
leftChild
intervals
isLeaf
Splitting node along dimension %lu, by value %.4f
Found split index %lu
TQ,N,V_splitDimension
TQ,N,V_splitIndex
Tf,N,V_splitValue
TQ,N,V_startingIndex
TQ,N,V_count
T@"_KDNode",&,N,V_leftChild
T@"_KDNode",&,N,V_rightChild
boundingBox
T{_KDBoundingBox={vector<_KDInterval, std::__1::allocator<_KDInterval> >=^{_KDInterval}^{_KDInterval}{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >=^{_KDInterval}}}Q},N,V_boundingBox
TB,N,V_isLeaf
dataPoints.size() % dimensionality != 0
TQ,N,V_leafSize
root
T@"_KDNode",&,N,V_root
axis
_SNVGGishFrontEndProcessingCustomModel
Frontend processing not available on this version
Frontend processing failed to init
Bias Layer: shape cannot be of size 0
Bias Layer: shape must be of size 1 or 3
constant_in
Bias Layer: bias size does not match provided shape
Bias Layer: Must accept exactly 1 input and produce 1 output
topk
_value
_index_rank_preserved
_squeeze_after_arg
feature vectorizer
Expected value for feature '%@'.
MLFeatureVectorizer: Array length incorrect.
MLFeatureVectorizer: Dictionary key type must be NSNumber.
MLFeatureVectorizer: Dictionary index out of range.
MLFeatureVectorizer: Incorrect Type.
MLFeatureVectorizer: Dict key type must be NSNumber.
MLFeatureVectorizer: Dict idx out of range.
columnNameEncoding
T@"NSArray",R,N,V_columnNameEncoding
dimensionEncoding
T@"NSArray",R,N,V_dimensionEncoding
Permute Layer: axis parameter must of length 4
Resize bilinear layer: 
Sampling mode not set in resize bilinear layer.
sliding_windows
MLModelDescriptionKey
MLModelVersionStringKey
MLModelAuthorKey
MLModelCreatorDefinedKey
MLModelLicenseKey
broadcast
suppressionMethod
Ti,V_suppressionMethod
iouThreshold
Td,V_iouThreshold
confidenceThreshold
Td,V_confidenceThreshold
minBoxes
TQ,V_minBoxes
maxBoxes
Tq,V_maxBoxes
numClasses
TQ,V_numClasses
perClass
TB,V_perClass
confidenceInputFeatureName
T@"NSString",&,V_confidenceInputFeatureName
coordinatesInputFeatureName
T@"NSString",&,V_coordinatesInputFeatureName
iouThresholdInputFeatureName
T@"NSString",&,V_iouThresholdInputFeatureName
confidenceThresholdInputFeatureName
T@"NSString",&,V_confidenceThresholdInputFeatureName
confidenceOutputFeatureName
T@"NSString",&,V_confidenceOutputFeatureName
coordinatesOutputFeatureName
T@"NSString",&,V_coordinatesOutputFeatureName
Model type is not a NonMaximumSuppression
Data type error for NonMaximumSuppression: confidence and coordinates must be MLMultiArray of a same type and it must be either DOUBLE or FLOAT32. However, confidence uses %@ and coordinates uses %@
T@"MLNonMaximumSuppressionParameters",R,V_parameters
Dimension 1 of input confidence (%@) is not consistent with the number of classes (%lu)
LSTM layer: must provide 3 activations
Uni-directional LSTM
LSTM layer: '
MultiArray dataType should be %@ but is %@
MultiArrayConstraint cannot check undefined values
MultiArrayConstraint only allows MultiArrays
Neural network model expects vector inputs, but non-unit height or width dimensions were provided.
Neural Network (<=version 3) inputs can only be of size 1, 3, or 5.
According to model description, feature '%@' must be of rank %@, instead got a multi-array value of rank %@.
%@, %@
shapeConstraint
Tq,R,N,V_dataType
T@"MLMultiArrayShapeConstraint",R,N,V_shapeConstraint
treeRefresh
treeAddition
Error in initalizing model interface.
Error in initalizing update Engine for compiled archive.
Error in initalizing model parameters.
multi:softprob
binary:logistic
Objective must be either multi:softprob or binary:logistic.
Update type must be either %@ or %@.
Cannot create update instance.
numTrees Parameter must be provided and it should be > 1.
Failed to train at iteration number: %lu
learningRate Parameter must be provided.
maxDepth Parameter must be provided.
numClasses parameter must be provided.
minChildWeight parameter must be provided.
objective parameter must be provided.
max_depth
num_class
min_child_weight
objective
process_type
update
updater
refresh
Updated tree ensemble classifier model does not have a parameter for requested key %@.
Cannot save the trained model.
personalization
Tc,N,V_personalization
classesByString
T{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}},N,V_classesByString
classesByInt
T{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}},N,V_classesByInt
mmappedModel
T{shared_ptr<Archiver::MMappedFile>=^{MMappedFile}^{__shared_weak_count}},N,V_mmappedModel
cachedModel
T{vector<unsigned char, std::__1::allocator<unsigned char> >=**{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >=*}},N,V_cachedModel
XGDMatrixCreateFromMat
/System/Library/PrivateFrameworks/XGBoostFramework.framework/XGBoostFramework
/System/Library/PrivateFrameworks/XGBoostFramework.framework/Contents/MacOS/XGBoostFramework
XGDMatrixSetFloatInfo
XGBoosterCreate
XGDMatrixFree
XGBoosterUpdateOneIter
XGBoosterSetParam
XGBoosterSaveModel
array feature extractor
arrayFeatureExtractor
got nil array input to MLArrayFeatureExtractor predict:error:
Lossy cast to integer by ArrayFeatureExtractor; use double as output type.
Invalid output type of ArrayFeatureExtractor.
arrayColumnName
T@"NSString",R,N,V_arrayColumnName
extractIndices
T@"NSArray",R,N,V_extractIndices
outputType
Tq,R,N,V_outputType
main
probabilities
classes
Unknown class type.
classify
scale_image
Dot product layer: '
embedding size = 
vocab size = 
EmbeddingND layer '
MLScenePrintRequestRevision
MLScenePrintConfiguration
ScenePrint not available on this version
scenePrintRequestRevision
TQ,R,N,V_scenePrintRequestRevision
configuration
T@"MLModelConfiguration",R,N,V_configuration
T@,&,N,V_featureExtractorParameters
TQ,N,V_version
postVisionFeaturePrintModel
T@"MLModel",&,N,V_postVisionFeaturePrintModel
l2_normalize
batchnorm
Input feature length mismatch. Got features of length %d expected length of at least %d
Input feature length mismatch. Got features of length %d expected length of %d
T@"MLSVREngine",&,V_engine
unable to open output file: %@
swift
This PipelineClassifier was created with unreleased beta CoreML and is no longer supported. Please re-create/convert your model with the the current Core ML
Invalid model type found in compiled pipeline model.
params_prelu
softmax_nd
softplus_alphas
softplus_betas
Reorganize Data layer: '
' unknown value for parameter 'mode'.
Reorganize data layer: '
': 'blockSize' must divide height dimension of the input.
': 'blockSize' must divide width dimension of the input.
': 'blockSize' square must divide channel dimension of the input.
boxes
scores
iou_threshold
score_threshold
max_boxes
per_class_suppression
non_maximum_suppression
T@"MLParameterKey",R,N
weights
biases
maxDepth
numTrees
minChildWeight
updateType
Expected feature of type %@ but got %@
Feature description does not allow missing %@ values
%@ : Dictionary (%@)%@
%@ : Image (%@)%@
%@ : MultiArray (%@)%@
%@ : Sequence (%@)%@
%@ : %@%@
optional
constraints
valueConstraints
T@"NSDictionary",&,V_valueConstraints
multiArrayConstraintCached
T@"MLMultiArrayConstraint",R,N,V_multiArrayConstraintCached
imageConstraintCached
T@"MLImageConstraint",R,N,V_imageConstraintCached
dictionaryConstraintCached
T@"MLDictionaryConstraint",R,N,V_dictionaryConstraintCached
sequenceConstraintCached
T@"MLSequenceConstraint",R,N,V_sequenceConstraintCached
T@"NSString",R,C,N,V_name
Tc,R,N,GisOptional,V_optional
T@"MLSVMEngine",&,V_engine
Error in initalizing the classifier.
Invalid objective and/or numClasses.
Error in initalizing labels.
Cannot load the trained model.
Prediction failed since the tree was not trained with any data point.
Prediction failed since data could not be transformed properly.
Prediction failed.
Shape of training data point %i MLMultiArray is %@, expected %@
Input data other than MLFeatureTypeMultiArray is not supported for training.
Missing input name for Tree Ensemble Classifier.
Received nil MLFeatureProvider for index %ld from training data MLBatchProvider for training input: %@
Shape of training data point %li MLMultiArray is %@, expected %@
Data provided in input is missing feature value for training input: %@
Label must of type MLFeatureTypeString or MLFeatureTypeInt64
Label %@ not found for data index: %ld.
Cannot create MLBatchProvider.
Cannot create MLFeatureProvider.
Current objective not supported. Supported objectives are multi:softprob and binary:logistic.
Data processing failed.
Objective and number of classes does not match. numClasses for 'binary:logistic' must be defined as 1.
T@"NSString",&,N,V_objective
TQ,N,V_numClasses
booster
T^v,N,V_booster
XGBoosterPredict
XGBoosterLoadModel
XGBoosterFree
Unable to extract configurations from a multi-array feature type without enumerated shapes.
Unable to extract configurations from an image feature type without enumerated shapes.
Unable to extract configurations from a feature that is not a multi-array or image.
We don't currently use configurations if there are multiple inputs with enumerated shapes.
Bad neural network input.
Attempting to extract shape from non-image or multi-array feature
Invalid multi-array constraint found when extracting configurations.
Multi-array of shape less than 1 found when extracting configurations.
mapStrLabelToIndex
T{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}},N,V_mapStrLabelToIndex
mapIntLabelToIndex
T{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=Q}}},N,V_mapIntLabelToIndex
iter
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iter
iterEnd
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iterEnd
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iter
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iterEnd
_squeeze
__squeeze__
__axis__
_squeezed
_squared
_exp
Invalid NeuralNetwork Specification type
dict vectorizer
MLDictVectorizer
Invalid input description.
Invalid output description.
Expected input column '%@ not present.
Type of input not dictionary as expected.
categoryName
T@"NSOrderedSet",R,N,V_categoryName
profile_number
debug_fatpack
engine_version
Unrecognized profile number 
Scale Layer: Scale shape cannot be of size 0
Scale Layer: Scale shape must be of size less than or equal to 3
Scale Layer: Scale size does not match provided shape
constant_in_scale
Scale Layer: Must accept exactly 1 input and produce 1 output
Scale Layer: Bias shape cannot be of size 0
Scale Layer: Bias shape must be of size less than or equal to 3
Scale Layer: Bias size does not match provided shape
constant_in_bias
mul_out
Load Constant: shape must be of non empty
Load Constant: can only handle rank 1 to 5
/System/Library/Frameworks/Vision.framework/Vision
VNScenePrintsFromPixelBuffers
VNScenePrintsFromPixelBuffersUsesCPUOnly
VNElementCountForScenePrintRequestRevision
VNLengthInBytesForScenePrintRequestRevision
VNImageBuffer
VNDetectionPrintsFromPixelBuffers
VNDetectionPrintsFromPixelBuffersUsesCPUOnly
VNDetectionPrintShapes
VNDetectionPrintSupportedRevisions
VNImageOptionImageOrientation
Failed to form pixel buffer from %@
Failed to form pixel buffer from CGImage
scenePrintsFromPixelBuffersImpl
T^?,R,N,V_scenePrintsFromPixelBuffersImpl
scenePrintsFromPixelBuffersUsesCPUOnlyImpl
T^?,R,N,V_scenePrintsFromPixelBuffersUsesCPUOnlyImpl
scenePrintElementCountImpl
T^?,R,N,V_scenePrintElementCountImpl
scenePrintLengthImpl
T^?,R,N,V_scenePrintLengthImpl
VNImageBufferClass
T#,R,N,V_VNImageBufferClass
detectionPrintsFromPixelBuffersImpl
T^?,R,N,V_detectionPrintsFromPixelBuffersImpl
detectionPrintsFromPixelBuffersUsesCPUOnlyImpl
T^?,R,N,V_detectionPrintsFromPixelBuffersUsesCPUOnlyImpl
detectionPrintShapesImpl
T^?,R,N,V_detectionPrintShapesImpl
detectionPrintSupportedRevisionsImpl
T^?,R,N,V_detectionPrintSupportedRevisionsImpl
validForSceneprint
Tc,R,N,GisValid,V_validForSceneprint
validForObjectprint
Tc,R,N,GisValid,V_validForObjectprint
predictedValue
T@"MLMultiArray",R,V_predictedValue
additionalFeatures
T@"<MLFeatureProvider>",R,V_additionalFeatures
Convolution layer: '
' , deconvolution does not support weight as input tensor.
' , dilated convolution does not support weight as input tensor.
' , input channels must be divisible by the number of groups.
' , output channels cannot be 0
' , kernel channels cannot be 0
' , if set, kernel size must be of length 2
' , kernel size cannot be 0
' , if set, stride must be of length 2
' , stride cannot be 0
' , if set, dilation factor must be of length 2
' , dilation factor cannot be 0
' , if set, output shape must be of length 2
' , for valid padding, padding border amounts must be specified for both height and width, if set
Same Padding Mode not recognized
Convolution padding type not set
deconvolution
convolution
' , size of weight parameter not equal to the product of kernel sizes, number of kernels and kernel channels
Convolution layer '
' has insufficient convolution weights
' with dynamic weight does not support static bias.
Insufficient quantized bias elements in 
' input's channel dimension (
) is not equal to the number of layer parameters  (
Initialization of Word Embedding parameters failed
Model type is not a Word Embedding
Invalid parameters for Word Embedding
initialization of word embedding model with model data failed
Embedding does not contain input string '%@'. 
vector
This model is a word embedding (version %lu) which represents an %@ word in a vector space.
This model is a word embedding (version %lu) which represents a word in a vector space.
T@"MLAppleWordEmbeddingParameters",R,V_parameters
unavailable
macCatalyst
10.13
11.0
10.13.2
11.2
10.14
12.0
10.15
13.0
14.0
input_
BOOL
Class
NULL
Protocol
Self
Type
_Bool
_Complex
_Imaginary
__COLUMN__
__FILE__
__FUNCTION__
__LINE__
associativity
atomic
auto
break
bycopy
byref
case
char
class
const
continue
convenience
default
deinit
didSet
dynamic
dynamicType
else
enum
extension
extern
fallthrough
final
float
func
goto
import
infix
init
inline
inout
internal
lazy
left
long
mutating
nonatomic
none
nonmutating
oneway
operator
override
postfix
precedence
prefix
private
protocol
public
register
required
restrict
retain
return
right
self
short
signed
sizeof
static
struct
subscript
super
switch
typealias
typedef
union
unowned
unsigned
void
volatile
weak
where
while
// This file was automatically generated and should not be edited.
Input
Output
TrainingInput
 as 
optional 
Unknown type
double value
integer value
string value
sequence of 64-bit integers
sequence of strings
dictionary of 64-bit integers to doubles
dictionary of strings to doubles
grayscale (kCVPixelFormatType_OneComponent8) 
color (kCVPixelFormatType_32BGRA) 
image buffer, 
 pixels wide by 
 pixels high
multidimensional array 
 element vector 
 by 
 matrix 
 3-dimensional array 
 4-dimensional array 
 5-dimensional array 
of 32-bit integers
of doubles
of floats
/dev/null
Input feature length mismatch. Got features of length %d expected length %@
reshape
Error reading from archive.
Error writing to archive.
keep_dims
ARGMAX
ARGMIN
Unsupported mode for arg_reduction.
SQUARE
Unsupported preprocess mode in reduction.
_axis_
Unsupported postprocess mode in reduction.
Crop layer: 
 , crop border amounts must be specified for both height and width, if set
Crop Layer: 
 , must be provided exactly 2 offset values when it has 2 inputs
Crop Layer: '
': unable to determine the spatial dimensions of the second input blob. 
int8 dynamic quantization not valid with >1 input
batch_matmul
_dynamic_quantize_
_post_quantization_blob_
_activation_quantization_scale_
_dynamic_dequantize_
_pre_dequantization_blob_
dynamic_quantize
dynamic_dequantize
BatchedMatMul
Layer: 
 does not satisfy int8 quantization requirements.
W_int8
Incorrect weight type 
Layer '
' of type '
 :                            when flag 'int8DynamicQuantize' is set to true, weights must be stored in the int8 format.
 :                           Number of bits must equal 8 when flag 'int8DynamicQuantize' is set to true.
 :                           Linear quantization must be used when flag 'int8DynamicQuantize' is set to true.
 :                           Linear quantization scale must be size 1 when flag 'int8DynamicQuantize' is set to true.
 :                           Linear quantization bias must be empty when flag 'int8DynamicQuantize' is set to true.
 is not equal to size of the product of the first and second dimensions provided as layer parameters = 
 in Batched-MatMul layer 
Size of quantized weights (in bytes) = 
 is smaller than the total bytes required for the product of the first and second dimensions provided as layer parameters = 
for 
-bit quantization in Batched-MatMul layer 
 is not equal to the second dimension of the matrix = 
Size of quantized bias is insufficient for Batched-MatMul layer 
nonzero
InnerProduct
 is smaller than the total bytes required for the product of input and output channels = 
-bit quantization in layer 
Size of quantized bias is insufficient for Inner Product layer 
Inner product layer: '
' : Product of input blob dimensions C,H,W (
) must be equal to the parameter 'inputChannels' (
%@ : %@
Dictionary keys must be NSStrings or NSNumbers.
Object not consistent with type supplied
Attempting to hash an MLFeatureValue that is not an image or multi array.
undefined
width
height
rowBytes
attributes
value
T@,&,V_value
objectValue
T@"NSObject",&,N,V_objectValue
Tc,R,N,GisUndefined,V_undefined
Td,R,N
T@"NSString",R,C,N
T@"MLMultiArray",R,N
T@"NSDictionary",R,N
T^{__CVBuffer=},R,N
T@"MLSequence",R,N
ScatterND layer: '
scatter_nd
A Core ML custom neural network layer requires an implementation named '
' which was not found in the global namespace.
A custom neural network layer implementation class named '
' does not conform to the MLCustomLayer protocol.
/System/Library/Frameworks/NaturalLanguage.framework/NaturalLanguage
NLPSequenceModelCopyPredictedTokensAndLabelsForText
NLPSequenceModelCreateWithData
NLPSequenceModelGetRevision
NLPSequenceModelIsRevisionSupported
NLPSequenceModelGetCurrentRevision
NLPClassifierModelCopyPredictedLabelForText
NLPClassifierModelCreateWithData
NLPClassifierModelGetRevision
NLPClassifierModelIsRevisionSupported
NLPClassifierModelGetCurrentRevision
NLPGazetteerModelCopyLabelForString
NLPGazetteerModelCreateWithData
NLPGazetteerModelGetRevision
NLPGazetteerModelIsRevisionSupported
NLPGazetteerModelGetCurrentRevision
NLPEmbeddingModelCopyVectorForString
NLPEmbeddingModelCreateWithData
NLPEmbeddingModelGetRevision
NLPEmbeddingModelIsRevisionSupported
NLPEmbeddingModelGetCurrentRevision
Model revision %ld not supported by NaturalLanguage framwork on this OS version (support revision %ld).
NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
T^?,R,N,V_NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
NLPSequenceModelCreateWithDataImpl
T^?,R,N,V_NLPSequenceModelCreateWithDataImpl
NLPSequenceModelGetRevisionImpl
T^?,R,N,V_NLPSequenceModelGetRevisionImpl
NLPSequenceModelIsRevisionSupportedImpl
T^?,R,N,V_NLPSequenceModelIsRevisionSupportedImpl
NLPSequenceModelGetCurrentRevisionImpl
T^?,R,N,V_NLPSequenceModelGetCurrentRevisionImpl
NLPClassifierModelCopyPredictedLabelForTextImpl
T^?,R,N,V_NLPClassifierModelCopyPredictedLabelForTextImpl
NLPClassifierModelCreateWithDataImpl
T^?,R,N,V_NLPClassifierModelCreateWithDataImpl
NLPClassifierModelGetRevisionImpl
T^?,R,N,V_NLPClassifierModelGetRevisionImpl
NLPClassifierModelIsRevisionSupportedImpl
T^?,R,N,V_NLPClassifierModelIsRevisionSupportedImpl
NLPClassifierModelGetCurrentRevisionImpl
T^?,R,N,V_NLPClassifierModelGetCurrentRevisionImpl
NLPGazetteerModelCopyLabelForStringImpl
T^?,R,N,V_NLPGazetteerModelCopyLabelForStringImpl
NLPGazetteerModelCreateWithDataImpl
T^?,R,N,V_NLPGazetteerModelCreateWithDataImpl
NLPGazetteerModelGetRevisionImpl
T^?,R,N,V_NLPGazetteerModelGetRevisionImpl
NLPGazetteerModelIsRevisionSupportedImpl
T^?,R,N,V_NLPGazetteerModelIsRevisionSupportedImpl
NLPGazetteerModelGetCurrentRevisionImpl
T^?,R,N,V_NLPGazetteerModelGetCurrentRevisionImpl
NLPEmbeddingModelCopyVectorForStringImpl
T^?,R,N,V_NLPEmbeddingModelCopyVectorForStringImpl
NLPEmbeddingModelCreateWithDataImpl
T^?,R,N,V_NLPEmbeddingModelCreateWithDataImpl
NLPEmbeddingModelGetRevisionImpl
T^?,R,N,V_NLPEmbeddingModelGetRevisionImpl
NLPEmbeddingModelIsRevisionSupportedImpl
T^?,R,N,V_NLPEmbeddingModelIsRevisionSupportedImpl
NLPEmbeddingModelGetCurrentRevisionImpl
T^?,R,N,V_NLPEmbeddingModelGetCurrentRevisionImpl
valid
Tc,R,N,GisValid,V_valid
Unsupported Pooling Type: 
pool3d
Missing predictionFromFeatures:error implementation
modelDescription: %@, 
configuration: %@
Model does not have a parameter for requested key %@.
T@"MLModelDescription",&,N,V_modelDescription
T@"MLModelConfiguration",&,N,V_configuration
decryptSession
T@"MLFairPlayDecryptSession",&,N,V_decryptSession
T@"MLModelInterface",R,V_interface
T@"MLModelMetadata",R,V_metadata
Version
KeyIdentifier
UsesCodeSigningIdentityForEncryption
AAADgHNpbmYAAAAMZnJtYQAAAAAAAAAUc2NobQAAAABpdHVuAAAAAAAAA1hzY2hpAAAADHVzZXIAAAAAAAAADGtleSAAAAABAAAAGGl2aXbZofvYoEHG+Bnh6TFdS4nRAAAAWHJpZ2hwbGF0AAAAAnRyYW7aSnJxdG9vbEQ5OTltZWRpAAAAgG1vZGUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQhuYW1lAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcBwcml2dHT7EFcJPPVjnUp9b53GcsqIfPZ2Zwq2GeQ3aigPDGVuD0OGm6NZEzuiK3dNectFh1Z5LE06hTFwi67WA/4z+7xXmX0aMBmYfYmL9dVVxwOKwJ1bpkkZkXyil21zxsKwHVn6ZSgegaKm9C5YQcyL/uY9aqYkLS2+qKVWyx/3pBVY1cAAPyNpVDBsNIpNGguNmEEA4l7IhB8Q+m1VAPCcxgngaFT6ztBjdUfseVYj3fh28t7NXhdQbZB7PNDxU2VToqvN2t1f6Gco/qc8fRXXGo12pLH346qDQezYMlbBS0w76GtyWoK+oLu3FTMjjCi7Kg1SyDDBbbDsg0RVMkyHhZ3TOFmwJklAYL7HxsWa+rCRM4Q4YOJobScLgeZ/7daGTAeX03OMT/iWgPHf+ejCVQGje+Mm+a8P5UzKpHhV9ruwF2usDUoynhmyIYr/EnrcUyQdPjLX8wG7BYMJMhh/vuaIfkwVt1M2kgFJ9T8Kz+JczEJSfLIwhW6Uy+ltyRrVnlaGfoPdrohv4P4FgaBuaUFSoKiXMuZr4IXhEHh9sCoAv6sSDIAFURgBX1wtn9HWAAAAAAAAAAA=
saveToFile URL (%@) should be different from fileURL (%@)
Error creating file %s
Error saving ENML header to %s
Error saving data to %s
Key length %lu does not match encryption block size %u
IV is specified but it's length %lu does not match encryption block size %u
Failed to encrypt data
Encryption outputSize does not match outputWritten
sinfData
T@"NSData",R,&,N
Only integer values with magnitude less than 2^48 are supported in the imputer.
imputer
MLimputer
imputed feature value not set.
Invalid combination of input/output/feature value types.
Invalid combination of replace value type and input/output/feature value types.
imputeValue
T@"MLFeatureValue",R,N,V_imputeValue
replaceValue
T@"MLFeatureValue",R,N,V_replaceValue
Must only have one string input feature
Must only have one string output feature
modelData
parameters['modelData'] does not exist or is not a string
initialization of classifier model with model data failed
T@"MLModelDescription",&,V_modelDescription
Unrecognizable Neural Network type.
Failed to copy empty or invalid weights to kernel
Unsupported recurrent non-linearity type.
Unable to read 
weight elements.
quantized weight elements from byte stream.
Unrecognizable weight parameter type.
Error converting float16 biases
_tmp_
Invalid network: Layer name missing.
Invalid network: Expected at least one input for layer: '
Invalid network: Expected at least one output for layer: '
Input shapes must be equal for layer: '
Input shapes (height and width dimensions) must be equal for layer: '
Input '
' of layer '
' not found in any of the outputs of the preceeding layers.
Invalid data blob: '
' shape (C,H,W = 
) for output of layer: '
Validate number of inputs and outputs: Unknown layer type
Invalid number of inputs (
) and outputs (
) to layer: '
Layer name: '
'. Input and output data blob names cannot be the same.
Mean image preprocessor input blob ('
') not found. 
_preprocessed
mean_image_
Mean Image Preprocessing: mean image size must be same as input image size.
load_constant_mean_image_
elementwise_add_mean_image_
fill
Error opening file stream: 
File 
 already opened as stream attempted to open as mmapped file.
spec
Data provided in input: %@ is missing feature value for training input: %@
Data provided for %@ has insufficient shape
MLMultiArray value for %@ does not comply with constraint: %@
Failed to create multi array of shape %@
Failed to copy over input multi array
Shape for multi array value of %@ is not allowed
_MultiArray
Image value for %@ does not comply with constraint: %@
Failed to copy over image input
Value for %@ does not comply with constraint in description: %@ (%@)
Failed to derive valid training input from class label
Predicted class is not in expected format
Invalid class label %@ provided as input
Input %@ is not in the expected format, expected: %@
dataTensorDictionary
T@"NSDictionary",&,N,V_dataTensorDictionary
Inconsistent value types in array
Cannot form description from nothing
Inconsistent value constraints in array
Image found with unsupported pixel type
.values
MultiArray
Dictionary
Image
Sequence
Invalid
UnknownValue
Illegal value in MLFeatureType enum
ScatterAlongAxis layer: '
prob
probs
logits
Invalid mode for RandomCategorical op, must be one of: probs | logits
mean
stddev
high
lengths
batch_axis
seq_axis
Slice layer: '
': unknown value for parameter 'axis'.
': output blob channel dimension size is 0.
': output blob height dimension size is 0.
': output blob width dimension size is 0.
Error opening file 
Error reading file statistics of 
: not a regular file.
: error opening mmap: 
32RGBA
32BGRA
32ARGB
OneComponent8
24RGB
24BGRA
Unsupported (%@)
32BGRA or 32ARGB
Image constraint can not accept missing values.
Image is not expected type %@, instead is %@
%@, %@ x %@
Grayscale
pixelsWide
pixelsHigh
pixelType
sizeConstraint
imageHeight
imageWidth
TQ,R,V_pixelType
osType
TI,R
Tq,R,N,V_pixelsHigh
Tq,R,N,V_pixelsWide
pixelFormatType
TI,R,N
T@"MLImageSizeConstraint",R,N,V_sizeConstraint
one_hot_vector_size
on_value
off_value
Operation not supported on this platform.
class_name
input_order
Unsupported custom layer parameter type! Operator: 
 Parameter: 
Please use FP32 weights for custom layer!! Operator: 
stride
begin_mask
end_mask
squeeze_mask
Feature '%@' not provided.
Feature type %@ cannot be vectorized
Failed to vectorize %@ (%p)
Internal programming error.
Incorrect 'doubleVector' length of %@ (expected %@)
T@"<MLFeatureProvider>",&,N,V_first
T@"<MLFeatureProvider>",&,N,V_second
T^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii},V_model
freeModelOnDealloc
Tc,V_freeModelOnDealloc
isInputSizeLowerBoundOnly
Tc,V_isInputSizeLowerBoundOnly
inputSize
TQ,V_inputSize
numberOfClasses
class labels not set.
SVM has invalid number of support vectors or clases
Internal error: support vectors not set.
Gelu layer: '
dictionaryRepresentation
T@"NSDictionary",R
modelHash
T@"NSString",C,N,V_modelHash
nnModelNetHash
T@"NSString",C,N,V_nnModelNetHash
nnModelShapeHash
T@"NSString",C,N,V_nnModelShapeHash
nnModelWeightsHash
T@"NSString",C,N,V_nnModelWeightsHash
modelDimension
T@"NSNumber",C,N,V_modelDimension
T@"NSNumber",C,N,V_modelType
modelLoadTime
T@"NSNumber",C,N,V_modelLoadTime
modelVersion
T@"NSString",C,N,V_modelVersion
compilerVersion
T@"NSString",C,N,V_compilerVersion
T@"NSNumber",C,N,V_computeUnits
modelOrigin
T@"NSNumber",C,N,V_modelOrigin
modelLoadError
T@"NSNumber",C,N,V_modelLoadError
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
modelName
T@"NSString",C,N,V_modelName
firstPartyExecutable
T@"NSNumber",C,N,V_firstPartyExecutable
transpose_x
transpose_y
one hot encoder
MLOneHotEncoder
%@: Output description type must be MLTypeDictionary (ouputSparse On) or                       MLFeatureTypeMultiArray (ouputSparse Off) 
MLOneHotEncoder: unknown category %@, expected one of %@
featureEncoding
T@"NSOrderedSet",R,N,V_featureEncoding
ouputSparse
Tc,R,N,V_ouputSparse
handleUnknown
Tc,R,N,V_handleUnknown
Must only have three sequence output features
initialization of sequence model with model data failed
Only rank 4 input is supported for Batch Norm layer:
epsilon
variance
MLDetectionPrintRequestRevision
MLDetectionPrintConfiguration
DetectionPrint not available on this version
DetectionPrint unable to get supported revisions
Must only have one input feature of image type
DetectionPrint unable to get expected shapes
Output feature %@ not expected
Failed to compute detection print
detectionPrintRequestRevision
TQ,R,N,V_detectionPrintRequestRevision
expectedOutputShapeV1
T@"NSDictionary",R,N,V_expectedOutputShapeV1
Padding layer: 
 , pad amounts must be specified for both height and width, if set
_expanded
_expand_input
Stride attribute exceeds short limit!
dilations
Dilation attribute exceeds short limit!
pad_type
output_shape
groups
same
custom
Pad attribute exceeds short limit!
: Invalid padding type 
Unable to allocate kernel of required shape for layer: 
_squeeze_output
unknown direction=
invalid offset=
, dir=
Sound analysis preprocessing does not conform to custom model protocol
Sound analysis preprocessing failed to init
Model type is not a sound analysis preprocessing
Sound analysis framework not available on this OS version
Sound analysis preprocessing not available on this version
Preprocessing type not set
Failed to set parameter value because of nil key
Parameter value type %@ does not conform with default value's type %@
%@ is not a valid value given constraint %@ for key %@
currentParameterValues
parameterKeys
parameterDescriptions
currentParameterValues: %@
parameterKeys: %@
parameterDescriptions: %@
T@"NSMutableDictionary",&,N,V_currentParameterValues
T@"NSArray",&,N,V_parameterKeys
T@"NSDictionary",&,N,V_parameterDescriptions
Could not determine minimum sequence length to construct the model.
Could not convert neural network model layers.
Could not build inference network.
allowSoftmaxApproximation
Model requires a sequence longer than the maximum.
Error in neural network compiler computing minimum sequence length for the model.
Invalid height and width for the image input.
Input MLMultiArray cannot be %d dimensional (must be between 1 and 5 dimensions).
Neural networks only accept image and array inputs.
Input MLMultiArray cannot be %d dimensional (must have at least 1 dimension).
Error in compiling custom layer model.
Unknown error in compiling network layers.
Error in laying out custom layer model in memory.
Unknown error in building network shapes.
Error in optimizing custom layer model.
Unknown error in optimizing network for GPU.
_expand_dims
_pool
pool
avg_pool
max_pool
l2_pool
kernel_sizes
exclude_padding_from_average
Tc,R,V_isInputSizeLowerBoundOnly
TQ,R,V_inputSize
@min.doubleValue
@max.doubleValue
minNumber
maxNumber
enumeratedNumbers
minValue: %@
maxValue: %@
enumeratedNumbers: %@
T@"NSNumber",&,N,V_minNumber
T@"NSNumber",&,N,V_maxNumber
T@"NSSet",&,N,V_enumeratedNumbers
_break
_continue
Rank preserving reshape layer '
': input/output rank greater than 5 not supported currently
_post_scale
_post_scale_shift
_scale
_shift
Reduce layer: '
': argmax reduction operation is only supported along single dimensions C, H or W.
name: %@, version: %@ author: %@ description: %@ creatorDefined: %@
T@"NSString",R,V_name
T@"NSString",R,V_shortDescription
T@"NSString",R,V_versionString
T@"NSString",R,V_author
T@"NSString",R,V_license
creatorDefined
T@"NSDictionary",R,V_creatorDefined
acos
acosh
asin
asinh
atan
band_part
ceil
clamped_relu
clip
cond
conv
conv_transpose
cosh
custom_layer
depth_to_space
equal
exp2
floor
floor_div
gather
gather_along_axis
gelu
greater
greater_equal
identity
inverse
leaky_relu
less
less_equal
linear_activation
logical_and
logical_not
logical_or
logical_xor
matmul
maximum
minimum
not_equal
pixel_shuffle
prelu
random_bernoulli
random_categorical
random_normal
random_uniform
real_div
reduce_argmax
reduce_argmin
reduce_l1_norm
reduce_l2_norm
reduce_log_sum
reduce_log_sum_exp
reduce_max
reduce_min
reduce_prod
reduce_sum
reduce_sum_square
relu
relu6
reverse
reverse_sequence
round
rsqrt
scaled_tanh
sigmoid_hard
sign
sinh
slice_by_index
slice_by_size
softplus
softplus_parametric
softsign
sqrt
tanh
threshold
thresholded_relu
while_loop
Cannot load non-tensor '
' as constant.
__load
store_global
load_global
Cannot find value for requested input blob 
Invalid operator type: '
Layer translation context stack must not be empty.
Type unsupported for loading constants.
Insufficient output buffer size.
__const:
Unexpected non-constant dimension in '
Cannot load tensor '
' with rank outside [1, 5].
validateDataTransformDescription: Invalid FeatureType %@
trainingInputDescription
predictedFeatureNames
predictedProbNames
T@"NSDictionary",R,V_inputDescription
T@"NSDictionary",R,V_outputDescription
T@"NSOrderedSet",R,V_inputFeatureNames
T@"NSOrderedSet",R,V_outputFeatureNames
T@"NSDictionary",R,V_trainingInputDescription
T@"NSString",R,V_predictedFeatureName
T@"NSString",R,V_predictedProbabilitiesName
predictedValueFeatureDescription
T@"MLFeatureDescription",R
predictedClassFeatureDescription
classProbabilityFeatureDescription
Regressor must specify predictedValueOutput.
Classifier must specify predictedClassOutput and/or probabilityOutput
validRegressorInterface
Tc,R,GisValidRegressorInterface
validClassifierInterface
Tc,R,GisValidClassifierInterface
Reshape Layer: target shape must of length 3 or 4
Reshape layer: '
': product of new shape must equal the product of input blob dimensions.
PReLU
PReLU Layer: 
 , number of alpha parameters (
) is not equal to the channel dimension (
) of the input
 has insufficent bytes for quantized alpha parameters
ParametricSoftplus
Parametric Softplus: alpha and beta parameters must have the same size
Parametric Softplus layer '
' has invalid alpha/beta size
Parametric Softplus: alpha and beta parameters are not provided
 layer '
' is unable to infer the size of channels dimension (axis=-3) in the input, which is required when the weight size is 1 or when weights are quantized to lower than equal to 8 bits.
pred
 block returns different number of values than cond operator.
_return_
MLKeyName
MLKeyScope
%@.%@
T@"NSString",R,N,V_name
T@"NSString",R,N,V_scope
documentation
Tq,N
cValue
T{SwiftCodeGeneratorOptions=BBBq},R,V_cValue
Interface type is not an TreeEnsembleRegressor
Could not construct tree ensemble compiler.
Dimension must equal one when using scalarRegress.
argsort
Fail to read first word from 
 is neither compiled .MLModelC nor encrypted .MLModelc, first word=
MLSequenceConstraint cannot check undefined values
MLSequenceConstraint only allows MLSequence values
MLSequenceConstraint count constraint does not allow count of %@
MLSequenceConstraint only allows sequence value of type %@. This sequence is type %@
Value at index %d of sequence is not allowed
valueDescription
countRange_len
countRange_loc
T@"MLFeatureDescription",R,N,V_valueDescription
countRange
T{_NSRange=QQ},R,N,V_countRange
Symbolic rank tensors cannot be used as function arguments.
Unknown class label type.
com.apple.CoreML.MLLoader
com.apple.createml.version
com.apple.createml.app.version
com.github.apple.turicreate.version
com.apple.developer.machine-learning.models.version
com.github.apple.coremltools.source
keras
tensorflow
onnx
pytorch
scikit-learn
xgboost
libsvm
_condition_initial
_carry_initial
_loop
_carry_update
_return
com.apple.CoreML
copy_
scaler
shiftValue
T@"MLFeatureValue",R,N,V_shiftValue
scaleValue
T@"MLFeatureValue",R,N,V_scaleValue
file does not contain encrypted model header
unrecognized magic word in the encrypted model header
unsupported major version = 
file does not contain any payload, sizeOfHeader = 
illegal value for original file size = 
illegal value for number of encrypted pages = 
illegal number of encrypted pages = 
failed to invoke mremap_encrypted with result = 
, error = 
predictedClass
T@"MLFeatureValue",R,V_predictedClass
classProbability
T@"NSDictionary",R,V_classProbability
predictedClassFeatureType
Tq,R,V_predictedClassFeatureType
Input feature length mismatch. Got features of length %@ expected length %@
deviceName
T@"NSString",C,N,V_deviceName
layerError
Tq,N,V_layerError
Data provided has unsupported shape (%@)
Failed to extract output tensor
Output is not in the expected format
normalizer
MLNormalizer
norm
Ti,R,N,V_norm
Unsupported Padding Type: 
_axis
cumsum
Batchnorm layer: 
has insufficient bytes in quantized 
 ,size of 
 must be equal to the number of channels.
 is smaller than the total bytes required for 
The weight blob
 of layer 
 cannot be compiled.
Bi dir LSTM layer: must have two weight params
Bi dir LSTM layer (forward lstm): must provide 3 activations
Bi dir LSTM layer (backward lstm): must provide 3 activations
W_x_reverse
W_h_reverse
Bi-directional LSTM
b_reverse
p_reverse
BLSTM layer: '
Scatter layer: '
Pooling layer: 
 , if set, kernel size must be of length 2
 , kernel size cannot be 0
 , if set, stride must be of length 2
 , stride cannot be 0
 , for valid padding, padding border amounts must be specified for both height and width, if set
 , for include last pixel padding, padding amounts must be of length 2, if set
Pooling padding type not set
%@ x %@
Tq,R,V_pixelsWide
Tq,R,V_pixelsHigh
split
Split layer: '
' , number of outputs = 
 do not divide the input dimension = 
Split layer :
 , number of outputs (
) do not match the parameter nOutputs (
Image width (%@) is not in allowed range (%@..%@)
Image height (%@) is not in allowed range (%@..%@)
Image size %@ not in allowed set of image sizes
imageSizeSet
pixelsWideRange_len
pixelsWideRange_loc
pixelsHighRange_len
pixelsHighRange_loc
T@"NSOrderedSet",R,N,V_imageSizeSet
pixelsWideRange
T{_NSRange=QQ},R,N,V_pixelsWideRange
pixelsHighRange
T{_NSRange=QQ},R,N,V_pixelsHighRange
enumeratedImageSizes
load_
store_
gradient not implemented for layer 
 of type 
 at index 
espresso.no_mh
Cannot find output %s
mh_control@
_builtin
bound_output
gradient_builder can be created only for networks on IR platform
unfuse has_prelu is not implemented
_pre_activation
_activation
Can't find CPU weights
Can't find GPU weights
/grad
input name %s doesn't exist in the network
Gradient for variable %s is not generated
batchSize
Tq,R,V_type
optimizationParameters
T@"NSDictionary",R,N,V_optimizationParameters
lstm_elementwise
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/RNNModule.mm
peephole_weights_8bit[bidir_branch] && peephole_weights_8bit[bidir_branch]->data
peephole_weights[bidir_branch] && peephole_weights[bidir_branch]->data
Mismatched sequence lengths in sequence concat.
Null interpreter state
Null interpreter
missing condition blob
Wrong number of arguments: %zu != %zu
Null blob found
Wrong number of returned blobs
__launch
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/ControlFlow/ControlFlowKernels.mm
nd_shape.rank() == h_dst->dim[0]
p.axis < nd_shape.rank()
alloc_kernel_cpu: invalid rank
load_global called with no output blobs
load_global: undefined global %s
array_op = %d with inputs
array_op = %d with no inputs
input is needed for load_global with array_op == GATHER
array_op == %d
array_op = %d with no existing global
global is not a blob_array
array_op = %d with no input
array_op = %d with single input
cannot fetch input
array_op = %d with 2 inputs
store_global called with no input blobs
the axis to be iterate on must agree for all input blobs
slice_step %d doesn't devide corresponding dim %d
cf_for_kernel_cpu: Invalid number of top blobs: %zu
missing output blob
breakpoint
Invalid builtin: %s
get_subnetwork
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/NetExecutor.mm
iter != index_of_network.end()
get_engine_gflops_per_s
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/DispatchUtils.cpp
get_engine_bw_gb_per_s
fuse_biases error
fuse_batchnorm error
fold_batchnorm error
v16@?0^{fuse_vertical_state<Espresso::generic_general_padding_kernel, Espresso::generic_convolution_kernel>={shared_ptr<Espresso::generic_general_padding_kernel>=^{generic_general_padding_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_convolution_kernel>=^{generic_convolution_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
v16@?0^{fuse_vertical_state<Espresso::generic_general_padding_kernel, Espresso::generic_pool_kernel>={shared_ptr<Espresso::generic_general_padding_kernel>=^{generic_general_padding_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_pool_kernel>=^{generic_pool_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
WARNING: Asymmetric quantization will use more inference memory on NE. Please use it only if symmetric quantization doesn't yield good results for  your  model.
convert_hx_weights_to_peace
conv_groups
explicit_padding
transpose_chain
dequantize
transpose_inner_product
eltwise_mulc_max_to_leaky_relu
add_compress_sparse_property
transformer
fuse_log_softmax_multinomial_to_gumbel_max
low_precision_accumulation_fc
squeeze_devop
w_f16_t
Warning: padding deconvolution %s in SAME mode will not be pad-invariant for all resolutions
[convert_to_explicit_padding] Shape for blob %s (%d %d %d %d %d) -> (%d %d %d %d %d)
v16@?0^{fuse_vertical_state<Espresso::generic_transpose_kernel, Espresso::generic_transpose_kernel>={shared_ptr<Espresso::generic_transpose_kernel>=^{generic_transpose_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_transpose_kernel>=^{generic_transpose_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
v16@?0^{fuse_vertical_3_state<Espresso::generic_transpose_kernel, Espresso::generic_flatten_kernel, Espresso::generic_inner_product_kernel>={shared_ptr<Espresso::generic_transpose_kernel>=^{generic_transpose_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_flatten_kernel>=^{generic_flatten_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_inner_product_kernel>=^{generic_inner_product_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}iii^{net}}8
v16@?0^{single_match_state<Espresso::generic_inner_product_kernel>={shared_ptr<Espresso::generic_inner_product_kernel>=^{generic_inner_product_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
@lrelu
Invalid template net
src=%d target=%d type=%s
%d %d
instancenorm_1d
wGamma
wBeta
v16@?0^{fuse_vertical_3_state<Espresso::generic_reshape_kernel, Espresso::generic_activation_kernel, Espresso::generic_reshape_kernel>={shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_activation_kernel>=^{generic_activation_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}iii^{net}}8
v16@?0^{fuse_vertical_state<Espresso::generic_reshape_kernel, Espresso::generic_reshape_kernel>={shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::generic_reshape_kernel>=^{generic_reshape_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}ii^{net}}8
@gumbel_max
{vector<std::__1::shared_ptr<Espresso::graph_optimization_rule>, std::__1::allocator<std::__1::shared_ptr<Espresso::graph_optimization_rule> > >=^{shared_ptr<Espresso::graph_optimization_rule>}^{shared_ptr<Espresso::graph_optimization_rule>}{__compressed_pair<std::__1::shared_ptr<Espresso::graph_optimization_rule> *, std::__1::allocator<std::__1::shared_ptr<Espresso::graph_optimization_rule> > >=^{shared_ptr<Espresso::graph_optimization_rule>}}}24@?0{shared_ptr<Espresso::network_optimization_graph>=^{network_optimization_graph}^{__shared_weak_count}}8
B16@?0^{generic_elementwise_kernel=^^?{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}iiiii{map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<unsigned char, 1> > >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<int, std::__1::allocator<int> >=^i^i{__compressed_pair<int *, std::__1::allocator<int> >=^i}}{shared_ptr<Espresso::SerDes::generic_serdes_object>=^{generic_serdes_object}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{elementwise_params=iifffiBiiIIII}}8
_pre_act
_act
v16@?0^{single_match_state<Espresso::generic_convolution_kernel>={shared_ptr<Espresso::generic_convolution_kernel>=^{generic_convolution_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
v16@?0^{single_match_state<Espresso::generic_deconvolution_kernel>={shared_ptr<Espresso::generic_deconvolution_kernel>=^{generic_deconvolution_kernel}^{__shared_weak_count}}{shared_ptr<Espresso::layer>=^{layer}^{__shared_weak_count}}{vector<Espresso::net::new_layer_info, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}^{new_layer_info}{__compressed_pair<Espresso::net::new_layer_info *, std::__1::allocator<Espresso::net::new_layer_info> >=^{new_layer_info}}}i^{net}}8
_argv
_shape_argv
_dim_argv
loopkit_func_t %d
loopkit func of type %d fail to evaluate. exit code = %d
compute_path_to_lk_type for compute path %s
outputName
T@"NSString",&,V_outputName
inputName
T@"NSString",R,V_inputName
targetInputName
T@"NSString",R,V_targetInputName
T@"NSString",R,V_lossOutputName
TQ,R,V_mode
aliased blob %s has different shape from blob aliased to %s
force_aliased blob %d is not colored
code %d is not a valid graph coloring method
string property pass_graph_coloring must be a string of integer. Got %s
options are not set for pass_graph_coloring
pool3d_kernel_cpu: Null top blob
pool3d_kernel_cpu: Null bottom blob
Unsupported Pool3D mode.
associated_forward_kernel not configured
Grad of L2 pooling not implemented, %s:%d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/KernelsCPU_Backward.mm
activation_grad_cpu for activation mode %d is not implemented
softmax_loss_grad_kernel needs 3 inputs: y, label, dy
batchnorm_grad for training && training_instancenorm != MVA_NONE is not supported now
batchnorm_grad for inference mode batchnorm needs batchnorm_coefs as the second input
Data Inconsistency
EspressoError
Failed to find preprocessing parameters for image, must specify: scale, R,G,B biases, and whether the network's input is expecting BGR color interleaving.
bias_r
bias_g
bias_b
is_network_bgr
Failed to find one or more of the following pre-processing params by key (each is required): scale, bias_r, bias_g, bias_b, network_wants_bgr.
CVPixelBuffer provided must be of an interleaved pixel format (must not be planar)
CVPixelBuffer must be one of: kCVPixelFormatType_OneComponent8, kCVPixelFormatType_32ARGB, kCVPixelFormatType_32BGRA
v16@?0r^{shared_ptr<Espresso::abstract_batch>=^{abstract_batch}^{__shared_weak_count}}8
    
Tensor w/ data pointer: %p: data: %@. 
Shape: %@, Strides: %@,Contiguous Size: %lu
imageBuffer
T{vImage_Buffer=^vQQQ},V_imageBuffer
allocatedImageData
T{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}},V_allocatedImageData
float_buffer
T{float_buffer_t=^fQB},V_float_buffer
blob
T{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}},V_blob
T^v,N,V_dataPointer
dataArray
T@"NSArray",&,N,V_dataArray
TQ,N,V_type
T@"NSArray",&,N,V_shape
T@"NSArray",&,N,V_strides
maxNumberOfElements
T@"NSNumber",&,N,V_maxNumberOfElements
[Espresso] uninitialized network
Null blob: 
[Espresso] wrong number of images in image batch
[Espresso] wrong image size
[Espresso] emtpy image
[Espresso] wrong number of input channels while binding XYZA image: it should be at least 2
[Espresso] wrong number of input channels in image
Espresso: wrong_batch_type
Conv weights not set 
convolution has fp16 weights; must use fp32 weights for training.
convolution layer is missing weights.
W_uint8
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/KernelsCPU.mm
tree_W
tree_b
tree_map_to_index
tree_cluster_end
block_starts
block_cols
sparse_weights_f32
sparse_weights_f16
Unsupported activation fn with quantized weights and lookup
inconsistent state!
__launch_f16_is_lookup
p.is_lookup != 0
inner product has fp16 weights; must use fp32 weights for training.
inner product layer is missing weights
Blob of wrong type (bottom)
Blob of wrong type (top)
Unknown mode in upsample_kernel_cpu.
elementwise_kernel_cpu: Cannot broadcast [%d, %d, %d, %d, %d] and [%d, %d, %d, %d, %d]
ELEMENTWISE_OPERATION_INTERNAL_MUL_XYKN not implemented
operation %d does not support broadcasting
Blob of wrong type
3 inputs (x, gamma, beta) are needed if training && training_instancenorm == MVA_NONE
3 outputs (y, x_mean, sqrt(x_var + eps) are needed if training && training_instancenorm == MVA_NONE
MVA_L2 not supported
BN: Invalid K dimension %d / %d / %d
batchnorm_coefs is neither provided as a second input nor set as kernel property
:sigma
Not implemented %d
ESPRESSO_DEBUG_FUSED_GRU
PReLU params not set
Softplus weights not set
Incompatible operands CP
dynamic reshape requires interpreter
Reshape: invalid input blob
Invalid dst shape
reshape mismatching size: %d %d %d %d %d -> %d %d %d %d %d
Reshape: invalid blob configuration
Reshape: invalid mode %d
tile_kernel_cpu: dynamic parameters require interpreter
Flatten: invalid mode %d
l2_normalize: invalid blob configuration
Insufficient bottom blobs
broadcast_kernel_cpu: dynamic parameters require interpreter
broadcast_kernel_cpu: invalid rank
broadcast_kernel_cpu: Blob with full 5d shape is required as fill argument
broadcast with more than 1 input is not supported when ndlayers_impl == false
cast_kernel_cpu: mismatching input blobs
cast_kernel_cpu missing mode
Invalid mode
generic_crop_and_resize_kernel: Inconsistent state
generic_crop_and_resize_kernel: crop indices must be of size 4 or 5
generic_crop_and_resize_kernel: output width does not match the kernel target width parameter
generic_crop_and_resize_kernel: output heigth does not match the kernel target height parameter
generic_crop_and_resize_kernel: zero output width
generic_crop_and_resize_kernel: zero output height
generic_crop_and_resize_kernel: zero input width
generic_crop_and_resize_kernel: zero input height
generic_crop_and_resize_kernel: RoI batch id greater than input batch size
generic_crop_and_resize_kernel: Invalid crop index mode
generic_crop_and_resize_kernel: Invalid grid sampling mode
dynamic topk requires interpreter
topk kernel: computed output shape along specified axis is not equal to num_k
Invalid number of bottom blobs
Q_meta
Invalid axis
general_concat_cpu: source blob %d is null
general_concat_cpu: interleaved source blobs %d, %d have mismatched width: 
general_concat_cpu: interleaved source blobs %d, %d have mismatched height: 
general_concat_cpu: interleaved source blobs %d, %d have mismatched depth: 
general_concat_cpu: interleaved source blobs %d, %d have mismatched batch size: 
general_concat_cpu: interleaved source blobs %d, %d have mismatched sequence length: 
spatial_transformer_kernel_cpu: requires two inputs
Invalid state: blob_f4::ptr image in spatial_transformer_kernel_cpu is null
Invalid state: blob_f4::ptr ocrop in spatial_transformer_kernel_cpu is null
output dimensions ocrop_w, ocrop_h must both be greater than 1 for spatial_transformer_kernel_cpu.
Invalid state: blob_f4::ptr coordinates in spatial_transformer_kernel_cpu is null
Invalid mode argument in spatial_transformer_kernel_cpu.
Copy: mismatching blob count
scatter_kernel_cpu: Invalid index %d into input (%d, %d, %d, %d, %d)
scatter_kernel_cpu: Invalid number of value blobs %ld != %ld
scatter_kernel_cpu: coords.shape[%d] = %d != slice.shape[%d] = %d
scatter_kernel_cpu: Invalid shape of value blob
scatter_kernel_cpu: Invalid number of value blobs %ld < %ld
scatter_kernel_cpu: Invalid shape of input blob
load_random_kernel_cpu: dynamic shape mode not supported without interpreter
Invalid random distribution: %D
v16@?0^{blob<float, 4>=^^?[4i]^fB{shared_ptr<Espresso::blob_storage_root>=^{blob_storage_root}^{__shared_weak_count}}}8
dynamic range requires interpreter
range_kernel_cpu: [%d, %d, %d, %d, %d] != [1, 1, 1, 1, 1]
Rank of the input must be atleast 2 for matrix_band_part_kernel_cpu
Only 2d matrices are supported by matrix_band_part_kernel_cpu
fill_kernel_cpu: dynamic parameters require interpreter
fill_kernel_cpu: invalid rank
Blob with full 5d shape is required as fill argument
batch_matmul_kernel_cpu: Channel mode not available for 4D+ tensors
batch_matmul_kernel_cpu: Sequence dimensions do not match
Not compatible for multiplication
Invalid pad tensor dimensions: %zu for input of rank:%zu
Output tensor rank: %zu is not equal to input rank: %zu
tensor_pad kernel must have atleast two inputs
Invalid pad tensor dimensions: %zu
Invalid index %d into axis of size %d
array_gather does not support indexing into 5D blobs
multinomial requires one input blob
instancenorm_1d_kernel_cpu: missing param wGamma
instancenorm_1d_kernel_cpu: missing param wBeta
instancenorm_1d_kernel_cpu: wGamma (%d) size is less than input blob (%d, %d, %d, %d) size
instancenorm_1d_kernel_cpu: wBeta (%d) size is less than input blob (%d, %d, %d, %d) size
instancenorm_1d_kernel_cpu: inner dimension must have size > 1
gumbel-max requires atleast one input blob
transplant kernel needs two src blobs
transplant kernel produces two dst blobs.
transplant kernel requires batchnorm coefs
transplant_kernel_cpu: weights (shift data) not found.
transplant does not support n > 1 or seq > 1
invalid mode selected for transplant
general_slice_kernel_cpu: atleast one bottom blob required
general_slice_kernel_cpu: dynamic parameters require interpreter
cross_entropy: output should be reduced to a scalar
cross_entropy needs 2 inputs: probability and label as class indices
cross_entropy: only REDUCE_MODE_AVG and REDUCE_MODE_SUM are supported
Invalid number of inputs to adam kernel
lr = %f < 0
eps = %f < 0
beta1 = %f not in [0, 1)
beta2 = %f not in [0, 1)
non_maximum_suppression_kernel: there must be 4 output blobs.
num_boxes_pre_nms should be 0 or greater than max_boxes
gather_nd_kernel_cpu: two inputs required
gather_nd_kernel: In TF_GATHER_ND mode, Invalid index %d into axis of size %d
gather_nd_kernel: In TF_GATHER mode, Invalid index %d into axis of size %d
gather_nd_kernel: In TORCH_GATHER mode, Invalid index %d into axis of size %d
scatter_nd_kernel_cpu: three inputs required.
scatter_nd_kernel: In TF_SCATTER_ND mode, Invalid index %d into axis of size %d
scatter_nd_kernel: Invalid accumulation mode.
scatter_nd_kernel: In TF_SCATTER mode, Invalid index %d into axis of size %d
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid index %d into axis of size %d
dynamic one_hot requires interpreter
one_hot_kernel_cpu: [%d, %d, %d, %d, %d] != [1, 1, 1, 1, 1]
cumsum_kernel_cpu: [%d, %d, %d, %d, %d] != [1, 1, 1, 1, 1]
cumsum_kernel requires 2 input blobs.
Incorrect format size combination: format=%s, nB=%d, nC=%d, nnz=%d
%d %d
!(frac_y < 0 || frac_x < 0 || frac_y > 1 || frac_x > 1)
axis should be non-negative and smaller than rank of input
inputs' ranks do not match
stride = %d <= 0 is not allowed
invalide input shapes: %s, %s for stride = %d, start = %d, end = %d, axis = %d
input shapes at axis %d != p.axis = %d do not match %d vs %d
static_dequantize_kernel_cpu: no bottom specified
fused_convolution_grad: Layer supposed to be unpacked on CPU engine
fused_inner_product_grad: Layer supposed to be unpacked on CPU engine
Cannot multiply matrices with sizes [%d, %d] and [%d, %d]
unsupported update operation %d
blob to copy has different total dim from required shape
espresso.engine_availability_reordering
run_faux_dispatch_for_precompiled
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/Dispatch.mm
primary_platform == ANE_RUNTIME || primary_platform == ANE_RUNTIME_DIRECT
precompilation_info_stream != nullptr && precompilation_info_stream->good()
network->kernel_validation_status
The network bounces between the ANE and GPU/CPU or between GPU & CPU too often. Please consider running the network on a different engine or change the architecture.
com.espresso.dispatch_version
com.espresso.dispatch_avoid_gpu
com.espresso.dispatch_avoid_cpu
ESPRESSO_DISPATCH_VERSION
com.apple.espresso.dispatch_allow_loop_accelerate
Dynamic loop detected, Please change to use CPU backend for performance boost
The network falls back to GPU too often. Please consider running the network on GPU or change the architecture.
The network falls back to CPU too often. Please consider running the network on CPU or change the architecture.
_ctx_tx_to_fallback_
_ctx_tx_to_default_
_ctx_tx_fallback__
_ctx_tx_default__
Op not available: 
Binserializer error 
Align error
Invalid quantization parameters
BNNS de-quantization error
FP16 BNNS Dequantizer only available for uint8/int8
Unable to extend signed int weights to unsigned char
W_U8
Mismatching legacy ranges size %d != %d
Unrecognizable weight name
Mismatching size %d != %d, n_elements=%d n_bits=%d
lut_to_
Mismatching lut_to_float32 linear size %d != %d
lut_to_int8
Mismatching lut_to_int8 size %d != %d
lut_to_uint8
Mismatching lut_to_uint8 %d != %d
Mismatching per_ch_qscale size %d != %d
Mismatching per_ch_qbias size %d != %d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/Espresso/Source/BitPacker.hpp
num_bits <= 8
espresso_uint8_at
n_bits <= 8
msb_aligned_bitmask_covering_num_bits
compute_convolution3d_cpu
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/ConvolutionKernelCPU.mm
tops->dim[3] == batch_count * U.C
compute_deconvolution3d_cpu
convolution_kernel_cpu: Null top blob
convolution_kernel_cpu: Null bottom blob
activation %d fused into convolution is not supported
Integer multiplication overflow between size %lu and size %d
BinSerializer error %d:%s in %s @ %s:%d
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/Espresso/Source/BinSerializer/Custom_BinSerializer_Core.cpp
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_freadInBytes(FILE *, const char *, bool, void **, size_t *)
Espresso::BinSerializer::BinSerializer_status Espresso::BinSerializer::BinSerializer_fwrite(FILE *, const char *, Espresso::BinSerializer::BinSerializer_dataType, const void *, size_t)
T@"NSArray",&,V_layerNames
post_scale
hx_extra_f
No hx_scale_shift for %s (type %s)
 [Exception from Layer: 
Invalid bottom shape for layer: 
Invalid top shape for layer: 
Configuration: %s, the blob %s is not an input
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/Net.mm
Unsupported scripting engine 
@bindglobal@
index >= blob_shapes.size() %zu %zu
run_on_network
result.n_blobs == result.blob_name_to_index.size()
pass_global_name_indexing_result not synced
constant_if_condition
B16@?0Q8
interpreter is needed by load_global layers
layer %s is not a load_global layer
"Invalid state"
"Invalid argument"
"Invalid blob shape"
"Not implemented"
"Unsupported configuration"
"Memory error"
"I/O error"
"Generic error"
Espresso exception: 
 [Thrown from: 
format_string
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/EspressoExceptions.cpp
result >= 0
result > 0 && result <= length
dataStorage
T{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}},V_dataStorage
blobShapes
T{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}},V_blobShapes
number_of_data_points
TQ,V_number_of_data_points
TQ,V_batchSize
nonBatchBlobNames
T{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}},V_nonBatchBlobNames
com.apple.espresso.trace
com.apple.espresso.trace.path
%@/pid_%d_plan_%d
/grad@
W_u8
W8_minmax
at least one input needed for softmax
softmax loss gradient: invalid number of output grad: %zu != 1
softmax loss gradient: invalid number of inputs: %zu != 2
softmax_loss_grad
softmax gradient with is_log_softmax
/mul
/reduce
/sub
To compute cross entropy, softmax kernel needs 2 inputs
upsample
in order to take gradient of a training mode batchnorm layer, 3 inputs (x, gamma, beta) are needed
batchnorm_grad
in order to take gradient of a inference mode batchnorm layer, 2 inputs (x, batchnorm_corf) are needed
It's invalid to take gradient wrt batchnorm coefficient of inference mode batchnorm
inference mode batchnorm has at most 2 inputs
Shape mismatch: n 
Input tensor rank to conv3d must be 5
No input given to activation layer.
Activation layer does not produce any outputs.
activation_grad
Invalid configuration : Global 3d pooling with non-zero padding.
Unsupported top shape style.
No input given to pooling layer.
pool_grad
generic_upsample_kernel: fractional scaling factor not supported in the nearest neighbor mode
generic_upsample_kernel: fractional scaling factor cannot be used in legacy mode
generic_upsample_kernel: fractional scaling factor is too small, output shape is 0
generic_split_kernel: Number of top blobs in split kernel does not evenly divide n axis
generic_split_kernel: Number of top blobs (%d) in split kernel does not evenly divide width axis (%d, %d, %d, %d).
generic_split_kernel: Number of top blobs in split kernel does not evenly divide channels axis.
generic_pool_grad_kernel: need the input blob of corresponding pool kernel as the second input to compute the top shape
No input given to elementwise layer.
elementwise op 
:sign
:cos
:sin
grad of elementwise if with broadcast
:true
:not
:false
elementwise: inputs must have same rank as output
grad of elementwise min/max with alpha != 1 or beta != 0
grad of elementwise min/max with broadcast
:greater
:less
/pow
Backward not supported for elementwise operation %d
Unexpected null blobs
axpby
Inconsistent state
Incompatible operands
Invalid dst shape %d negatives
Mismatch between input rank & target rank %d %d
generic_reshape_kernel: Invalid bottom shape (%s) for reshape to (%s)
generic_reshape_kernel: Invalid bottom shape (%d %d %d %d %d) for reshape to (%d %d %d %d %d)
Invalid argument
Invalid rank and axis pair %d %zu
_reshaped
_reshape
Unsupported flatten param
Unexpected input batch_n 
Unexpected input size w=
input_embedding_size must be > 0 in seq2seq mode
Not impl
argmax
Not implemented
generic_crop_and_resize_kernel: requires either one or two inputs
generic_crop_and_resize_kernel: RoI input's batch dimension must be 1. Instead it is %d.
generic_crop_and_resize_kernel: RoI input's height dimension must be 1. Instead it is %d.
generic_crop_and_resize_kernel: RoI input's width dimension must be 1. Instead it is %d.
generic_crop_and_resize_kernel: RoI input's channel dimension must be either 4 or 5. Instead it is %d.
generic_patch_extractor_kernel: requires at least one input
generic_patch_extractor_kernel: sparse mode requires two inputs
generic_patch_extractor_kernel: invalid axis=
get_homography_from_4_source_points not implemented
generic_patch_extractor_kernel: invalid dense_stride_x
generic_patch_extractor_kernel: invalid dense_stride_y
generic_spatial_transformer_kernel: requires two inputs
generic_spatial_transformer_kernel: invalid axis=%d
spatial_transformer
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/KernelInterfaces.mm
Invalid block_size 
Shape error b.k=
Zero shape error
Invalid axis 
Invalid start 
Unsupported slice mode
Invalid slice end=
 start=
 dim=
 dim_orig=
@container
slice_update
l2_normalize_grad
Bcast shape error 1 != w: %d
Bcast shape error 1 != h: %d
Bcast shape error 1 != k: %d
Bcast shape error 1 != n: %d
Bcast shape error 1 != seq: %d
matrix_band_part takes exactly one input blob.
Rank of the input must be atleast 2 for matrix_band_part
Only 2d matrices are supported by matrix_band_part
/broadcasted
/ratio
reduce_grad with mode other than REDUCE_MODE_SUM and REDUCE_MODE_AVG is not implemented
generic_squeeze_kernel: one input required
Invalid axis %d for rank %zu
Cannot squeeze a dimension whose value is not 1: shape[%d]=%d
All the values in the 'axes' parameter of squeeze kernel must be unique
All the values in the 'axes' parameter of expand_dims kernel must be unique
generic_load_constant_kernel must have a blob set
generic_load_constant_kernel wrong size
not a load_constant kernel
Invalid configuration
Invalid configuration dst=
 src=
do_scale must be true to backprop dropout op
No input given to transpose layer.
Qscale
Qbias
Qrow_sums
Invalid axis argument in topk_kernel_cpu.
generic_general_concat_kernel: axis out of bounds
generic_general_concat_kernel: interleave true but all shapes not equal
axis %d not implemented
constant_pad_kernel: values in pads cannot be both positive when 'pad_to_given_size_mode' flag is set.
generic_batch_matmul_kernel: two inputs required
generic_batch_matmul_kernel: not implemented for 4D+ tensors
generic_batch_matmul_kernel: seq dimensions do not match
generic_batch_matmul_kernel: not compatible for multiplication
array_gather::build_grads_for_inputs with simple_gather == false is not implemented
array_gather::build_grads_for_inputs with axis != 0 is not implemented
:init
scatter
generic_multinomial_kernel: one input blob required
generic_gumbel_max_kernel: atleast one input blob required
generic_gumbel_max_kernel: random uniform input (%d, %d, %d, %d, %d) should have the shape (%d, %d, %d)
generic_gumbel_max_kernel: random uniform input (%d, %d, %d) doesn't match logits (%d, %d) batch size
generic_gumbel_max_kernel: random uniform input (%d, %d, %d) doesn't have required samples i.e. %d != %d
generic_gumbel_max_kernel: random uniform input (%d, %d, %d) doesn't match logits (%d, %d) class size
shifts
batchnorm_params
Unrecognized weights in generic transplant kernel.
generic_transplant_kernel: expected 2 bottom blobs, got %d
generic_general_slice_kernel: atleast one bottom blob required
generic_sliding_windows_kernel: atleast one bottom blob required
generic_reverse_seq_kernel: atleast two bottom blobs required
gather_nd_kernel: two inputs required
gather_nd_kernel: In TF_GATHER_ND mode, invalid indices. indices.shape[-1] <= params.rank
gather_nd_kernel: In TF_GATHER mode, Invalid value of the argument 'axis'.
gather_nd_kernel: In TORCH_GATHER mode, Invalid value of the argument 'axis'.
gather_nd_kernel: In TORCH_GATHER mode, inputs should have the same rank.
gather_nd_kernel: In TORCH_GATHER mode, Invalid input shapes. Shapes can only differ in axis dimension.
gather_nd_kernel: Invalid MODE
scatter_nd_kernel: three inputs required
scatter_nd_kernel: In TF_SCATTER_ND mode, invalid indices. indices.shape[-1] <= params.rank
scatter_nd_kernel: In TF_SCATTER_ND mode, rank of indices tensor needs to be >= 2.
scatter_nd_kernel: In TF_SCATTER_ND mode, invalid shape of UPDATES tensor.
scatter_nd_kernel: In TF_SCATTER mode, Invalid value of the argument 'axis'.
scatter_nd_kernel: In TF_SCATTER mode, invalid shape of UPDATES tensor.
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid value of the argument 'axis'.
scatter_nd_kernel: In TORCH_SCATTER mode, inputs should have the same rank.
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid input shapes. For REF and INDICES tensor, shapes can only differ in axis dimension.
scatter_nd_kernel: In TORCH_SCATTER mode, Invalid input shapes. INDICES and UPDATES tensor should have the same shape.
scatter_nd_kernel: Invalid MODE
split_nd
generic_split_nd_kernel: atleast one bottom blob required
generic_split_nd_kernel: Invalid value of the argument 'axis'.
non_maximum_suppression_kernel: must have at least 2 inputs.
non_maximum_suppression_kernel: first two inputs must have rank 3.
non_maximum_suppression_kernel: invalid input shape.
sparse_inner_product
Invalid enum
invalid value
_reverse
W_x_8bit
W_x_int8
W_8bit
W_h_8bit
W_h_int8
_Qbias
_Qrow_sums
_Qscale
W_p_8bit
W_p_int8
W_t_x
w_f32_t
W_t_h
Invalid cell mode 
Invalid value 
_quant_input
generic_rnn_arch_kernel_impl: LSTM weights not set
weights not set
GRU Not implemented
Mismatching size w:
Mismatching size h:
Mismatching size n:
Mismatching size seq:
Unsupported number of inputs
generic_bahdanau_attention_kernel: Needs 3 bottom blobs
top_shapes_for_bottom_shapes
key_shape.rank() == query_shape.rank()
query_shape[query_shape.rank() - 1] == 1
key_shape[key_shape.rank() - 1] == 1
query_shape[query_shape.rank() - 2] == 1
key_shape[key_shape.rank() - 2] == 1
key_shape[1] == 1
generic_self_attention_kernel: Needs 3 bottom blobs
%s should have exactly %d %s%s
input
output
Cannot broadcast blobs
:broadcasted
/shape
/count
no_op
crop
convolution_grad
convolution_weights_grad
concat_grad
bias_grad
inner_product_grad
inner_product_weights_grad
elementwise_grad
dropout
dropout_grad
tile
prediction_smoothing
cast
compute_stats
patch_extractor
quantized_gather
cf_branch
cf_call
cf_return
alloc
cf_for
array_gather
multinomial
phi_virtual
builtin
transplant
stack_nd
cross_entropy
adam
precompiled_segment
dev_op
grid_sampling
local_correlation
bahdanau_attention
self_attention
loopkit
hierarchical_inner_product
static_quantize
static_dequantize
fused_convolution_grad
fused_inner_product_grad
wg_tx_in
wg_tx_out
lambda
%s needs at least 2 inputs for gradients, got %zu
fused_
_grad
_weights_grad
has_data_grad is false
has_weights_grad is false
has_bias_grad is false
Unexpected type for 
src_
dst_
pads_
axes_
begin_
OneComponent16Half
OneComponent32Half
AGX_32BGRA
AGX_OneComponent16Half
AGX_OneComponent8
Unsupported pixel format %d
Unsupported pixel format %s
Size of data source is 0
not getting data for tensor '%s' at index %lu
data provider should provide tensor with batch size 1, instead of %d
5d tensor not supported yet
start_t
Td,V_start_t
end_t
Td,V_end_t
error_public
T@"NSArray",&,V_error_public
error_private
T@"NSArray",&,V_error_private
supported
Tc,V_supported
exists
Tc,V_exists
has_perf_warning
Tc,V_has_perf_warning
internal_layer
Tc,V_internal_layer
T@"NSString",&,V_type
T@"NSString",&,V_name
debug_name
T@"NSString",&,V_debug_name
selected_runtime_engine
Ti,V_selected_runtime_engine
main_engine_support
T@"EspressoProfilingLayerSupportInfo",&,V_main_engine_support
per_platform_support
T@"NSDictionary",&,V_per_platform_support
runtimes
T@"NSArray",&,V_runtimes
average_runtime
Td,V_average_runtime
T@"NSMutableArray",&,V_layers
network_at_path
T@"NSString",&,V_network_at_path
Inserted element should have same shape as existing elements in blob_array
blob_container_array_scatter: Invalid number of value blobs %ld != %ld
blob_container_array_get: Blob of shape (%d, %d, %d, %d, %d) %d cannot hold gathered blob of shape (%d, %d, %d, %d, %d) %d
blob_container_array_gather: Blob shape not compatible for gathering blob array
pop_back on empty blob array
shape of returned blob is different from that of the blob array
blob_array requires all elements to be of same shape
espresso.interpreter.verbose
missing src %s
missing dst %s
[interpreter_t] top.inetwork=%zu >= networks.size()=%zu
__launch_function
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/ControlFlow/Interpreter.mm
segment.start == top.ilayer
Cannot find network %s
prepare_basic_block %zu %zu
prepare_basic_block
Phi kernel expected to have output
%zu: resolved_dim=%lld current_dim=%lld changed=%d
_@ssa_version_
Missing weights
v16@?0Q8
ESPRESSO_CPU_FORCE_CHUNK_SIZE
bahdanau_attention: Layer supposed to be unpacked on CPU engine
W_query
W_key
raw_score
self_attention: Layer supposed to be unpacked on CPU engine
W_value
b_query
b_key
b_value
self_attention_kernel_cpu: requires 3 bottoms
masked_raw_score
Quantizing FC %s (%d x %d = %.2fk)
ip: %s
FC_INT8_INT8
 PSNR=%.2f (s %e b %e)
mkdir -p 
dump: %s
Min PSNR=%.2f
W_int16
invalid state
conv: %s
compressing %s (%ld)
channels_per_chunk=%d
maxerr=%e mM=%e %e cmM=%e %e
Channel for chunk %d/%d: %d - %d. C=%d %e - %e
setting ranges %d
[Quant] PSNR %s (%s): %.3f (min=%.3f)
Total size of AUX lut tables/ranges %.4f MB
early exit iter=%d
quantize_chunks
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/Espresso/Source/QuantUtils.hpp
static_cast<float>(iq) == integer_value
Skipping quantization for depth-wise convs. workaround for rdr38565288
network not prepared for reshape_networks
[ESPRESSO_MEMORY_VERBOSE] Input: %s -> %d
[ESPRESSO_MEMORY_VERBOSE] %s %s -> %d
allocate_and_color_blob
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/NetReshape.mm
selected_color >= 0
deallocate_dead_blobs
ilayer >= 0
blob not found in gc
[ESPRESSO_MEMORY_VERBOSE] max size for color %d %.3fMB (%d %d %d %d)
Logic error in NetReshape, color 
shape_network_recursive
bottoms.size() == tops.size()
only root module can have globals
compute_path
Memory allocation error %d: %zu bytes
com.apple.espresso.memdbgq
getSizesPerPointer
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/Blob.mm
debug_allocated_mem
error loading file: 
File
not a regular file
failed to memory map file: 
 error: 
illegal number of encrypted bytes, encrypted pages = 
failed to setup decryption path due to error: 
activation_grad for activation mode %d is not implemented
bnns_filters_ref.size() != n_groups
Failed to create BNNS Filter for Convolution Layer
v84@?0Q8Q16Q24i32Q36Q44^{?=II[8Q][8Q]^vI^vIff}52^{?=II[8Q][8Q]^vI^vIff}60^{?=II[8Q][8Q]^vI^vIff}68^{?=II[8Q][8Q]^vI^vIff}76
Failed to create BNNS Filter for Fully Connected Layer
Only fp32 and fp16 are supported
Null output blobs
Conv weights not set
L2 pooling is not supported on BNNS engine
fallback kernel not available
bnns failure
Leaky relu not supported with quant weights
inconsistent state! Expected inner product with 8bit clip input quantization
BNNS Runtime Error 
missing param: wQscale
missing param: wQbias
missing param: wQrow_sums
missing param: weights_8bit
BNNS Error
missing param: weights_int16
BNNS Error %d
FC weights not set
Invalid rank
Mismatching batch size: %zu / %zu
A dynamic quantized inner product layer's activation function should be moved to the folowing dynamic_dequantize layer
Quantization not supported 
Flatten: invalid blob configuration
slow_batchnorm_fallback
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/AltEngines/BNNSEngine/BNNSEngine/BNNSKernels.mm
p.has_batch_norm
not supported
Unsupported compute path: %d %d
BNNS FP16 not implemented
Unsupported version 
; likely because weights file is corrupt
Unexpected end of weight file
Error loading file: 
mmap error: 
Can't open for writing: 
compute_local_costs_v3
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/DispatchCosts.mm
compute_weight <= 1.0f
io_weight <= 1.0f
Batch
Epoch
Unimplemented: unable to load updatable model w/ context: ANE
unsupported configuration: GPU not supported on this platform
Queried tensor '%s' not found in network
number tensors from data provider == %lu < number of requested tensors == %lu
tensor of name %s not provided by data provider
inconsistent shape of tensor %s between tensor in network and tensor provided by data loader: %s vs %s
Training Graph:
Src[%d]: %@ (layer[%d]) [w:%d,h:%d,k:%d,n:%d,seq:%d,rank:%d,platform:%d,computePath:%d]... 
data at 0: %f
%@: layer[%d], kernel type: %@, layerPlatform: %d, layerComputePlatform: %d
Dst[%d]: %@ (layer[%d]) [w:%d,h:%d,k:%d,n:%d,seq:%d,rank:%d,platform:%d,computePath:%d]... 
data at 0: %f
Batch size can't be 0/
is_training
end_training
compute_gradient
end_compute_gradient
do_optimization_update
end_optimization_update
No network made from call to load_network
_updatable.espresso.net
Found Espresso network (model_updatable.espresso.net) has no training graph
_auxiliary_output
loss name %@ does not exist
loss type not supported: %d
layer_type
layer_name
layer_idx
Invalid optimizer type, optimizer must be of type SGD or Adam
MultiGPU not supported yet
training control variable '%s' not found
Initializer '%s' not found
Failed to setup inputs %@
Failed to run inference on the network %@
Failed to train on the network %@
Use saveTrainingNetwork for ETTaskDefinition created by initWithTrainingModelDefinition
Failed to save the network %@
Failed to save the training network %@
Missing inference layer %s
training batchnorm is not supported
number of batchnorm inputs != 2
Currently only supports networks where only inner product and convolution layers have weights
Failed to load inference network at %@
.bin
Unable to find layer named: %@
kETLayerParameterTypeSparseWeightsCOO has to have rank 1 and its length must be a multiple of 3
Trying to set sparse weights for non-sparse layer %@ with type %s
Unable to set tensor named %@, no variable tensor with that name found.
Trying to set tensor %@ failed, tensor must be of type: kETDataTypeFloat32.
Trying to set tensor %@ failed, provided tensor must be of shape: %@, (found: %@).
Trying to set tensor %@ failed, provided tensor must have strides: %@ (found: %@).
inferenceGraphNetPtr
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_inferenceGraphNetPtr
trainingGraphNetPtr
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_trainingGraphNetPtr
inferenceModel
T@"ETModelDefinition",&,N,V_inferenceModel
optimizer
T@"ETOptimizerDefinition",&,N,V_optimizer
TQ,N,V_platform
taskState
T@"ETTaskState",&,N,V_taskState
Invalid rank: 
unordered_map::at: key not found
EspressoPass_%s
Pass not found %s
Invalid pass %s
com.apple.Espresso.registerBrickLock
Brick ObjC class: '
' not found
Don't know what to do.
Ti,V_width
Ti,V_height
channels
Ti,V_channels
batch
Ti,V_batch
Ti,V_sequence
rank
Ti,V_rank
T@"EspressoBrickTensorShape",&,V_shape
rawPointer
T^f,V_rawPointer
texture
T@"<MTLTexture>",&,V_texture
not implemented
Undefined weights 
Unexpected not-implemented function 
{shared_ptr<Espresso::generic_factory_t>=^{generic_factory_t}^{__shared_weak_count}}8@?0
Unexpected size s=
/blob=
Stack not empty after end of pass head=%zu size=%zu
Else at end of program
Unbound branch at end of program
Cannot find the label to bind
DummyMPSEngine
DummyBNNS
IREngine
DummyMPSBuffersEngine
nonlinearity
nonlinearity_grad
BNNS
ESPRESSO_ENGINE_MAX_VAL is not the right engine
Not supported engine: 
Not supported: 
dylib not loaded
cannot load shape info
!!! you should not read this !!!
the hash is already used in the file
memory allocation error
I/O error
invalid blob ID
invalid data type
invalid parameter
undexpected null pointer
internal error
not implemented error
QUANT_SIM
post scale dim != 1 or channel size
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/AltEngines/ANESimEngine/QuantSimEngine.mm
W_S8
ane_bias
ane_acc_bias_shift
Cannot do pass_make_ssa without an interpreter
phi_
received wrong object, expected net_info_ir_t
com.espresso.random
create_compiler_for_network
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/path.mm
build_grads_for_inputs not implemented
com.apple.espresso
espresso
Batch index > 0 not supported
Invalid source CVPixelBufferRef.
kCVPixelFormatType_OneComponent8 supported only for single channel inputs
CVPixelBuffer format must be Planar8 or 32BGRA
__copy_from_MTLTexture not supported with engine.
input_names and inputs_backpropable should be of same length
__copy_from_raw not defined for platform 
[retry]: %s err=%s
async_cache: Failed to create a dispatch queue
async_cache: no blob provided
async block timed out
Conv fp16 weights not set
shuffled weights not supported
[%d,%d,%d,%d,%d], [%d,%d,%d,%d,%d]
Elwise Op not implemented
{shared_ptr<Espresso::factory_object>=^{factory_object}^{__shared_weak_count}}8@?0
Deserialization tag "
" not found
Deserialization tag %s not found
Error reading the input file as JSON. Error: %s
deserialize
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/SerDesBackends/SerDesJSONObjC.mm
deserialized_object
The top level object in the JSON input must be a dictionary
Invalid stream passed to deserialize
Error allocating memory for deserialization
Error reading deserialization input
stl_string_from_cfstring
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/EspressoLight.mm
espresso.force_engine
Espresso compiled without CUDNN engine.
Espresso compiled without MPS engine.
Espresso compiled without HX engine.
Espresso compiled without HX CVA engine.
Unsupported engine type
Invalid platform enum 
Could not create context
Low priority mode not supported on this platform
espresso.force_dtype
Null path
Compute path 
 not supported.
The context is invalid.
Inconsistent phase of espresso_plan: %d
Invalid network_index.
Null network found.
Blob '
' not found.
Empty espresso_plan.
compiler must exist for network executing on ANE
com.apple.espresso.execution
create_binding_task
priv->binding_task == nullptr
Invalid network index
No outputs declared
No inputs declared
Inconsistent phase of espresso_plan: 
bind_input on subnetwork
Input not declared 
bind_input
priv->input_shapes.find(network_index) != priv->input_shapes.end()
net_blob
bind_output on subnetwork
Output not declared
Output not declared 
bind_output
priv->output_shapes.find(network_index) != priv->output_shapes.end()
Blob not found.
Input not declared
%s not declared: %s
generic_bind_external
Mismatching w: client:%d != internal:%d
Mismatching h: client:%d != internal:%d
Mismatching k: client:%d != internal:%d
Mismatching n: client:%d != internal:%d
Mismatching seq: client:%d != internal:%d
Invalid X-dimension 
Invalid Y-dimension 
Invalid K-dimension 
Invalid N-dimension 
Null image buffer
Null image buffer data
Blob null. 
Not implemented.
Only one of cvpixelbuffer and tex must be set
Pixel buffer must not be null.
Buffer with null data in blob 
CVPixelBuffer input not supported on pre-TibO
__copy_inputs
network_blob_it != task->_input_blobs.end()
blob_pair_it != network_blob_it->second.end()
__copy_outputs
network_blob_it != task->_output_blobs.end()
dispatch_task_on_compute_batch
priv->status == ESPRESSO_PLAN_PHASE_BUILT
hose_fd is supported for main function only
subnetwork with name %s does not exist
async submit not available in decaf mode
Espresso compiled without required engine for this API.
n_runs
Missing input shape: 
image
Unexpected null network
Unexpected null context
ESPRESSO_LITE_TEST_VECTORS
Cannot create directory: 
blobs.bin
test_vector.json
test_vector.plist
Cannot create file: 
binary_file
offset
Cannot write file: 
__raw__
com.espresso.multi_buffers_ane_q
map_priority
kernel not found '
' on platform 
{shared_ptr<Espresso::base_kernel>=^{base_kernel}^{__shared_weak_count}}28@?0r^{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}8r^v16i24
inner_product_quantized
[matrix_vector_mult_batched] Mismatch 
GRU not implemented
bind_external_input
bind_external_output
input_raw_ptr
output_raw_ptr
set_input_raw_ptr
set_output_raw_ptr
bind_dyn_output
unbind
submit
bind_input_vimagebuffer_XYZA8
bind_input_vimagebuffer_argb8
bind_input_cvpixelbuffer
__main__
parallel_softmax_2channels_chunk
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/SoftmaxKernelCPU.mm
params->channel_size == 2
Axis not supported
Only reduce on single axis is supported
Mismatch between lengths of shape and strides
Invalid multi_index
Invalid shapes for broadcasting
generic_general_slice: Mismatch between the input rank and the number of elements in begin_ids
generic_general_slice: Mismatch between the input rank and the number of elements in end_ids
generic_general_slice: Mismatch between the input rank and the number of elements in begin_masks
generic_general_slice: Mismatch between the input rank and the number of elements in end_masks
generic_general_slice: Mismatch between the input rank and the number of elements in squeeze_masks
generic_general_slice: Mismatch between the input rank and the number of elements in strides
generic_general_slice: Invalid values %d in begin_ids for input_shape %d
generic_general_slice: Invalid values in end_ids
generic_general_slice: Invalid values in strides
generic_general_slice: Invalid values in arguments (begin_ids, end_ids, strides)
general_slice_kernel_cpu: Invalid values in begin_ids
general_slice_kernel_cpu: Invalid values in end_ids
general_slice_kernel_cpu: Invalid values in arguments (begin_ids, end_ids, strides)
Invalid shape of first argument.
Invalid shape of second argument.
Invalid rank of output.
Invalid rank of output
Incompatible shapes for matrix multiplication.
Invalid value of the argument 'axis'.
BroadcastTo layer: Invalid target shape.
BroadcastTo layer: Invalid shapes for broadcasting.
Stack_nd layer: Invalid shapes of input tensors.
Stack_nd layer: Invalid rank of output tensor.
Stack_nd layer: Invalid value of the argument 'axis'.
Split layer: Invalid number or size of splits.
Mismatch between ranks of input and output tensors.
Sliding Windows Layer: Mismatch between ranks of input and output tensors.
Sliding Windows Layer: Window size can't be less than 1
Sliding Windows Layer: Step can't be less than 1
Sliding Windows Layer: Invalid value of the argument 'axis'.
Sliding Windows Layer: Window Size can't be larger than the dimension length.
Sliding Windows Layer: Invalid values in arguments (axis, window_size, step)
Reverse_seq Layer: Invalid value of the argument 'batch_axis'.
Reverse_seq Layer: Invalid value of the argument 'seq_axis'.
Reverse_seq Layer: batch_axis: %d should be strictly less than seq_axis: %d
Reverse_seq Layer: seq_lengths should be a vector of length equal to batch dimension of input.
Reverse_seq Layer: each seq_lengths element should be <= sequence dimension of input.
com.apple.espresso.factorylock
shared_block_invoke
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/factory.mm
factories == nullptr
shared_block_invoke_2
add_result.second
factory_iterator != factories->end()
blobs
T{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}},V_blobs
networkPointer
T{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}},V_networkPointer
Inconsistent status
_conv_group
index %d > %d
scatter_index
hierarchical_inner_product_kernel_cpu: invalid cluster index %d > %zu
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/KernelsCPU_HierarchicalInnerProduct.mm
scatter_index >= 0 && scatter_index < out_vec_len
[sequential_builder::add_kernel] %s %s dbg: %s
[sequential_builder::add_kernel_dbg] %s %s dbg: %s
shape of input %s missed
[sequential_builder::add_layer_from_network] %s -> %s
op_of_type_
constant_like_op/
constant_op/
global already exists: %s
write/
placeholder/
shape of blob %s is missing
.espresso.bin
.espresso.
test_data.json.bin
test_data.json
regression_conf.json
/code.nitroir
Cannot create file: %s
tolerance
tol_relerr
tol_aerr
tol_psnr
data_frames_file
config
tests
frames
Invalid state: network not added
net is null in tracer.
kind
file
row_bytes
tensor
Cannot write file: %s
function_name
Invalid state: No frames exists in the trace
:blob_type(
/updated_opcode_
/updated
optimizer_builder can be created only for networks on IR platform
/neg
sgd_step/
/momentum
/decayed
/step
sgd_update/
/res
/scale
/variance
/squered
/bias_correction
/rsqrt
/adam_step
adam_update/
/var
.weights
error loading binserializer.
.espresso.shape
Error reading layer shapes
Invalid blob_storage_write_version: 
layer_io not found for '
quantization_lut_weights_blob
quantization_lut_blob
quantization_ranges_blob
constant_blob
Invalid source layer %s
Can't find blob id 
Error reading blob id 
.espresso.weights
load_network_layers_and_exit does not support binserializer.
espresso network does not end in .espresso.net
Could not create filestream from json.
Missing weights path %s
Legacy metal engine Deprecated. It will removed soon
Load: unable to find implementation of class
 platform=
meta_convolution
Unsupported weights format
q_u8_range
W_f16
load_network_layers_post_dispatch
/Library/Caches/com.apple.xbs/Sources/CVML_Espresso_Decaf/CVML_Espresso_Decaf-244.1/EspressoCore/EspressoIO.mm
innerproduct_layer_quantized
Unmaintained layer
context_transfer
Cannot find key: 
 idx=
layerNames
T@"NSArray",R,V_layerNames
inputs
T@"NSArray",R,V_inputs
outputs
T@"NSArray",R,V_outputs
trainingInputs
T@"NSArray",R,V_trainingInputs
trainingOutputs
T@"NSArray",R,V_trainingOutputs
T@"NSURL",R,V_modelURL
isTrainingGlobalName
T@"NSString",R,V_isTrainingGlobalName
initializer
T@"NSString",R,V_initializer
string to be split cannot be empty or nullptr
__isPlatformOrVariantPlatformVersionAtLeast
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/clang/clang-1200.0.32.6/compiler-rt/lib/builtins/os_version_check.c
Platform2 == PLATFORM_MACOS && "unexpected platform"
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
%d.%d.%d
Value for '
' already found in scope.
Type for '
Failed to find type of 
Failed to find value of 
Serialized model type 
 is invalid.
Parameter names must be non-empty.
Parameter values must be non-null.
Function names must be non-empty.
Function parameter names must be non-empty.
Function parameter '
Function parameter types must be non-null.
A function must return the same number of values as its block.
A function must return the same types as its block.
Block parameter names must be non-empty.
Block parameter '
Block output names must be non-empty.
' used as block output.
Operation names must be non-empty.
Operation type 
 does not exist in this context.
Dynamic is not a supported immediate type.
Float16 is not a supported immediate type.
BFloat16 is not a supported immediate type.
Int4 is not a supported immediate type.
Int8 is not a supported immediate type.
Int16 is not a supported immediate type.
UInt4 is not a supported immediate type.
UInt8 is not a supported immediate type.
UInt16 is not a supported immediate type.
UInt32 is not a supported immediate type.
UInt64 is not a supported immediate type.
Any is not a supported immediate type.
Cannot parse invalid immediate value.
Cannot parse invalid value
Arguments not of the same length in classify operation: 
Incorrect type for probabilities output of classify operation: 
`parameters` parameter must be of type string for custom operator: 
`input_order` parameter not specified for operator 
. At least one input should be specified with `input_order`
`inpur_order` parameter must be of type string for custom operator: 
Parameter 
 not provided for operator 
`weights` parameter must be of type string for custom operator: 
 value not present for operator 
Custom layer parameter support Scalar types only!! Parameter 
 for operator 
Unsupported type for custom layer parameter 
Weight parameter 
Invalid weight parameter shape for 
 input is 
-D, 
expecting 1-D input for operator 
Program is null.
Program does not include a 'main' function.
Model and main function must have same number of inputs.
Model and main function must have same number of outputs.
preprocessing
Program has more than one 
 operations.
Preprocessing operation '
' may only appear in main block.
' to image preprocessing operation '
 ' must be a model input.
' used by image preprocessing operation '
' must be an image.
parameter
return value
return values
Model main function missing 
' specified by model.
Classifier main function 
 must be tensors or dictionaries.
Main function 
 must be tensors.
Model 
' is not a tensor.
' has a different rank than its corresponding 
 to main.
' has a different type than its corresponding 
' has a different shape than its corresponding 
main 
' must be a tensor of Float32.
Model image 
' has empty height or width.
' is not a dictionary.
' has invalid key type.
Unexpected 
 type.
Input MLMultiArray to neural networks must have at least 1 dimension.
For MLMultiArray input: Rank of the flexible shape range must match the rank of the default shape.
Neural Networks require 
 to be images or MLMultiArray.
Mismatch between specified rank and given dimensions.
Found invalid scalar type.
Cannot parse invalid value type
Cannot parse invalid Dimension.
protobuf spec is not valid MIL format.
Function '
' does not exist.
pad supports three modes: `constant`, `reflect` and `reflection`. Given 
 for layer 
Param 'constant_val' is required for padding mode 'constant' for layer: 
Padding must be rank 1 for layer: 
Pad can have a maximum size of 2 * (input x rank) for layer: 
Padding must be even! Provided odd number of padding for layer: 
Padding for more than two dimensions only supports `constant` mode for layer: 
Input and output should have the same rank for layer: 
Dim 
 for both input and output should have matching dimension 
type for layer: 
Padding size for dim
 is too big for mode reflect. 
 It can a maximum of (dim_size - 1) 
 is too big for mode replicate. 
 It can a maximum of (dim_size) 
Output dim
 size incorrect. Expected 
Output shape dimensions should match input when no padding is added: 
Rank != 3 for boxes in 
Rank != 3 for scores in 
Batch doesn't match between boxes and scores in 
Boxes doesn't match between boxes and scores in 
Invalid boxes coordinate in 
Attribute does not exist.
Parameter binding for 
 does not exist.
Operator 
 does not have an 
th output!
 'pred' argument must be scalar or single-element tensor in operation: 
 must have exactly one block in operation: 
 must return same number of values from both branches in operation: 
 must return same types from both branches in operation: 
More outputs requested than are available in 
 operation: 
Inconsistent output type between operation and branch return in 
Attribute val is undefined for const layer: 
 'cond' argument must be scalar or single-element tensor in operation: 
Wrong number of operation inputs for loop body in 
Inconsistent loop body input and output counts in 
Loop body parameter '
' missing from 
 inputs in operation: 
Inconsistent operation arguments and loop body input types in 
Inconsistent condition variable type between operation and loop body return in 
Inconsistent output type between operation and loop body return in 
Program declares two parameters with the same name:
Reading binary data of the given type is not supported.
Cannot initialize tensor value from value with wrong type.
Cannot initialize tensor value from vector of incorrect size.
Could not open 
Cannot determine number of elements in tensor with symbolic dimension.
Reading binary list data is not supported.
Cannot determine number of elements in list with symbolic length.
Reading binary tuple data is not supported.
Cannot determine number of elements in a tuple.
Reading binary dictionary data is not supported.
Cannot determine number of elements in a dictionary.
Cannot initialize list value from value with wrong type.
Cannot initialize list value from vector of incorrect size.
Unexpected immediate tuple value type.
Block contains two inputs with the same name:
Input to operation 
 does not resolve. Operations are expected to be topologically sorted.
Block redefines I/O name:
Opset '
' not does not exist.
Cannot re-register existing opset '
Attribute names must be non-empty.
Attribute values must be non-null.
Operator argument and output names must not be the same.
For operation of type '
' and name '
number of outputs must be within the range (inclusive): 
. Provided 
Operation output names must be non-empty.
Operation output '
' shadows an earlier declaration.
Operation uses '
' as both an input and an output.
Operation parameter names must be non-empty.
Operation argument names must be non-empty.
Undefined value '
' used as operation input.
Required param 
 is missing for layer: 
Param 
 should be const for layer: 
All dimensions of constant input 
 should be constant for layer: 
 is incorrect type for layer: 
number of inputs must be within the range (inclusive): 
CoreML.Specification.V5.Program.docString
CoreML.Specification.V5.Program.opset
CoreML.Specification.V5.Program.ParametersEntry.key
CoreML.Specification.V5.Value.docString
CoreML.Specification.V5.Value.FileValue.fileName
CoreML.Specification.V5.ListValue
CoreML.Specification.V5.TupleValue
CoreML.Specification.V5.TensorValue.RepeatedStrings.values
CoreML.Specification.V5.TensorValue
CoreML.Specification.V5.TensorValue.RepeatedStrings
CoreML.Specification.V5.TensorValue.RepeatedBools
CoreML.Specification.V5.TensorValue.RepeatedInts
CoreML.Specification.V5.TensorValue.RepeatedFloats
CoreML.Specification.V5.Value
CoreML.Specification.V5.Value.ImmediateValue
CoreML.Specification.V5.Dimension.symbol
CoreML.Specification.V5.Dimension
CoreML.Specification.V5.DictionaryType
CoreML.Specification.V5.ListType
CoreML.Specification.V5.TupleType
CoreML.Specification.V5.TensorType
CoreML.Specification.V5.ValueType
CoreML.Specification.V5.NamedValueType.name
CoreML.Specification.V5.NamedValueType
CoreML.Specification.V5.Operation.name
CoreML.Specification.V5.Operation.type
CoreML.Specification.V5.Operation.AttributesEntry.key
CoreML.Specification.V5.Operation.InputsEntry.key
CoreML.Specification.V5.Operation.InputsEntry.value
CoreML.Specification.V5.Block.outputs
CoreML.Specification.V5.Operation
CoreML.Specification.V5.Block
CoreML.Specification.V5.Function
CoreML.Specification.V5.Value.FileValue
CoreML.Specification.V5.Program.FunctionsEntry.key
CoreML.Specification.V5.Program
CoreML4
innerproduct
'axis' must be within range (-x_rank - 1, x_rank) (exclusive) for layer: 
Input 
 shape should match output shape for layer: 
 should be at least rank 3 in layer: 
 should be rank 1 in layer: 
Invalid 
 shape: rank should be known at compilation 
in layer:  '
Tensor 
 should be rank 1 with the same dim size as dimension '-3' 
in input 
 in layer:  '
Each 'axis' in 'axes' must be within range (-output_rank - 1, output_rank) (exclusive) for layer: 
The target shape cannot have symbolic rank in reshape layer 
Rank of the shape parameter must be between 0 and 5 (inclusive) in reshape layer 
Unable to reshape tensors of symbolic rank in layer 
Can only reshape to a shape containing 0 when rank(shape) = rank(x) in layer 
Each 'axis' in 'axes' must be within range (-input_rank - 1, input_rank) (exclusive) for layer: 
Symbolic rank not supported for 
Axes must be within range [-rank, rank) for 
Attribute 'x' must be rank [3, 5] in layer: 
Attribute 'kernel_sizes' must be rank [1, 3] in layer: 
Attribute 'pad_type' invalid: '
Must be one of the [same, valid, custom].
Attribute 'strides' must be rank [1, 3] in layer: 
Attribute 'pad' invalid: should be length of 2 * spatial rank
At lesat one of pad values exceed maximum allowed values (
Pad values must be 0s for 'valid' pad type.
Unsupported 3D Pooling type.
Function declares two inputs with the same name:
Copying boolean tensors is not supported.
Copying string tensors is not supported.
Copying tuples is not supported.
Copying boolean lists is not supported.
Copying string lists is not supported.
Cannot re-register operator '
' in opset '
Beta Operator Description not present
For layer: 
 with name: 
, each 'axis' in `axes` must be within range (-x_rank - 1, x_rank) (exclusive). Invalid axis: 
for input with rank: 
Each 'axis' in 'axes' must correspond to a unique & different dimension for layer: 
, 'axis' must be within range (-x_rank - 1, x_rank) (exclusive). Provided axis: 
Variadic input/weights not support for layer: 
Input x must be rank 3, 4 or 5 in layer: 
weight must be the a compatible dimensionality for x in layer: 
Unexpected non-constant dimension in weights shape for layer '
KernelChannels != Input channels
Kernel channels != Input Channels / Group
 for layer: 
Could not infer number of input channels for layer: 
Could not infer number of input/output channels for layer: 
Both the number of input and output channels must be divisble by # of groups for layer: 
Deconvolution 
3D Convolution
 does not support dynamic weights for layer: 
Input pad type must be one of {valid, same, custom} for layer: 
 chooses to use custom padding but does not provide custom padding.
Custom padding specified but custom padding not selected for layer: 
Convolution with dynamic weight does not support dilation for layer: 
Convolution with dynamic weight does not support bias for layer: 
Input dialations should be rank 1 for layer: 
Number of elements in input 
 must be 
2 * 
# of spacial input dims for layer: 
Must provide training inputs for updatable neural network (expecting both input and target for loss function).
Training inputs don't describe required inputs for the loss (needs both the input and the target).
The training inputs must include at least one input from the model itself as required for training (should have at least one input in common with those used for prediction).
The type of the training input provided: 
 doesn't match the expected type of the classifier. Found: 
, expected: 
The training inputs don't include the target of the classifier: 
The training inputs don't include the loss layer's target: 
The layer named '
' is marked as updatable, however, it is not supported as the type of this layer is neither convolution nor inner-product.
The model is marked as updatable, but none of the layers are updatable.
The updatable model has a name collision for: '
', i.e., there are more than one layers or loss layers with this name.
This model has more than one loss layers specified, which is not supported at the moment.
Failed to look up node for '
There is a layer (
), which does not support backpropagation, between an updatable marked layer and the loss function.
Epochs should be included in neural network update parameters.
SGD optimizer should include learningRate parameter.
SGD optimizer should include miniBatchSize parameter.
ADAM optimizer should include learningRate parameter.
ADAM optimizer should include miniBatchSize parameter.
ADAM optimizer should include beta1 parameter.
ADAM optimizer should include beta2 parameter.
ADAM optimizer should include eps (epslion) parameter.
Optimizer is not recognized.
For the categorical cross entropy loss layer named '
', input is not generated from a softmax output.
For the cross entropy loss layer named '
', target is generated within the graph.
For the MSE loss layer named '
', input is not generated within the graph.
Loss function is not recognized in the loss layer named '
', only cross entropy loss and MSE are supported.
An updatable layer, named '
', has quantized weights/bias param. Quantized weights/bias not supported for update.
', has a weight/bias param which is not marked as updatable.
CoreML.Specification.CategoricalMapping.strValue
CoreML.Specification.Pipeline.names
CoreML.Specification.SerializedModel.identifier
CoreML.Specification.Model
CoreML.Specification.ModelDescription.predictedFeatureName
CoreML.Specification.ModelDescription.predictedProbabilitiesName
CoreML.Specification.ModelDescription
CoreML.Specification.Metadata.shortDescription
CoreML.Specification.Metadata.versionString
CoreML.Specification.Metadata.author
CoreML.Specification.Metadata.license
CoreML.Specification.Metadata.UserDefinedEntry.key
CoreML.Specification.Metadata.UserDefinedEntry.value
CoreML.Specification.Metadata
CoreML.Specification.FeatureDescription.name
CoreML.Specification.FeatureDescription.shortDescription
CoreML.Specification.FeatureDescription
CoreML.Specification.PipelineRegressor
CoreML.Specification.PipelineClassifier
CoreML.Specification.SerializedModel
CoreML.Specification.Pipeline
Convolution Layer '
' does not support weight as input tensor when RANK5_ARRAY_MAPPING == true.
Padding type for convolution layer '
' is not set.
Deconvolution Layer '
' does not support weight as input tensor.
'  has invalid weights/bias fields.
Convolution layer 
has unmatched precisions of weights/bias They should either be half or full precision.
Deconvolution layer '
' has weight matrix of size 
 to encode a 
 convolution.
Layer 
has not specified weights.
' has a bias vector of size 
 but should be 
has not specified bias.
' has incorrect 
 size 
 (expected 
' has insufficient bytes for quantized 
 with 
units.
' has invalid quantization parameters for quantized 
' has unspecified 
' has empty 
' has 
 rank 
 but expects rank exactly 
 but expects rank at least 
 but expects rank at most 
' expects equal ranks for its input and output, but they are not equal.
' of type 
 has 
 outputs but expects exactly 
 outputs but expects at least 
 outputs but expects at most 
 inputs but expects exactly 
 inputs but expects at least 
 inputs but expects at most 
Convolution3D
Input Channels
Output Channels
Groups
Kernel Depth
Kernel Height
Kernel Width
Stride Depth
Stride Height
Stride Width
Dilation Depth
Dilation Height
Dilation Width
Custom Padding Front must be non-negative, got '
Custom Padding Back must be non-negative, got '
Custom Padding Top must be non-negative, got '
Custom Padding Bottom must be non-negative, got '
customPadding Left must be non-negative, got '
customPadding Right must be non-negative, got '
Convolution3D layer '
' has unmatched precisions of weights/bias They should either be half or full precision.
Deconvolution3D Layer '
' Output Shape is supported for Deconvolution layer.
Deconvolution3D layer: '
' , if set, output shape must be of length 3.
' has invalid weights field. Quantized 
weights are not supported.
Convolution3D 
' has invalid bias field. Quantized 
bias is not supported.
 must be positive, got 
Inner product
' has invalid weights/bias fields.
 has incorrect weight matrix size 
' has incorrect bias vector size 
Batchnorm
Batchnorm layer '
' parameters have values for both full and half precision. Parameters should either be specified in half or full precision, mixed parameters are not supported.
' is missing mean and variance.
ActivationPReLU
ActivationParametricSoftplus
Nonlinearity type 
 has inconsistent weight parameter types.
 is not supported in this version of CoreML.
Padding type for the pooling layer '
Pooling3d
Front
Back
Bottom
Left
Right
Custom Padding 
 must be non-negative, got 
 cannot be non-zero (got 
) unless padding type is CUSTOM (got 
Padding layer 
 specifies 
 padding amounts but it must either specify 2 (for x and y axes), or 0 for the default values.
 padding type is not set.
LRNLayer
Parameter 'K' for the LRN layer '
' must be positive.
Split
' of type 'Split' must have equal ranks for its outputs, but they are not equal.
Invalid scaling factor in upsampling layer '
'. Only one of scalingFactor and fractionalScalingFactor can be set, and if set, must be of size 2. Found scalingFactor of size 
 and fractionalScalingFactor of size 
Invalid upsample layer '
'. Fractional upsample only compatible with align_corners=true or align_corners=false
' of type Upsample uses Nearest Neighbors but uses linear upsampling mode other than DEFAULT.
Bias
Bias product layer '
' has both full precision and half precision weights and/or bias fields populated
Bias layer '
' cannot be 
 dimensional. Must be 1D or 3D.
L2Normalize
Reshape
Reshape layer '
' target shape must be 3D or 4D.
Flatten
Permute
Permute layer '
' must have 4D axis parameters.
Reduce layer '
': input's rank is smaller than the dimensions provided in the axis parameter
Block size for layer '
' must be > 1.
Slice
Slice layer '
': input's rank is smaller than the dimension provided in the axis parameter
Stride length for the slice layer '
Slice layer 
 has an end index before the start index.
LoadConstant
Load constant layer '
' has both full precision and half precision weight fields populated
' must be a 3D constant.
constants
Scale
Scale layer '
' has invalid scale/bias fields.
' has invalid scale/bias fields. Field value types should match and should either be half or full precision.
The shape vector for the scale layer '
' is 
 dimensional but should be 1D or 3D.
The bias vector for scale layer '
 dimensional but should be either 1D or 3D.
Simple recurrent layer '
' has invalid weightMatrix/recusionMatrix/Bias fields.
' has invalid weightMatrix/recusionMatrix/Bias fields. Field value types should match and should either be half or full precision.
SimpleRNN
WeightMatrix
RecursionMatrix
BiasVector
Recurrent non-linearity type 
GRU layer '
' has invalid weight/recursion matrix or bias fields. Field value types should match and should be either half or full precision
update gate weight matrix
reset gate weight matrix
output gate weight matrix
update gate recursion matrix
reset gate recursion matrix
output gate recursion matrix
update gate bias vector
reset gate bias vector
output gate bias vector
UniDirectionalLSTM
Unidirectional LSTM layer:
 must provide 3 activations
Unidirectional LSTM
input gate weight matrix
forget gate weight matrix
block input gate weight matrix
input gate recursion matrix
forget gate recursion matrix
block input gate recursion matrix
input gate bias vector
forget gate bias vector
block input bias vector
input gate peep hole vector
forget gate peep hole vector
output gate peep hole vector
LSTM weight parameters have inconsistent field value types. Types should match and should be either half or full precision
BiDirectionalLSTM
Bidirectional LSTM layer:
 forward lstm must provide 3 activations
 backward lstm must provide 3 activations
Bidirectional LSTM
forward input gate weight matrix
forward forget gate weight matrix
forward block input gate weight matrix
forward output gate weight matrix
forward input gate recursion matrix
forward forget gate recursion matrix
forward block input gate recursion matrix
forward output gate recursion matrix
backward input gate weight matrix
backward forget gate weight matrix
backward block input gate weight matrix
backward output gate weight matrix
backward input gate recursion matrix
backward forget gate recursion matrix
backward block input gate recursion matrix
backward output gate recursion matrix
forward input gate bias vector
forward forget gate bias vector
forward block input bias vector
forward output gate bias vector
backward input gate bias vector
backward forget gate bias vector
backward block input bias vector
backward output gate bias vector
forward input gate peephole vector
forward forget gate peephole vector
forward output gate peephole vector
backward input gate peephole vector
backward forget gate peephole vector
backward output gate peephole vector
Crop
' of type 'Crop' expects equal ranks for its inputs, but they are not equal.
cropAmounts parameter for the crop layer '
' is of length 
 but requires exactly two crop constraints (for X,Y axes).
Offset parameter for the crop layer '
 but requires exactly two offsets (for X,Y axes).
DotProduct
' of type 'DotProduct' expects equal ranks for its inputs, but they are not equal.
MeanVarianceNormalize
Embedding
EmbeddingND
' has invalid weights/bias fields. Field value types should match and should either be half or full precision.
SequenceRepeat
Softmax
Concat
' of type 'Concat' expects equal ranks for its inputs, but they are not equal.
Custom layer 
 has an empty 'className' field. This field is required in order for Core ML to link to the implementation for this custom class.
 has a weights parameter with multiple types filled in.  The WeightParams message should be treated as a oneof.
ResizeBilinear
Target Size in the resize bilinear layer '
' must be a vector of size 2 (i.e height, width) but is a vector of size 
CropResize
' of type 'CropResize' expects equal ranks for its inputs, but they are not equal.
Target Size in the crop resize layer '
Branch Layer '
' input's length cannot be more than 1
' requires the condition blob '
' which is not present in the network prior to this layer.
' has an empty If branch
Axes are required parameters for '
' layer.
Copy layer '
' has identical input and output names.
BatchedMatMul layer '
': given ranks of the two inputs, rank of the output is incorrect.
': has one input, in this case, output and input ranks must be equal but they are not.
': has two inputs and 'hasBias' flag is set to True.However, bias is only supported when the layer has 1 input.
': cannot use dynamic quantization with 2 inputs.
Value of axis must be in the range [-rank(tensor), rank(tensor)) for '
Invalid size of reverse_dim for '
Target shape is required parameter for '
Scatter layer must have 3 input tensor fields filled
Input ranks of Scatter layer '
' are invalid.
Scatter layer must have 1 output tensor fields filled
Output rank of Scatter layer '
' does not match container input.
Shapes of all inputs must match for '
Value of axis must be in the range [-rank(tensor), rank(tensor)] for '
Either split_sizes or num_splits should be provided for '
Value of num_splits should match size of output names for '
Value of minval should be smaller than maxval for '
Begin IDs are required parameters for '
End IDs are required parameters for '
Strides are required parameters for '
Begin masks are required parameters for '
End masks are required parameters for '
Loop Layer '
' has an empty body network
': condition variable must be provided if condition network exists and vice versa.
': has no input, no condition network and max loop iterations is 0.
': has conditionVar named '
' which is not produced by the condition network
Loop Break Layer '
' must be inside the bodyNetwork of a loop layer.
Loop Continue Layer '
RankPreservingReshape Layer '
': input and output rank must be equal.
': input rank must be same as the length of the target shape property.
' must have rank specified for its input and output.
ExpandDims Layer '
': length of the 'axes' parameter cannot be 0.
': all the values in the 'axes' parameter must be unique.
': input rank plus the length of the axes parameter must equal output rank.
': axes parameter list cannot have the same value more than once.
': axes refers to a dimension that exceeds the output rank.
Squeeze Layer '
': output rank plus the length of the axes parameter must equal input rank.
': axes refers to a dimension that exceeds the input rank.
Range
LoadConstantND layer '
'can only accept shape of length 1 to 5
LoadConstantND
Value of prob should be in range [0: 1] for '
TopK
' of type 'TopK' expects equal ranks for its input and second output, but they are not equal.
ArgMax
ArgMin
Normalized shape is required parameter for '
Gamma is required parameter for '
Beta is required parameter for '
Gamma and Beta should not be quantized for '
Shape of gamma should match normalized_shape for '
Shape of beta should match normalized_shape for '
ConstantPad
In 'ConstantPad' layer '
', length of 'padAmounts' parameter is 
, an odd value, which is not allowed.
', length of 'padAmounts' cannot be zero when only 1 input is provided.
', 'padToGivenOutputSizeMode' is true, and both padding values corresponding to dimension 
 are non zero, which is invalid. Only one value can be non-zero.
Argsort
Value of 'axis' is negative for layer of type 'ArgSort' and name '
', which is not supported. It must be positive.
Value of 'axis' is 
, but it must be in the range [0,
) for layer of type 'ArgSort' and name '
Unsupported layer type (
) for layer '
Model specification version field missing or corrupt.
The .mlmodel supplied is of version 
, intended for a newer version of Xcode. This version of Xcode supports model version 
 or earlier.
Model specification version for an updatable model must be '
' or above.
Model did not specify a valid model-parameter type.
unable to open file for read
unable to open file for write
Feature descriptions exceeded 
". Should be one of: 
Int64 class labels must be supplied for SVM classifier.
coefficient array must be size numberOfClasses - 1 (
). Instead it is size 
Must specify sparse or dense support vectors
numberOfSupportVectoresPerClass array must be size numberOfClasses 
 instead it is size 
sum of numberOfSupportVectorsPerClass 
 must sum to total number of support vectors 
Incorrect number of coefficients: There should be 
 not 
probA and probB must be same size
Expected length of probA is number of class pairs: 
Gamma must be greater than or equal to zero
Degree must be greater than or equal to zero
You must specify a supported kernel type
The number of coefficients must match the number of support vectors.
CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects.output
CoreML.Specification.CoreMLModels.VisionFeaturePrint
CoreML.Specification.CoreMLModels.VisionFeaturePrint.Objects
CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene
Size range is invalid (
Feature description must have a non-empty name.
' has enumerated zero permitted sizes.
' has enumerated shapes with zero dimensions.
' has a default shape specified 
 which is not within the allowed enumerated shapes specified.
' has an invalid range for dimension 
' has a default 
-d shape but a 
-d shape range
' has a default shape that is out of the specified shape range
' has missing shape constraints.
' has an invalid or unspecified dataType. It must be specified as DOUBLE, FLOAT32 or INT32
' has mistmatch between dataType and the type of default optional value.
' has a default size of 
 which is not within the allowed enumerated sizes specified.
' has an invalid flexible width range. 
' has an invalid flexible height range. 
' default width 
 is not within specified flexible width range
' default height 
 is not within specified flexible height range
Sequence types are only valid in specification verison >= 
. This model has version 
Description of sequence feature '
' has invalid allowed sizes. 
' has invalid or missing type. Only Int64 and String sequences are currently supported
Models must have one or more inputs.
Models must have one or more outputs.
Specification is missing regressor predictedFeatureName.
' to the model is not present in the model description.
Specification is missing classifier predictedFeatureName
At least one feature for a neural network must NOT be optional.
Features cannot be optional to this type of model.
Outputs cannot be optional.
Default optional values are only allowed for neural networks.
Default value for optional inputs is supported from specification 5 (iOS 14) onwards!
This model type is not supported for on-device update.
For this neural network classifier, the probabilities are obtained from the layer '
' which was not found in the network.
Output layer '
' is not produced by any layer of the neural network.
Neural Network Multi-Array input shape mapping cannot be 'RANK5_ARRAY_MAPPING' if the network contains a layer added in version 4 (iOS 13) or later. Use 'EXACT_ARRAY_MAPPING' instead.
Neural Network Multi-Array input shape mapping cannot be 'RANK5_ARRAY_MAPPING' if the image input Shape mapping is not 'RANK5_IMAGE_MAPPING'
Neural networks require at least one input.
Neural networks produce at least one output.
Neural networks require at least one layer.
Neural networks require at least one non-optional input.
__input
Input MLMultiArray to neural networks must have dimension 1 (vector) or 3 (image-like arrays).
Error determining network blob shapes: 
''s input and inputTensors have different lengths
''s input '
' is also an input to the model. However, for this tensor the rank provided in the layer description
 does not match the one provided in the model description
Inconsistent rank for the blob named '
''s output and "outputTensors" property have different lengths
''s output '
' is also an output of the model. However, for this tensor the rank provided in the layer description
' consumes an input named '
' which is not present in this network.
' produces an output named '
' which is also an output produced by the layer '
Tensor in layer '
': rank must match the length of dimValue
Interface specifies output '
' which is not produced by any layer in the neural network.
CoreML.Specification.CoreMLModels.TextClassifier.language
Reduce layer axis not set -- should have been caught in validator.
Slice layer axis incorrect -- should be caught in validator.
Layer type not found.
Shape inference not implemented for this layer type.
Default Value (
) for '
' expected to be a positive value.
Non-positive value (
) in Allowed Values Set for '
' is not allowed.
Specified Default Value (
) not found in Allowed Values Set for '
Non-positive min value (
) in Allowed Value Range for '
Non-positive max value (
) out of Allowed Value Range for '
Specified minimum value (
) greater than maximum value for '
Weights and offsets must be the same size.
All weight coefficients must be the same size.
Invalid post evaluation transform
Invalid class encoding
The number of DoubleArrays in weights must be greater than zero
The number of DoubleArrays in weights must match number of offsets
With ReferenceClass encoding the number of DoubleArrays in weights must be one less than number of classes
When using OneVsRest encoding for only two classes, the number of DoubleArrays in weights must be one
With OneVsRest encoding the number of DoubleArrays in weights must equal the number of classes
Probit post evaluation transform is only supported for binary classification
Weight DoubleArrays must have nonzero length
Weight DoubleArrays must have the same length
Classifier declared to have Int64 class labels must provide labels.
Classifier declared to have String class labels must provide labels.
Classifier models must provide class labels.
Attempting to access unbound size_t val from RangeVal.
Dividing range 
 by 0.
Constructing invalid ShapeRange with 
Constructing invalid ShapeRange unbound minimum value.
Invalid setUpper 
 for range: 
Invalid setLower 
Dividing ShapeRange 
 by negative or zero value 
Invalid setValue 
Invalid intersection between 
 and 
Attempting to constrain an input or output feature "
" with an invalid array shape constraint.
Attempting to update feature constraint 
 with a type description which is not a multi array or image.
Invalid channel range in blob 
Invalid height range in blob 
Invalid width range in blob 
Invalid sequence range in blob 
Invalid batch range in blob 
Incorrect input shape, should be 1-dimension, of length: 
Incorrect output shape, should be 3-dimension, of size: 
Type for sound analysis preprocessing not set
Only 1 dimensional arrays input features are supported by the imputer.
Shape of imputed array value does not match shape of input array.
Imputer parameter must be set.
Type of input feature "
" is not compatible with given imputed value type.
Type of given replace value not compatible with input feature type.
CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing
CoreML.Specification.CoreMLModels.SoundAnalysisPreprocessing.Vggish
CoreML.Specification.GLMClassifier
CoreML.Specification.GLMClassifier.DoubleArray
CoreML.Specification.Imputer.imputedStringValue
CoreML.Specification.Imputer.replaceStringValue
CoreML.Specification.CustomModel.CustomModelParamValue.stringValue
CoreML.Specification.CustomModel.className
CoreML.Specification.CustomModel.description
CoreML.Specification.CustomModel.ParametersEntry.key
CoreML.Specification.CustomModel
CoreML.Specification.CustomModel.CustomModelParamValue
LinkedModel cannot be marked as updatable
LinkedModel.LinkType not set.
LinkedModel.linkedModelFile.linkedModeFileName.defaultValue cannot be empty.
CoreML.Specification.SupportVectorClassifier
CoreML.Specification.SupportVectorRegressor
CoreML.Specification.Coefficients
CoreML.Specification.DenseSupportVectors
CoreML.Specification.DenseVector
CoreML.Specification.SparseSupportVectors
CoreML.Specification.SparseVector
CoreML.Specification.SparseNode
CoreML.Specification.Kernel
CoreML.Specification.SigmoidKernel
CoreML.Specification.PolyKernel
CoreML.Specification.RBFKernel
CoreML.Specification.LinearKernel
CoreML.Specification.CoreMLModels.Gazetteer.language
Input feature '
' was not requested by any of the input feature names (e.g. confidenceInputFeatureName).
' (as defined by confidenceInputFeatureName) to the model is not present in the model description.
' (as defined by coordinatesInputFeatureName) to the model is not present in the model description.
' was not requested by any of the output feature names (e.g. confidenceOutputFeatureName).
' (as defined by confidenceOutputFeatureName) from the model is not present in the model description.
' (as defined by coordinatesOutputFeatureName) from the model is not present in the model description.
iouThreshold must be a value between 0.0 and 1.0.
confidenceThreshold must be a non-negative value. If you do not want to eliminate any predictions based on confidence, set it to 0.0.
'confidence' and 'coordinates' must use a same element type, but 
'input confidence' is 
'output confidence' is 
'input coordinates' are 
and 'output coordinates' are 
The element data type of 'confidence' and 'coordinates' must be either MultiArray<DOUBLE> or MultiArray<FLOAT32>, but 
The element data type of 'confidence' and 'coordinates' must be MultiArray<DOUBLE> for model specification version earlier than 
, but 
To enable MultiArray<FLOAT32>, use the model specification version 
 or later.
If shape information is provided for confidence output, 2 dimensions must be specified using either shape (deprecated) or allowedShapes.
Confidence and coordinates output shapes must be consistent (must have the same size along dimension 0).
Confidence and coordinates output shapes fexibility must both be ranges
Confidence and coordinates output shapes must be consistent (must have the same range of sizes along dimension 0).
Number of classes is not consistent for class labels (
) and dimension 1 of output confidence shape (
) and dimension 1 of output confidence shape range
CoreML.Specification.StringToInt64Map.MapEntry.key
CoreML.Specification.DoubleRange
CoreML.Specification.Int64Set
CoreML.Specification.Int64Range
CoreML.Specification.DoubleVector
CoreML.Specification.FloatVector
CoreML.Specification.Int64Vector
CoreML.Specification.StringVector.vector
CoreML.Specification.StringVector
CoreML.Specification.Int64ToDoubleMap
CoreML.Specification.StringToDoubleMap.MapEntry.key
CoreML.Specification.StringToDoubleMap
CoreML.Specification.Int64ToStringMap.MapEntry.value
CoreML.Specification.Int64ToStringMap
CoreML.Specification.StringToInt64Map
Pipeline must contain one or more models.
Pipeline: the input '
' of model '
' does not present in pipeline input or previous model.
' does not match the type previously specified by the pipeline input or the output of a previous model.
 For the second case, make sure the input and previous model's output has the matching name and shapes.
Pipeline output '
' not present in pipeline input or a contained model.
Type of pipeline output '
' does not match type produced in pipeline input.
Only the last model in the pipeline can be updatable. Model at position '
' is marked as updatable.
Last model in an updatable pipeline model should be marked as updatable.
Found an updatable model at '
' inside a non-updatable pipeline.
The number of pipeline model names '
' doesn't match the number of models '
Pipeline model name '
' at index '
 has already been used for previous models
CoreML.Specification.BayesianProbitRegressor.regressionInputFeatureName
CoreML.Specification.BayesianProbitRegressor.optimismInputFeatureName
CoreML.Specification.BayesianProbitRegressor.samplingScaleInputFeatureName
CoreML.Specification.BayesianProbitRegressor.samplingTruncationInputFeatureName
CoreML.Specification.BayesianProbitRegressor.meanOutputFeatureName
CoreML.Specification.BayesianProbitRegressor.varianceOutputFeatureName
CoreML.Specification.BayesianProbitRegressor.pessimisticProbabilityOutputFeatureName
CoreML.Specification.BayesianProbitRegressor.sampledProbabilityOutputFeatureName
CoreML.Specification.BayesianProbitRegressor
CoreML.Specification.BayesianProbitRegressor.FeatureWeight
CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight
CoreML.Specification.BayesianProbitRegressor.Gaussian
Version for scene is invalid
Version for objects is invalid
Two outputs for objects need to be provided
Model description declares an output: 
 but it is not declared in Vision Feature Print output
Type for vision feature print not set
CoreML.Specification.CoreMLModels.WordEmbedding.language
CoreML.Specification.BoolParameter
CoreML.Specification.StringParameter.defaultValue
CoreML.Specification.StringParameter
CoreML.Specification.DoubleParameter
CoreML.Specification.Int64Parameter
Model is not a tree ensemble.
Given output dimension equals 0.
Tree Node with TreeID=
and NodeID=
 duplicated in specification.
Branch mode hit bad value -- this is confusing; error in validator?
Leaf Node (TreeID=
, NodeID=
) has no evaluation value(s) specified.
) specifies evaluation value applied to dimension 
; which is out of range. Dimension must be less than 
) specifies multipule evaluation values applied to dimension 
False child and parent have same ID (TreeID=
In TreeID=
, false child of NodeID=
 is already the child of node NodeID=
True child and parent have same ID (TreeID=
, true child of NodeID=
Tree TreeID=
 has multiple root nodes: 
NodeID=
Internal error: null child node; likely specification error.
Node detected that are not connected to any single root node. Note: 
(TreeID=
Dimension of default value array (
) does not match specified output dimension (
Specified output dimension (
) does not match the given number of classes (
Error(s) in tree structure: 
 and NodeID=
 referenced but not declared in specification.
FATAL: 
  FATAL: maximum number of errors reached; aborting processing.
Errors encountered during processing tree model:
Exactly one input array column must be specified.
If output type is Double in interface, exactly one extraction index must be specified.
CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName
CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName
CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName
CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName
CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName
CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName
CoreML.Specification.NonMaximumSuppression
CoreML.Specification.NonMaximumSuppression.PickTop
More model output features than the output features of the word tagger model.
Output feature '
' was not required by the output features of the word tagger model.
Expected feature '
' (defined by tokenTagsOutputFeatureName) to the model is not present in the model description.
". Should be: 
Model output tags not set. Must have at least one tag
Model revision number not set. Must be >= 1
Only integer item ids or string item ids can be specified in the same model.
List of integer item ids specified must be large enough to index all item ids specified.  The largest item index is 
, whereas there are  only 
 item ids given.
List of integer item ids specified must be unique; list contains duplicates.
List of string item ids specified must be large enough to index all item ids specified.  The largest item index is 
List of string item ids specified must be unique; list contains duplicates.
Name of column for item input data not specified.
No output columns specified.
CoreML.Specification.ItemSimilarityRecommender.itemInputFeatureName
CoreML.Specification.ItemSimilarityRecommender.numRecommendationsInputFeatureName
CoreML.Specification.ItemSimilarityRecommender.itemRestrictionInputFeatureName
CoreML.Specification.ItemSimilarityRecommender.itemExclusionInputFeatureName
CoreML.Specification.ItemSimilarityRecommender.recommendedItemListOutputFeatureName
CoreML.Specification.ItemSimilarityRecommender.recommendedItemScoreOutputFeatureName
CoreML.Specification.ItemSimilarityRecommender
CoreML.Specification.ItemSimilarityRecommender.SimilarItems
CoreML.Specification.ItemSimilarityRecommender.ConnectedItem
Input type Int64 must output to Int64 or Double.
Type of input feature does not match the output type feature.
Only 1 dimensional arrays input features are supported by the scaler.
Shape of output array does not match shape of input array.
For input type array, specified shift values must be empty, a scalar, or a vector of the matching length.
For input type array, specified scale values must be empty, a scalar, or a vector of the matching length.
For a scalar imput type, specified shift value must be empty or a scalar.
For input type array, specified scale values must be empty or a scalar.
CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn
CoreML.Specification.FeatureVectorizer
CoreML.Specification.FeatureVectorizer.InputColumn
CoreML.Specification.CoreMLModels.WordTagger.language
CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName
CoreML.Specification.TreeEnsembleRegressor
CoreML.Specification.TreeEnsembleClassifier
CoreML.Specification.TreeEnsembleParameters
CoreML.Specification.TreeEnsembleParameters.TreeNode
CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo
validator error: 
isOptional
hasShapeFlexibility
shapeFlexibility
shapeRange
colorspace
isColor
hasSizeFlexibility
enumeratedSizes
sizeFlexibility
sizeRange
valueType
CoreML.Specification.CustomLayerParams.CustomLayerParamValue.stringValue
CoreML.Specification.AdamOptimizer
CoreML.Specification.SGDOptimizer
CoreML.Specification.Optimizer
CoreML.Specification.MeanSquaredErrorLossLayer.input
CoreML.Specification.MeanSquaredErrorLossLayer.target
CoreML.Specification.MeanSquaredErrorLossLayer
CoreML.Specification.CategoricalCrossEntropyLossLayer.input
CoreML.Specification.CategoricalCrossEntropyLossLayer.target
CoreML.Specification.CategoricalCrossEntropyLossLayer
CoreML.Specification.LossLayer.name
CoreML.Specification.LossLayer
CoreML.Specification.NetworkUpdateParameters
CoreML.Specification.NeuralNetworkPreprocessing.featureName
CoreML.Specification.NeuralNetworkLayer.name
CoreML.Specification.NeuralNetworkLayer.input
CoreML.Specification.NeuralNetworkLayer.output
CoreML.Specification.LoopLayerParams.conditionVar
CoreML.Specification.CustomLayerParams.className
CoreML.Specification.CustomLayerParams.ParametersEntry.key
CoreML.Specification.CustomLayerParams.description
CoreML.Specification.NeuralNetworkRegressor
CoreML.Specification.CumSumLayerParams
CoreML.Specification.OneHotLayerParams
CoreML.Specification.NeuralNetworkClassifier.labelProbabilityLayerName
CoreML.Specification.NeuralNetworkClassifier
CoreML.Specification.SliceBySizeLayerParams
CoreML.Specification.ArgSortLayerParams
CoreML.Specification.ClampedReLULayerParams
CoreML.Specification.NonMaximumSuppressionLayerParams
CoreML.Specification.LayerNormalizationLayerParams
CoreML.Specification.SlidingWindowsLayerParams
CoreML.Specification.RangeDynamicLayerParams
CoreML.Specification.RangeStaticLayerParams
CoreML.Specification.GeluLayerParams
CoreML.Specification.ErfLayerParams
CoreML.Specification.GetShapeLayerParams
CoreML.Specification.TileLayerParams
CoreML.Specification.SliceDynamicLayerParams
CoreML.Specification.SliceStaticLayerParams
CoreML.Specification.ClipLayerParams
CoreML.Specification.SignLayerParams
CoreML.Specification.FloorLayerParams
CoreML.Specification.RoundLayerParams
CoreML.Specification.CeilLayerParams
CoreML.Specification.SplitNDLayerParams
CoreML.Specification.ArgMinLayerParams
CoreML.Specification.ArgMaxLayerParams
CoreML.Specification.TopKLayerParams
CoreML.Specification.SqueezeLayerParams
CoreML.Specification.ReshapeDynamicLayerParams
CoreML.Specification.ReshapeLikeLayerParams
CoreML.Specification.ReshapeStaticLayerParams
CoreML.Specification.FlattenTo2DLayerParams
CoreML.Specification.ExpandDimsLayerParams
CoreML.Specification.ReduceLogSumExpLayerParams
CoreML.Specification.ReduceSumSquareLayerParams
CoreML.Specification.ReduceLogSumLayerParams
CoreML.Specification.ReduceMeanLayerParams
CoreML.Specification.ReduceProdLayerParams
CoreML.Specification.ReduceSumLayerParams
CoreML.Specification.ReduceMinLayerParams
CoreML.Specification.ReduceMaxLayerParams
CoreML.Specification.ReduceL2LayerParams
CoreML.Specification.ReduceL1LayerParams
CoreML.Specification.CategoricalDistributionLayerParams
CoreML.Specification.RandomBernoulliDynamicLayerParams
CoreML.Specification.RandomBernoulliStaticLayerParams
CoreML.Specification.RandomBernoulliLikeLayerParams
CoreML.Specification.RandomUniformDynamicLayerParams
CoreML.Specification.RandomUniformStaticLayerParams
CoreML.Specification.RandomUniformLikeLayerParams
CoreML.Specification.RandomNormalDynamicLayerParams
CoreML.Specification.RandomNormalStaticLayerParams
CoreML.Specification.RandomNormalLikeLayerParams
CoreML.Specification.ConstantPaddingLayerParams
CoreML.Specification.RankPreservingReshapeLayerParams
CoreML.Specification.StackLayerParams
CoreML.Specification.ScatterAlongAxisLayerParams
CoreML.Specification.GatherAlongAxisLayerParams
CoreML.Specification.ScatterNDLayerParams
CoreML.Specification.GatherNDLayerParams
CoreML.Specification.ScatterLayerParams
CoreML.Specification.GatherLayerParams
CoreML.Specification.DivideBroadcastableLayerParams
CoreML.Specification.MultiplyBroadcastableLayerParams
CoreML.Specification.SubtractBroadcastableLayerParams
CoreML.Specification.FloorDivBroadcastableLayerParams
CoreML.Specification.ModBroadcastableLayerParams
CoreML.Specification.MinBroadcastableLayerParams
CoreML.Specification.MaxBroadcastableLayerParams
CoreML.Specification.AddBroadcastableLayerParams
CoreML.Specification.BroadcastToDynamicLayerParams
CoreML.Specification.BroadcastToStaticLayerParams
CoreML.Specification.BroadcastToLikeLayerParams
CoreML.Specification.LowerTriangularLayerParams
CoreML.Specification.UpperTriangularLayerParams
CoreML.Specification.MatrixBandPartLayerParams
CoreML.Specification.WhereNonZeroLayerParams
CoreML.Specification.Exp2LayerParams
CoreML.Specification.PowBroadcastableLayerParams
CoreML.Specification.AtanhLayerParams
CoreML.Specification.AcoshLayerParams
CoreML.Specification.AsinhLayerParams
CoreML.Specification.TanhLayerParams
CoreML.Specification.CoshLayerParams
CoreML.Specification.SinhLayerParams
CoreML.Specification.AtanLayerParams
CoreML.Specification.AcosLayerParams
CoreML.Specification.AsinLayerParams
CoreML.Specification.TanLayerParams
CoreML.Specification.CosLayerParams
CoreML.Specification.SinLayerParams
CoreML.Specification.WhereBroadcastableLayerParams
CoreML.Specification.FillDynamicLayerParams
CoreML.Specification.FillStaticLayerParams
CoreML.Specification.FillLikeLayerParams
CoreML.Specification.LoadConstantNDLayerParams
CoreML.Specification.ReverseSeqLayerParams
CoreML.Specification.ReverseLayerParams
CoreML.Specification.SoftmaxNDLayerParams
CoreML.Specification.ConcatNDLayerParams
CoreML.Specification.BatchedMatMulLayerParams
CoreML.Specification.TransposeLayerParams
CoreML.Specification.CustomLayerParams
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-1006.0.26/coremltools/deps/protobuf/src/google/protobuf/map_entry_lite.h
CHECK failed: default_instance_ != NULL: 
CoreML.Specification.BiDirectionalLSTMLayerParams
CoreML.Specification.UniDirectionalLSTMLayerParams
CoreML.Specification.LSTMWeightParams
CoreML.Specification.LSTMParams
CoreML.Specification.GRULayerParams
CoreML.Specification.SimpleRecurrentLayerParams
CoreML.Specification.SequenceRepeatLayerParams
CoreML.Specification.MeanVarianceNormalizeLayerParams
CoreML.Specification.DotProductLayerParams
CoreML.Specification.MinLayerParams
CoreML.Specification.MaxLayerParams
CoreML.Specification.AverageLayerParams
CoreML.Specification.CropLayerParams
CoreML.Specification.ReduceLayerParams
CoreML.Specification.SliceLayerParams
CoreML.Specification.ReorganizeDataLayerParams
CoreML.Specification.PermuteLayerParams
CoreML.Specification.ReshapeLayerParams
CoreML.Specification.FlattenLayerParams
CoreML.Specification.L2NormalizeLayerParams
CoreML.Specification.LoadConstantLayerParams
CoreML.Specification.ScaleLayerParams
CoreML.Specification.BiasLayerParams
CoreML.Specification.CropResizeLayerParams
CoreML.Specification.ResizeBilinearLayerParams
CoreML.Specification.UpsampleLayerParams
CoreML.Specification.UnaryFunctionLayerParams
CoreML.Specification.MultiplyLayerParams
CoreML.Specification.AddLayerParams
CoreML.Specification.SplitLayerParams
CoreML.Specification.SoftmaxLayerParams
CoreML.Specification.LRNLayerParams
CoreML.Specification.ConcatLayerParams
CoreML.Specification.PaddingLayerParams
CoreML.Specification.PaddingLayerParams.PaddingReplication
CoreML.Specification.PaddingLayerParams.PaddingReflection
CoreML.Specification.PaddingLayerParams.PaddingConstant
CoreML.Specification.GlobalPooling3DLayerParams
CoreML.Specification.Pooling3DLayerParams
CoreML.Specification.PoolingLayerParams
CoreML.Specification.PoolingLayerParams.ValidCompletePadding
CoreML.Specification.BatchnormLayerParams
CoreML.Specification.EmbeddingNDLayerParams
CoreML.Specification.EmbeddingLayerParams
CoreML.Specification.InnerProductLayerParams
CoreML.Specification.Convolution3DLayerParams
CoreML.Specification.ConvolutionLayerParams
CoreML.Specification.LookUpTableQuantizationParams
CoreML.Specification.LinearQuantizationParams
CoreML.Specification.QuantizationParams
CoreML.Specification.WeightParams
CoreML.Specification.BoxCoordinatesMode
CoreML.Specification.SamplingMode
CoreML.Specification.SamePadding
CoreML.Specification.ValidPadding
CoreML.Specification.BorderAmounts
CoreML.Specification.BorderAmounts.EdgeSizes
CoreML.Specification.LogicalNotLayerParams
CoreML.Specification.LogicalXorLayerParams
CoreML.Specification.LogicalOrLayerParams
CoreML.Specification.LogicalAndLayerParams
CoreML.Specification.NotEqualLayerParams
CoreML.Specification.EqualLayerParams
CoreML.Specification.LessEqualLayerParams
CoreML.Specification.LessThanLayerParams
CoreML.Specification.GreaterEqualLayerParams
CoreML.Specification.GreaterThanLayerParams
CoreML.Specification.CopyLayerParams
CoreML.Specification.LoopContinueLayerParams
CoreML.Specification.LoopBreakLayerParams
CoreML.Specification.LoopLayerParams
CoreML.Specification.BranchLayerParams
CoreML.Specification.NeuralNetworkLayer
CoreML.Specification.Tensor
CoreML.Specification.ActivationParams
CoreML.Specification.ActivationParametricSoftplus
CoreML.Specification.ActivationSoftplus
CoreML.Specification.ActivationSoftsign
CoreML.Specification.ActivationThresholdedReLU
CoreML.Specification.ActivationELU
CoreML.Specification.ActivationPReLU
CoreML.Specification.ActivationSigmoidHard
CoreML.Specification.ActivationLinear
CoreML.Specification.ActivationSigmoid
CoreML.Specification.ActivationScaledTanh
CoreML.Specification.ActivationTanh
CoreML.Specification.ActivationLeakyReLU
CoreML.Specification.ActivationReLU
CoreML.Specification.NeuralNetworkPreprocessing
CoreML.Specification.NeuralNetworkMeanImage
CoreML.Specification.NeuralNetworkImageScaler
CoreML.Specification.CustomLayerParams.CustomLayerParamValue
CoreML.Specification.NeuralNetwork
CoreML.Specification.KNearestNeighborsClassifier.defaultStringLabel
CoreML.Specification.SquaredEuclideanDistance
CoreML.Specification.SingleKdTreeIndex
CoreML.Specification.LinearIndex
CoreML.Specification.UniformWeighting
CoreML.Specification.NearestNeighborsIndex
CoreML.Specification.InverseDistanceWeighting
CoreML.Specification.KNearestNeighborsClassifier
KNearestNeighborsClassifier requires a weighting scheme to be set.
KNearestNeighborsClassifier's class label and default class label have different types.
KNearestNeighborsClassifier should specify default class labels when class labels are not specified.
KNearestNeighborsClassifier has no data points.
Unexpected number of labels "
" for the given number of examples: "
Unexpected length "
" given the provided number of dimensions "
KNearestNeighborsClassifier has no index type specified.
KNearestNeighborsClassifier requires leaf size to be a positive integer.
KNearestNeighborsClassifier requires a distance function to be set.
Classifier declared with Int64 class labels must provide exclusively Int64 class labels.
Classifier declared with String class labels must provide exclusively String class labels.
CoreML.Specification.LinkedModelFile
CoreML.Specification.LinkedModel
ValueOnUnknown set to string value while mapping produces int64.
ValueOnUnknown set to Int64 value while mapping produces string.
Mapping not set.
Input sequence type does not match input type 
of categorical mapping.
Output of a sequence categorical mapping must be a sequence
Output sequence type does not match input type 
Could not seek to beginning of data file: 
Could not read length of data file: 
Could not read size of data block: 
Could not read data from data file: 
Could not open buffer file '
CoreML.Specification.GLMRegressor
CoreML.Specification.GLMRegressor.DoubleArray
CoreML.Specification.FeatureType
CoreML.Specification.SequenceFeatureType
CoreML.Specification.DictionaryFeatureType
CoreML.Specification.ArrayFeatureType
CoreML.Specification.ArrayFeatureType.ShapeRange
CoreML.Specification.ArrayFeatureType.EnumeratedShapes
CoreML.Specification.ArrayFeatureType.Shape
CoreML.Specification.ImageFeatureType
CoreML.Specification.ImageFeatureType.ImageSizeRange
CoreML.Specification.ImageFeatureType.EnumeratedImageSizes
CoreML.Specification.ImageFeatureType.ImageSize
CoreML.Specification.SizeRange
CoreML.Specification.StringFeatureType
CoreML.Specification.DoubleFeatureType
CoreML.Specification.Int64FeatureType
Model revision number missing or invalid. Must be >= 2
Model output class label not set. Must have at least one class label
Model parameter data not set
Unsupported type "
" for feature "
Should be of: 
MLFeatureTypeType_multiArrayType
 with data type of: 
MLArrayDataTypeINT32
MLArrayDataTypeDOUBLE
MLArrayDataTypeFLOAT32
Unsupported array type "
Unsupported array rank 
 should be in range [
MLFeatureTypeType_int64Type
MLFeatureTypeType_doubleType
MLFeatureTypeType_stringType
MLFeatureTypeType_imageType
MLFeatureTypeType_dictionaryType
MLFeatureTypeType_sequenceType
CustomModel must have non-empty className.
CustomModel.parameters must have non-empty string keys.
CustomModel.parameters['
'] does not have a set value
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-1006.0.26/coremltools/deps/protobuf/src/google/protobuf/arena.cc
CHECK failed: (n) <= (std::numeric_limits<size_t>::max() - kHeaderSize): 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-1006.0.26/coremltools/deps/protobuf/src/google/protobuf/io/coded_stream.cc
CHECK failed: (buffer_size) >= (0): 
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-1006.0.26/coremltools/deps/protobuf/src/google/protobuf/stubs/common.cc
[libprotobuf %s %s:%d] %s
INFO
WARNING
ERROR
FATAL
pthread_mutex_unlock: 
pthread_mutex_lock: 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-1006.0.26/coremltools/deps/protobuf/src/google/protobuf/wire_format_lite.cc
CHECK failed: (value.size()) <= (kint32max): 
serializing
parsing
 '%s'
String field
 contains invalid 
UTF-8 data when 
 a protocol 
buffer. Use the 'bytes' type if you intend to send raw 
bytes. 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-1006.0.26/coremltools/deps/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (count) >= (0): 
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL: 
 BackUp() can only be called after Next().
CHECK failed: (count) <= (buffer_used_): 
 Can't back up over more bytes than were returned by the last call to Next().
 Parameter to BackUp() can't be negative.
CHECK failed: (backup_bytes_) == (0): 
CHECK failed: (buffer_used_) == (buffer_size_): 
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-1006.0.26/coremltools/deps/protobuf/src/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML/CoreML-1006.0.26/coremltools/deps/protobuf/src/google/protobuf/message_lite.cc
CHECK failed: !coded_out.HadError(): 
parse
Can't 
 message of type "
" because it is missing required fields: 
Exceeded maximum protobuf size of 2GB: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
 was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of 
This shouldn't be called if all the sizes are equal.
%@: modelPathStr=%@
%@: sandbox_extension_issue_file() returned NULL. path=%@
%@: sandboxExtensionToken=%@
Entered interruptionHandler!
Entered invalidationHandler!
Could not create connection to %@ : error=%@
Could not create secure model via XPC: error=%@
Could not predict from secure model via XPC: error=%@
Could not batch predict from secure model via XPC: error=%@
Could not obtain parameterValueForKey from secure model via XPC: error=%@
Plan created, now adding network
File: %s not found.
Finding model in: %s
Error in adding network %d
Error in loading user-provided custom layer during neural network evaluation.
Error in adding network %d.
Input feature %s required but not passed to neural network.
Error binding image input buffer %s: %d
Error binding input buffer %s: %d
Error passing input to NN engine.
Error: unsupported input type for neural network.
Espresso doesn't report the output shape; we cannot verify the output backing's shape. Error: %d
Failed to set shape of rank %zu to Espresso Buffer. Error: %d
The output backing MLMultiArray's shape (shape.count = %zu) doesn't match to Espresso's output shape (shape.count = %zu) even after squeezed. This is most likely a framework programming error.
Output feature %@ doesn't have a description for the MultiArray constraints.
Output backing for %@ is not compatible with the model's output feature description.
Output backings cannot be used for a dynamic output feature: %@
Forced automatic output backings was requested but we couldn't bind the fabricate output buffer for feature: %@
Error binding output buffer %s: %d
Failure verifying inputs.
Failure in resetSizes.
Error checking if an output blob is dynamic or not, %s: %d
espresso_network_query_blob_shape couldn't get the output shape for feature: %s to fabricate the output backing buffer (err: %d). This is not expected but we go on without output backing.
espresso_buffer_pack_tensor_shape failed for feature: %s to fabricate the output backing buffer (err: %d). This is not expected but we go on without output backing.
Forced automatic output backings was requested but we couldn't fabricate the output buffer for feature: %@
Failure in -bindInputFeatures:bufferIndex:allocatedImageData:error:.
Failure in -updateDynamicOutputBlobIndicatorCacheAndReturnError:.
Failure in -completeOutputBackings:error:.
Failure in -bindOutputBuffers:outputBackings:error:.
Failure in -executePlan:error:.
Error unlocking pixel buffers.
Failure in binding outputs after calling execute sync.
Error computing NN outputs %d
Error computing NN outputs, caught unknown exception.
Runtime error in NN execution.
Error in computing user-provided custom layer during neural network evaluation.
Failure in binding dynamic outputs.
WARNING: The computed output shape does not match any output shape allowed in the model's description. Please update the model description.
Model description's MLMultiArrayConstraint states unknown data type (%ld), which should never happen.
Failed to build clean before reshape.
Empty input feature dictionary passed to resetSizes.
Incorrect input number of dimensions %lul (must be 1, 3, or 5 dimensions.
Incorrect input number of dimensions %lul (must be 1 or greater)
Cannot evaluate a batch of size %d on GPU, which is larger than maximum of %d.
Cannot evaluate a sequence of length %d, which is longer than maximum of %d for bidirectional models.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length
Error in computing user-provided custom layer output shapes during neural network construction.
Failure dynamically resizing for sequence length.
Error in declaring input %d.
inputLayer: %s
Error in declaring output: %d.
outputLayer: %s
Error in passing image pre-processing parameters for %s to network: %d.
Hardware fall back after plan build failure.
Error plan build: %d.
This model is not suitable for faster batch prediction, so it is falling back on a for-loop-based approach.
Called dumpTestVectors but configuration didn't specify enableTestVectorMode.
Profiler: MLNeuralNetworkEngine::executionSchedule
Profiler: MLNeuralNetworkEngine::executionSchedule %lu layers
Setting optimize parameter to use half precision
Updating encrypted model %@ is not supported.
Fail to clean up path=%@, error=%@
Failed to list all output files with destURL=%@, error=%@
Failed to encrypt %@ with error=%@
Failed to store encryption information in compiled model with error=%@
Failed to encrypt file at URL: %@, to file at URL: %@
Failed to remove file at URL: %@
Failed to copy file from %@ to %@
Failed to create SC_Info at URL: %@
Failed to write SINF to URL: %@
Failed to write encryption info metadata.
Failed to allocate MultiArrayBuffer with shape %s due to integer overflow
MLModelAsset: load has already been run successfully.
MLModelAsset: load failed with error %@
MLModelAsset: load failed.
MLModelAsset: modelWithError: load failed with error %@
MLModelAsset: classifierWithError: load failed.
MLModelAsset: regressorWithError: load failed.
Failed to fetch Espresso Nets for compiled models at %@ with error %@
Failed to check ANE IR for compiled models at %@ with error %@
ANE cache for network at %@ does not exist before purging
Failed to purge ANE IR for compiled models at %@ with error: %@
%s thrown on construction
Error compiling updatable model.
Failed to allocate MLMultiArray. error: %@
Failed to allocate MLMultiArray. error: %s
Incorrect number of classes given (TreeEnsembleClassifier).
Couldn't create os_log_t coreChannel
This pipeline contains multiple sub-models with class labels. As a result, the classLabel property of the pipeline instance will not be populated.
Profiler: MLPipeline::executionSchedule %lu networks
Profiler: [schedule] Model in pipeline does not have a schedule
Error creating Core ML custom layer implementation from factory for layer "%s".
Core ML custom Layer implementation '%s' does not conform to the MLCustomLayer protocol.
Error getting Core ML custom layer output shapes for layer "%s".
Evaluation on Core ML custom layer "%s" called before the layer is constructed.
Error evaluating Core ML custom layer "%s" on CPU.
Core ML custom Layer implementation '%s' does not conform to the MLCustomLayer protocol'
Error initializing Core ML custom layer implementation with parameter dictionary for layer "%s".
Error setting weights in Core ML custom layer "%s".
Error evaluating Core ML custom layer "%s" on GPU.
updateType can only be used for personalization use case while the current use case is not personalization. This parameter is ignored.
Unknown availability for newer specification version %d
Defaulting to no availablity info
A Core ML custom neural network layer requires an implementation named '%s' which was not found in the global namespace.
A Core ML custom neural network layer implementation class named '%s' does not conform to the MLCustomLayer protocol.
Image descripition included empty set of enumerated sizes
Using the default size
Image descripition width and height and are not valid according to the enumerated sizes
Changing default height and width to be the first enumerated size
Image descripition width and height and are not valid according to the specified flexible ranges
Changing default height and width to minimum size in range
File %s: error unmapping memory; msg=%{errno}d
Operation not supported on this platform.
Failed to convert string %s to integer with exception message: %s. Fellback to 0.
Error computing shape information for Neural Network model. This model may be invalid.
IMPORTANT: new sequence length computation failed, falling back to old path.
Model requires sequence length greater than %d
Error in neural network compiler computing minimum sequence length.
Input MLMultiArray cannot be %d dimensional (must be between 1 and 5 dimensions).
Invalid height and width for the image input.
Input MLMultiArray cannot be %d dimensional (must have at least 1 dimension).
Unsupported Engine type %d.
Cannot create context, Caught exception: %s
IOS 11 Legacy code found sequence length %d
pass_multi_head_program_gen ioutput=%zu name=%s
pass_multi_head_program_gen: merge_group.size()=%zu
pass_multi_head_program_gen: cf_if ilayer=%zu outputs_per_layer[ilayer].size()=%zu
pass_multi_head_program_gen: cf_end ilayer=%zu type=%s
pass_multi_head_program_gen: cf_end after_ilayer=%d type=%s
blobs to backprop through: 
Interpreter not set
Cannot find network's plan, must be using C++ interface: assuming all outputs to be bound
Breakpoint layer: Invalid state, no espresso_plan available in network
No bottom blobs to breakpoint layer
No breakpoint block set
Warning: padding deconvolution %s in SAME mode will not be pad-invariant for all resolutions
Warning: deconvolution is specifying manual output size via deconv_out_width/deconv_out_height and that is not compatible with multple resolutions. Ignoring that deconv_out_width/deconv_out_height
[convert_to_explicit_padding] Shape mismatch for blob %s (%d %d %d %d %d) -> (%d %d %d %d %d)
inner_product_kernel_cpu: layer %s cached for %d uses
Restoring network precompilation info
[run_dispatch_v2] The network bounces between the ANE and GPU/CPU or between GPU & CPU too often. Please consider running the network on a different engine or change the architecture.
Missing precompilation info. Fallback to full dispatch.
[run_dispatch_v2] Both avoid_cpu and avoid_gpu were set! resetting them to false.
[run_dispatch_v2]: rejecting ane-gpu due to multihead
[run_dispatch_v2] fb_gpu=(%d %.3f) fb_cpu=(%d %.3f)
[run_dispatch_v2] selected gpu
[run_dispatch_v2] The network falls back to GPU too often. Please consider running the network on GPU or change the architecture.
[run_dispatch_v2] selected cpu
[run_dispatch_v2] The network falls back to CPU too often. Please consider running the network on CPU or change the architecture.
[run_dispatch_v2] bouncing_often=%d cost=%f n_bounces=%zu bounce_ratio=%f
[run_dispatch_v2] fb_gpu_cpu=(%d %.3f)
Error while restoring network precompilation info %s
pass_multi_head_prune_undeclared output=%s declared=%d
[cpu_context_transfer_algo] Needs fallback: Layer %d: %s (%s)
[cpu_context_transfer_algo] disabled all_next
[cpu_context_transfer_algo] cost_single: %.2f > cost_all_next: %.2f
[cpu_context_transfer_algo] # top_blobs_of_default_ctx_layers: %zu %s
[cpu_context_transfer_algo] # bottom_blobs_of_default_ctx_layers: %zu %s
[cpu_context_transfer_algo] Fallback segment %d: %d-%d
[cpu_context_transfer_algo] remap_fallback_bottom: ilayer=%d %s -> %s
[cpu_context_transfer_algo] remap_default_bottom: ilayer=%d %s -> %s
[cpu_context_transfer_algo] Inserting context transfer to fallback after layer %d (%s):  %s -> %s
[cpu_context_transfer_algo] Inserting context transfer to default after layer %d (%s): %s -> %s
[cpu_context_transfer_algo] Inserting %d ctx transfers in total
layer %zu (%s) not available (%d %d)
Cannot find any kernel for layer %zu (%s)
Error in estimated_compute_resources %s
assign_to_fallback_context_v2: disconnected graph_position=%d ilayer=%d
No fallback needed: %d
Kernel validation warning (Engine: %s) %s (%s) @ %zu: %s
Configuring LUT before setting bitdepth. Cannot check size.
high bias shift %d
low bias shift %d
Precompilation info not found for engine: %s
[net::setup_script] %s
Plan tracer added to dump at: %s
Blob copy not implemented
generic_elementwise_kernel not able to broadcast following blob shapes: 
[%d, %d, %d, %d, %d]
Failed to find layer name %s for platform %d
No entry found for %s; creating dictionary.
%zu: %%%s = %s(%s) @%d count=%zu
%zu: __forward_segment isegment=%d end=%zu
blob[0]=%.3f blob[-1]=%.3f avg=%e platform=%d
aborting execution in debug mode
restore phi blobs
resizing: ilayer=%zu itop=%zu old_dim=%lld new_dim=%lld
resolve_virtual_phi: idx=%zu ts=%zu v=%.2f X
GColor segment=%d blob=%s color=%d
Fail fast reshape (input) %s new=%lld old=%lld
[reshape] max color = %d tot_est_size = %.3f
Cannot find any kernel for layer %zu (%s)
Error in estimated_compute_resources %s
Missing estimated cost for %s
Invalid layer cost. Detected nan. LayerId :%zu
run_pass_on_network %s
adding phi: pl=%d kernel_type=%s kernel_name=%s top=%s k->original_blob_name=%s
pass_make_ssa: phi simplify iteration
pass_make_ssa: block=%s original_blob=%s phi=%s versions=%zu
pass_make_ssa: block=%s original_blob=%s version=%s not reachable from phi=%s
pass_make_ssa: removing phi=%s bottom_names.size()=%zu
[profiler_t::static_entries] Network size %lu fallback size %lu
Failed to find layer %s in tmp ir
[profiler_t::get_result] %llu
%.3f
async_cache: Invalidating cache, cached blob size (%zu) < requested blob size (%zu)
Creating plan %zu
Forcing compute path %d
dispatch_error_fallback_at_c_level
Dispatch failed for network %s, and the plan already contained %zu networks
dispatch_error_use_cpu_script
Espresso CPU context forcing FP32 compute path.
dispatch_error_use_mps_buffers
[change_input_shapes] index=%d/%d name=%s w=%d h=%d k=%d n=%d seq=%d
[Espresso::handle_ex_] exception=%s
Creating context %zu eng=%d dev=%d
espresso_plan_add_network plan=%zu path=%s cp=%d
Destroying plan %zu
Destroying context %zu
blob: %s
error %s
[configuration] %s %d %d %d %d %d, rank=%d
[configuration (default)] %s %d %d %d %d %d, rank=%d
The client use of the API is invalid and dangerous.
ESPRESSO_ENGINE_METAL_MPS_BUFFERS forcing FP32 compute path.
[Espresso::handle_ex_plan] exception=%s status=%d
[Espresso::handle_ex_plan] exception=%s
Shape computation issue: %s at layer %zu
TODO: Blob shape not found:%s layer:%d j=%d
Espresso compiled without plan type %d
Error reading source directory: %s
Error creating directory: %s
Tracer cannot write file: %s
Test data written to: %s
Loaded network: '%s' pf=%d cp=%d
Cannot find engine for: %d
Cannot find engine: %s err=%s
Cannot load configurations
Sharing weights from layer %zu to layer %zu
CoreMLModelSecurityProtocol
CoreMLModelSecurityServiceToClientProtocol
MLSecureModel
MLModeling
NSSecureCoding
NSCoding
MLSecureModelDecryptCredential
CoreMLModelSecurityServiceToClient
MLArrayDictionaryFeatureProvider
MLBatchProvider
MLNeuralNetworkCompiler
MLSpecificationCompiler
MLNeuralNetworkEngine
MLNeuralNetwork
MLClassifier
MLRegressor
MLModelSpecificationLoader
NSObject
MLCompiledModelLoader
_MLSNFrameworkHandle
MLBatchProviderUtils
MLLazyUnionBatchProvider
MLWindowedBatchProvider
MLIndexedBatchProvider
MLNewBatchConstruction
MLBatchCopyToMultiArray
MLArrayBatchProvider
MLCustomModel
MLDefaultCustomModelFactory
MLCustomModelFactory
MLCustomModelLoader
MLCustomModelWrapper
ImageUtils
MLMultiArrayShapeConstraint
MLPipelineUpdateEngine
MLUpdatable
MLWritable
MLDictionaryConstraint
MLFeatureValueConstraint
NSCopying
MLNearestNeighborsLinearIndex
MLNearestNeighborsIndex
MLPredictionOptions
MLInternalSettings
MLModelExecutionSchedule
MLDictionaryFeatureProvider
MLFeatureProvider
NSFastEnumeration
FromGenericFeatureProvider
MLLoader
MLCompilerOptions
MLCompilerResult
MLCompiler
MLReporter
CUTMetricLogger
MLReporterUtils
MLArchivingUtils
MLAppleGazetteerParameters
MLAppleGazetteer
MLObjectBoundingBoxOutputDescription
MLObjectBoundingBoxOutput
MLSequence
MLSequnceAsFeatureValueArray
MLFeatureValueAccess
MLVersionInfo
_MLSNVGGishFeatureEmbedding
MLModelDescription
MLParameterDescription
MLLayerPath
ModelSpecification
MLModelAsset
MLNeuralNetworkContainer
MLAppleTextClassifierParameters
MLAppleTextClassifier
MLKNearestNeighborsClassifierParameters
MLItemSimilarityRecommender
MLNeuralNetworksCompileTimeParams
MLModelConfiguration
MLModelDescriptionUtils
Utilities
MLPipelineClassifier
MLAppleImageFeatureExtractorScenePrintParameters
MLAppleImageFeatureExtractorObjectPrintParameters
MLAppleImageFeatureExtractorParameters
MLAppleImageFeatureExtractor
MLBayesianProbitRegression
MLSupervisedOnlineUpdatable
MLModelSpecificationSaver
MLMultiArrayUtils
MLMultiArray
Attributes
PrivateConstruction
CopyingAndVectorization
ConvenientConstruction
Concatenating
Filling
MLMultiArrayAsNSArrayWrapper
MLMultiArrayView
Views
RawAccess
MLTreeEnsembleClassifier
MLModelTypeRegistry
MLIdentity
MLAppleWordTaggerParameters
MLAppleWordTagger
MLSaver
MLFeatureFlags
MLKNearestNeighborsClassifier
MLLogging
MLPipeline
MLSVMLoader
MLNeuralNetworkUpdateEngine
MLCategoricalMapping
_MLBatchDataSource
ETDataProvider
MLCustomLayer
MLCustomLayerWrapper
EspressoBrick
MLLinkedModel
MLProgramEngine
CoreMLCompilerArguments
_KDNode
MLNearestNeighborsSingleKdTreeIndex
_MLSNVGGishFrontendProcessing
MLFeatureVectorizer
MLNonMaximumSuppressionParameters
MLNonMaximumSuppression
MLProgramContainer
MLMultiArrayConstraint
MLTreeEnsembleXGBoostUpdateEngine
MLArrayFeatureExtractor
_MLVNScenePrintCustomModel
MLModelVisionFeaturePrintInfo
MLSVRLoader
MLSupportVectorRegressor
MLCodeGenerator
MLPipelineLoader
MLParameterKey
MLLinkedModelParameters
MLScopedParameters
MLNeuralNetworkParameters
MLTreeEnsmebleModelParameters
MLFeatureDescription
MLSupportVectorClassifier
MLTreeEnsembleXGBoostClassifier
MLProbabilityDictionary
MLStringProbabilityDictionary
MLInt64ProbabilityDictionary
MLStringProbabilityDictionaryEnumerator
MLInt64ProbabilityDictionaryEnumerator
MLDictVectorizer
_MLVNFrameworkHandle
MLRegressorResult
MLAppleWordEmbeddingParameters
MLAppleWordEmbedding
MLGLMRegression
ModelAsset
MLFeatureValue
MLDefaultCustomLayerFactory
MLCustomLayerFactory
_MLNLPFrameworkHandle
MLModel
MLModelEncryptionUtils
MLPipelineRegressor
MLImputer
_MLNLPSentenceClassifierModel
MLModelIOUtils
_MLDataSource
MLFeatureTypeUtils
MLParameterUtils
MLImageConstraint
MLKeyManager
MLFeatureProviderUtils
MLLazyUnionFeatureProvider
MLNewProviderConstruction
MLSVMEngine
ModelConstructible
MLLoaderEventExtensions
MLLoaderEvent
CUTCoreAnalyticsMetric
CUTMetric
MLOneHotEncoder
_MLNLPWordTaggingModel
_MLVNDetectionPrintCustomModel
MLAppleSoundAnalysisPreprocessing
MLParameterContainer
MLSVREngine
MLNumericConstraint
MLModelMetadata
MLModelInterface
FeatureAccessors
Validation
MLKey
_MLModelCodeGeneratorOptions
MLTreeEnsembleRegressor
Model
MLModelErrorUtils
MLSequenceConstraint
MLScaler
MLClassifierResult
MLGLMClassification
MLLayerExecutionSchedule
MLDataConversionUtils
MLNormalizer
MLImageSize
MLImageSizeConstraint
ClosestAllowedSize
EspressoPass_multi_head_program_gen
ETOptimizerDefinition
ETLossDefinition
ETDataTensor
EspressoPass_multi_head_prune_undeclared
ETVariablesDefinition
_ETBufferDataSource
EspressoProfilingLayerRuntime
EspressoProfilingLayerSupportInfo
EspressoProfilingLayerInfo
EspressoProfilingNetworkInfo
ETTaskDefinition
ETTaskContext
EspressoCustomPass
EspressoBrickRegistry
EspressoBrickTensorShape
EspressoBrickTensor
EspressoBrickTensorCPU
EspressoBrickTensorMetal
ETTaskState
ETModelDefinition
v64@0:8@16@24@32@40@48@?56
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v36@0:8@16c24@?28
v40@0:8@16@24@?32
v24@0:8@?16
v64@0:8@"NSURL"16@"NSString"24@"MLModelConfiguration"32@"MLInternalSettings"40@"MLSecureModelDecryptCredential"48@?<v@?@"MLSecureModel"@"NSError">56
v48@0:8@"NSNumber"16@"MLPredictionOptions"24@"MLInternalSettings"32@?<v@?@"MLDictionaryFeatureProvider"@"NSError">40
v48@0:8@"NSArray"16@"MLPredictionOptions"24@"MLInternalSettings"32@?<v@?@"MLArrayDictionaryFeatureProvider"@"NSError">40
v32@0:8@"MLKey"16@?<v@?@@"NSError">24
v32@0:8@"MLFeatureValue"16@?<v@?@"MLFeatureValue"@"NSString">24
v32@0:8@"MLDictionaryFeatureProvider"16@?<v@?@"MLDictionaryFeatureProvider"@"NSString">24
v32@0:8@"MLModelDescription"16@?<v@?@"MLModelDescription"@"NSString">24
v32@0:8@"MLFeatureDescription"16@?<v@?@"MLFeatureDescription"@"NSString">24
v36@0:8@"NSString"16c24@?<v@?@"NSData"@"NSError">28
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8@"NSString"16@"NSNumber"24@?<v@?@"MLFeatureValue"@"NSError">32
v32@0:8@"NSNumber"16@?<v@?@"NSSet"@"NSError">24
@24@0:8@16
@48@0:8@16@24@32^@40
@40@0:8@16@24^@32
c16@0:8
@32@0:8@16^@24
@16@0:8
v32@0:8@16@24
v24@0:8@16
@"<MLFeatureProvider>"32@0:8@"<MLFeatureProvider>"16^@24
@"<MLFeatureProvider>"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@"<MLBatchProvider>"32@0:8@"<MLBatchProvider>"16^@24
@"<MLBatchProvider>"40@0:8@"<MLBatchProvider>"16@"MLPredictionOptions"24^@32
@"MLModelExecutionSchedule"16@0:8
v32@0:8@"MLLayerPath"16@"NSString"24
@"MLLayerPath"16@0:8
@"MLModelDescription"16@0:8
v24@0:8@"MLModelDescription"16
@"MLModelInterface"16@0:8
@"MLModelMetadata"16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
@"NSXPCConnection"
@"NSObject<CoreMLModelSecurityProtocol>"
q16@0:8
v24@0:8q16
@"NSMutableDictionary"
@"NSCountedSet"
@"NSObject<OS_dispatch_queue>"
@24@0:8q16
@"<MLFeatureProvider>"24@0:8q16
@"NSArray"
c40@0:8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}24^@32
@48@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@32^@40
@40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@24^@32
@"MLCompilerResult"48@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@"MLCompilerOptions"32^@40
@"MLVersionInfo"40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@"MLCompilerOptions"24^@32
#16@0:8
@56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32@40^@48
@"NSArray"16@0:8
@"MLClassifierResult"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
@"MLRegressorResult"40@0:8@"<MLFeatureProvider>"16@"MLPredictionOptions"24^@32
c24@0:8@16
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@"<MLModeling>"40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16@"MLModelConfiguration"24^@32
@56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@"MLVersionInfo"24@"MLVersionInfo"32@"MLModelConfiguration"40^@48
i24@0:8@16
c32@0:8@16^@24
c24@0:8^@16
i32@0:8@16^@24
c28@0:8c16^@20
c36@0:8@16c24^@28
v24@0:8Q16
c48@0:8@16^{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}24Q32^@40
c48@0:8@16Q24^{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}32^@40
c48@0:8@16@24^{?=^v^v[4Q][4Q]QQQQQQQQQQi}32^@40
c32@0:8@16@24
c56@0:8@16@24^{?=^v^v[4Q][4Q]QQQQQQQQQQi}32^i40^@48
c48@0:8r^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@24@32^@40
v52@0:8^@16^@24^{?=^v^v[4Q][4Q]QQQQQQQQQQi}32@40c48
@48@0:8@16Q24@32^@40
c32@0:8^v16^@24
c32@0:8r^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_buffer_t *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16^@24
@40@0:8Q16@24^@32
c48@0:8r^{?=^v^v[4Q][4Q]QQQQQQQQQQi}16Q24^{__CVBuffer=}32^@40
@48@0:8^{?=^v^v[4Q][4Q]QQQQQQQQQQi}16^{__CVBuffer=}24@32^@40
@56@0:8^{?=^v^v[4Q][4Q]QQQQQQQQQQi}16@24@32@40^@48
^{__CVBuffer=}40@0:8^{?=^v^v[4Q][4Q]QQQQQQQQQQi}16@24^@32
@40@0:8@16^@24^@32
v20@0:8c16
^v16@0:8
v24@0:8^v16
{?=^vi}16@0:8
v32@0:8{?=^vi}16
i16@0:8
v20@0:8i16
B16@0:8
v20@0:8B16
{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >="__begin_"^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}"__end_"^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}"__end_cap_"{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >="__value_"^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}}
{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}
{set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >="__tree_"{__tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::basic_string<char> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char> > >="__value_"Q}}}
{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}
{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
@"NSString"
@"NSDictionary"
@"MLVersionInfo"
@"MLProbabilityDictionary"
@"NSObject<OS_dispatch_semaphore>"
@"EspressoProfilingNetworkInfo"
@"MLNeuralNetworkContainer"
{?="plan"^v"network_index"i}
@32@0:8@16@24
@"<MLBatchProvider>"
@48@0:8@16q24q32^@40
@48@0:8@16Q24Q32^@40
c48@0:8@16@24@32^@40
@40@0:8@"MLModelDescription"16@"NSDictionary"24^@32
@"NSObject<MLCustomModel>"48@0:8@"NSString"16@"MLModelDescription"24@"NSDictionary"32^@40
@32@0:8^{CustomModel=^^?{InternalMetadataWithArenaLite=^v}{MapFieldLite<google::protobuf::internal::MapEntryLite<std::__1::basic_string<char>, CoreML::Specification::CustomModel_CustomModelParamValue, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>, std::__1::basic_string<char>, CoreML::Specification::CustomModel_CustomModelParamValue, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>=^{Arena}{Map<std::__1::basic_string<char>, CoreML::Specification::CustomModel_CustomModelParamValue>=^{Arena}i^{InnerMap}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}i}16^@24
@40@0:8@16@24@32
@"NSObject<MLCustomModel>"
c32@0:8^{__CVBuffer=}16^@24
c36@0:8^{__CVBuffer=}16c24^@28
^{__CVBuffer=}32@0:8@16^@24
^{__CVBuffer=}36@0:8@16c24^@28
@"NSOrderedSet"
c32@0:8@"NSURL"16^@24
v32@0:8@"MLUpdateProgressHandlers"16@"NSObject<OS_dispatch_queue>"24
v24@0:8@"<MLBatchProvider>"16
v24@0:8@"NSDictionary"16
@"MLModel<MLUpdatable>"56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@"MLVersionInfo"24@"MLVersionInfo"32@"MLModelConfiguration"40^@48
{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}16@0:8
@"MLUpdateProgressHandlers"
{vector<unsigned long long, std::__1::allocator<unsigned long long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >="__value_"^Q}}
c32@0:8@"MLFeatureValue"16^@24
@24@0:8^{_NSZone=}16
{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}32@0:8Q16r^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}24
c32@0:8r^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}16^@24
@48@0:8{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}16Q40
{vector<float, std::__1::allocator<float> >="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::__1::allocator<float> >="__value_"^f}}
@20@0:8c16
@"MLFeatureValue"24@0:8@"NSString"16
@"NSSet"16@0:8
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
c48@0:8@16@24^@32^@40
@32@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16^@24
c40@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16^@24^@32
@40@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24^@32
@48@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32^@40
@"NSNumber"
@"NSData"
c40@0:8@16@24^@32
c40@0:8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24^@32
c40@0:8@16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
v24@0:8@"<CUTMetric>"16
c48@0:8r^{map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}32^@40
@24@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16
@24@0:8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16
@80@0:8Q16@24@32@40@48@56@64^@72
@56@0:8@16@24@32@40^@48
@"MLAppleGazetteerParameters"
@32@0:8@16q24
@24@0:8Q16
@"MLSequence"
@48@0:8q16q24q32@40
@"<MLCustomModel>"
@"MLModelDescription"
@24@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16
@24@0:8^{_MLModelMetadataSpecification={shared_ptr<CoreML::Specification::Metadata>=^{Metadata}^{__shared_weak_count}}}16
@80@0:8@16@24@32@40@48@56@64@72
@64@0:8@16@24@32@40@48@56
@56@0:8@16@24@32@40@48
@32@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^@24
@"NSURL"
@"MLLayerPath"
@"MLParameterKey"
@"MLNumericConstraint"
@32@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^@24
c40@0:8@16^c24^@32
@24@0:8^@16
@"NSObject<MLModeling>"
@"MLModelConfiguration"
@48@0:8@16@24@32@40
c24@0:8^{IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}16
@84@0:8@16@24@32@40@48@56@64c72c76c80
{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
@"MLModel"
@"MLNeuralNetworksCompileTimeParams"
@72@0:8Q16@24@32@40@48@56^@64
@"MLAppleTextClassifierParameters"
@"NSObject"
r*16@0:8
@32@0:8Q16^@24
B40@0:8@16^{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}24^@32
{shared_ptr<Archiver::MMappedFile>="__ptr_"^{MMappedFile}"__cntrl_"^{__shared_weak_count}}
{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__value_"*}}
{vector<double, std::__1::allocator<double> >="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::__1::allocator<double> >="__value_"^d}}
{vector<std::__1::pair<unsigned long long, double>, std::__1::allocator<std::__1::pair<unsigned long long, double> > >="__begin_"^{pair<unsigned long long, double>}"__end_"^{pair<unsigned long long, double>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long long, double> *, std::__1::allocator<std::__1::pair<unsigned long long, double> > >="__value_"^{pair<unsigned long long, double>}}}
@64@0:8q16q24@32@40@48@56
@"<MTLDevice>"
^{Metadata=^^?{InternalMetadataWithArenaLite=^v}{MapFieldLite<google::protobuf::internal::MapEntryLite<std::__1::basic_string<char>, std::__1::basic_string<char>, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_STRING, 0>, std::__1::basic_string<char>, std::__1::basic_string<char>, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_STRING, 0>=^{Arena}{Map<std::__1::basic_string<char>, std::__1::basic_string<char> >=^{Arena}i^{InnerMap}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}i}24@0:8@16
^{ImageFeatureType=^^?{InternalMetadataWithArenaLite=^v}qqi(SizeFlexibilityUnion=^{ImageFeatureType_EnumeratedImageSizes}^{ImageFeatureType_ImageSizeRange})i[1I]}24@0:8@16
^{ArrayFeatureType=^^?{InternalMetadataWithArenaLite=^v}{RepeatedField<long long>=ii^{Rep}}ii(ShapeFlexibilityUnion=^{ArrayFeatureType_EnumeratedShapes}^{ArrayFeatureType_ShapeRange})(DefaultOptionalValueUnion=ifd)i[2I]}24@0:8@16
^{DictionaryFeatureType=^^?{InternalMetadataWithArenaLite=^v}(KeyTypeUnion=^{Int64FeatureType}^{StringFeatureType})i[1I]}32@0:8@16^@24
^{SequenceFeatureType=^^?{InternalMetadataWithArenaLite=^v}^{SizeRange}(TypeUnion=^{Int64FeatureType}^{StringFeatureType})i[1I]}32@0:8@16^@24
^{FeatureType=^^?{InternalMetadataWithArenaLite=^v}B(TypeUnion=^{Int64FeatureType}^{DoubleFeatureType}^{StringFeatureType}^{ImageFeatureType}^{ArrayFeatureType}^{DictionaryFeatureType}^{SequenceFeatureType})i[1I]}32@0:8@16^@24
v40@0:8@16^{FeatureDescription=^^?{InternalMetadataWithArenaLite=^v}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{FeatureType}i}24^@32
^{ModelDescription=^^?{InternalMetadataWithArenaLite=^v}{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{Metadata}i}32@0:8@16^@24
B40@0:8@16^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}24^@32
@56@0:8@16q24@?32@40^@48
@"MLPipeline"
@48@0:8Q16@24@32^@40
@52@0:8@16@24i32@36^@44
@32@0:8@16Q24
@44@0:8^{__CVBuffer=}16@24c32^@36
@"MLAppleImageFeatureExtractorParameters"
B40@0:8^@16@24@32
c48@0:8@"<MLFeatureProvider>"16@"<MLFeatureProvider>"24@"MLSupervisedOnlineUpdateOptions"32^@40
^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}24@0:8^@16
B32@0:8^@16@24
c24@0:8Q16
@104@0:8@16q24@32@40@48@56@64@72@80@88@96
@40@0:8@16q24@32
{shared_ptr<CoreML::BayesianProbitRegression::FeatureValues>=^{FeatureValues}^{__shared_weak_count}}32@0:8@16^@24
@24@0:8^{Prediction=dddddB}16
d40@0:8@16@24q32
d24@0:8@16
B48@0:8@16^B24^d32^@40
{shared_ptr<CoreML::BayesianProbitRegression::BayesianProbitRegression>=^{BayesianProbitRegression}^{__shared_weak_count}}16@0:8
{shared_ptr<CoreML::BayesianProbitRegression::BayesianProbitRegression>="__ptr_"^{BayesianProbitRegression}"__cntrl_"^{__shared_weak_count}}
c40@0:8^{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}16@24^@32
@24@0:8r^{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}16
@40@0:8@16q24^@32
@64@0:8^v16@24q32@40@?48^@56
v32@0:8@16Q24
v32@0:8@16q24
Q24@0:8@16
^{MultiArrayBuffer=^^?{shared_ptr<unsigned char>=*^{__shared_weak_count}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}iQS}
c24@0:8q16
^d16@0:8
^f16@0:8
i24@0:8q16
@24@0:8^{MultiArrayBuffer=^^?{shared_ptr<unsigned char>=*^{__shared_weak_count}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}iQS}16
@48@0:8@16q24q32Q40
c40@0:8@16q24^@32
c48@0:8@16^Q24^Q32^@40
c48@0:8@16q24^Q32^@40
@40@0:8@16q24q32
c40@0:8@16Q24^@32
@"MLMultiArray"
v48@0:8@16@24^@32^@40
@52@0:8@16@24@32c40^@44
@44@0:8@16@24c32^@36
c64@0:8r^{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16r^{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}24Q32^@40^q48^@56
@40@0:8^d16Q24^@32
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__value_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}
{vector<long long, std::__1::allocator<long long> >="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::__1::allocator<long long> >="__value_"^q}}
#20@0:8i16
#24@0:8i16c20
#20@0:8c16
@40@0:8^{_MLModelSpecification=}16@24^@32
@104@0:8Q16@24@32@40@48@56@64@72@80@88^@96
@96@0:8Q16@24@32@40@48@56@64@72@80^@88
@"MLAppleWordTaggerParameters"
c48@0:8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32^@40
v36@0:8@16@24c32
c28@0:8c16@20
@"NSUserDefaults"
@64@0:8@16@24@32^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}40@48^@56
{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}24@0:8@16
v32@0:8^@16^{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}24
v56@0:8^@16^@24{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}32
@"MLParameterContainer"
@"<MLNearestNeighborsIndex>"
v36@0:8r^{RepeatedPtrField<CoreML::Specification::Model>=^{Arena}ii^{Rep}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24c32
v32@0:8r^{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24
c40@0:8r^{Pipeline=^^?{InternalMetadataWithArenaLite=^v}{RepeatedPtrField<CoreML::Specification::Model>=^{Arena}ii^{Rep}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}i}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@52@0:8r^{Pipeline=^^?{InternalMetadataWithArenaLite=^v}{RepeatedPtrField<CoreML::Specification::Model>=^{Arena}ii^{Rep}}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}i}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24@32c40^@44
@32@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16Q24
@64@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16@24@32@40@48^@56
v32@0:8Q16@24
@40@0:8@16Q24^@32
@"MLShufflingBatchProvider"
@"MLFeatureValue"
@"NSDictionary"32@0:8Q16^@24
@44@0:8@16c24@28^@36
@"MLNeuralNetworkEngine"
@32@0:8@"NSDictionary"16^@24
c32@0:8@"NSArray"16^@24
@"NSArray"32@0:8@"NSArray"16^@24
c40@0:8@"NSArray"16@"NSArray"24^@32
c48@0:8@"<MTLCommandBuffer>"16@"NSArray"24@"NSArray"32^@40
@28@0:8@16c24
v32@0:8^v16Q24
v40@0:8@16@24@32
@"NSArray"32@0:8@"NSArray"16@"NSDictionary"24
@24@0:8@"NSDictionary"16
v32@0:8@"NSArray"16@"NSArray"24
v40@0:8@"<MTLCommandBuffer>"16@"NSArray"24@"NSArray"32
@"NSArray"24@0:8@"NSArray"16
@"NSObject<MLCustomLayer>"
v24@0:8r^{LinkedModelFile=^^?{InternalMetadataWithArenaLite=^v}^{StringParameter}^{StringParameter}i}16
v64@0:8^f16^f24Q32r^f40r^Q48Q56
v40@0:8r^f16^Q24Q32
f16@0:8
v20@0:8f16
{_KDBoundingBox={vector<_KDInterval, std::__1::allocator<_KDInterval> >=^{_KDInterval}^{_KDInterval}{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >=^{_KDInterval}}}Q}16@0:8
v48@0:8{_KDBoundingBox={vector<_KDInterval, std::__1::allocator<_KDInterval> >=^{_KDInterval}^{_KDInterval}{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >=^{_KDInterval}}}Q}16
@"_KDNode"
{_KDBoundingBox="_intervals"{vector<_KDInterval, std::__1::allocator<_KDInterval> >="__begin_"^{_KDInterval}"__end_"^{_KDInterval}"__end_cap_"{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >="__value_"^{_KDInterval}}}"_numDimensions"Q}
@48@0:8^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}16Q24Q32^@40
@40@0:8^{_KDBoundingBox={vector<_KDInterval, std::__1::allocator<_KDInterval> >=^{_KDInterval}^{_KDInterval}{__compressed_pair<_KDInterval *, std::__1::allocator<_KDInterval> >=^{_KDInterval}}}Q}16Q24Q32
{vector<std::__1::pair<unsigned long, float>, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}^{pair<unsigned long, float>}{__compressed_pair<std::__1::pair<unsigned long, float> *, std::__1::allocator<std::__1::pair<unsigned long, float> > >=^{pair<unsigned long, float>}}}40@0:8Q16Q24r^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}32
v48@0:8Q16^{_KDPriorityQueue=Q{priority_queue<_KDPriorityQueueElement, std::__1::vector<_KDPriorityQueueElement, std::__1::allocator<_KDPriorityQueueElement> >, _KDPriorityQueueComparator>={vector<_KDPriorityQueueElement, std::__1::allocator<_KDPriorityQueueElement> >=^{_KDPriorityQueueElement}^{_KDPriorityQueueElement}{__compressed_pair<_KDPriorityQueueElement *, std::__1::allocator<_KDPriorityQueueElement> >=^{_KDPriorityQueueElement}}}{_KDPriorityQueueComparator=}}}24r^{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}32@40
{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}
{vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__begin_"^{pair<unsigned long, unsigned long>}"__end_"^{pair<unsigned long, unsigned long>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__value_"^{pair<unsigned long, unsigned long>}}}
d16@0:8
v24@0:8d16
@"MLNonMaximumSuppressionParameters"
c32@0:8q16^@24
c48@0:8@16c24c28@32^@40
@"MLMultiArrayShapeConstraint"
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16@0:8
v40@0:8{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16
{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}16@0:8
v40@0:8{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}16
{shared_ptr<Archiver::MMappedFile>=^{MMappedFile}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<Archiver::MMappedFile>=^{MMappedFile}^{__shared_weak_count}}16
{vector<unsigned char, std::__1::allocator<unsigned char> >=**{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >=*}}16@0:8
v40@0:8{vector<unsigned char, std::__1::allocator<unsigned char> >=**{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >=*}}16
@72@0:8@16@24@32@40@48@56@64
@"MLSVREngine"
@48@0:8@16@24c32c36^@40
@44@0:8@16q24c32@36
@"MLMultiArrayConstraint"
@"MLImageConstraint"
@"MLDictionaryConstraint"
@"MLSequenceConstraint"
@"MLSVMEngine"
@96@0:8@16@24{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}32{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}56@80^@88
{?={vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}QQ}32@0:8@16^@24
{?={vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}{vector<float, std::__1::allocator<float> >=^f^f{__compressed_pair<float *, std::__1::allocator<float> >=^f}}QQ}36@0:8@16B24^@28
@40@0:8r^f16Q24^@32
@64@0:8{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}40
v24@0:8^d16
@40@0:8r^@16r^@24Q32
{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16@0:8
v40@0:8{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"Q}}}
{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=Q}}}16@0:8
v40@0:8{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=Q}}}16
{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >="__value_"Q}}}
@24@0:8^{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}16
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}16@0:8
v24@0:8{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}16
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long> >="__i_"{__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, long>="__ptr_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}
@24@0:8^{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=Q}}}16
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}16@0:8
v24@0:8{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}16
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long> >="__i_"{__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, long>="__ptr_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}
@64@0:8@16@24@32@40@48^@56
@72@0:8@16@24@32@40@48@56^@64
@80@0:8@16@24@32@40@48@56@64^@72
@28@0:8I16@20
@52@0:8^{__CVBuffer=}16Q24@32c40^@44
Q24@0:8Q16
^{__CVBuffer=}88@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64@72^@80
^{__CVBuffer=}88@0:8^{CGImage=}16@24{CGRect={CGPoint=dd}{CGSize=dd}}32Q64@72^@80
^?16@0:8
@"<MLFeatureProvider>"
@64@0:8Q16@24@32@40@48^@56
@"MLAppleWordEmbeddingParameters"
{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__begin_"^{vector<double, std::__1::allocator<double> >}"__end_"^{vector<double, std::__1::allocator<double> >}"__end_cap_"{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__value_"^{vector<double, std::__1::allocator<double> >}}}
{shared_ptr<CoreML::Specification::Model>="__ptr_"^{Model}"__cntrl_"^{__shared_weak_count}}
B40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@24@0:8d16
@24@0:8^{__CVBuffer=}16
@40@0:8q16@24^@32
^{__CVBuffer=}16@0:8
@28@0:8^@16c24
@"NSObject<MLCustomLayer>"40@0:8@"NSString"16@"NSDictionary"24^@32
r^v32@0:8@16^@24
@40@0:8^v16@24^@32
@"MLModelInterface"
@"MLModelMetadata"
@"MLFairPlayDecryptSession"
c56@0:8@16@24@32@40^@48
@88@0:8@16@24@32@40@48@56@64@72^@80
@56@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16#24@32@40^@48
@40@0:8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
B40@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
B40@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
{_NSRange=QQ}24@0:8r^{SizeRange=^^?{InternalMetadataWithArenaLite=^v}Qqi}16
@24@0:8r^{FeatureDescription=^^?{InternalMetadataWithArenaLite=^v}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{FeatureType}i}16
@24@0:8^{_MLFeatureDescriptionSpecification={shared_ptr<CoreML::Specification::FeatureDescription>=^{FeatureDescription}^{__shared_weak_count}}}16
@24@0:8r^{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}16
B40@0:8@16^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}24^@32
@24@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16
@28@0:8^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}16c24
q24@0:8@16
q32@0:8@16^@24
@40@0:8@16#24@32
c28@0:8I16Q20
@48@0:8q16q24Q32@40
@40@0:8q16q24Q32
@20@0:8I16
Q20@0:8I16
I16@0:8
@"MLImageSizeConstraint"
c48@0:8@16^d24Q32^@40
c64@0:8@16@24^d32Q40Q48^@56
@48@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16c24c28Q32@40
^{svm_node=id}24@0:8Q16
v40@0:8^{svm_node=id}16^d24Q32
v24@0:8^{svm_node=id}16
v32@0:8@16^d24
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16@0:8
v24@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}
@"NSDictionary"16@0:8
v24@0:8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}}16
@24@0:8r*16
@72@0:8@16@24c32c36@40@48@56@64
@80@0:8@16@24c32c36@40@48@56@64@72
@40@0:8^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}16c24c28Q32
@"NSSet"
{SwiftCodeGeneratorOptions=BBBq}16@0:8
{SwiftCodeGeneratorOptions="documentation"B"globalModule"B"publicAccess"B"container"q}
d32@0:8@16^@24
d24@0:8^d16
v32@0:8^d16^d24
@48@0:8q16@24@32[1{__va_list_tag=II^v^v}]40
@40@0:8q16@24[1{__va_list_tag=II^v^v}]32
@40@0:8q16@24@32
@32@0:8q16@24
@40@0:8@16{_NSRange=QQ}24
{_NSRange=QQ}16@0:8
@"MLFeatureDescription"
{_NSRange="location"Q"length"Q}
B40@0:8^d16@24^@32
@"NSMutableArray"
@40@0:8@16@24q32
c52@0:8@16c24^@28^@36^@44
c56@0:8@16@24^@32^@40^@48
@52@0:8i16@20@28@36@44
@60@0:8i16@20@28@36@44@52
@68@0:8i16@20@28@36@44@52@60
@32@0:8q16q24
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
@40@0:8q16q24c32c36
Q40@0:8Q16{_NSRange=QQ}24
@60@0:8{_NSRange=QQ}16{_NSRange=QQ}32@48c56
@36@0:8@16@24c32
@48@0:8Q16@24@32@40
@48@0:8^v16Q24@32@40
@40@0:8^{__CVBuffer=}16@24^@32
@32@0:8{shared_ptr<Espresso::abstract_blob_container>=^{abstract_blob_container}^{__shared_weak_count}}16
{vImage_Buffer=^vQQQ}16@0:8
v48@0:8{vImage_Buffer=^vQQQ}16
{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}16@0:8
v40@0:8{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}16
{float_buffer_t=^fQB}16@0:8
v40@0:8{float_buffer_t=^fQB}16
{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<Espresso::blob<float, 4> >=^{blob<float, 4>}^{__shared_weak_count}}16
{shared_ptr<Espresso::blob<float, 4> >="__ptr_"^{blob<float, 4>}"__cntrl_"^{__shared_weak_count}}
{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >="__begin_"^{shared_ptr<unsigned char>}"__end_"^{shared_ptr<unsigned char>}"__end_cap_"{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >="__value_"^{shared_ptr<unsigned char>}}}
{float_buffer_t="ptr"^f"size"Q"free_when_done"B}
{vImage_Buffer="data"^v"height"Q"width"Q"rowBytes"Q}
@48@0:8r^{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16Q24Q32^@40
^f32@0:8Q16r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@0:8
v56@0:8{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@0:8
v56@0:8{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 1> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
@"EspressoProfilingLayerSupportInfo"
c40@0:8@"NSString"16@"ETDataTensor"24^@32
@"ETDataTensor"24@0:8@"NSString"16
@"<ETDataProvider>"32@0:8@"<ETDataProvider>"16^@24
c36@0:8@"NSString"16c24^@28
{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}24@0:8^@16
v24@0:8^@16
v40@0:8^{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@24^@32
v40@0:8r^{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16r^{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}24^@32
@64@0:8@16@24@32@40Q48^@56
@40@0:8{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}16
c48@0:8@16Q24@32^@40
c40@0:8{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16^@32
Q32@0:8Q16@24
c48@0:8Q16@24@32^@40
Q32@0:8@16^@24
{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16
{unordered_map<std::__1::basic_string<char>, unsigned long, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
@"ETVariablesDefinition"
{unordered_map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
@"ETModelDefinition"
@"ETOptimizerDefinition"
@"ETTaskState"
{shared_ptr<Espresso::net>="__ptr_"^{net}"__cntrl_"^{__shared_weak_count}}
c24@0:8^{net={weak_ptr<Espresso::net>=^{net}^{__shared_weak_count}}{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}{vector<std::__1::shared_ptr<Espresso::layer>, std::__1::allocator<std::__1::shared_ptr<Espresso::layer> > >=^{shared_ptr<Espresso::layer>}^{shared_ptr<Espresso::layer>}{__compressed_pair<std::__1::shared_ptr<Espresso::layer> *, std::__1::allocator<std::__1::shared_ptr<Espresso::layer> > >=^{shared_ptr<Espresso::layer>}}}{unordered_map<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={__hash_table<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={__hash_table<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > > >, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}iB{network_shape={map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, Espresso::vimage2espresso_param, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::vimage2espresso_param> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::vimage2espresso_param>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::blob_numerical_properties>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{map<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > >, std::__1::less<Espresso::platform>, std::__1::allocator<std::__1::pair<const Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > > > >={__tree<std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, std::__1::__map_value_compare<Espresso::platform, std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, std::__1::less<Espresso::platform>, true>, std::__1::allocator<std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<Espresso::platform, std::__1::__value_type<Espresso::platform, std::__1::map<std::__1::basic_string<char>, Espresso::blob_numerical_properties, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::blob_numerical_properties> > > >, std::__1::less<Espresso::platform>, true> >=Q}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}iB{map<int, bool, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, bool> > >={__tree<std::__1::__value_type<int, bool>, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true> >=Q}}}{shared_ptr<Espresso::net_compiler>=^{net_compiler}^{__shared_weak_count}}B{shared_ptr<Espresso::blob_storage_abstract>=^{blob_storage_abstract}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{shared_ptr<Espresso::kernels_validation_status_t>=^{kernels_validation_status_t}^{__shared_weak_count}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{map<std::__1::basic_string<char>, Espresso::net_configuration, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::net_configuration> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::net_configuration>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{net_configuration={vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}{map<std::__1::basic_string<char>, Espresso::layer_shape, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, Espresso::layer_shape> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, Espresso::layer_shape>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}}{unordered_set<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >={__hash_table<std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::allocator<std::__1::shared_ptr<Espresso::abstract_blob_container> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::shared_ptr<Espresso::abstract_blob_container>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::hash<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=Q}{__compressed_pair<float, std::__1::equal_to<std::__1::shared_ptr<Espresso::abstract_blob_container> > >=f}}}{unordered_map<unsigned long, Espresso::net::basic_block_t, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, Espresso::net::basic_block_t> > >={__hash_table<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::hash<unsigned long>, true>, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::equal_to<unsigned long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::hash<unsigned long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long, std::__1::__hash_value_type<unsigned long, Espresso::net::basic_block_t>, std::__1::equal_to<unsigned long>, true> >=f}}}{unordered_map<std::__1::basic_string<char>, unsigned long, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, unsigned long>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{shared_ptr<Espresso::abstract_executor_t>=^{abstract_executor_t}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::net> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{unordered_map<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_set<unsigned long, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<unsigned long> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{weak_ptr<Espresso::net>=^{net}^{__shared_weak_count}}{shared_ptr<Espresso::per_network_phi_state_t>=^{per_network_phi_state_t}^{__shared_weak_count}}{unordered_map<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result>, std::__1::hash<std::__1::type_index>, std::__1::equal_to<std::__1::type_index>, std::__1::allocator<std::__1::pair<const std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> > > >={__hash_table<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::__unordered_map_hasher<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::hash<std::__1::type_index>, true>, std::__1::__unordered_map_equal<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::equal_to<std::__1::type_index>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::hash<std::__1::type_index>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::type_index, std::__1::__hash_value_type<std::__1::type_index, std::__1::shared_ptr<Espresso::analysis_result> >, std::__1::equal_to<std::__1::type_index>, true> >=f}}}{shared_ptr<Espresso::net_fast_reshaper>=^{net_fast_reshaper}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}^{abstract_espresso_plan}i{shared_ptr<Espresso::abstract_context>=^{abstract_context}^{__shared_weak_count}}QBBB{shared_ptr<Espresso::net::info_needed_to_reload_network_t>=^{info_needed_to_reload_network_t}^{__shared_weak_count}}{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::abstract_blob_container> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}}16
v24@0:8#16
@"EspressoBrickTensorShape"
v24@0:8^f16
@"<MTLTexture>"
@24@0:8^{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
@32@0:8{shared_ptr<Espresso::net>=^{net}^{__shared_weak_count}}16
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16@0:8
v56@0:8{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}16
{unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> >, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::hash<std::__1::basic_string<char> >, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::shared_ptr<Espresso::blob<float, 4> > >, std::__1::equal_to<std::__1::basic_string<char> >, true> >="__value_"f}}}
softlink:r:path:/System/Library/PrivateFrameworks/XGBoostFramework.framework/XGBoostFramework
softlink:r:path:/System/Library/PrivateFrameworks/XGBoostFramework.framework/XGBoostFramework
